ClassDiagram.Class>> Sprint =>=>=> RelationalSchema.Table>> sprint;
ClassDiagram.Class>> Task =>=>=> RelationalSchema.Table>> task;
ClassDiagram.Class>> Story =>=>=> RelationalSchema.Table>> story;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> UploadedFile =>=>=> RelationalSchema.Table>> uploadedfile;
ClassDiagram.Attribut>> Sprint.serialversionuid:long =>=>=> RelationalSchema.Column>> sprint.serialversionuid;
ClassDiagram.Attribut>> Sprint.name:String =>=>=> RelationalSchema.Column>> sprint.name;
ClassDiagram.Attribut>> Sprint.goals:String =>=>=> RelationalSchema.Column>> sprint.goals;
ClassDiagram.Attribut>> Sprint.start:Date =>=>=> RelationalSchema.Column>> sprint.start;
ClassDiagram.Attribut>> Sprint.end:Date =>=>=> RelationalSchema.Column>> sprint.end;
ClassDiagram.Attribut>> Sprint.iterationscope:int =>=>=> RelationalSchema.Column>> sprint.iterationscope;
ClassDiagram.Attribut>> Sprint.gainedstorypos:int =>=>=> RelationalSchema.Column>> sprint.gainedstorypos;
ClassDiagram.Attribut>> Sprint.dailymeetingtime:Date =>=>=> RelationalSchema.Column>> sprint.dailymeetingtime;
ClassDiagram.Attribut>> Task.serialversionuid:long =>=>=> RelationalSchema.Column>> task.serialversionuid;
ClassDiagram.Attribut>> Task.name:String =>=>=> RelationalSchema.Column>> task.name;
ClassDiagram.Attribut>> Task.start:Date =>=>=> RelationalSchema.Column>> task.start;
ClassDiagram.Attribut>> Task.end:Date =>=>=> RelationalSchema.Column>> task.end;
ClassDiagram.Attribut>> Task.status:TaskStatus =>=>=> RelationalSchema.Column>> task.status;
ClassDiagram.Attribut>> Story.serialversionuid:long =>=>=> RelationalSchema.Column>> story.serialversionuid;
ClassDiagram.Attribut>> Story.name:String =>=>=> RelationalSchema.Column>> story.name;
ClassDiagram.Attribut>> Story.priority:int =>=>=> RelationalSchema.Column>> story.priority;
ClassDiagram.Attribut>> Story.start:Date =>=>=> RelationalSchema.Column>> story.start;
ClassDiagram.Attribut>> Story.end:Date =>=>=> RelationalSchema.Column>> story.end;
ClassDiagram.Attribut>> Story.acceptance:String =>=>=> RelationalSchema.Column>> story.acceptance;
ClassDiagram.Attribut>> Story.estimation:int =>=>=> RelationalSchema.Column>> story.estimation;
ClassDiagram.Attribut>> Project.serialversionuid:long =>=>=> RelationalSchema.Column>> project.serialversionuid;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name;
ClassDiagram.Attribut>> Project.start:Date =>=>=> RelationalSchema.Column>> project.start;
ClassDiagram.Attribut>> Project.end:Date =>=>=> RelationalSchema.Column>> project.end;
ClassDiagram.Attribut>> UploadedFile.id:long =>=>=> RelationalSchema.Column>> uploadedfile.id PRIMARY KEY;
ClassDiagram.Attribut>> UploadedFile.s:byte =>=>=> RelationalSchema.Column>> uploadedfile.s;
ClassDiagram.Attribut>> UploadedFile.filename:String =>=>=> RelationalSchema.Column>> uploadedfile.filename;
One-To-Many relationship from ClassDiagram.Class>>Sprint  to ClassDiagram.Class>>List<Story>;
Many-To-One relationship from ClassDiagram.Class>>Sprint  to ClassDiagram.Class>>project represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>story represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Story  to ClassDiagram.Class>>Sprint represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Story  to ClassDiagram.Class>>List<Task>;
One-To-Many relationship from ClassDiagram.Class>>Story  to ClassDiagram.Class>>List<UploadedFile>;
One-To-Many relationship from ClassDiagram.Class>>Project  to ClassDiagram.Class>>List<Sprint>;
Many-To-One relationship from ClassDiagram.Class>>UploadedFile  to ClassDiagram.Class>>story represented by ClassDiagram.Atrribute>>GeneratedName;
