ClassDiagram.Class>> Job =>=>=> RelationalSchema.Table>> job;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> BaseEntity =>=>=> RelationalSchema.Table>> baseentity;
ClassDiagram.Attribut>> Job.id:Long =>=>=> RelationalSchema.Column>> job.id PRIMARY KEY;
ClassDiagram.Attribut>> Job.name:String =>=>=> RelationalSchema.Column>> job.name;
ClassDiagram.Attribut>> Job.stat:String =>=>=> RelationalSchema.Column>> job.stat;
ClassDiagram.Attribut>> Job.date:String =>=>=> RelationalSchema.Column>> job.date;
ClassDiagram.Attribut>> Job.link:String =>=>=> RelationalSchema.Column>> job.link;
ClassDiagram.Attribut>> Company.id:Long =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Company.//@column(unique:String =>=>=> RelationalSchema.Column>> company.//@column(unique;
ClassDiagram.Attribut>> Company.detail:String =>=>=> RelationalSchema.Column>> company.detail;
ClassDiagram.Attribut>> Company.logo:String =>=>=> RelationalSchema.Column>> company.logo;
ClassDiagram.Attribut>> Company.link:String =>=>=> RelationalSchema.Column>> company.link;
ClassDiagram.Attribut>> BaseEntity.regdate:LocalDateTime =>=>=> RelationalSchema.Column>> baseentity.regdate;
ClassDiagram.Attribut>> BaseEntity.moddate:LocalDateTime =>=>=> RelationalSchema.Column>> baseentity.moddate;
Many-To-One relationship from ClassDiagram.Class>>Job  to ClassDiagram.Class>>company represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>List<Job>;
