
employee(/***/id:Integer [PK], /***/firstname:String, /***/age:Integer, /***/departmentid:Integer, /***/addressid:Integer, /***/:Department #FK to(Department), /***/:Address #FK to(Address));

foo(/***/id:Integer [PK], /***/id2:Integer [PK]);

address(/***/id:Integer [PK], /***/city:String, /***/:Employee #FK to(Employee));

hoge(/***/id:Integer [PK], /***/name:String);

department(/***/id:Integer [PK], /***/name:String);

address(/***/id:Integer [PK], /***/city:String, /***/:Employee #FK to(Employee));

employee(/***/id:Integer [PK], /***/firstname:String, /***/age:Integer, /***/departmentid:Integer, /***/addressid:Integer, /***/:Department #FK to(Department), /***/:Address #FK to(Address));

department(/***/id:Integer [PK], /***/name:String);

integerentity(/***/property:Integer);

document(/***/documentid:Integer [PK], /***/documentsize:Integer);

sqldateentity(/***/sqlproperty:Date);

bytearrayentity(arrayproperty:byte, blobproperty:byte);

stringentity(/***/property:String, /***/clobproperty:String);

department(/***/id:Integer [PK], /***/name:String);

identitycheck(/***/aaa:boolean [PK], /***/bbb:char [PK], /***/ccc:byte [PK], /***/ddd:short [PK], /***/eee:int [PK], /***/fff:long [PK], /***/ggg:float [PK], /***/hhh:double [PK], /***/iii:String [PK], /***/jjj:BigDecimal [PK], /***/kkk:BigInteger [PK], /***/lll:Date [PK], /***/mmm:Calendar [PK], /***/nnn:Time [PK], /***/ppp:Timestamp [PK]);

bigdecimalentity(/***/property:BigDecimal);

serializableentity(/***/serializableproperty:MySerializable, /***/blobproperty:MySerializable);

floatentity(/***/property:Float);

employee(/***/id:Integer [PK], /***/firstname:String, /***/lastname:String, /***/departmentid:Integer, /***/addressid:Integer, /***/:Department #FK to(Department), /***/:Address #FK to(Address));

calendarentity(/***/dateproperty:Calendar, /***/timeproperty:Calendar, /***/timestampproperty:Calendar);

enumentity(/***/enumproperty:MyEnum);

bigintegerentity(/***/property:BigInteger);

foo(/***/id:Integer [PK], /***/name:String);

byteentity(/***/property:Byte);

longentity(/***/property:Long);

dateentity(/***/property:Date, /***/timeproperty:Date, /***/timestampproperty:Date);

doubleentity(/***/1property:Double);

timeentity(/***/property:Time);

timestampentity(/***/property:Timestamp);

address(/***識別子*/id:Integer [PK], /***都市*/city:String, /***従業員*/:Employee #FK to(Employee));

booleanentity(/***/property:Boolean);

characterentity(/***/property:Character);

shortentity(/***/property:Short);


** PROGRAM TYPE: JPA+Hibernate(Hybrid)