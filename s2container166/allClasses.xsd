<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="fooorm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2junit4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="included" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="include" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerpropertyannotationhandlertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="removesessiontest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test$autoincludingtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test.seasar2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test$nonautoincludingtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2tigertestcasetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test$publishedtestcontexttest.s2junit4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test$annotationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test.s2testintrospector" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleinternaltestcontexttest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conventiontestintrospectortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleinternaltestcontexttest2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expecteddatareaderimpltest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdatapreparerimpltest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpledataaccessortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test$conventiontest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test_convention" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test.s2testclassmethodsrunner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test.s2testintrospector2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test$mocktest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test$simpleinternaltestcontexttest.s2junit4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="txattributecustomizertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmls2containerbuilderxincludetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationhandlertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmls2containerbuilderxincludetest_included" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hogeorm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="barorm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitmanagerimpltest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hogeorm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="barorm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceclassautodetectortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingfileautodetectortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfileselectimpltest_select" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfilefunctioncallimpltest_call" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfileprocedurecallimpltest_call" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodecachetest_bom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodecachetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodecachetest_oracle" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationreadertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dxointerceptortigertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="server" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="introspectorutiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationtestintrospectortest" >
      <xs:complexContent>
       <xs:extension base="easymocktestcase">
         <xs:sequence>
          <xs:element name="introspector" type="annotationtestintrospector" nillable="true" minOccurs="0" />
          <xs:element name="context" type="internaltestcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conventiontestintrospectortest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="introspector" type="conventiontestintrospector" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatapreparerimpltest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="" type="testdatapreparer" nillable="true" minOccurs="0" />
          <xs:element name="" type="testcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expecteddatareaderimpltest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="reader" type="expecteddatareader" nillable="true" minOccurs="0" />
          <xs:element name="" type="testcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ognlexpressiontest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleinternaltestcontexttest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="testctx" type="internaltestcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpledataaccessortest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
          <xs:element name="accessor" type="simpledataaccessor" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2tigertestcasetest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="map" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoge" >
      <xs:sequence>
        <xs:element name="foo" type="ifoo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="easymocktestcasetest" >
      <xs:complexContent>
       <xs:extension base="easymocktestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="map" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ihoge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge2" >
      <xs:sequence>
        <xs:element name="foo" type="ifoo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2asserttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ibar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ifoo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:string" />
          <xs:element name="count" type="xs:long" />
          <xs:element name="txactive" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoge18" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge18" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge14" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptor1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmls2containerbuilderxincludetest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoge7" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge14" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge3" >
      <xs:sequence>
        <xs:element name="/***/component" type="xs:string" />
        <xs:element name="/***/aspect" type="xs:string" />
        <xs:element name="/***/inter_type" type="xs:string" />
        <xs:element name="/***/aaa_binding" type="xs:string" />
        <xs:element name="/***/bbb_binding" type="xs:string" />
        <xs:element name="/***/init_method" type="xs:string" />
        <xs:element name="/***/destroy_method" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge10" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge21" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationhandlerfactorytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ihoge15" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationhandlertest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="handler" type="tigerannotationhandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoge6" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge15" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge2" >
      <xs:sequence>
        <xs:element name="fff" type="xs:string" />
        <xs:element name="ggg" type="xs:string" />
        <xs:element name="hhh" type="xs:string" />
        <xs:element name="lll" type="xs:string" />
        <xs:element name="mmm" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge11" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="em1" type="xs:anyType" />
        <xs:element name="em2" type="xs:anyType" />
        <xs:element name="em3" type="xs:anyType" />
        <xs:element name="em4" type="xs:anyType" />
        <xs:element name="em5" type="xs:anyType" />
        <xs:element name="em6" type="xs:anyType" />
        <xs:element name="emf1" type="xs:anyType" />
        <xs:element name="emf2" type="xs:anyType" />
        <xs:element name="emf3" type="xs:anyType" />
        <xs:element name="emf4" type="xs:anyType" />
        <xs:element name="emf5" type="xs:anyType" />
        <xs:element name="emf6" type="xs:anyType" />
        <xs:element name="ds1" type="xs:anyType" />
        <xs:element name="ds2" type="xs:anyType" />
        <xs:element name="ds3" type="xs:anyType" />
        <xs:element name="ds4" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge19base" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge20" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge11b" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge19" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptor2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge17" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge17" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge13" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge13" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge22" >
      <xs:sequence>
        <xs:element name="ds1" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge8" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge19derived" >
      <xs:complexContent>
       <xs:extension base="hoge19base">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ihoge11a" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge9" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge16" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge" >
      <xs:sequence>
        <xs:element name="bbb" type="xs:string" />
        <xs:element name="ccc" type="xs:string" />
        <xs:element name="ddd" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge16" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge5" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge7" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge12" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge12" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="txattributecustomizertest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singletons2containertest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappingfileautodetectortest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="detector" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceclassautodetectortest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="detector" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aaa" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceclasstransformerimpltest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
          <xs:element name="hoge" type="xs:string" />
          <xs:element name="foo" type="xs:string" />
          <xs:element name="bar" type="xs:string" />
          <xs:element name="aaa" type="xs:string" />
          <xs:element name="loader" type="childfirstclassloader" nillable="true" minOccurs="0" />
          <xs:element name="names" type="xs:anyType" />
          <xs:element name="root" type="xs:anyType" />
          <xs:element name="jarfile" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="containerpersistenceunitprovidertest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
          <xs:element name="unitinforegistry" type="persistenceunitinforegistry" nillable="true" minOccurs="0" />
          <xs:element name="unitconfiguration" type="persistenceunitconfiguration" nillable="true" minOccurs="0" />
          <xs:element name="classtransformer" type="persistenceclasstransformer" nillable="true" minOccurs="0" />
          <xs:element name="unitinfo" type="persistenceunitinfoimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitmanagerimpltest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
          <xs:element name="pum" type="persistenceunitmanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitconfigurationimpltest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
          <xs:element name="cfg" type="persistenceunitconfigurationimpl" nillable="true" minOccurs="0" />
          <xs:element name="unitmanager" type="persistenceunitmanager" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="resourcedetector" type="xs:anyType" />
          <xs:element name="classdetector" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitinfofactoryimpltest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="txscopedentitymanagerproxytest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
          <xs:element name="ut" type="xs:anyType" />
          <xs:element name="tm" type="xs:anyType" />
          <xs:element name="tsr" type="xs:anyType" />
          <xs:element name="emf1" type="xs:anyType" />
          <xs:element name="emf2" type="xs:anyType" />
          <xs:element name="em1" type="xs:anyType" />
          <xs:element name="em2" type="xs:anyType" />
          <xs:element name="em3" type="xs:anyType" />
          <xs:element name="target1" type="txscopedentitymanagerproxy" nillable="true" minOccurs="0" />
          <xs:element name="target2" type="txscopedentitymanagerproxy" nillable="true" minOccurs="0" />
          <xs:element name="target3" type="txscopedentitymanagerproxy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectableentitymanagerproxytest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="entitymanagerprovider" nillable="true" minOccurs="0" />
          <xs:element name="proxy" type="selectableentitymanagerproxy" nillable="true" minOccurs="0" />
          <xs:element name="foo" type="xs:anyType" />
          <xs:element name="bar" type="xs:anyType" />
          <xs:element name="" type="query" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childfirstclassloadertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="classname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aroundinvokesupportinterceptortest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3transactioncallbacktest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertydescimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterizedclassdescfactorytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertydescimpltigertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mybean3" >
      <xs:sequence>
        <xs:element name="/***/abc_value" type="xs:string" />
        <xs:element name="/***/xyz_value" type="xs:string" />
        <xs:element name="/***/other" type="xs:string" />
        <xs:element name="/***/abc_exclude" type="xs:string" />
        <xs:element name="/***/ab" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanmaptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mybean2" >
      <xs:sequence>
        <xs:element name="/***/aaa" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstcopytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="copytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="createandcopytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mybean" >
      <xs:sequence>
        <xs:element name="/***/aaa" type="xs:string" />
        <xs:element name="/***/bbb" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tigermaputiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="methodutiltigertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="saxparserfactoryutiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="included" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldutiltigertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tigerbigdecimalconversiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericutiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reflectionutiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationutiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tigerpropertyannotationhandlertest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="path" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tigerpropertyannotationhandlertarget" >
      <xs:sequence>
        <xs:element name="readfield_" type="xs:long" />
        <xs:element name="writefield_" type="xs:long" />
        <xs:element name="readwritefield_" type="xs:long" />
        <xs:element name="nonefield_" type="xs:long" />
        <xs:element name="/***/field_" type="xs:long" />
        <xs:element name="/***/field_" type="xs:long" />
        <xs:element name="field_" type="xs:long" />
        <xs:element name="nonannotatedfield_" type="xs:long" />
        <xs:element name="field_" type="xs:anyType" />
        <xs:element name="arrayfield_" type="xs:string" />
        <xs:element name="arrayfield_" type="xs:long" />
        <xs:element name="test" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerpropertyannotationhandlertarget2" >
      <xs:sequence>
        <xs:element name="defaultfield" type="xs:long" />
        <xs:element name="readfield" type="xs:long" />
        <xs:element name="writefield" type="xs:long" />
        <xs:element name="readwritefield" type="xs:long" />
        <xs:element name="nonefield" type="xs:long" />
        <xs:element name="hasgetter" type="xs:long" />
        <xs:element name="hassetter" type="xs:long" />
        <xs:element name="hasgettersetter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2tigeraopproxytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tracetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tracethrowstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removesessiontest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tostringtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="returnvalue" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="returnvalueinterceptor" >
      <xs:sequence>
        <xs:element name="/***/value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synctest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="returnvaluetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="envtigertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="was6transactionmanageradaptertest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="target" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtausertransactionadaptertest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="target" type="xs:anyType" />
          <xs:element name="ut" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtatransactionmanageradaptertest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="target" type="xs:anyType" />
          <xs:element name="ut" type="xs:anyType" />
          <xs:element name="tm" type="xs:anyType" />
          <xs:element name="tx" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="absttransactionmanageradaptertest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nodecachetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnnotfoundruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullbindvariableruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedbypropertynotfoundruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinduplicatedruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonefknotfoundruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedbynotidenticalruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singlequotenotcloseruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertynotfoundruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanynotlistruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basejoinnotfoundruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyduplicatedruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanynotgenericsruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldduplicatedruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="hoge" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonefknotfoundruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnautoconfigurationruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonuniqueidruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedbymandatoryruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="temporaltypenotspecifiedruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="referencedcolumnnamenotfoundruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="illegalparamsizeruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonbooleanisnullconditionruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldnotgenericsruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="aaa" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnduplicatedruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsupportedinheritanceruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationshipnotentityruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bothmappedbyandjoincolumnruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnnameandreferencedcolumnnamemandatoryruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonarrayinconditionruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonrelationshipruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="snonuniqueresultexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitycolumnnotfoundruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonentityruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbynotfoundruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectclausetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="whereclausetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyclausetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:anyType" />
        <xs:element name="/***/name" type="xs:string" />
        <xs:element name="/***/hire" type="xs:dateTime" />
        <xs:element name="/***/" type="department" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="departmentnames" >
      <xs:complexContent>
       <xs:extension base="operations">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="likeoperatortest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="complexwheretest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplewheretest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositewheretest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singlevalueoperatortest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multivalueoperatortest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeenames" >
      <xs:complexContent>
       <xs:extension base="operations">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:anyType" />
        <xs:element name="/***/name" type="xs:string" />
        <xs:element name="/***/employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablemetatest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnmetatest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertynametest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="empservice" >
      <xs:complexContent>
       <xs:extension base="abstractservice<emp,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2abstractservicetest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="empdao" type="empservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractservice" >
      <xs:complexContent>
       <xs:extension base="s2abstractservice<entity>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2jdbcdicontest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="" type="jdbcmanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcmanagerimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbccontextimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="con" type="xs:anyType" />
          <xs:element name="ctx" type="jdbccontextimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytokenizertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="likeutiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statementcachetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromclausetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfilefunctioncallimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="path" type="xs:string" />
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlprocedurecallimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="absautobatchupdatetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
          <xs:element name="added" type="xs:long" />
          <xs:element name="executed" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlselectimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abssqlselecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autobatchdeletetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
          <xs:element name="addbatchcalled" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlbatchupdateimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
          <xs:element name="addedbatch" type="xs:long" />
          <xs:element name="executedbatch" type="xs:long" />
          <xs:element name="preparedbindvariables" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoselectimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfileupdateimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="path_simple" type="xs:string" />
          <xs:element name="path_dto" type="xs:string" />
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autodeletetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfileprocedurecallimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="path" type="xs:string" />
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autofunctioncallimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoprocedurecallimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfilebatchupdateimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="path_simple" type="xs:string" />
          <xs:element name="path_dto" type="xs:string" />
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
          <xs:element name="addedbatch" type="xs:long" />
          <xs:element name="executedbatch" type="xs:long" />
          <xs:element name="preparedbindvariables" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autobatchinserttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
          <xs:element name="addbatchcalled" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfileselectimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="path" type="xs:string" />
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoupdateimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="absprocedurecalltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
          <xs:element name="setupedcallablestatement" type="xs:anyType" />
          <xs:element name="preparedinparams" type="xs:anyType" />
          <xs:element name="preparedoutparams" type="xs:anyType" />
          <xs:element name="paramindex" type="xs:long" />
          <xs:element name="paramsqltype" type="xs:long" />
          <xs:element name="registeredcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfunctioncallimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoinserttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autobatchupdatetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
          <xs:element name="addbatchcalled" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlupdateimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
          <xs:element name="preparedbindvariables" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="absautoupdatetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="absselecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
          <xs:element name="jdbccontext" type="jdbccontextimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="absquerytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="manager" type="jdbcmanagerimpl" nillable="true" minOccurs="0" />
          <xs:element name="bindvariable" type="xs:anyType" />
          <xs:element name="parameterindex" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditiontypetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuetypestest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="operationstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablemetafactoryimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="factory" type="tablemetafactoryimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnmetafactoryimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="factory" type="columnmetafactoryimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metadicontest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="" type="entitymetafactory" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymetafactoryimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="factory" type="propertymetafactoryimpl" nillable="true" minOccurs="0" />
          <xs:element name="transienthoge" type="xs:string" />
          <xs:element name="eager" type="xs:string" />
          <xs:element name="lazy" type="xs:string" />
          <xs:element name="idlazy" type="xs:string" />
          <xs:element name="" type="xs:dateTime" />
          <xs:element name="illegal" type="xs:dateTime" />
          <xs:element name="calendar" type="xs:dateTime" />
          <xs:element name="illegalcalendar" type="xs:dateTime" />
          <xs:element name="version" type="xs:anyType" />
          <xs:element name="illegalversion" type="xs:anyType" />
          <xs:element name="" type="bbb" nillable="true" minOccurs="0" />
          <xs:element name="2" type="bbb" nillable="true" minOccurs="0" />
          <xs:element name="" type="entitymeta" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymetafactoryimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="factory" type="entitymetafactoryimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mssqldialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="mssqldialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hsqldialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="hsqldialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derbydialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="derbydialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracledialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="oracledialect" nillable="true" minOccurs="0" />
          <xs:element name="/***/field" type="xs:string" />
          <xs:element name="/***/field" type="xs:anyType" />
          <xs:element name="/***/listfield" type="xs:anyType" />
          <xs:element name="/***/arraylistfield" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2390dialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="db2390dialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standarddialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="standarddialect" nillable="true" minOccurs="0" />
          <xs:element name="/***/field" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interbasedialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="interbasedialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mssql2005dialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="mssql2005dialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dialectdicontest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2dialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="db2dialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgredialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="postgredialect" nillable="true" minOccurs="0" />
          <xs:element name="/***/field" type="xs:string" />
          <xs:element name="sfield" type="xs:anyType" />
          <xs:element name="/***/field" type="xs:anyType" />
          <xs:element name="/***/listfield" type="xs:anyType" />
          <xs:element name="/***/arraylistfield" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqldialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="mysqldialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgre81dialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="postgre81dialect" nillable="true" minOccurs="0" />
          <xs:element name="sfield" type="xs:anyType" />
          <xs:element name="/***/field" type="xs:anyType" />
          <xs:element name="/***/listfield" type="xs:anyType" />
          <xs:element name="/***/arraylistfield" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="firebirddialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="firebirddialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="h2dialecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dialect" type="h2dialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymetatest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanlistresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanautoresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="maplistresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="sql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beaniterationresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="count" type="xs:long" />
          <xs:element name="list" type="aaadto" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstbeanautoresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectlistresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstmapresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstbeanresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beaniterationautoresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="count" type="xs:long" />
          <xs:element name="list" type="aaa" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanlistautoresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapiterationresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="count" type="xs:long" />
          <xs:element name="list" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectiterationresultsethandlertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="count" type="xs:long" />
          <xs:element name="list" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ccc" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:anyType" />
        <xs:element name="/***/name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hhh" >
      <xs:complexContent>
       <xs:extension base="ggg">
         <xs:sequence>
          <xs:element name="/***/name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dept" >
      <xs:sequence>
        <xs:element name="/***/deptno" type="xs:anyType" />
        <xs:element name="/***/dname" type="xs:string" />
        <xs:element name="/***/emplist" type="emp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identity" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="kkk" >
      <xs:complexContent>
       <xs:extension base="ggg">
         <xs:sequence>
          <xs:element name="/***/id" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fff" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:anyType" />
        <xs:element name="/***/name" type="xs:string" />
        <xs:element name="/***/" type="eee" nillable="true" minOccurs="0" />
        <xs:element name="/***/version" type="xs:long" />
        <xs:element name="/***/lastupdated" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequence" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eee" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:anyType" />
        <xs:element name="/***/name" type="xs:string" />
        <xs:element name="/***/longtext" type="xs:string" />
        <xs:element name="/***/fffid" type="xs:anyType" />
        <xs:element name="/***/" type="fff" nillable="true" minOccurs="0" />
        <xs:element name="/***/version" type="xs:long" />
        <xs:element name="/***/lastupdated" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iii" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:long" />
        <xs:element name="/***/hhhid" type="xs:long" />
        <xs:element name="/***/" type="hhh" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bbb" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:anyType" />
        <xs:element name="/***/name" type="xs:string" />
        <xs:element name="/***/cccid" type="xs:anyType" />
        <xs:element name="/***/" type="ccc" nillable="true" minOccurs="0" />
        <xs:element name="/***/" type="aaa" nillable="true" minOccurs="0" />
        <xs:element name="/***/ddds" type="ddd" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***/lazyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aaa" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:anyType" />
        <xs:element name="/***/name" type="xs:string" />
        <xs:element name="/***/bbbid" type="xs:anyType" />
        <xs:element name="/***/" type="bbb" nillable="true" minOccurs="0" />
        <xs:element name="/***/dto" type="mydto" nillable="true" minOccurs="0" />
        <xs:element name="/***/lazyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mydto" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="/***/name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jjj" >
      <xs:complexContent>
       <xs:extension base="aaa">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ggg" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:long" />
        <xs:element name="/***/iiis" type="iii" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="table" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emp" >
      <xs:sequence>
        <xs:element name="/***/empno" type="xs:anyType" />
        <xs:element name="/***/ename" type="xs:string" />
        <xs:element name="/***/job" type="xs:string" />
        <xs:element name="/***/mgr" type="xs:anyType" />
        <xs:element name="/***/hire" type="xs:dateTime" />
        <xs:element name="/***/sal" type="xs:anyType" />
        <xs:element name="/***/comm" type="xs:anyType" />
        <xs:element name="/***/deptno" type="xs:anyType" />
        <xs:element name="/***/" type="dept" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ddd" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:anyType" />
        <xs:element name="/***/name" type="xs:string" />
        <xs:element name="/***/bbbid" type="xs:anyType" />
        <xs:element name="/***/" type="bbb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aaadto" >
      <xs:sequence>
        <xs:element name="/***/foo" type="xs:string" />
        <xs:element name="/***/aaabbb" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymetatest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="paramtypetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappingcontexttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytooneentitymapperimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="keyitemstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymapperimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyentitymapperimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstentitymappertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="called" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymapperimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetooneentitymapperimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="empno" type="xs:long" />
        <xs:element name="ename" type="xs:string" />
        <xs:element name="job" type="xs:string" />
        <xs:element name="mgr" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="hiredate" type="xs:anyType" />
        <xs:element name="sal" type="xs:double" />
        <xs:element name="comm" type="xs:double" />
        <xs:element name="deptno" type="xs:anyType" />
        <xs:element name="password" type="xs:anyType" />
        <xs:element name="dummy" type="xs:string" />
        <xs:element name="GeneratedName" type="department" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beantomapdxocommandbuildertigertest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
          <xs:element name="builder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beantobeandxocommandbuildertigertest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
          <xs:element name="builder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="color" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dxotigerutiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aaa" >
      <xs:sequence>
        <xs:element name="prop1" type="xs:anyType" />
        <xs:element name="prop2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
        <xs:element name="ordinal" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:sequence>
        <xs:element name="ordinal" type="color" nillable="true" minOccurs="0" />
        <xs:element name="name" type="color" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="empdto" >
      <xs:sequence>
        <xs:element name="ename" type="xs:string" />
        <xs:element name="job" type="xs:string" />
        <xs:element name="dname" type="xs:string" />
        <xs:element name="mname" type="xs:string" />
        <xs:element name="sal" type="xs:string" />
        <xs:element name="comm" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationreadertest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
          <xs:element name="factory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bbb" >
      <xs:sequence>
        <xs:element name="prop1" type="xs:anyType" />
        <xs:element name="/***/prop2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge" >
      <xs:sequence>
        <xs:element name="foo" type="xs:long" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="baz" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dxointerceptortigertest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beantobeandxocommandtigertest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
          <xs:element name="builder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beantomapdxocommandtigertest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
          <xs:element name="builder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="searchpage" >
      <xs:sequence>
        <xs:element name="search_name_like" type="xs:string" />
        <xs:element name="search_age_gt" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="hoge" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="deptno" type="xs:long" />
        <xs:element name="dname" type="xs:string" />
        <xs:element name="loc" type="xs:string" />
        <xs:element name="versionno" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchdto" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="name_like" type="xs:string" />
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="age_gt" type="xs:anyType" />
        <xs:element name="hoge" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hogehoge" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:anyType" />
        <xs:element name="baz" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="site_ja" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2jdbc-internal" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="std-customizer-tiger" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpa-support-smart" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dxo-tiger-converters" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3tx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javaee5" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence-customize" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence-dialect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="removesession" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidatesession" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tostring" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sync" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tracethrows" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpletrace" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hotawaredelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trace" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lifecycleadapter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerpropertyannotationhandler" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parametername" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterizedclassdescfactoryprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcopy" >
      <xs:complexContent>
       <xs:extension base="abstractcopy<s>>">
         <xs:sequence>
          <xs:element name="empty__array" type="xs:string" />
          <xs:element name="/***日付用のデフォルトコンバータです。*/default_date_" type="xs:anyType" />
          <xs:element name="/***日時用のデフォルトコンバータです。*/default_timestamp_" type="xs:anyType" />
          <xs:element name="/***時間用のデフォルトコンバータです。*/default_time_" type="xs:anyType" />
          <xs:element name="includepropertynames" type="xs:string" />
          <xs:element name="excludepropertynames" type="xs:string" />
          <xs:element name="/***null値のプロパティを操作の対象外にするかどうかです。*/excludesnull" type="xs:anyType" />
          <xs:element name="/***空白を操作の対象外にするかどうかです。*/excludeswhitespace" type="xs:anyType" />
          <xs:element name="/***プレフィックスです。*/prefix" type="xs:string" />
          <xs:element name="/***javabeanのデリミタです。*/beandelimiter" type="xs:anyType" />
          <xs:element name="/***mapのデリミタです。*/mapdelimiter" type="xs:anyType" />
          <xs:element name="convertermap" type="xs:anyType" />
          <xs:element name="/***特定のプロパティに関連付けられていないコンバータです。*/converters" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanmap" >
      <xs:complexContent>
       <xs:extension base="hashmap<string,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="createandcopy" >
      <xs:complexContent>
       <xs:extension base="abstractcopy<createandcopy<t>>">
         <xs:sequence>
          <xs:element name="/***作成対象クラス*/destclass" type="xs:anyType" />
          <xs:element name="/***コピー元です。*/src" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="copy" >
      <xs:complexContent>
       <xs:extension base="abstractcopy<copy>">
         <xs:sequence>
          <xs:element name="/***コピー元です。*/src" type="xs:anyType" />
          <xs:element name="/***コピー先です。*/dest" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beans" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instancetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertytype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="initmethod" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="destroymethod" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bindingtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autobindingtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="binding" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aspect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="intertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aspectdefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentdefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationhandler" >
      <xs:complexContent>
       <xs:extension base="constantannotationhandler">
         <xs:sequence>
          <xs:element name="*/initialized" type="xs:anyType" />
          <xs:element name="*/enableejb3" type="xs:anyType" />
          <xs:element name="*/enablejpa" type="xs:anyType" />
          <xs:element name="*/enablecommonannotations" type="xs:anyType" />
          <xs:element name="/***{@linkcomponentdefbuilder}の配列*/componentdefbuilders" type="componentdefbuilder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***{@linkpropertydefbuilder}の配列*/propertydefbuilders" type="propertydefbuilder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***{@linkaspectdefbuilder}の配列*/aspectdefbuilders" type="aspectdefbuilder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***{@linkintertypedefbuilder}の配列*/intertypedefbuilders" type="intertypedefbuilder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***{@linkinitmethoddefbuilder}の配列*/initmethoddefbuilders" type="initmethoddefbuilder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***{@linkdestroymethoddefbuilder}の配列*/destroymethoddefbuilders" type="destroymethoddefbuilder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertydefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2destroymethoddefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="destroymethoddefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="intertypedefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="initmethoddefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpropertydefbuilder" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="/***アノテーションハンドラ*/handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bindingpropertydefbuilder" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resourcepropertydefbuilder" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitpropertydefbuilder" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistencecontextpropertydefbuilder" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejbpropertydefbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractpropertydefbuilder<ejb>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metaannotationaspectdefbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractaspectdefbuilder">
         <xs:sequence>
          <xs:element name="/***メタアノテーションの型*/metaannotationtype" type="xs:anyType" />
          <xs:element name="/***インターセプタの名前空間*/interceptornamespace" type="xs:string" />
          <xs:element name="/***インターセプタの接尾辞*/interceptorsuffix" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractaspectdefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aspectannotationaspectdefbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractaspectdefbuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3annotationaspectdefbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractaspectdefbuilder">
         <xs:sequence>
          <xs:element name="txinterceptors" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2initmethoddefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3initmethoddefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pojocomponentdefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3componentdefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3intertypedefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2intertypedefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="txattributecustomizer" >
      <xs:complexContent>
       <xs:extension base="abstractcustomizer">
         <xs:sequence>
          <xs:element name="txinterceptors" type="xs:anyType" />
          <xs:element name="/***デフォルトのトランザクション属性*/defaultattributetype" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singletons2container" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="illegalclassformatruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="classname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2testclassrunner" >
      <xs:complexContent>
       <xs:extension base="runner">
         <xs:sequence>
          <xs:element name="delegate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2testclassmethodsrunner" >
      <xs:complexContent>
       <xs:extension base="runner">
         <xs:sequence>
          <xs:element name="/***{@links2testclassmethodsrunner}の振る舞いを提供するプロバイダ*/" type="xs:anyType" />
          <xs:element name="/***テストメソッドのリスト*/testmethods" type="xs:anyType" />
          <xs:element name="/***テストクラス*/testclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="seasar2" >
      <xs:complexContent>
       <xs:extension base="runner">
         <xs:sequence>
          <xs:element name="/***s2junit4の振る舞いを設定するためのコンフィグレーションファイルのキー*/s2junit4_config_key" type="xs:string" />
          <xs:element name="/***s2junit4の振る舞いを設定するためのコンフィグレーションファイルのパス*/s2junit4_config_path" type="xs:string" />
          <xs:element name="/***コンフィグレーションファイルから構築されたコンフィグレーションs2コンテナ*/configurationcontainer" type="xs:anyType" />
          <xs:element name="/***{@linkseasar2}の振る舞いを提供するプロバイダ*/" type="xs:anyType" />
          <xs:element name="delegate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="internaltestcontext" >
      <xs:complexContent>
       <xs:extension base="testcontext">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2testmethodrunner" >
      <xs:complexContent>
       <xs:extension base="exception">
         <xs:sequence>
          <xs:element name="/***s2junit4のデフォルトの設定ファイルのパス*/default_s2junit4_path" type="xs:string" />
          <xs:element name="/***このランナーで使用する環境名設定ファイルのパス*/env_path" type="xs:string" />
          <xs:element name="/***環境名設定ファイルのパスにファイルが存在しない場合の環境名*/env_value" type="xs:string" />
          <xs:element name="/***s2junit4の設定ファイルのパス*/s2junit4path" type="xs:string" />
          <xs:element name="/***テストオブジェクト*/test" type="xs:anyType" />
          <xs:element name="/***テストクラス*/testclass" type="xs:anyType" />
          <xs:element name="/***テストメソッド*/" type="xs:anyType" />
          <xs:element name="/***ノティファイアー*/notifier" type="xs:anyType" />
          <xs:element name="/***テストのディスクリプション*/" type="xs:anyType" />
          <xs:element name="/***テストクラスのイントロスペクター*/introspector" type="s2testintrospector" nillable="true" minOccurs="0" />
          <xs:element name="/***{@link#unitテストで使用するクラスローダー}で置き換えられる前のオリジナルのクラスローダー*/original" type="xs:anyType" />
          <xs:element name="/***テストで使用するクラスローダー*/" type="xs:anyType" />
          <xs:element name="/***s2junit4の内部的なテストコンテキスト*/testcontext" type="internaltestcontext" nillable="true" minOccurs="0" />
          <xs:element name="/***バインディングが行われたフィールドのリスト*/boundfields" type="xs:anyType" />
          <xs:element name="/***easymockとの対話をサポートするオブジェクト*/" type="easymocksupport" nillable="true" minOccurs="0" />
          <xs:element name="/***テストが失敗したことを表すフラグ*/testfailed" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2assert" >
      <xs:complexContent>
       <xs:extension base="assert">
         <xs:sequence>
          <xs:element name="/***{@links2testcase}のアダプタ*/adapter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expecteddatareader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="easymocktestcase" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="//instancefields/***easymockとの対話をサポートするオブジェクト*/" type="easymocksupport" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configfileincluder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expression" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdatapreparerimpl" >
      <xs:sequence>
        <xs:element name="/***ロガー*/" type="xs:anyType" />
        <xs:element name="/***テストデータを持つexcelのパスのリスト*/testdataxlspaths" type="xs:anyType" />
        <xs:element name="/***データアクセッサー*/" type="dataaccessor" nillable="true" minOccurs="0" />
        <xs:element name="*/replacedb" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationtestintrospector" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="/***テストクラスの初期化メソッドに注釈可能なアノテーションクラス*/beforeclassannotation" type="xs:anyType" />
          <xs:element name="/***テストクラスの解放メソッドに注釈可能なアノテーションクラス*/afterclassannotation" type="xs:anyType" />
          <xs:element name="/***全テストケースに共通の初期化メソッドに注釈可能なアノテーションクラス*/beforeannotation" type="xs:anyType" />
          <xs:element name="/***全テストケースに共通の解放メソッドに注釈可能なアノテーションクラス*/afterannotation" type="xs:anyType" />
          <xs:element name="/***テストクラスのバインドフィールド直後のメソッドに注釈可能なアノテーションクラス*/postbindfieldsannotation" type="xs:anyType" />
          <xs:element name="/***テストクラスのアンバインドフィールド直前のメソッドメソッドに注釈可能なアノテーションクラス*/preunbindfieldsannotation" type="xs:anyType" />
          <xs:element name="*/enableignore" type="xs:anyType" />
          <xs:element name="*/enableprerequisite" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleinternaltestcontext" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
          <xs:element name="/***tigerのアノテーションハンドラー*/handler" type="tigerannotationhandler" nillable="true" minOccurs="0" />
          <xs:element name="/***モックインターセプターのリスト*/mockinterceptors" type="xs:anyType" />
          <xs:element name="/***ルートのs2コンテナ*/container" type="xs:anyType" />
          <xs:element name="/***命名規約*/" type="xs:anyType" />
          <xs:element name="/***テストクラス*/testclass" type="xs:anyType" />
          <xs:element name="/***テストメソッド*/test" type="xs:anyType" />
          <xs:element name="*/autoincluding" type="xs:anyType" />
          <xs:element name="*/autopreparing" type="xs:anyType" />
          <xs:element name="/***テストデータの準備方法*/" type="preparationtype" nillable="true" minOccurs="0" />
          <xs:element name="*/trimstring" type="xs:anyType" />
          <xs:element name="*/ejb3enabled" type="xs:anyType" />
          <xs:element name="*/jtaenabled" type="xs:anyType" />
          <xs:element name="/***s2コンテナが初期化されたかどうかを表すフラグ*/containerinitialized" type="xs:anyType" />
          <xs:element name="deregisteredcolumntypesbyclass" type="xs:anyType" />
          <xs:element name="deregisteredcolumntypesbysqltype" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conventiontestintrospector" >
      <xs:complexContent>
       <xs:extension base="annotationtestintrospector">
         <xs:sequence>
          <xs:element name="/***テストメソッドとして解釈すべきでないメソッドに付与されるアノテーションのセット*/nontestannotations" type="xs:anyType" />
          <xs:element name="/***テストメソッドとして解釈すべきでないメソッド名の正規表現*/nontestmethodnamepatterns" type="xs:anyType" />
          <xs:element name="/***テストクラスの初期化メソッドの名前*/beforeclassmethodname" type="xs:string" />
          <xs:element name="/***テストクラスの解放メソッドの名前*/afterclassmethodname" type="xs:string" />
          <xs:element name="/***全テストケースの初期化メソッドの名前*/beforemethodname" type="xs:string" />
          <xs:element name="/***全テストケースの解放メソッドを名前*/aftermethodname" type="xs:string" />
          <xs:element name="/***テストケース個別にモックの振る舞いを記録するメソッドの名前のプレフィックス*/recordmethodname" type="xs:string" />
          <xs:element name="/***テストクラスのバインドフィールド直後のメソッドの名前*/postbindfieldsmethodname" type="xs:string" />
          <xs:element name="/***テストクラスのアンバインドフィールド直前のメソッドの名前*/preunbindfieldsmethodname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configfileincluderimpl" >
      <xs:sequence>
        <xs:element name="/***ロガー*/" type="xs:anyType" />
        <xs:element name="/***s2コンテナ*/container" type="xs:anyType" />
        <xs:element name="/***設定ファイルのパスのリスト*/configfiles" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dataaccessorimpl" >
      <xs:complexContent>
       <xs:extension base="simpledataaccessor">
         <xs:sequence>
          <xs:element name="/***トランザクションマネジャー*/tm" type="xs:anyType" />
          <xs:element name="/***エンティティマネジャー*/em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ognlexpression" >
      <xs:sequence>
        <xs:element name="source" type="xs:string" />
        <xs:element name="root" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="internaltestcontextimpl" >
      <xs:complexContent>
       <xs:extension base="simpleinternaltestcontext">
         <xs:sequence>
          <xs:element name="/***{@linkservletcontext}のモック*/servletcontext" type="xs:anyType" />
          <xs:element name="/***サーブレット*/" type="xs:anyType" />
          <xs:element name="/***{@linkservletconfig}のモック*/servletconfig" type="xs:anyType" />
          <xs:element name="/***{@linkhttpservletrequest}のモック*/request" type="xs:anyType" />
          <xs:element name="/***{@linkhttpservletresponse}のモック*/response" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpledataaccessor" >
      <xs:sequence>
        <xs:element name="/***テストコンテキスト*/" type="testcontext" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="dbmetadata" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="introspectorutil" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expecteddatareaderimpl" >
      <xs:sequence>
        <xs:element name="/***ロガー*/" type="xs:anyType" />
        <xs:element name="/***期待値が記述されたexcelのパスのリスト*/expecteddataxlspaths" type="xs:anyType" />
        <xs:element name="/***データアクセッサー*/" type="dataaccessor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="easymocksupport" >
      <xs:sequence>
        <xs:element name="//instancefields/***モックのリスト*/mocks" type="xs:anyType" />
        <xs:element name="/***モックがバインディングされたフィールド*/boundfields" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2methodvalidator" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="/***テストクラス*/clazz" type="xs:anyType" />
          <xs:element name="/***検証に違反したときに発生するスロー可能オブジェクトのリスト*/errors" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2tigertestcase" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="//instancefields/***easymockとの対話をサポートするオブジェクト*/" type="easymocksupport" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dataaccessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2parameterized" >
      <xs:complexContent>
       <xs:extension base="s2testclassrunner">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2testintrospector" >
      <xs:complexContent>
       <xs:extension base="throwable>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="txbehaviortype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="easymocktype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mocks" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preunbindfields" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="txbehavior" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="registernamingconvention" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rootdicon" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warmdeploy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mock" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="easymock" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="prerequisite" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postbindfields" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="publishedtestcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdatapreparer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preparationtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcontext" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="maps" >
      <xs:sequence>
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pair" >
      <xs:sequence>
        <xs:element name="/***1番目の値*/first" type="xs:anyType" />
        <xs:element name="/***2番目の値*/second" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuple3" >
      <xs:sequence>
        <xs:element name="/***1番目の値*/value1" type="xs:anyType" />
        <xs:element name="/***2番目の値*/value2" type="xs:anyType" />
        <xs:element name="/***3番目の値*/value3" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iterableadapter" >
      <xs:sequence>
        <xs:element name="enumeration" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuple5" >
      <xs:sequence>
        <xs:element name="/***1番目の値*/value1" type="xs:anyType" />
        <xs:element name="/***2番目の値*/value2" type="xs:anyType" />
        <xs:element name="/***3番目の値*/value3" type="xs:anyType" />
        <xs:element name="/***4番目の値*/value4" type="xs:anyType" />
        <xs:element name="/***5番目の値*/value5" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuple4" >
      <xs:sequence>
        <xs:element name="/***1番目の値*/value1" type="xs:anyType" />
        <xs:element name="/***2番目の値*/value2" type="xs:anyType" />
        <xs:element name="/***3番目の値*/value3" type="xs:anyType" />
        <xs:element name="/***4番目の値*/value4" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionsutil" >
      <xs:complexContent>
       <xs:extension base="e>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valueholder" >
      <xs:sequence>
        <xs:element name="/***値*/value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectionutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemautil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentmapfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemafactoryutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerbigdecimalconversion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitinforegistry" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitinfofactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingfileautodetector" >
      <xs:complexContent>
       <xs:extension base="abstractresourceautodetector">
         <xs:sequence>
          <xs:element name="/***命名規約*/" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceclassautodetector" >
      <xs:complexContent>
       <xs:extension base="abstractclassautodetector">
         <xs:sequence>
          <xs:element name="/***アノテーションのリスト*/annotations" type="xs:anyType" />
          <xs:element name="/***命名規約*/" type="xs:anyType" />
          <xs:element name="/***エンティティをロードするためのクラスローダ*/" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceclasstransformer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitmanager" >
      <xs:sequence>
        <xs:element name="/***デフォルトの永続ユニット名*/default_persistence_unit_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummyentitydescprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydescfactory" >
      <xs:sequence>
        <xs:element name="/***クラスに対応する{@link}が存在しないことを示すオブジェクト*/not_found" type="entitydesc" nillable="true" minOccurs="0" />
        <xs:element name="/***初期化されているかどうかを表すフラグ*/initialized" type="xs:anyType" />
        <xs:element name="entitydescs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydesc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydescprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributedesc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitmanagerlocater" >
      <xs:sequence>
        <xs:element name="/***永続ユニットマネージャ*/instance" type="persistenceunitmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityreader" >
      <xs:complexContent>
       <xs:extension base="datareader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dummyentityreaderprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityreaderfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityreaderprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerprovider" >
      <xs:sequence>
        <xs:element name="/***デフォルトの{@linkentitymanager}のコンポーネント名*/default_entity_manager_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectmanager" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transformclassloader" >
      <xs:complexContent>
       <xs:extension base="abstractclassloader">
         <xs:sequence>
          <xs:element name="/***永続クラスのトランスフォーマ*/" type="persistenceclasstransformer" nillable="true" minOccurs="0" />
          <xs:element name="/***永続ユニット情報*/" type="xs:anyType" />
          <xs:element name="/***クラストランスフォーマのリスト*/transformers" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="temporaltypeutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractclassloader" >
      <xs:complexContent>
       <xs:extension base="classloader">
         <xs:sequence>
          <xs:element name="/***親クラスローダに委譲せずに自身で処理する対象となるクラス名のセット*/includednames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classloaderlistener" >
      <xs:complexContent>
       <xs:extension base="eventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childfirstclassloader" >
      <xs:complexContent>
       <xs:extension base="abstractclassloader">
         <xs:sequence>
          <xs:element name="/***{@linkclassloaderlistener}のリスト*/listeners" type="classloaderlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classtransformerutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classloaderevent" >
      <xs:complexContent>
       <xs:extension base="eventobject">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***クラス名*/classname" type="xs:string" />
          <xs:element name="code" type="xs:anyType" />
          <xs:element name="/***定義されたクラス*/definedclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitnodfoundexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dialectnotfoundexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitconfigurationimpl" >
      <xs:sequence>
        <xs:element name="/***永続ユニットマネージャ*/" type="persistenceunitmanager" nillable="true" minOccurs="0" />
        <xs:element name="mappingfiles" type="xs:anyType" />
        <xs:element name="persistenceclasses" type="xs:anyType" />
        <xs:element name="mappingfileautodetectors" type="xs:anyType" />
        <xs:element name="persistenceclassautodetectors" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitinfofactoryimpl" >
      <xs:complexContent>
       <xs:extension base="taghandlerrule">
         <xs:sequence>
          <xs:element name="/***デフォルトの永続ユニットプロバイダクラス名(hibernateentitymanager)*/default_provider" type="xs:string" />
          <xs:element name="/***デフォルトのデータソース名*/default_datasource" type="xs:string" />
          <xs:element name="のパス名*/persistence_xml" type="xs:string" />
          <xs:element name="を検証するxmlschemaのパス名*/persistence_schema_name" type="xs:string" />
          <xs:element name="/***永続ユニットルートurlのコンテキストキー*/persistence_unit_root_url" type="xs:string" />
          <xs:element name="をロードするクラスローダ*/" type="xs:anyType" />
          <xs:element name="を検証するxml*/persistencexml" type="xs:anyType" />
          <xs:element name="/***s2コンテナ*/container" type="xs:anyType" />
          <xs:element name="*/usedatasourceproxy" type="xs:anyType" />
          <xs:element name="/***デフォルトの永続ユニットプロバイダクラス名*/defaultproviderclassname" type="xs:string" />
          <xs:element name="/***jta用のデフォルトのデータソース名*/defaultjtadatasource" type="xs:string" />
          <xs:element name="/***非jta用のデフォルトのデータソース名*/defaultnonjtadatasource" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymanagerproviderimpl" >
      <xs:sequence>
        <xs:element name="/***このコンポーネントを定義しているs2コンテナ*/container" type="xs:anyType" />
        <xs:element name="/***データソース・ファクトリ*/" type="xs:anyType" />
        <xs:element name="/***デフォルトの{@linkentitymanager}のコンポーネント名*/entitymanagerbasename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectableentitymanagerproxy" >
      <xs:sequence>
        <xs:element name="/***{@link}のインスタンス*/" type="entitymanagerprovider" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceclasstransformerimpl" >
      <xs:sequence>
        <xs:element name="/***トランスフォームした永続クラスをロードする対象から除外するクラスローダのクラス名*/ignoreloaderclassnames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummyentitymanagerdialect" >
      <xs:sequence>
        <xs:element name="/***このインスタンスを管理するマネージャ*/" type="dialectmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpersistenceunitprovider" >
      <xs:sequence>
        <xs:element name="/***永続ユニットマネージャ*/" type="persistenceunitmanager" nillable="true" minOccurs="0" />
        <xs:element name="/***{@link}*/" type="entitydescprovider" nillable="true" minOccurs="0" />
        <xs:element name="/***{@link}*/" type="entityreaderprovider" nillable="true" minOccurs="0" />
        <xs:element name="/***(具象)永続ユニット名*/unitname" type="xs:string" />
        <xs:element name="/***抽象永続ユニット名*/abstractunitname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitinfoimpl" >
      <xs:sequence>
        <xs:element name="/***クラスローダ*/classloader" type="transformclassloader" nillable="true" minOccurs="0" />
        <xs:element name="/***永続ユニットのルート*/persistenceunitroot" type="xs:anyType" />
        <xs:element name="/***永続ユニット名*/persistenceunitname" type="xs:string" />
        <xs:element name="/***トランザクションタイプ*/transactiontype" type="xs:anyType" />
        <xs:element name="/***永続プロバイダのクラス名*/persistenceproviderclassname" type="xs:string" />
        <xs:element name="/***jtaデータソース*/jta" type="xs:anyType" />
        <xs:element name="/***非jtaデータソース*/nonjta" type="xs:anyType" />
        <xs:element name="/***マッピングファイル名のリスト*/mappingfilenames" type="xs:anyType" />
        <xs:element name="/***jarファイルのurlのリスト*/jarfileurls" type="xs:anyType" />
        <xs:element name="/***管理対象となるクラス名のリスト*/managedclassnames" type="xs:anyType" />
        <xs:element name="*/excludeunlistedclasses" type="xs:anyType" />
        <xs:element name="/***プロパティリスト*/" type="xs:anyType" />
        <xs:element name="/***クラストランスファーマのリスト*/transformers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummyentitymanager" >
      <xs:sequence>
        <xs:element name="/***データソース*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jndipersistenceunitprovider" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="jndinames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitmanagerimpl" >
      <xs:sequence>
        <xs:element name="/***なコンテキストマップ*/" type="xs:anyType" />
        <xs:element name="/***コンテキストマップ*/" type="xs:anyType" />
        <xs:element name="*/usecontext" type="xs:anyType" />
        <xs:element name="/***デフォルトの永続ユニット名*/defaultpersistenceunitname" type="xs:string" />
        <xs:element name="/***デフォルトの{@link}*/defaultunitprovider" type="persistenceunitprovider" nillable="true" minOccurs="0" />
        <xs:element name="/***エンティティマネージャのプロバイダ*/" type="entitymanagerprovider" nillable="true" minOccurs="0" />
        <xs:element name="/***ネーミング規約*/convention" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitinforegistryimpl" >
      <xs:sequence>
        <xs:element name="のパス名*/persistence_xml" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="/***永続ユニット情報のファクトリ*/" type="persistenceunitinfofactory" nillable="true" minOccurs="0" />
        <xs:element name="unitinfomap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="txscopedentitymanagerproxy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="/***トランザクションシンクロナイゼーションレジストリ*/tsr" type="xs:anyType" />
        <xs:element name="/***永続マネージャファクトリ*/emf" type="xs:anyType" />
        <xs:element name="/***永続ユニットマネージャ*/pum" type="persistenceunitmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultpersistenceunitprovider" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="containerpersistenceunitprovider" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="/***永続ユニットのコンフィギュレーション*/" type="persistenceunitconfiguration" nillable="true" minOccurs="0" />
          <xs:element name="/***永続ユニット情報のレジストリ*/" type="persistenceunitinforegistry" nillable="true" minOccurs="0" />
          <xs:element name="/***永続クラスのトランスフォーマ*/" type="persistenceclasstransformer" nillable="true" minOccurs="0" />
          <xs:element name="/***永続プロバイダのクラス名*/providerclassname" type="xs:string" />
          <xs:element name="properties" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dialectmanagerimpl" >
      <xs:sequence>
        <xs:element name="dialects" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sejbexception" >
      <xs:complexContent>
       <xs:extension base="ejbexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="messagecode" type="xs:string" />
          <xs:element name="args" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3descfactory" >
      <xs:sequence>
        <xs:element name="initialized" type="xs:anyType" />
        <xs:element name="ejb3descs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3requiresnewinterceptor" >
      <xs:complexContent>
       <xs:extension base="requiresnewinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3transactioncallback" >
      <xs:complexContent>
       <xs:extension base="defaulttransactioncallback">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3requiredinterceptor" >
      <xs:complexContent>
       <xs:extension base="requiredinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3interceptordesc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3desc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3businessmethoddesc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3businessmethoddescimpl" >
      <xs:sequence>
        <xs:element name="/***このビジネスメソッドを含むejb3セッションビーン定義*/" type="ejb3desc" nillable="true" minOccurs="0" />
        <xs:element name="/***このビジネスメソッドの{@link}*/" type="xs:anyType" />
        <xs:element name="/***このビジネスメソッドの{@link}*/" type="xs:anyType" />
        <xs:element name="/***このビジネスメソッドに適用されるインターセプタ定義の{@linklist}*/interceptors" type="ejb3interceptordesc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aroundinvokesupportinterceptor" >
      <xs:sequence>
        <xs:element name="/***{@linkaroundinvoke}で注釈されたメソッド*/aroundinvoke" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invocationcontextimpl" >
      <xs:sequence>
        <xs:element name="/***aopalliance準拠のメソッド呼び出しコンテキスト*/context" type="xs:anyType" />
        <xs:element name="/***ライフサイクルコールバックの場合は{@codetrue}*/lifecyclecallback" type="xs:anyType" />
        <xs:element name="contextdata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3interceptordescimpl" >
      <xs:sequence>
        <xs:element name="/***このインターセプタ定義が適用される{@link}*/" type="ejb3desc" nillable="true" minOccurs="0" />
        <xs:element name="/***インターセプタのクラス*/interceptorclass" type="xs:anyType" />
        <xs:element name="/***このインターセプタが適用されるセッションビーンのビジネスメソッドの{@linklist}*/interceptormethods" type="xs:anyType" />
        <xs:element name="/***{@linkaroundinvoke}で注釈されたインターセプタのメソッド*/postconstructmethods" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3interceptorsupportintertype" >
      <xs:complexContent>
       <xs:extension base="abstractintertype">
         <xs:sequence>
          <xs:element name="/***セッションビーンに適用するejb3インターセプタの{@linklist}*/interceptorclasses" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3descimpl" >
      <xs:sequence>
        <xs:element name="/***セッションビーンのクラス*/beanclass" type="xs:anyType" />
        <xs:element name="/***セッションビーンのクラス名*/beanclassname" type="xs:string" />
        <xs:element name="/***このセッションビーンがステートレスなら{@codetrue}*/stateless" type="xs:anyType" />
        <xs:element name="/***このセッションビーンがステートフルなら{@codetrue}*/stateful" type="xs:anyType" />
        <xs:element name="/***このセッションビーンの名前*/name" type="xs:string" />
        <xs:element name="/***このセッションビーンが実装するビジネスインターフェースの{@linklist}*/businessinterfaces" type="xs:anyType" />
        <xs:element name="/***このセッションビーンがコンテナ管理トランザクションを使用する場合は{@codetrue}*/cmt" type="xs:anyType" />
        <xs:element name="/***このセッションビーンに適用されるインターセプタ定義の{@linklist}*/interceptors" type="ejb3interceptordesc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***このセッションビーンが持つビジネスメソッドの{@linklist}*/businessmethods" type="ejb3businessmethoddesc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***{@linkaroundinvoke}で注釈されたメソッドの{@linklist}*/aroundinvokemethods" type="xs:anyType" />
        <xs:element name="/***{@linkpostconstruct}で注釈されたメソッドの{@linklist}*/postconstructmethods" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3interceptorsupportinterceptor" >
      <xs:sequence>
        <xs:element name="/***ejb3インターセプタのクラス*/interceptorclass" type="xs:anyType" />
        <xs:element name="/***{@linkaroundinvoke}で注釈されたejb3インターセプタのメソッド*/interceptor" type="xs:anyType" />
        <xs:element name="*/interceptor" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodecache" >
      <xs:sequence>
        <xs:element name="volatileinitialized" type="xs:anyType" />
        <xs:element name="nodecache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlbatchupdate" >
      <xs:complexContent>
       <xs:extension base="batchupdate<sqlbatchupdate>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbccontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnmetafactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfileprocedurecall" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jointype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="out" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inout" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="referentialactiontype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="referentialconstraint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultset" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplewhere" >
      <xs:complexContent>
       <xs:extension base="abstractwhere<simplewhere>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="composablewhere" >
      <xs:sequence>
        <xs:element name="/***条件に追加される子供の条件です。*/children" type="where" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***条件を組み立てるためのコンテキストです。*/context" type="composablewherecontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="complexwhere" >
      <xs:complexContent>
       <xs:extension base="abstractwhere<complexwhere>">
         <xs:sequence>
          <xs:element name="/***クライテリアを保持する文字列バッファのリスト*/criterialist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="likeoperator" >
      <xs:complexContent>
       <xs:extension base="singlevalueoperator">
         <xs:sequence>
          <xs:element name="/***エスケープ文字です。*/escapechar" type="xs:string" />
          <xs:element name="です。*/needescape" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="composablewherecontext" >
      <xs:sequence>
        <xs:element name="/***現在のクライテリアを保持する文字列バッファ*/criteriasb" type="xs:anyType" />
        <xs:element name="/***バインド変数のリスト*/paramlist" type="xs:anyType" />
        <xs:element name="/***バインド変数に対応するプロパティ名のリスト*/propertynamelist" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositewhere" >
      <xs:complexContent>
       <xs:extension base="composablewhere">
         <xs:sequence>
          <xs:element name="/***andやorといった演算子です。*/operator" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singlevalueoperator" >
      <xs:complexContent>
       <xs:extension base="composablewhere">
         <xs:sequence>
          <xs:element name="/***条件タイプです。*/" type="conditiontype" nillable="true" minOccurs="0" />
          <xs:element name="/***パラメータのプロパティ名です。*/propertyname" type="xs:anyType" />
          <xs:element name="/***パラメータの値です。*/value" type="xs:anyType" />
          <xs:element name="*/excludeswhitespace" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multivalueoperator" >
      <xs:complexContent>
       <xs:extension base="singlevalueoperator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullablecondition" >
      <xs:complexContent>
       <xs:extension base="abstractentitycondition<condition>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notnullablestringcondition" >
      <xs:complexContent>
       <xs:extension base="abstractentitycondition<condition>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentitycondition" >
      <xs:complexContent>
       <xs:extension base="abstractentitycondition<condition>>">
         <xs:sequence>
          <xs:element name="/***where句を組み立てる{@link}*/where" type="complexwhere" nillable="true" minOccurs="0" />
          <xs:element name="/***このエンティティを表す関連名を含む接頭辞*/prefix" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notnullablecondition" >
      <xs:complexContent>
       <xs:extension base="abstractentitycondition<condition>,">
         <xs:sequence>
          <xs:element name="/***プロパティ名*/propertyname" type="xs:string" />
          <xs:element name="/***このプロパティを持つエンティティの問い合わせ条件*/" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullablestringcondition" >
      <xs:complexContent>
       <xs:extension base="abstractentitycondition<condition>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractwhere" >
      <xs:complexContent>
       <xs:extension base="abstractwhere<t>>">
         <xs:sequence>
          <xs:element name="/***現在のクライテリアを保持する文字列バッファ*/criteriasb" type="xs:anyType" />
          <xs:element name="/***バインド変数のリスト*/paramlist" type="xs:anyType" />
          <xs:element name="/***バインド変数に対応するプロパティ名のリスト*/propertynamelist" type="xs:anyType" />
          <xs:element name="*/excludeswhitespace" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoselect" >
      <xs:complexContent>
       <xs:extension base="select<t,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnmeta" >
      <xs:sequence>
        <xs:element name="/***名前です。*/name" type="xs:string" />
        <xs:element name="/***挿入可能かどうかです。*/insertable" type="xs:anyType" />
        <xs:element name="/***更新可能かどうかです。*/updatable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoinsert" >
      <xs:complexContent>
       <xs:extension base="update<autoinsert<t>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromclause" >
      <xs:sequence>
        <xs:element name="/***sqlです。*/sql" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iterationcallback" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="operations" >
      <xs:complexContent>
       <xs:extension base="proptype>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcmanager" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymetafactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbccontextimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="transactional" type="xs:anyType" />
        <xs:element name="preparedstatementcachesize" type="xs:long" />
        <xs:element name="cursorpreparedstatementcachesize" type="xs:long" />
        <xs:element name="callablestatementcachesize" type="xs:long" />
        <xs:element name="prepared" type="statementcache" nillable="true" minOccurs="0" />
        <xs:element name="cursorprepared" type="statementcache" nillable="true" minOccurs="0" />
        <xs:element name="callable" type="statementcache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcmanagerimpl" >
      <xs:sequence>
        <xs:element name="/***トランザクション同期レジストリです。*/syncregistry" type="xs:anyType" />
        <xs:element name="/***データソースのファクトリです。*/" type="xs:anyType" />
        <xs:element name="/***データソースです。*/" type="xs:anyType" />
        <xs:element name="/***データベースの方言です。*/dialect" type="dbmsdialect" nillable="true" minOccurs="0" />
        <xs:element name="/***エンティティメタデータファクトリです。*/" type="entitymetafactory" nillable="true" minOccurs="0" />
        <xs:element name="/***永続化層の規約です。*/" type="xs:anyType" />
        <xs:element name="/***デフォルトの最大行数です。*/maxrows" type="xs:long" />
        <xs:element name="/***デフォルトのフェッチサイズです。*/fetchsize" type="xs:long" />
        <xs:element name="/***デフォルトのクエリタイムアウトです。*/querytimeout" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcmanagerimplementor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2abstractservice" >
      <xs:sequence>
        <xs:element name="/***jdbcマネージャです。*/" type="jdbcmanager" nillable="true" minOccurs="0" />
        <xs:element name="/***エンティティのクラスです。*/entityclass" type="xs:anyType" />
        <xs:element name="/***sqlファイルのパスのプレフィックスです。*/sqlfilepathprefix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertymeta" >
      <xs:sequence>
        <xs:element name="/***名前です。*/name" type="xs:string" />
        <xs:element name="/***プロパティクラスです。*/propertyclass" type="xs:anyType" />
        <xs:element name="/***フィールドです。*/" type="xs:anyType" />
        <xs:element name="/***カラムメタデータです。*/" type="columnmeta" nillable="true" minOccurs="0" />
        <xs:element name="/***値タイプです。*/" type="xs:anyType" />
        <xs:element name="/***識別子かどうかです。*/id" type="xs:anyType" />
        <xs:element name="/***idを自動生成する方法です。*/" type="xs:anyType" />
        <xs:element name="/***{@linkgenerationtype#identity}で識別子を自動生成するidジェネレータです。*/identity" type="idgenerator" nillable="true" minOccurs="0" />
        <xs:element name="/***{@linkgenerationtype#sequence}で識別子を自動生成するidジェネレータです。*/sequence" type="idgenerator" nillable="true" minOccurs="0" />
        <xs:element name="/***{@linkgenerationtype#table}で識別子を自動生成するidジェネレータです。*/table" type="idgenerator" nillable="true" minOccurs="0" />
        <xs:element name="/***フェッチタイプです。*/" type="xs:anyType" />
        <xs:element name="/***時制の種別です。*/" type="xs:anyType" />
        <xs:element name="/***enumの種別です。*/" type="enumtype" nillable="true" minOccurs="0" />
        <xs:element name="/***バージョン用かどうかです。*/version" type="xs:anyType" />
        <xs:element name="/***一時的かどうかです。*/trnsient" type="xs:anyType" />
        <xs:element name="かどうかです。*/lob" type="xs:anyType" />
        <xs:element name="/***結合カラムメタデータのリストです。*/joincolumnmetalist" type="joincolumnmeta" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***関連タイプです。*/" type="relationshiptype" nillable="true" minOccurs="0" />
        <xs:element name="/***関連の所有者側のプロパティ名です。*/mappedby" type="xs:string" />
        <xs:element name="/***関連クラスです。*/relationshipclass" type="xs:anyType" />
        <xs:element name="/***追加情報のマップです。*/additionalinfomap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfilebatchupdate" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectforupdatetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationshiptype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statementcache" >
      <xs:complexContent>
       <xs:extension base="lruhashmap">
         <xs:sequence>
          <xs:element name="/***/serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytokenizer" >
      <xs:sequence>
        <xs:element name="/***eofをあらわします。*/tt_eof" type="xs:long" />
        <xs:element name="/***単語をあらわします。*/tt_word" type="xs:long" />
        <xs:element name="/***引用文をあらわします。*/tt_quote" type="xs:long" />
        <xs:element name="/***単語、引用文以外をあらわします。*/tt_other" type="xs:long" />
        <xs:element name="str" type="xs:string" />
        <xs:element name="pos" type="xs:long" />
        <xs:element name="nextpos" type="xs:long" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="token" type="xs:string" />
        <xs:element name="type" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="likeutil" >
      <xs:sequence>
        <xs:element name="/***like述語で指定される検索条件中のワイルドカードのパターン*/wildcard_" type="xs:anyType" />
        <xs:element name="/***like述語で指定される検索条件中のワイルドカードを置換するためのパターン*/wildcard_replacement_" type="xs:anyType" />
        <xs:element name="/***like述語で指定される検索条件中のワイルドカード文字をエスケープするための文字*/wildcard_escape_" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="update" >
      <xs:complexContent>
       <xs:extension base="update<s>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnmeta" >
      <xs:sequence>
        <xs:element name="/***外部キーのカラム名です。*/name" type="xs:string" />
        <xs:element name="/***関連テーブルの主キーのカラム名*/referencedcolumnname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keyitems" >
      <xs:sequence>
        <xs:element name="values" type="xs:anyType" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetooneentitymapperimpl" >
      <xs:complexContent>
       <xs:extension base="abstractrelationshipentitymapper">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymapperimpl" >
      <xs:sequence>
        <xs:element name="/***フィールドです。*/" type="xs:anyType" />
        <xs:element name="/***プロパティのインデックスです。*/propertyindex" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractentitymapper" >
      <xs:sequence>
        <xs:element name="/***エンティティクラスです。*/entityclass" type="xs:anyType" />
        <xs:element name="s" type="propertymapper" nillable="true" minOccurs="0" />
        <xs:element name="idindices" type="xs:long" />
        <xs:element name="/***関連エンティティマッパーのリストです。*/relationshipentitymapperlist" type="relationshipentitymapper" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractrelationshipentitymapper" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***関連エンティティのフィールドです。*/" type="xs:anyType" />
          <xs:element name="/***逆側の関連エンティティのフィールドです。*/inverse" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytooneentitymapperimpl" >
      <xs:complexContent>
       <xs:extension base="abstractrelationshipentitymapper">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymapperimpl" >
      <xs:complexContent>
       <xs:extension base="abstractentitymapper">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyentitymapperimpl" >
      <xs:complexContent>
       <xs:extension base="abstractrelationshipentitymapper">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectclause" >
      <xs:sequence>
        <xs:element name="/***sqlです。*/sql" type="xs:anyType" />
        <xs:element name="/***カラム名のエイリアスに使う序数です。*/aliasindex" type="xs:long" />
        <xs:element name="columnaliases" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumtype" >
      <xs:complexContent>
       <xs:extension base="abstractvaluetype">
         <xs:sequence>
          <xs:element name="enumclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumordinaltype" >
      <xs:complexContent>
       <xs:extension base="abstractvaluetype">
         <xs:sequence>
          <xs:element name="enumclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyname" >
      <xs:sequence>
        <xs:element name="/***プロパティの名前です。*/name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dbmsdialect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="intoclause" >
      <xs:sequence>
        <xs:element name="/***into句を組み立てる文字列バッファ*/sql" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autobatchupdate" >
      <xs:complexContent>
       <xs:extension base="batchupdate<autobatchupdate<t>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="modulecall" >
      <xs:complexContent>
       <xs:extension base="modulecall<s>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyclause" >
      <xs:sequence>
        <xs:element name="/***sqlです。*/sql" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqllogger" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autobatchdelete" >
      <xs:complexContent>
       <xs:extension base="batchupdate<autobatchdelete<t>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="functioncall" >
      <xs:complexContent>
       <xs:extension base="functioncall<t,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchupdate" >
      <xs:complexContent>
       <xs:extension base="batchupdate<s>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablemeta" >
      <xs:sequence>
        <xs:element name="/***名前です。*/name" type="xs:string" />
        <xs:element name="/***カタログです。*/catalog" type="xs:string" />
        <xs:element name="/***スキーマです。*/schema" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationshipentitymapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autofunctioncall" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfilefunctioncall" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autobatchupdateimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***udpate文*/update_statement" type="xs:string" />
          <xs:element name="*/includeversion" type="xs:anyType" />
          <xs:element name="/***更新対象とするプロパティ*/includesproperties" type="xs:anyType" />
          <xs:element name="/***更新から除外するプロパティ*/excludesproperties" type="xs:anyType" />
          <xs:element name="/***更新対象となるプロパティメタデータの{@linklist}*/targetproperties" type="propertymeta" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***set句*/" type="setclause" nillable="true" minOccurs="0" />
          <xs:element name="/***where句*/" type="whereclause" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoinsertimpl" >
      <xs:complexContent>
       <xs:extension base="abstractautoupdate<t,">
         <xs:sequence>
          <xs:element name="/***insert文*/insert_statement" type="xs:string" />
          <xs:element name="/***バージョンプロパティの初期値*/initial_version" type="xs:long" />
          <xs:element name="*/excludesnull" type="xs:anyType" />
          <xs:element name="/***挿入対象とするプロパティ*/includesproperties" type="xs:anyType" />
          <xs:element name="/***挿入から除外するプロパティ*/excludesproperties" type="xs:anyType" />
          <xs:element name="/***挿入対象となるプロパティメタデータの{@linklist}*/targetproperties" type="propertymeta" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***into句*/" type="intoclause" nillable="true" minOccurs="0" />
          <xs:element name="/***values句*/" type="valuesclause" nillable="true" minOccurs="0" />
          <xs:element name="*/usegetgeneratedkeys" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractprocedurecall" >
      <xs:complexContent>
       <xs:extension base="procedurecall<s>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfileselectimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***sqlファイルのパスです。*/path" type="xs:string" />
          <xs:element name="/***パラメータです。*/parameter" type="xs:anyType" />
          <xs:element name="/***sqlの解析ノードです。*/" type="xs:anyType" />
          <xs:element name="/***sqlコンテキストです。*/" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autobatchinsertimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***insert文*/insert_statement" type="xs:string" />
          <xs:element name="/***バージョンプロパティの初期値*/initial_version" type="xs:long" />
          <xs:element name="/***挿入対象とするプロパティ*/includesproperties" type="xs:anyType" />
          <xs:element name="/***挿入から除外するプロパティ*/excludesproperties" type="xs:anyType" />
          <xs:element name="/***更新対象となるプロパティメタデータの{@linklist}*/targetproperties" type="propertymeta" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***into句*/" type="intoclause" nillable="true" minOccurs="0" />
          <xs:element name="/***values句*/" type="valuesclause" nillable="true" minOccurs="0" />
          <xs:element name="*/supportbatch" type="xs:anyType" />
          <xs:element name="*/usegetgeneratedkeys" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractautoupdate" >
      <xs:complexContent>
       <xs:extension base="update<s>>">
         <xs:sequence>
          <xs:element name="/***エンティティ*/eniy" type="xs:anyType" />
          <xs:element name="/***エンティティメタデータ*/" type="entitymeta" nillable="true" minOccurs="0" />
          <xs:element name="*/suppresoptimisticlockexception" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlprocedurecallimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractfunctioncall" >
      <xs:complexContent>
       <xs:extension base="functioncall<t,">
         <xs:sequence>
          <xs:element name="/***戻り値のクラス*/resultclass" type="xs:anyType" />
          <xs:element name="*/resultlob" type="xs:anyType" />
          <xs:element name="*/resultlist" type="xs:anyType" />
          <xs:element name="/***戻り値の時制の種別*/result" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractquery" >
      <xs:complexContent>
       <xs:extension base="query<s>>">
         <xs:sequence>
          <xs:element name="/***内部的なjdbcマネージャです。*/jdbcmanager" type="jdbcmanagerimplementor" nillable="true" minOccurs="0" />
          <xs:element name="/***クエリを呼び出すクラスです。*/callerclass" type="xs:anyType" />
          <xs:element name="/***クエリを呼び出すメソッド名です。*/callermethodname" type="xs:string" />
          <xs:element name="/***クエリタイムアウトの秒数です。*/querytimeout" type="xs:long" />
          <xs:element name="/***ログを出力するオブジェクトです。*/" type="xs:anyType" />
          <xs:element name="/***実行されるsql*/executedsql" type="xs:string" />
          <xs:element name="/***パラメータのリストです。*/paramlist" type="param" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="です。*/completed" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlupdateimpl" >
      <xs:complexContent>
       <xs:extension base="abstractquery<sqlupdate>">
         <xs:sequence>
          <xs:element name="empty_params" type="xs:anyType" />
          <xs:element name="paramclasses" type="xs:anyType" />
          <xs:element name="params" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoprocedurecallimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***呼び出すストアドプロシージャの名前*/procedurename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoupdateimpl" >
      <xs:complexContent>
       <xs:extension base="abstractautoupdate<t,">
         <xs:sequence>
          <xs:element name="/***udpate文*/update_statement" type="xs:string" />
          <xs:element name="*/includeversion" type="xs:anyType" />
          <xs:element name="*/excludesnull" type="xs:anyType" />
          <xs:element name="/***更新対象とするプロパティ*/includesproperties" type="xs:anyType" />
          <xs:element name="/***更新から除外するプロパティ*/excludesproperties" type="xs:anyType" />
          <xs:element name="beforestates" type="xs:anyType" />
          <xs:element name="/***更新対象となるプロパティメタデータの{@linklist}*/targetproperties" type="propertymeta" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***set句*/" type="setclause" nillable="true" minOccurs="0" />
          <xs:element name="/***where句*/" type="whereclause" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfunctioncallimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlselectimpl" >
      <xs:complexContent>
       <xs:extension base="abstractsqlselect<t,">
         <xs:sequence>
          <xs:element name="/***sqlです。*/sql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfilefunctioncallimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***sqlファイルのパスです。*/path" type="xs:string" />
          <xs:element name="/***sqlの解析ノードです。*/" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoselectimpl" >
      <xs:complexContent>
       <xs:extension base="abstractselect<t,">
         <xs:sequence>
          <xs:element name="/***結合メタデータのリストです。*/joinmetalist" type="joinmeta" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***テーブルのインデックスです。*/tableindex" type="xs:long" />
          <xs:element name="tablealiasmap" type="xs:anyType" />
          <xs:element name="entitymetamap" type="xs:anyType" />
          <xs:element name="/***エンティティ名です。*/entityname" type="xs:string" />
          <xs:element name="/***select句です。*/" type="selectclause" nillable="true" minOccurs="0" />
          <xs:element name="/***from句です。*/" type="fromclause" nillable="true" minOccurs="0" />
          <xs:element name="/***where句です。*/" type="whereclause" nillable="true" minOccurs="0" />
          <xs:element name="/***orderby句です。*/" type="orderbyclause" nillable="true" minOccurs="0" />
          <xs:element name="/***ソート順です。*/orderby" type="xs:string" />
          <xs:element name="/***select～forupdateのsql文字列です。*/forupdate" type="xs:string" />
          <xs:element name="/***select～forupdateのタイプです。*/forupdatetype" type="selectforupdatetype" nillable="true" minOccurs="0" />
          <xs:element name="forupdatetargets" type="xs:anyType" />
          <xs:element name="/***select～forupdateでの待機時間(秒単位)です。*/forupdatewaitseconds" type="xs:long" />
          <xs:element name="/***eagerフェッチするプロパティです。*/eagerproperties" type="xs:anyType" />
          <xs:element name="/***ヒントです。*/hint" type="xs:string" />
          <xs:element name="/***値タイプのリストです。*/valuetypelist" type="xs:anyType" />
          <xs:element name="/***selectリストのインデックスです。*/selectlistindex" type="xs:long" />
          <xs:element name="entitymappermap" type="xs:anyType" />
          <xs:element name="/***where句のパラメータです。*/whereparams" type="xs:anyType" />
          <xs:element name="conditions" type="xs:anyType" />
          <xs:element name="/***クライテリアです。*/criteria" type="xs:string" />
          <xs:element name="criteriaparams" type="xs:anyType" />
          <xs:element name="criteriapropertynames" type="xs:string" />
          <xs:element name="/***idプロパティのメタデータのリストです。*/idpropertymetalist" type="propertymeta" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="idproperties" type="xs:anyType" />
          <xs:element name="/***バージョンプロパティのメタデータです。*/version" type="propertymeta" nillable="true" minOccurs="0" />
          <xs:element name="/***バージョンプロパティの値です。*/versionproperty" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autobatchdeleteimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***delete文*/delete_statement" type="xs:string" />
          <xs:element name="*/ignoreversion" type="xs:anyType" />
          <xs:element name="/***where句*/" type="whereclause" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractautobatchupdate" >
      <xs:complexContent>
       <xs:extension base="batchupdate<s>>">
         <xs:sequence>
          <xs:element name="/***エンティティのリスト*/entities" type="xs:anyType" />
          <xs:element name="/***エンティティメタデータ*/" type="entitymeta" nillable="true" minOccurs="0" />
          <xs:element name="/***バッチサイズ*/batchsize" type="xs:long" />
          <xs:element name="*/suppresoptimisticlockexception" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfileupdateimpl" >
      <xs:complexContent>
       <xs:extension base="abstractquery<sqlfileupdate>">
         <xs:sequence>
          <xs:element name="/***sqlファイルのパスです。*/path" type="xs:string" />
          <xs:element name="/***パラメータです。*/parameter" type="xs:anyType" />
          <xs:element name="/***sqlの解析ノードです。*/" type="xs:anyType" />
          <xs:element name="/***sqlコンテキストです。*/" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="param" >
      <xs:sequence>
        <xs:element name="/***パラメータの値です。*/value" type="xs:anyType" />
        <xs:element name="/***パラメータのクラスです。*/paramclass" type="xs:anyType" />
        <xs:element name="/***パラメータのタイプです。*/" type="paramtype" nillable="true" minOccurs="0" />
        <xs:element name="/***値タイプです。*/" type="xs:anyType" />
        <xs:element name="/***フィールドです。*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfileprocedurecallimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***sqlファイルのパスです。*/path" type="xs:string" />
          <xs:element name="/***sqlの解析ノードです。*/" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlbatchupdateimpl" >
      <xs:complexContent>
       <xs:extension base="abstractquery<sqlbatchupdate>">
         <xs:sequence>
          <xs:element name="/***バッチサイズ*/batchsize" type="xs:long" />
          <xs:element name="paramclasses" type="xs:anyType" />
          <xs:element name="/***パラメータの配列のリストです。*/paramslist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractselect" >
      <xs:complexContent>
       <xs:extension base="select<t,">
         <xs:sequence>
          <xs:element name="/***ベースクラスです。*/baseclass" type="xs:anyType" />
          <xs:element name="/***最大行数です。*/maxrows" type="xs:long" />
          <xs:element name="/***フェッチ数です。*/fetchsize" type="xs:long" />
          <xs:element name="/***オフセットです。*/offset" type="xs:long" />
          <xs:element name="/***リミットです。*/limit" type="xs:long" />
          <xs:element name="です。*/disallownoresult" type="xs:anyType" />
          <xs:element name="です。*/resultlob" type="xs:anyType" />
          <xs:element name="/***戻り値の時制の種別です。*/result" type="xs:anyType" />
          <xs:element name="*/count" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractmodulecall" >
      <xs:complexContent>
       <xs:extension base="modulecall<s>>">
         <xs:sequence>
          <xs:element name="*/initialized" type="xs:anyType" />
          <xs:element name="paramdesccache" type="xs:anyType" />
          <xs:element name="/***最大行数*/maxrows" type="xs:long" />
          <xs:element name="/***フェッチ数*/fetchsize" type="xs:long" />
          <xs:element name="/***パラメータ*/parameter" type="xs:anyType" />
          <xs:element name="パラメータにマッピングしない場合のパラメータのリスト*/nonparamlist" type="param" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="*/functioncall" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfilebatchupdateimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***sqlファイルのパスです。*/path" type="xs:string" />
          <xs:element name="/***パラメータの配列のリストです。*/parameterlist" type="xs:anyType" />
          <xs:element name="/***バッチサイズ*/batchsize" type="xs:long" />
          <xs:element name="/***sqlの解析ノードです。*/" type="xs:anyType" />
          <xs:element name="/***sqlコンテキストです。*/" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autofunctioncallimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***呼び出すストアドファンクションの名前*/functionname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsqlselect" >
      <xs:complexContent>
       <xs:extension base="select<t,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autodeleteimpl" >
      <xs:complexContent>
       <xs:extension base="abstractautoupdate<t,">
         <xs:sequence>
          <xs:element name="/***delete文*/delete_statement" type="xs:string" />
          <xs:element name="*/ignoreversion" type="xs:anyType" />
          <xs:element name="/***where句*/" type="whereclause" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlupdate" >
      <xs:complexContent>
       <xs:extension base="update<sqlupdate>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyitem" >
      <xs:sequence>
        <xs:element name="/***sqlのフラグメントです。*/sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paramtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfileupdate" >
      <xs:complexContent>
       <xs:extension base="update<sqlfileupdate>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autobatchinsert" >
      <xs:complexContent>
       <xs:extension base="batchupdate<autobatchinsert<t>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablemetafactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statementhandler" >
      <xs:complexContent>
       <xs:extension base="statement>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditiontype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlselect" >
      <xs:complexContent>
       <xs:extension base="select<t,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymetafactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymeta" >
      <xs:sequence>
        <xs:element name="/***名前です。*/name" type="xs:string" />
        <xs:element name="/***エンティティクラスです。*/entityclass" type="xs:anyType" />
        <xs:element name="/***テーブルメタデータです。*/" type="tablemeta" nillable="true" minOccurs="0" />
        <xs:element name="/***プロパティメタデータの配列マップです。*/propertymetamap" type="xs:anyType" />
        <xs:element name="/***追加情報の配列マップです。*/additionalinfomap" type="xs:anyType" />
        <xs:element name="/***識別子になっているプロパティメタデータのリストです。*/idpropertymetalist" type="propertymeta" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***バージョンを表すプロパティメタデータです。*/version" type="propertymeta" nillable="true" minOccurs="0" />
        <xs:element name="/***mappedbyで注釈されているプロパティメタデータのマップです。*/mappedbypropertymetamap" type="xs:anyType" />
        <xs:element name="/***カラム名をキーにしたプロパティメタデータの配列マップです。*/columnpropertymetamap" type="xs:anyType" />
        <xs:element name="/***関連が解決されたかどうかです。*/volatilerelationshipresolved" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfileselect" >
      <xs:complexContent>
       <xs:extension base="select<t,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymetafactoryimpl" >
      <xs:sequence>
        <xs:element name="/***デフォルトの{@link}です。*/default_sequence_generator" type="xs:anyType" />
        <xs:element name="/***デフォルトの{@link}です。*/default_table_generator" type="xs:anyType" />
        <xs:element name="valuetypes" type="xs:anyType" />
        <xs:element name="/***カラムメタデータファクトリです。*/" type="columnmetafactory" nillable="true" minOccurs="0" />
        <xs:element name="/***永続化層の命名規約です。*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymetafactoryimpl" >
      <xs:sequence>
        <xs:element name="entitymetamap" type="xs:anyType" />
        <xs:element name="/***テーブルメタデータのファクトリです。*/" type="tablemetafactory" nillable="true" minOccurs="0" />
        <xs:element name="/***プロパティメタデータのファクトリです。*/" type="propertymetafactory" nillable="true" minOccurs="0" />
        <xs:element name="/***初期化されたかどうかです。*/volatileinitialized" type="xs:anyType" />
        <xs:element name="/***永続化層の規約です。*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnmetafactoryimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablemetafactoryimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinmeta" >
      <xs:sequence>
        <xs:element name="/***結合名です。*/name" type="xs:string" />
        <xs:element name="/***結合タイプです。*/" type="jointype" nillable="true" minOccurs="0" />
        <xs:element name="/***フェッチするかどうかです。*/fetch" type="xs:anyType" />
        <xs:element name="/***付加的な結合条件です。*/condition" type="xs:string" />
        <xs:element name="conditionparams" type="xs:anyType" />
        <xs:element name="conditionpropertynames" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="select" >
      <xs:complexContent>
       <xs:extension base="select<t,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="temporalparameter" >
      <xs:sequence>
        <xs:element name="/***値*/value" type="xs:anyType" />
        <xs:element name="/***時制のクラス*/temporalclass" type="xs:anyType" />
        <xs:element name="/***時制の種別*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobparameter" >
      <xs:sequence>
        <xs:element name="/***値*/value" type="xs:anyType" />
        <xs:element name="/***ラージオブジェクトのクラス*/lobclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="query" >
      <xs:complexContent>
       <xs:extension base="query<s>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedbynotidenticalruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="mappedby" type="xs:string" />
          <xs:element name="entityclass" type="xs:anyType" />
          <xs:element name="inverserelationshipclass" type="xs:anyType" />
          <xs:element name="inversepropertyname" type="xs:string" />
          <xs:element name="inversepropertyclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsupportedrelationshipruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonefknotfoundruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="foreignkey" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="soptimisticlockexception" >
      <xs:complexContent>
       <xs:extension base="optimisticlockexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bothmappedbyandjoincolumnruntimeexception" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsupportedpropertytyperuntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="propertyclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionpropertynotexistsruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idpropertynotassignedruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***エンティティ名*/entityname" type="xs:string" />
          <xs:element name="/***識別子のプロパティ名*/propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationshipnotentityruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="relationshipclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identitygeneratornotsupportedruntimeexception" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***エンティティ名*/entityname" type="xs:string" />
          <xs:element name="/***識別子のプロパティ名*/propertyname" type="xs:string" />
          <xs:element name="/***dbms名*/dbmsname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="referencedcolumnnamenotfoundruntimeexception" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="inverseentityname" type="xs:string" />
          <xs:element name="primarykey" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldnotgenericsruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnnameandreferencedcolumnnamemandatoryruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="index" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="illegalparamsizeruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="paramsize" type="xs:long" />
          <xs:element name="paramclasssize" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinduplicatedruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="join" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basejoinnotfoundruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="join" type="xs:string" />
          <xs:element name="basejoin" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanynotlistruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singlequotenotcloseruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="target" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonentityruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="targetclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsupportedinheritanceruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertynotfoundruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="temporaltypenotspecifiedruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitycolumnnotfoundruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="columnname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyfetchspecifiedruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***エンティティ名*/entityname" type="xs:string" />
          <xs:element name="/***識別子のプロパティ名*/propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytwiceexecutionruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="queryclass" type="xs:anyType" />
          <xs:element name="methodname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sentityexistsexception" >
      <xs:complexContent>
       <xs:extension base="entityexistsexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***一意制約違反となったsql*/sql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonuniqueidruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="illegalidpropertysizeruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="expectedsize" type="xs:long" />
          <xs:element name="actualsize" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullbindvariableruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnduplicatedruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="propertyname2" type="xs:string" />
          <xs:element name="columnname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonbooleanisnullconditionruntimeexception" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="conditionname" type="xs:string" />
          <xs:element name="valueclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyduplicatedruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnautoconfigurationruntimeexception" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="inverseentityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noidpropertyruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***エンティティ名*/entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idgenerationfailedruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***エンティティ名*/entityname" type="xs:string" />
          <xs:element name="/***識別子のプロパティ名*/propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionpropertynotnumberruntimeexception" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***エンティティ名*/entityname" type="xs:string" />
          <xs:element name="/***識別子のプロパティ名*/propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencegeneratornotsupportedruntimeexception" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***エンティティ名*/entityname" type="xs:string" />
          <xs:element name="/***識別子のプロパティ名*/propertyname" type="xs:string" />
          <xs:element name="/***dbms名*/dbmsname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonarrayinconditionruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="conditionname" type="xs:string" />
          <xs:element name="valueclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanynotgenericsruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedbymandatoryruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idgeneratornotfoundruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***エンティティ名*/entityname" type="xs:string" />
          <xs:element name="/***識別子のプロパティ名*/propertyname" type="xs:string" />
          <xs:element name="/***ジェネレータ名*/generatorname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbynotfoundruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="sql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldduplicatedruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedbypropertynotfoundruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="mappedby" type="xs:string" />
          <xs:element name="inverserelationshipclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonefknotfoundruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="foreignkey" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnnotfoundruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="snoresultexception" >
      <xs:complexContent>
       <xs:extension base="noresultexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="sql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="snonuniqueresultexception" >
      <xs:complexContent>
       <xs:extension base="nonuniqueresultexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="sql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setclause" >
      <xs:sequence>
        <xs:element name="/***set句を組み立てる文字列バッファ*/sql" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iterationcontext" >
      <xs:sequence>
        <xs:element name="*/exit" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceidgenerator" >
      <xs:complexContent>
       <xs:extension base="abstractpreallocateidgenerator">
         <xs:sequence>
          <xs:element name="/***シーケンスの名前*/sequencename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpreallocateidgenerator" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***{@link#idcontextmap}に対するデフォルトのキー*/default_id_context_key" type="xs:string" />
          <xs:element name="/***割り当てサイズ*/allocationsize" type="xs:long" />
          <xs:element name="idcontextmap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractidgenerator" >
      <xs:sequence>
        <xs:element name="/***エンティティメタデータ*/" type="entitymeta" nillable="true" minOccurs="0" />
        <xs:element name="/***プロパティメタデータ*/" type="propertymeta" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identityidgenerator" >
      <xs:complexContent>
       <xs:extension base="abstractidgenerator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tableidgenerator" >
      <xs:complexContent>
       <xs:extension base="abstractpreallocateidgenerator">
         <xs:sequence>
          <xs:element name="/***デフォルトの採番テーブル名*/default_table" type="xs:string" />
          <xs:element name="/***デフォルトの採番テーブルの識別子のカラム名*/default_pk_column_name" type="xs:string" />
          <xs:element name="/***デフォルトの採番テーブルの値のカラム名*/default_value_column_name" type="xs:string" />
          <xs:element name="/***識別子に付けられたアノテーション*/" type="xs:anyType" />
          <xs:element name="/***採番テーブルのカタログ名*/catalog" type="xs:string" />
          <xs:element name="/***採番テーブルのスキーマ名*/schema" type="xs:string" />
          <xs:element name="/***採番テーブル名*/table" type="xs:string" />
          <xs:element name="/***採番テーブルの識別子のカラム名*/pkcolumnname" type="xs:string" />
          <xs:element name="/***採番テーブルの識別子の値*/pkcolumnvalue" type="xs:string" />
          <xs:element name="/***採番テーブルの値のカラム名*/valuecolumnname" type="xs:string" />
          <xs:element name="/***採番テーブルを更新するsql*/updatesql" type="xs:string" />
          <xs:element name="/***採番テーブルから値を取得するするsql*/selectsql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="where" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="whereclause" >
      <xs:sequence>
        <xs:element name="/***whereのキーワードです。*/where_keyword" type="xs:string" />
        <xs:element name="/***andのキーワードです。*/and_keyword" type="xs:string" />
        <xs:element name="/***sqlです。*/sql" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectiterationresultsethandler" >
      <xs:sequence>
        <xs:element name="/***値タイプ*/" type="xs:anyType" />
        <xs:element name="/***リミット*/limit" type="xs:long" />
        <xs:element name="/***反復コールバック*/callback" type="iterationcallback" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanautoresultsethandler" >
      <xs:complexContent>
       <xs:extension base="abstractbeanautoresultsethandler">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbeanautoresultsethandler" >
      <xs:sequence>
        <xs:element name="s" type="xs:anyType" />
        <xs:element name="/***エンティティマッパーです。*/" type="entitymapper" nillable="true" minOccurs="0" />
        <xs:element name="/***sqlです。*/sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanlistautoresultsethandler" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***リミットです。*/limit" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectlistresultsethandler" >
      <xs:sequence>
        <xs:element name="/***値タイプです。*/" type="xs:anyType" />
        <xs:element name="/***リミットです。*/limit" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beaniterationautoresultsethandler" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***リミット*/limit" type="xs:long" />
          <xs:element name="/***反復コールバック*/callback" type="iterationcallback" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapresultsethandler" >
      <xs:complexContent>
       <xs:extension base="abstractmapresultsethandler">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanresultsethandler" >
      <xs:complexContent>
       <xs:extension base="abstractbeanresultsethandler">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="maplistresultsethandler" >
      <xs:complexContent>
       <xs:extension base="abstractmapresultsethandler">
         <xs:sequence>
          <xs:element name="/***リミットです。*/limit" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectresultsethandler" >
      <xs:sequence>
        <xs:element name="/***値タイプです。*/" type="xs:anyType" />
        <xs:element name="/***sqlです。*/sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapiterationresultsethandler" >
      <xs:complexContent>
       <xs:extension base="abstractmapresultsethandler">
         <xs:sequence>
          <xs:element name="/***リミット*/limit" type="xs:long" />
          <xs:element name="/***反復コールバック*/callback" type="iterationcallback" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beaniterationresultsethandler" >
      <xs:complexContent>
       <xs:extension base="abstractbeanresultsethandler">
         <xs:sequence>
          <xs:element name="/***リミット*/limit" type="xs:long" />
          <xs:element name="/***反復コールバック*/callback" type="iterationcallback" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanlistresultsethandler" >
      <xs:complexContent>
       <xs:extension base="abstractbeanresultsethandler">
         <xs:sequence>
          <xs:element name="/***リミットです。*/limit" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbeanresultsethandler" >
      <xs:sequence>
        <xs:element name="/***beanクラスです。*/beanclass" type="xs:anyType" />
        <xs:element name="/***bean記述です。*/" type="xs:anyType" />
        <xs:element name="/***データベースの方言です。*/dialect" type="dbmsdialect" nillable="true" minOccurs="0" />
        <xs:element name="/***sqlです。*/sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractmapresultsethandler" >
      <xs:complexContent>
       <xs:extension base="map>">
         <xs:sequence>
          <xs:element name="/***デフォルトのマップの実装クラスです。*/default_map_class" type="xs:anyType" />
          <xs:element name="/***マップクラスです。*/mapclass" type="xs:anyType" />
          <xs:element name="/***データベースの方言です。*/dialect" type="dbmsdialect" nillable="true" minOccurs="0" />
          <xs:element name="/***永続化層の規約です。*/" type="xs:anyType" />
          <xs:element name="/***sqlです。*/sql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoprocedurecall" >
      <xs:complexContent>
       <xs:extension base="procedurecall<autoprocedurecall>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="procedurecall" >
      <xs:complexContent>
       <xs:extension base="procedurecall<s>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlprocedurecall" >
      <xs:complexContent>
       <xs:extension base="procedurecall<sqlprocedurecall>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfunctioncall" >
      <xs:complexContent>
       <xs:extension base="functioncall<t,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappingcontext" >
      <xs:sequence>
        <xs:element name="cache" type="xs:anyType" />
        <xs:element name="doneentitymap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertymapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autodelete" >
      <xs:complexContent>
       <xs:extension base="update<autodelete<t>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="maxdbdialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="h2dialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
          <xs:element name="/***一意制約違反を表す例外コード*/uniqueconstraviolationcode" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybasedialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqldialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
          <xs:element name="/***一意制約違反を表す例外コード*/uniqueconstraintviolationcode" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mssql2005dialect" >
      <xs:complexContent>
       <xs:extension base="mssqldialect">
         <xs:sequence>
          <xs:element name="/***一意制約違反を表す例外コード*/uniqueconstraviolationcode" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hsqldialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
          <xs:element name="/***一意制約違反を表す例外コード*/uniqueconstraviolationcode" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2390dialect" >
      <xs:complexContent>
       <xs:extension base="db2dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2400dialect" >
      <xs:complexContent>
       <xs:extension base="db2390dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interbasedialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2dialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
          <xs:element name="/***一意制約違反を表すsqlステート*/uniqueconstraintviolationcode" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mssqldialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standarddialect" >
      <xs:sequence>
        <xs:element name="/***{@linkentityexistsexception}に該当するsqlステートです。*/entityexistsexceptionstatecode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="firebirddialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgredialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
          <xs:element name="/***一意制約違反を表すsqlステート*/uniqueconstraintviolationcode" type="xs:string" />
          <xs:element name="/***blob用の値タイプです。*/blob_type" type="xs:anyType" />
          <xs:element name="/***オブジェクトをシリアライズしたblob用の値タイプです。*/serializable_blob_type" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postgre81dialect" >
      <xs:complexContent>
       <xs:extension base="postgredialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracledialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
          <xs:element name="/***一意制約違反を表す例外コード*/uniqueconstraviolationcode" type="xs:long" />
          <xs:element name="supportstoint" type="xs:anyType" />
          <xs:element name="supportswavedashtofullwidthtilde" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derbydialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
          <xs:element name="/***一意制約違反を表すsqlステート*/uniqueconstraintviolationcode" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuesclause" >
      <xs:sequence>
        <xs:element name="/***values句を組み立てる文字列バッファ*/sql" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoupdate" >
      <xs:complexContent>
       <xs:extension base="update<autoupdate<t>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notsupportedtx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mandatorytx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nevertx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requiresnewtx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requiredtx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timepattern" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conversionrule" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="excludewhitespace" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="destprefix" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationreader" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="/***s2コンテナ*/container" type="xs:anyType" />
          <xs:element name="/***後続の{@link}*/next" type="xs:anyType" />
          <xs:element name="converterscache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datepattern" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sourceprefix" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="excludenull" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestamppattern" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dxoconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dxotigerutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigersupportimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumconverter" >
      <xs:complexContent>
       <xs:extension base="abstractconverter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
</xs:schema> 