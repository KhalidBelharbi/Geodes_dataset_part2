ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Attribut>> Role.id:int =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.role:String =>=>=> RelationalSchema.Column>> role.role;
ClassDiagram.Attribut>> User.id:int =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.active:int =>=>=> RelationalSchema.Column>> user.active;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<role>: user_role(user_id:User [PK] #FK to User,role_id:set<role> [PK] #FK to set<role>);
