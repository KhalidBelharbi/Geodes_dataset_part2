ClassDiagram.Class>> BookEntity =>=>=> RelationalSchema.Table>> bookentity;
ClassDiagram.Class>> AuthorEntity =>=>=> RelationalSchema.Table>> authorentity;
ClassDiagram.Class>> BookShelfEntity =>=>=> RelationalSchema.Table>> bookshelfentity;
ClassDiagram.Class>> PublisherEntity =>=>=> RelationalSchema.Table>> publisherentity;
ClassDiagram.Class>> TagEntity =>=>=> RelationalSchema.Table>> tagentity;
ClassDiagram.Attribut>> BookEntity.id:long =>=>=> RelationalSchema.Column>> bookentity.id PRIMARY KEY;
ClassDiagram.Attribut>> BookEntity.name:String =>=>=> RelationalSchema.Column>> bookentity.name;
ClassDiagram.Attribut>> BookEntity.isbn:String =>=>=> RelationalSchema.Column>> bookentity.isbn;
ClassDiagram.Attribut>> BookEntity.overview:String =>=>=> RelationalSchema.Column>> bookentity.overview;
ClassDiagram.Attribut>> BookEntity.ofpublish:Date =>=>=> RelationalSchema.Column>> bookentity.ofpublish;
ClassDiagram.Attribut>> BookEntity.ofreprint:Date =>=>=> RelationalSchema.Column>> bookentity.ofreprint;
ClassDiagram.Attribut>> BookEntity.acknowledgement:String =>=>=> RelationalSchema.Column>> bookentity.acknowledgement;
ClassDiagram.Attribut>> BookEntity.copyright:String =>=>=> RelationalSchema.Column>> bookentity.copyright;
ClassDiagram.Attribut>> BookEntity.fact:String =>=>=> RelationalSchema.Column>> bookentity.fact;
ClassDiagram.Attribut>> BookEntity.printedby:String =>=>=> RelationalSchema.Column>> bookentity.printedby;
ClassDiagram.Attribut>> BookEntity.coverdesigner:String =>=>=> RelationalSchema.Column>> bookentity.coverdesigner;
ClassDiagram.Attribut>> BookEntity.coverphotourl:String =>=>=> RelationalSchema.Column>> bookentity.coverphotourl;
ClassDiagram.Attribut>> BookEntity.price:double =>=>=> RelationalSchema.Column>> bookentity.price;
ClassDiagram.Attribut>> AuthorEntity.id:long =>=>=> RelationalSchema.Column>> authorentity.id PRIMARY KEY;
ClassDiagram.Attribut>> AuthorEntity.name:String =>=>=> RelationalSchema.Column>> authorentity.name;
ClassDiagram.Attribut>> AuthorEntity.email:String =>=>=> RelationalSchema.Column>> authorentity.email;
ClassDiagram.Attribut>> AuthorEntity.mobile:String =>=>=> RelationalSchema.Column>> authorentity.mobile;
ClassDiagram.Attribut>> AuthorEntity.address:String =>=>=> RelationalSchema.Column>> authorentity.address;
ClassDiagram.Attribut>> AuthorEntity.birth:Date =>=>=> RelationalSchema.Column>> authorentity.birth;
ClassDiagram.Attribut>> AuthorEntity.country:String =>=>=> RelationalSchema.Column>> authorentity.country;
ClassDiagram.Attribut>> AuthorEntity.biography:String =>=>=> RelationalSchema.Column>> authorentity.biography;
ClassDiagram.Attribut>> AuthorEntity.background:String =>=>=> RelationalSchema.Column>> authorentity.background;
ClassDiagram.Attribut>> AuthorEntity.nickname:String =>=>=> RelationalSchema.Column>> authorentity.nickname;
ClassDiagram.Attribut>> AuthorEntity.photourl:String =>=>=> RelationalSchema.Column>> authorentity.photourl;
ClassDiagram.Attribut>> BookShelfEntity.id:long =>=>=> RelationalSchema.Column>> bookshelfentity.id PRIMARY KEY;
ClassDiagram.Attribut>> BookShelfEntity.name:String =>=>=> RelationalSchema.Column>> bookshelfentity.name;
ClassDiagram.Attribut>> BookShelfEntity.category:String =>=>=> RelationalSchema.Column>> bookshelfentity.category;
ClassDiagram.Attribut>> BookShelfEntity.capability:long =>=>=> RelationalSchema.Column>> bookshelfentity.capability;
ClassDiagram.Attribut>> PublisherEntity.id:long =>=>=> RelationalSchema.Column>> publisherentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PublisherEntity.name:String =>=>=> RelationalSchema.Column>> publisherentity.name;
ClassDiagram.Attribut>> PublisherEntity.address:String =>=>=> RelationalSchema.Column>> publisherentity.address;
ClassDiagram.Attribut>> PublisherEntity.mobile:String =>=>=> RelationalSchema.Column>> publisherentity.mobile;
ClassDiagram.Attribut>> PublisherEntity.contactpersonname:String =>=>=> RelationalSchema.Column>> publisherentity.contactpersonname;
ClassDiagram.Attribut>> PublisherEntity.contactpersonmobile:String =>=>=> RelationalSchema.Column>> publisherentity.contactpersonmobile;
ClassDiagram.Attribut>> PublisherEntity.website:String =>=>=> RelationalSchema.Column>> publisherentity.website;
ClassDiagram.Attribut>> PublisherEntity.email:String =>=>=> RelationalSchema.Column>> publisherentity.email;
ClassDiagram.Attribut>> PublisherEntity.facebookpage:String =>=>=> RelationalSchema.Column>> publisherentity.facebookpage;
ClassDiagram.Attribut>> PublisherEntity.about:String =>=>=> RelationalSchema.Column>> publisherentity.about;
ClassDiagram.Attribut>> PublisherEntity.background:String =>=>=> RelationalSchema.Column>> publisherentity.background;
ClassDiagram.Attribut>> PublisherEntity.photourl:String =>=>=> RelationalSchema.Column>> publisherentity.photourl;
ClassDiagram.Attribut>> TagEntity.id:long =>=>=> RelationalSchema.Column>> tagentity.id PRIMARY KEY;
ClassDiagram.Attribut>> TagEntity.name:String =>=>=> RelationalSchema.Column>> tagentity.name;
ClassDiagram.Attribut>> TagEntity.category:String =>=>=> RelationalSchema.Column>> tagentity.category;
Many-To-Many relationship between ClassDiagram.Class>>BookEntity  and ClassDiagram.Class>>list<publisherentity>: book_publisher(book_id:BookEntity [PK] #FK to BookEntity,publisher_id:list<publisherentity> [PK] #FK to list<publisherentity>);
Many-To-Many relationship between ClassDiagram.Class>>BookEntity  and ClassDiagram.Class>>list<authorentity>: book_publisher(book_id:BookEntity [PK] #FK to BookEntity,publisher_id:list<publisherentity> [PK] #FK to list<publisherentity>);book_author(book_id:BookEntity [PK] #FK to BookEntity,author_id:list<authorentity> [PK] #FK to list<authorentity>);
Many-To-Many relationship between ClassDiagram.Class>>BookEntity  and ClassDiagram.Class>>list<tagentity>: book_publisher(book_id:BookEntity [PK] #FK to BookEntity,publisher_id:list<publisherentity> [PK] #FK to list<publisherentity>);book_author(book_id:BookEntity [PK] #FK to BookEntity,author_id:list<authorentity> [PK] #FK to list<authorentity>);book_tag(book_id:BookEntity [PK] #FK to BookEntity,tag_id:list<tagentity> [PK] #FK to list<tagentity>);
