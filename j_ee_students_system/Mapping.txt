ClassDiagram.Class>> Lecturer =>=>=> RelationalSchema.Table>> lecturer;
ClassDiagram.Class>> AssignmentSolution =>=>=> RelationalSchema.Table>> assignmentsolution;
ClassDiagram.Class>> UserRight =>=>=> RelationalSchema.Table>> userright;
ClassDiagram.Class>> Discipline =>=>=> RelationalSchema.Table>> discipline;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Speciality =>=>=> RelationalSchema.Table>> speciality;
ClassDiagram.Class>> Degree =>=>=> RelationalSchema.Table>> degree;
ClassDiagram.Class>> UserRole =>=>=> RelationalSchema.Table>> userrole;
ClassDiagram.Class>> Assignment =>=>=> RelationalSchema.Table>> assignment;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Attribut>> Lecturer.serialversionuid:long =>=>=> RelationalSchema.Column>> lecturer.serialversionuid;
ClassDiagram.Attribut>> Lecturer.information:String =>=>=> RelationalSchema.Column>> lecturer.information;
ClassDiagram.Attribut>> Lecturer.max_information_size:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> AssignmentSolution.serialversionuid:long =>=>=> RelationalSchema.Column>> assignmentsolution.serialversionuid;
ClassDiagram.Attribut>> AssignmentSolution.id:Long =>=>=> RelationalSchema.Column>> assignmentsolution.id PRIMARY KEY;
ClassDiagram.Attribut>> AssignmentSolution.creationtime:Date =>=>=> RelationalSchema.Column>> assignmentsolution.creationtime;
ClassDiagram.Attribut>> AssignmentSolution.timesubmitted:Date =>=>=> RelationalSchema.Column>> assignmentsolution.timesubmitted;
ClassDiagram.Attribut>> AssignmentSolution.solutiontext:String =>=>=> RelationalSchema.Column>> assignmentsolution.solutiontext;
ClassDiagram.Attribut>> AssignmentSolution.filename:String =>=>=> RelationalSchema.Column>> assignmentsolution.filename;
ClassDiagram.Attribut>> AssignmentSolution.mark:Double =>=>=> RelationalSchema.Column>> assignmentsolution.mark;
ClassDiagram.Attribut>> AssignmentSolution.max_file_name_size:int =>=>=> RelationalSchema.Column>> assignmentsolution.max_file_name_size;
ClassDiagram.Attribut>> UserRight.serialversionuid:long =>=>=> RelationalSchema.Column>> userright.serialversionuid;
ClassDiagram.Attribut>> UserRight.rightname:String =>=>=> RelationalSchema.Column>> userright.rightname PRIMARY KEY;
ClassDiagram.Attribut>> Discipline.serialversionuid:long =>=>=> RelationalSchema.Column>> discipline.serialversionuid;
ClassDiagram.Attribut>> Discipline.id:Long =>=>=> RelationalSchema.Column>> discipline.id PRIMARY KEY;
ClassDiagram.Attribut>> Discipline.disciplinename:String =>=>=> RelationalSchema.Column>> discipline.disciplinename;
ClassDiagram.Attribut>> Discipline.min_discipline_name_size:int =>=>=> RelationalSchema.Column>> discipline.min_discipline_name_size;
ClassDiagram.Attribut>> Discipline.max_discipline_name_size:int =>=>=> RelationalSchema.Column>> discipline.max_discipline_name_size;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.GeneratedName:PersonName =>=>=> RelationalSchema.Column>> user.GeneratedName;
ClassDiagram.Attribut>> User.isactivated:boolean =>=>=> RelationalSchema.Column>> user.isactivated;
ClassDiagram.Attribut>> User.min_username_size:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.min_password_size:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.min_email_size:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.max_username_size:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.max_password_size:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.max_email_size:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.max_user_type_size:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.number_of_user_types:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Speciality.serialversionuid:long =>=>=> RelationalSchema.Column>> speciality.serialversionuid;
ClassDiagram.Attribut>> Speciality.id:Long =>=>=> RelationalSchema.Column>> speciality.id PRIMARY KEY;
ClassDiagram.Attribut>> Speciality.specialityname:String =>=>=> RelationalSchema.Column>> speciality.specialityname;
ClassDiagram.Attribut>> Speciality.max_speciality_name_size:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Speciality.min_speciality_name_size:int =>=>=> RelationalSchema.Column>> speciality.min_speciality_name_size;
ClassDiagram.Attribut>> Degree.serialversionuid:long =>=>=> RelationalSchema.Column>> degree.serialversionuid;
ClassDiagram.Attribut>> Degree.id:Long =>=>=> RelationalSchema.Column>> degree.id PRIMARY KEY;
ClassDiagram.Attribut>> Degree.degreename:String =>=>=> RelationalSchema.Column>> degree.degreename;
ClassDiagram.Attribut>> Degree.min_degree_name_size:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Degree.max_degree_name_size:int =>=>=> RelationalSchema.Column>> degree.max_degree_name_size;
ClassDiagram.Attribut>> UserRole.serialversionuid:long =>=>=> RelationalSchema.Column>> userrole.serialversionuid;
ClassDiagram.Attribut>> UserRole.rolename:String =>=>=> RelationalSchema.Column>> userrole.rolename PRIMARY KEY;
ClassDiagram.Attribut>> UserRole.roletitle:String =>=>=> RelationalSchema.Column>> userrole.roletitle;
ClassDiagram.Attribut>> UserRole.max_user_role_name_size:int =>=>=> RelationalSchema.Column>> userrole.max_user_role_name_size;
ClassDiagram.Attribut>> Assignment.serialversionuid:long =>=>=> RelationalSchema.Column>> assignment.serialversionuid;
ClassDiagram.Attribut>> Assignment.id:Long =>=>=> RelationalSchema.Column>> assignment.id PRIMARY KEY;
ClassDiagram.Attribut>> Assignment.title:String =>=>=> RelationalSchema.Column>> assignment.title;
ClassDiagram.Attribut>> Assignment.attachedfile:String =>=>=> RelationalSchema.Column>> assignment.attachedfile;
ClassDiagram.Attribut>> Assignment.description:String =>=>=> RelationalSchema.Column>> assignment.description;
ClassDiagram.Attribut>> Assignment.creationtime:Date =>=>=> RelationalSchema.Column>> assignment.creationtime;
ClassDiagram.Attribut>> Assignment.starttime:Date =>=>=> RelationalSchema.Column>> assignment.starttime;
ClassDiagram.Attribut>> Assignment.endtime:Date =>=>=> RelationalSchema.Column>> assignment.endtime;
ClassDiagram.Attribut>> Assignment.min_title_size:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Assignment.min_file_name_size:int =>=>=> RelationalSchema.Column>> assignment.min_file_name_size;
ClassDiagram.Attribut>> Assignment.max_title_size:int =>=>=> RelationalSchema.Column>> assignment.max_title_size;
ClassDiagram.Attribut>> Assignment.max_file_name_size:int =>=>=> RelationalSchema.Column>> assignment.max_file_name_size;
ClassDiagram.Attribut>> Student.serialversionuid:long =>=>=> RelationalSchema.Column>> student.serialversionuid;
ClassDiagram.Attribut>> Student.facultynumber:String =>=>=> RelationalSchema.Column>> student.facultynumber;
ClassDiagram.Attribut>> Student.max_faculty_number_size:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
Many-To-Many relationship between ClassDiagram.Class>>Lecturer  and ClassDiagram.Class>>set<degree>: s_lecturers_and_their_degrees(lecturer_id:Lecturer [PK] #FK to Lecturer,degree_id:set<degree> [PK] #FK to set<degree>);
null: s_lecturers_and_their_degrees(lecturer_id:Lecturer [PK] #FK to Lecturer,degree_id:set<degree> [PK] #FK to set<degree>);
One-To-Many relationship from ClassDiagram.Class>>Lecturer  to ClassDiagram.Class>>Set<AssignmentSolution>;
Many-To-One relationship from ClassDiagram.Class>>AssignmentSolution  to ClassDiagram.Class>>assignment represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>AssignmentSolution  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>submittedby;
Many-To-One relationship from ClassDiagram.Class>>AssignmentSolution  to ClassDiagram.Class>>lecturer represented by ClassDiagram.Atrribute>>gradedby;
Many-To-Many relationship between ClassDiagram.Class>>UserRight  and ClassDiagram.Class>>set<userrole>: s_users_rights_and_users_roles(right_name:UserRight [PK] #FK to UserRight,role_name:set<userrole> [PK] #FK to set<userrole>);
Many-To-One relationship from ClassDiagram.Class>>Discipline  to ClassDiagram.Class>>speciality represented by ClassDiagram.Atrribute>>//;
Many-To-Many relationship between ClassDiagram.Class>>Discipline  and ClassDiagram.Class>>set<user>: s_disciplines_and_lead_lecturers(discipline_id:Discipline [PK] #FK to Discipline,lecturer_id:set<user> [PK] #FK to set<user>);
One-To-Many relationship from ClassDiagram.Class>>Discipline  to ClassDiagram.Class>>Set<Assignment>;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<userrole>: s_users_and_users_roles_assigned(user_id:User [PK] #FK to User,role_name:set<userrole> [PK] #FK to set<userrole>);
Many-To-Many relationship between ClassDiagram.Class>>Speciality  and ClassDiagram.Class>>set<student>: s_specialities_and_students_enrolled(speciality_id:Speciality [PK] #FK to Speciality,student_id:set<student> [PK] #FK to set<student>);
One-To-Many relationship from ClassDiagram.Class>>Speciality  to ClassDiagram.Class>>Set<Discipline>;
Many-To-One relationship from ClassDiagram.Class>>Assignment  to ClassDiagram.Class>>discipline represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Assignment  to ClassDiagram.Class>>Set<AssignmentSolution>;
One-To-Many relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>Set<AssignmentSolution>;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>User   Descriminator>>user_type: String ;
