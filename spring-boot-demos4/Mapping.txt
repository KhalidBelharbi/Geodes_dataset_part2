ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Attribut>> Post.id:Long =>=>=> RelationalSchema.Column>> post.id PRIMARY KEY;
ClassDiagram.Attribut>> Post.title:String =>=>=> RelationalSchema.Column>> post.title;
ClassDiagram.Attribut>> Post.text:String =>=>=> RelationalSchema.Column>> post.text;
ClassDiagram.Attribut>> Post.category:String =>=>=> RelationalSchema.Column>> post.category;
ClassDiagram.Attribut>> Author.id:Long =>=>=> RelationalSchema.Column>> author.id PRIMARY KEY;
ClassDiagram.Attribut>> Author.username:String =>=>=> RelationalSchema.Column>> author.username;
ClassDiagram.Attribut>> Author.name:String =>=>=> RelationalSchema.Column>> author.name;
ClassDiagram.Attribut>> Author.thumbnail:String =>=>=> RelationalSchema.Column>> author.thumbnail;
Many-To-One relationship from ClassDiagram.Class>>Post  to ClassDiagram.Class>>author represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Author  to ClassDiagram.Class>>List<Post>;
