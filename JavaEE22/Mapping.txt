ClassDiagram.Class>> StockDailyRecords =>=>=> RelationalSchema.Table>> stockdailyrecords;
ClassDiagram.Class>> Stock =>=>=> RelationalSchema.Table>> stock;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Attribut>> StockDailyRecords.recordid:int =>=>=> RelationalSchema.Column>> stockdailyrecords.recordid PRIMARY KEY;
ClassDiagram.Attribut>> StockDailyRecords.priceopen:Float =>=>=> RelationalSchema.Column>> stockdailyrecords.priceopen;
ClassDiagram.Attribut>> StockDailyRecords.priceclose:Float =>=>=> RelationalSchema.Column>> stockdailyrecords.priceclose;
ClassDiagram.Attribut>> StockDailyRecords.GeneratedName:Date =>=>=> RelationalSchema.Column>> stockdailyrecords.GeneratedName;
ClassDiagram.Attribut>> Stock.stockid:int =>=>=> RelationalSchema.Column>> stock.stockid PRIMARY KEY;
ClassDiagram.Attribut>> Stock.stockcode:String =>=>=> RelationalSchema.Column>> stock.stockcode;
ClassDiagram.Attribut>> Stock.stockname:String =>=>=> RelationalSchema.Column>> stock.stockname;
ClassDiagram.Attribut>> Student.id:int =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.firstname:String =>=>=> RelationalSchema.Column>> student.firstname;
ClassDiagram.Attribut>> Student.lastname:String =>=>=> RelationalSchema.Column>> student.lastname;
ClassDiagram.Attribut>> Student.id:int =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.firstname:String =>=>=> RelationalSchema.Column>> student.firstname;
ClassDiagram.Attribut>> Student.lastname:String =>=>=> RelationalSchema.Column>> student.lastname;
ClassDiagram.Attribut>> Student.email:String =>=>=> RelationalSchema.Column>> student.email;
Many-To-One relationship from ClassDiagram.Class>>StockDailyRecords  to ClassDiagram.Class>>Stock represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Stock  to ClassDiagram.Class>>Set<StockDailyRecords>;
