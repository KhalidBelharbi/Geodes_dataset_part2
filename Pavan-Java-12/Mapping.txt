ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> Programmer =>=>=> RelationalSchema.Table>> programmer;
ClassDiagram.Attribut>> Project.id:Integer =>=>=> RelationalSchema.Column>> project.id PRIMARY KEY;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name;
ClassDiagram.Attribut>> Programmer.id:Integer =>=>=> RelationalSchema.Column>> programmer.id PRIMARY KEY;
ClassDiagram.Attribut>> Programmer.name:String =>=>=> RelationalSchema.Column>> programmer.name;
ClassDiagram.Attribut>> Programmer.sal:Integer =>=>=> RelationalSchema.Column>> programmer.sal;
Many-To-Many relationship between ClassDiagram.Class>>Programmer  and ClassDiagram.Class>>set<project>: programmer_project(programmer_id:Programmer [PK] #FK to Programmer,project_id:set<project> [PK] #FK to set<project>);
