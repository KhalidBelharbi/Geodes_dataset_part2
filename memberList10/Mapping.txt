ClassDiagram.Class>> Event =>=>=> RelationalSchema.Table>> event;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Response =>=>=> RelationalSchema.Table>> response;
ClassDiagram.Attribut>> Event.serialversionuid:long =>=>=> RelationalSchema.Column>> event.serialversionuid;
ClassDiagram.Attribut>> Event.id:Long =>=>=> RelationalSchema.Column>> event.id PRIMARY KEY;
ClassDiagram.Attribut>> Event.name:String =>=>=> RelationalSchema.Column>> event.name;
ClassDiagram.Attribut>> Event.location:String =>=>=> RelationalSchema.Column>> event.location;
ClassDiagram.Attribut>> Event.event:Date =>=>=> RelationalSchema.Column>> event.event;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Response.serialversionuid:long =>=>=> RelationalSchema.Column>> response.serialversionuid;
ClassDiagram.Attribut>> Response.id:Long =>=>=> RelationalSchema.Column>> response.id PRIMARY KEY;
ClassDiagram.Attribut>> Response.response:ResponseEnum =>=>=> RelationalSchema.Column>> response.response;
One-To-Many relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>List<Response>;
Person: event_Person(eventID:event [PK] #FK to event,PersonID:Person [PK] #FK to Person);
Many-To-One relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>owner;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>List<Response>;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>List<Event>;
Many-To-One relationship from ClassDiagram.Class>>Response  to ClassDiagram.Class>>Event represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Response  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>GeneratedName;
