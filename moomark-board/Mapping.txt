ClassDiagram.Class>> BoardComment =>=>=> RelationalSchema.Table>> boardcomment;
ClassDiagram.Class>> BoardTag =>=>=> RelationalSchema.Table>> boardtag;
ClassDiagram.Class>> BoardCategory =>=>=> RelationalSchema.Table>> boardcategory;
ClassDiagram.Class>> Board =>=>=> RelationalSchema.Table>> board;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Tag =>=>=> RelationalSchema.Table>> tag;
ClassDiagram.Class>> Comment =>=>=> RelationalSchema.Table>> comment;
ClassDiagram.Attribut>> BoardComment.id:Long =>=>=> RelationalSchema.Column>> boardcomment.id PRIMARY KEY;
ClassDiagram.Attribut>> BoardTag.id:Long =>=>=> RelationalSchema.Column>> boardtag.id PRIMARY KEY;
ClassDiagram.Attribut>> BoardCategory.id:Long =>=>=> RelationalSchema.Column>> boardcategory.id PRIMARY KEY;
ClassDiagram.Attribut>> Board.id:Long =>=>=> RelationalSchema.Column>> board.id PRIMARY KEY;
ClassDiagram.Attribut>> Board.authorid:Long =>=>=> RelationalSchema.Column>> board.authorid;
ClassDiagram.Attribut>> Board.recommendcount:Long =>=>=> RelationalSchema.Column>> board.recommendcount;
ClassDiagram.Attribut>> Board.viewscount:Long =>=>=> RelationalSchema.Column>> board.viewscount;
ClassDiagram.Attribut>> Board.title:String =>=>=> RelationalSchema.Column>> board.title;
ClassDiagram.Attribut>> Board.content:String =>=>=> RelationalSchema.Column>> board.content;
ClassDiagram.Attribut>> Board.uploadtime:LocalDateTime =>=>=> RelationalSchema.Column>> board.uploadtime;
ClassDiagram.Attribut>> Category.id:Long =>=>=> RelationalSchema.Column>> category.id PRIMARY KEY;
ClassDiagram.Attribut>> Category.categorytype:String =>=>=> RelationalSchema.Column>> category.categorytype;
ClassDiagram.Attribut>> Tag.id:Long =>=>=> RelationalSchema.Column>> tag.id PRIMARY KEY;
ClassDiagram.Attribut>> Tag.information:String =>=>=> RelationalSchema.Column>> tag.information;
ClassDiagram.Attribut>> Comment.id:Long =>=>=> RelationalSchema.Column>> comment.id PRIMARY KEY;
ClassDiagram.Attribut>> Comment.userid:Long =>=>=> RelationalSchema.Column>> comment.userid;
ClassDiagram.Attribut>> Comment.content:String =>=>=> RelationalSchema.Column>> comment.content;
Many-To-One relationship from ClassDiagram.Class>>BoardComment  to ClassDiagram.Class>>Board represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>BoardComment  to ClassDiagram.Class>>comment represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>BoardTag  to ClassDiagram.Class>>Board represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>BoardTag  to ClassDiagram.Class>>tag represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>BoardCategory  to ClassDiagram.Class>>Board represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>BoardCategory  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>List<BoardCategory>;
Many-To-One relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>List<Category>;
One-To-Many relationship from ClassDiagram.Class>>Tag  to ClassDiagram.Class>>List<BoardTag>;
One-To-Many relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>List<BoardComment>;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>comment represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>List<Comment>;
