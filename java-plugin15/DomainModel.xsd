<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="jaccintegratortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="graphparsingtestsubentity" >
      <xs:complexContent>
       <xs:extension base="graphparsingtestentity">
         <xs:sequence>
          <xs:element name="sub" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitygraphfunctionaltests" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="graphparsingtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="linktoone" type="graphparsingtestentity" nillable="true" minOccurs="0" />
        <xs:element name="linktoonelazy" type="graphparsingtestentity" nillable="true" minOccurs="0" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclassmanytoonecascadetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generatedvaluetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="quotedidentifiertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencemismatchstrategywithoutsequencegeneratortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencemismatchstrategylogtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlsequencegeneratorwithserialtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="drop_sequence" type="xs:string" />
          <xs:element name="drop_table" type="xs:string" />
          <xs:element name="create_table" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencemismatchstrategydefaultexceptiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencemismatchstrategyfixwithsequencegeneratortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hhh14154test" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationmappingjoinclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hhh14116test" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hhh13670test" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inclauseparameterpaddingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hhh14112test" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inclauseparameterpaddingcriteriatest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="searchedcaseexpressiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aliaswithcriteriontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sideentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="superentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subentity" >
      <xs:complexContent>
       <xs:extension base="superentity">
         <xs:sequence>
          <xs:element name="subfield" type="sideentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriastringinlineliteraltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativequerywithparenthesestest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="isemptyjqltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="personwithoutnicknameid" type="xs:long" />
          <xs:element name="personawithsinglenicknameid" type="xs:long" />
          <xs:element name="personwithmultiplenicknamesid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hhh13712test" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="maxinexpressionparameterpaddingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="max_count" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="groupbyaliastest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="max_count" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hhh14156test" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryplancachestatisticstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="statistics" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2390dialecttestcase" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customsqlschemaresolvingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractschemasubstitutionformulatest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="schema_placeholder" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customsqlschemaresolvingidentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:complexContent>
       <xs:extension base="copyrightablecontent">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="umbrella" >
      <xs:sequence>
        <xs:element name="id" type="pk" nillable="true" minOccurs="0" />
        <xs:element name="size" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sickness" >
      <xs:sequence>
        <xs:element name="begintime" type="xs:dateTime" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="classification" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="article" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="author" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletesharedonetomanyorphanstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="1alongwiththeinitializationoftheitem#higheritemrelations	collectioncausestheissue	*/batch_fetch_size" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="//,cascade" type="feature" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="feature" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tranchenmodell" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="tranchen" type="tranche" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="preisregelung" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="x" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tranche" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranchenmodell" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="y" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preisregelung" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranchenmodell" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="x" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranchenmodell" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="y" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranche" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="temporaltypetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedquerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="game_titles" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracleconstructorresultnativequerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tuplequerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedquerycommenttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="game_titles" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tuplenativequerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="scalarresultnativequerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="limitexpressiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullparameterquerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querywithinparamlistandnamedentitygraphtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querywithliteralsinselectexpressiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typedvalueparameterstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="docid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativequeryordinalparameterstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="game_titles" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedqueryflushmodetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datetimeparametertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="nowcal" type="xs:anyType" />
          <xs:element name="now" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryparametersvalidationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractor" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="company" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="salary" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constructorresultnativequerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryparameterswithdisabledvalidationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="descr" type="xs:string" />
        <xs:element name="intval" type="xs:anyType" />
        <xs:element name="distributors" type="distributor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="comments" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="privateconstructortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="videosystem" >
      <xs:complexContent>
       <xs:extension base="communicationsystem">
         <xs:sequence>
          <xs:element name="transientcounter" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="remotecontrol" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="creation" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="communicationsystem" >
      <xs:sequence>
        <xs:element name="communication" type="xs:long" />
        <xs:element name="isfirst" type="xs:anyType" />
        <xs:element name="islast" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preupdatenewunidirectionalbagtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preupdatedirtycheckinginterceptortest" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="protectedconstructortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="television" >
      <xs:complexContent>
       <xs:extension base="videosystem">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="control" type="remotecontrol" nillable="true" minOccurs="0" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preupdatebytecodeenhancementtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="privateconstructorenhancertest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="country" nillable="true" minOccurs="0" />
          <xs:element name="" type="person" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="countrychecker" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rythm" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="translation" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="into" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preupdatenewbidirectionalbagtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preupdatecustomentitydirtinessstrategytest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plant" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preupdatenewunidirectionalidbagtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymanagerdeserializationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlazypropertyonpreupdate" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpaproxycompliancewithdebug" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacyentity" >
      <xs:sequence>
        <xs:element name="primitivepk1" type="xs:long" />
        <xs:element name="primitivepk2" type="xs:long" />
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nestedlegacyentity" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="legacyentity" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="modernentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modernentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="foo" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="imagereader" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="image" type="xs:anyType" />
        <xs:element name="text" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletablenullnonoptionalsecondarytabletest" >
      <xs:complexContent>
       <xs:extension base="abstractnonoptionalsecondarytabletest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedtablenullnonoptionalsecondarytabletest" >
      <xs:complexContent>
       <xs:extension base="abstractnonoptionalsecondarytabletest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="//usedforassertionsids" type="list" nillable="true" minOccurs="0" />
        <xs:element name="//usedforassertionspostversion" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ofbirth" type="xs:dateTime" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="lastup" type="xs:dateTime" />
        <xs:element name="manualversion" type="xs:long" />
        <xs:element name="kittens" type="kitten" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionrollbacktest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractjtabatchtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="closeentitymanagerwithactivetransactiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtareusingentitytransactiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="strawberry" >
      <xs:complexContent>
       <xs:extension base="fruit">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fruit" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithcompositeid" >
      <xs:sequence>
        <xs:element name="id" type="compositeid" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapentity" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="localized" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="area" type="xs:string" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="types" type="type" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="entity2" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="home" type="address" nillable="true" minOccurs="0" />
        <xs:element name="work" type="address" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="spouse" nillable="true" minOccurs="0" />
        <xs:element name="creditcards" type="creditcard" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="aliases" type="alias" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="aliasesnoop" type="alias" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spouse" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="first" type="xs:string" />
        <xs:element name="maiden" type="xs:string" />
        <xs:element name="last" type="xs:string" />
        <xs:element name="snumber" type="xs:string" />
        <xs:element name="GeneratedName" type="info" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creditcard" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="expires" type="xs:string" />
        <xs:element name="approved" type="xs:anyType" />
        <xs:element name="balance" type="xs:double" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="info" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="GeneratedName" type="spouse" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractjpametamodelpopulationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="translation" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thingwithquantity" >
      <xs:complexContent>
       <xs:extension base="thing">
         <xs:sequence>
          <xs:element name="quantity" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alias" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="noop" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="customersnoop" type="customer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="customers" type="customer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="entity3" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="rating" type="xs:double" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="partnumber" type="xs:long" />
        <xs:element name="some" type="xs:anyType" />
        <xs:element name="some" type="xs:anyType" />
        <xs:element name="warehouse" type="xs:string" />
        <xs:element name="GeneratedName" type="shelflife" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="phones" type="phone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="somemappedsuperclasssubclass" >
      <xs:complexContent>
       <xs:extension base="somemappedsuperclass">
         <xs:sequence>
          <xs:element name="thedata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mixedidandidclasshandling" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="article" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="translations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="baseembeddedentity<personid>">
         <xs:sequence>
          <xs:element name="firstname" type="xs:string" />
          <xs:element name="lastname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="totalprice" type="xs:double" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="creditcard" nillable="true" minOccurs="0" />
        <xs:element name="sample" type="lineitem" nillable="true" minOccurs="0" />
        <xs:element name="lineitems" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="domen" type="xs:anyType" />
        <xs:element name="number" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="decorate" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="pet" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pet" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="weight" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="example" type="item" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="b1list" type="b1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="b2list" type="b2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="b3list" type="b3" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="b4list" type="b4" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="b1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
        <xs:element name="c1list" type="c1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
        <xs:element name="c2list" type="c2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="b2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="category" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="race" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="competitors" type="competitor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mail" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="from" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="colony" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="empire" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="colonies" type="colony" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competitor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competition" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="competitors" type="competitor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="music" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:complexContent>
       <xs:extension base="pet">
         <xs:sequence>
          <xs:element name="lives" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dress" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:complexContent>
       <xs:extension base="pet">
         <xs:sequence>
          <xs:element name="numbones" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoarder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="favorite" type="item" nillable="true" minOccurs="0" />
        <xs:element name="items" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pasta" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="client" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="name" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alias" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="name" nillable="true" minOccurs="0" />
        <xs:element name="source" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitysuperclasscomponentwithcollectiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonetype" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasscomponentwithcollectiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentinwhereclausetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="stores" type="store" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ordermap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerorder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="item" type="xs:string" />
        <xs:element name="qty" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapjointestwithembeddable" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="treatkeywordtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="limitexpressiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="treatlistjointest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inwithheterogeneouscollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wall" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="width" type="xs:long" />
        <xs:element name="height" type="xs:long" />
        <xs:element name="color" type="xs:string" />
        <xs:element name="left" type="wall" nillable="true" minOccurs="0" />
        <xs:element name="right" type="wall" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concattest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="payment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="treatjointest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectcaseliteralhandlingbindtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="groupbyselectcasetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="roles" type="role" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="roles" type="attribute" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="mother" type="animal" nillable="true" minOccurs="0" />
        <xs:element name="father" type="animal" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="born" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractsubqueryinselectclausetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriamultiselectaliastest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitysuperclasscollectiontest" >
      <xs:complexContent>
       <xs:extension base="personbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaquerytypequeryadaptertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="totalprice" type="xs:double" />
        <xs:element name="sample" type="lineitem" nillable="true" minOccurs="0" />
        <xs:element name="lineitems" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderline" >
      <xs:sequence>
        <xs:element name="id" type="orderlineid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="header" type="order" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="facility" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="site" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="productid" nillable="true" minOccurs="0" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="GeneratedName" type="facility" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="site" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="purchaseorg" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="facilities" type="facility" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="orderid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="purchaseorg" nillable="true" minOccurs="0" />
        <xs:element name="lines" type="orderline" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multitypedbasicattributesentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="somes" type="xs:long" />
        <xs:element name="somewrappeds" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicsimplecasetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criterialiteralwithsinglequotetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcriterialiteralhandlingmodetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tool" >
      <xs:complexContent>
       <xs:extension base="helper">
         <xs:sequence>
          <xs:element name="cost" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="widget" >
      <xs:sequence>
        <xs:element name="code" type="xs:string" />
        <xs:element name="division" type="xs:string" />
        <xs:element name="cost" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subject" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criterialiteralinselectexpressiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criterialiteralstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="subject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elephant" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="superclasscollectiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="son" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soldier" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="troop" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="primary" type="teacher" nillable="true" minOccurs="0" />
        <xs:element name="favorite" type="teacher" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="grandson" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="parent" type="son" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergewithtransientnoncascadedassociationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teacher" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="favorite" type="student" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="troop" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="soldiers" type="soldier" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extractiondocumentinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lastmodified" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="conference" nillable="true" minOccurs="0" />
        <xs:element name="documents" type="extractiondocument" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bottom" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="middle" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="top" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="middles" type="middle" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multilevelcascadecollectionembeddabletest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="middle" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="top" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="bottom" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multilevelcascadecollectionidclasstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multilevelcascaderegularidbasedparentchildassociationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="song" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="author" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="troop2" >
      <xs:sequence>
        <xs:element name="/*fails:*/id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soldier2" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="troop" type="troop2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detachandcontainstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conference" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="extractiondocument" type="extractiondocumentinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extractiondocument" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="body" type="xs:anyType" />
        <xs:element name="documentinfo" type="extractiondocumentinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:complexContent>
       <xs:extension base="abstractaddressable">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:complexContent>
       <xs:extension base="abstractnameable">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:complexContent>
       <xs:extension base="abstractproduct">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="productattribute" >
      <xs:complexContent>
       <xs:extension base="abstractattribute">
         <xs:sequence>
          <xs:element name="owner" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product2" >
      <xs:complexContent>
       <xs:extension base="product1">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product1" >
      <xs:complexContent>
       <xs:extension base="abstractproduct">
         <xs:sequence>
          <xs:element name="overridenname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="descr" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemascriptfilegenerationfailuretest" >
      <xs:complexContent>
       <xs:extension base="writer">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="entitymanagerfactorybuilder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemascriptfilegenerationtest" >
      <xs:sequence>
        <xs:element name="createschema" type="file" nillable="true" minOccurs="0" />
        <xs:element name="dropschema" type="file" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitymanagerfactorybuilder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemadatabasefilegenerationfailuretest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="entitymanagerfactorybuilder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemacreatedroputf8withouthbm2ddlcharsetnametest" >
      <xs:sequence>
        <xs:element name="createschema" type="file" nillable="true" minOccurs="0" />
        <xs:element name="dropschema" type="file" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitymanagerfactorybuilder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bell" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cable" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nocacheableannotationentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitlynoncacheableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitlycacheableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="total" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultinitialvaluetablegeneratorconfiguredtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignedinitialvaluetablegeneratorconfiguredtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetomanynotnullablecolumntest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nestedembeddabletest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brandname" type="xs:string" />
        <xs:element name="price" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanyuniqueconstraintordercolumntest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanyindexcolumntest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnwithexplicitreferencetoprimarytabletest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanyordercolumntest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultcascadetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cupholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="radius" type="xs:anyType" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workload" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="load" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="containstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reptile" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="temperature" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removeorderingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mammal" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="mamalnbr" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wallet" >
      <xs:sequence>
        <xs:element name="serial" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="marketentrance" type="xs:dateTime" />
        <xs:element name="brand" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storeprocedureoutparameterbynametest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hsqlstoreproceduretest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="storedprocedureresultsetmappingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datetimeparametertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="entitymanagerfactory" type="hibernateentitymanagerfactory" nillable="true" minOccurs="0" />
          <xs:element name="nowcal" type="xs:anyType" />
          <xs:element name="now" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="storedprocedurenullparameterbynametest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="storeprocedurerefcursoroutparameterbypositiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="storeprocedureoutparameterbypositiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="storeprocedurerefcursoroutparameterbynametest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="h2storeproceduretest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basiccditest" >
      <xs:sequence>
        <xs:element name="count" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="music" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instrument" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="musician" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="favourite" type="music" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="nrofchildren" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="daddy" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="incidentstatus" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="GeneratedName" type="incident" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="incident" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="GeneratedName" type="incidentstatus" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oven" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="kitchen" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="kitchen" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="oven" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitygraphtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="companyfetchprofile" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="location" nillable="true" minOccurs="0" />
        <xs:element name="markets" type="market" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="phonenumbers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="foo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:complexContent>
       <xs:extension base="mappedsupperclass">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="salary" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitygraphnativequerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manager" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchwithrootgraphtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="managers" type="manager" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="friends" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicentitygraphtests" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="courses" type="course" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadgraphfindbyidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitygraphusingfetchgraphforlazytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitygraphusingfetchgraphtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="location" nillable="true" minOccurs="0" />
        <xs:element name="markets" type="market" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="phonenumbers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadandfetchgraphtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitygraphwithfetchannotationtest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitygraphloadplanbuildertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querylockingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockable" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unversionedlock" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parent" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pessimisticwritewithoptionalouterjoinbreaksrefreshtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="child" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lock" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testconnectionpool" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connection_pool_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="house" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="key" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="rooms" type="room" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="roomsbyname" type="xs:anyType" />
        <xs:element name="roomsbysize" type="room" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="withgenericcollection" >
      <xs:complexContent>
       <xs:extension base="object>">
         <xs:sequence>
          <xs:element name="id" type="xs:string" />
          <xs:element name="d" type="xs:double" />
          <xs:element name="parent" type="xs:anyType" />
          <xs:element name="children" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deskwithrawtype" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="employees" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="feline" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="color" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="garden" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="flowers" type="flower" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:complexContent>
       <xs:extension base="cattish">
         <xs:sequence>
          <xs:element name="nickname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:complexContent>
       <xs:extension base="being>">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="siblings" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplemedicalhistory" >
      <xs:sequence>
        <xs:element name="lastup" type="xs:dateTime" />
        <xs:element name="patient" type="simpleperson" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fridge" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="brand" type="xs:string" />
        <xs:element name="temperature" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:complexContent>
       <xs:extension base="being">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="giant" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="height" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fooditem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedmanytooneowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="house" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeewithrawtype" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="desks" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flower" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleperson" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="article" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="next" type="article" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/*@embedded@attributeoverrides({@attributeoverride(name" type="address" nillable="true" minOccurs="0" />
        <xs:element name="/*@embedded@attributeoverrides({@attributeoverride(name" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/*@embedded@attributeoverrides({@attributeoverride(name" type="address" nillable="true" minOccurs="0" />
        <xs:element name="/*@embedded@attributeoverrides({@attributeoverride(name" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="article" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="next" type="article" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twopersistenceunits2lcdisabledenabled" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unlisteddatapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="carpet" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bug" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="subject" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="caipirinha" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="morito" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scooter" >
      <xs:sequence>
        <xs:element name="model" type="xs:string" />
        <xs:element name="speed" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="applicationserver" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="version" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="money" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bug" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="subject" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="money" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="applicationserver" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="version" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="washer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="money1" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="applicationserver1" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="version1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonejointabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="addresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="kitten" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerclosedtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="distributor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accountgroup" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="accounts" type="account" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="regioncode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="irrelevantentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custombeforecompletiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customaftercompletiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="duplicateentitynametest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="table2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="confentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="confkey" type="xs:string" />
        <xs:element name="confvalue" type="xs:string" />
        <xs:element name="userconf" type="userconfentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userconfentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="user" type="userentity" nillable="true" minOccurs="0" />
        <xs:element name="conf" type="confentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="table1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="tom" type="childentity" nillable="true" minOccurs="0" />
        <xs:element name="ben" type="childentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parentid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistonlazycollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase{">
         <xs:sequence>
          <xs:element name="receipt_a" type="xs:string" />
          <xs:element name="invoice_a" type="xs:string" />
          <xs:element name="invoiceline_a" type="xs:string" />
          <xs:element name="invoiceline_b" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="userentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="confs" type="userconfentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="building" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergeneratorwithnaturalidcachetest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extendedentity" >
      <xs:complexContent>
       <xs:extension base="myentity">
         <xs:sequence>
          <xs:element name="extendedvalue" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="uid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="principal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="uid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:complexContent>
       <xs:extension base="principal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclassoverridetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="principal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="uid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:complexContent>
       <xs:extension base="principal">
         <xs:sequence>
          <xs:element name="username" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidinuninitializedproxytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidinuninitializedassociationtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postalcarrier" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="postalcode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="myname" type="xs:string" />
        <xs:element name="assb" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="another" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="surname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="allcached" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="ss" type="a" nillable="true" minOccurs="0" />
        <xs:element name="naturalid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclass" >
      <xs:complexContent>
       <xs:extension base="allcached">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="ss" type="a" nillable="true" minOccurs="0" />
        <xs:element name="naturalid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="assoiated" type="c" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="ass" type="c" nillable="true" minOccurs="0" />
        <xs:element name="myname" type="xs:string" />
        <xs:element name="assb" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaexportwithindexanddefaultschema" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaupdatehaltonerrortest" >
      <xs:sequence>
        <xs:element name="output" type="file" nillable="true" minOccurs="0" />
        <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaupdatewithfunctionindextest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfkupdating" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemamigrationtargetscriptcreationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdatetest" >
      <xs:complexContent>
       <xs:extension base="inheritancerootentity">
         <xs:sequence>
          <xs:element name="skiptest" type="xs:anyType" />
          <xs:element name="jdbcmetadataextractorstrategy" type="xs:string" />
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="altertablequotedefaultschematest" >
      <xs:complexContent>
       <xs:extension base="abstractaltertablequoteschematest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="quotedtablenameschemaupdatetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnnamestest" >
      <xs:sequence>
        <xs:element name="jdbcmetadataextractorstrategy" type="xs:string" />
        <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="metadata" nillable="true" minOccurs="0" />
        <xs:element name="output" type="file" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaupdatewithviewstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdateschemanametest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverquoteschematest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdateformattertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="after_format" type="xs:string" />
          <xs:element name="delimiter" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdategeneratingonlyscriptfiletest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="step" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="parent" type="step" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupstep" >
      <xs:complexContent>
       <xs:extension base="step">
         <xs:sequence>
          <xs:element name="steps" type="step" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="element" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:complexContent>
       <xs:extension base="element">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdatejoincolumnnoconstraintsecondarytablestest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="expected_script" type="xs:string" />
          <xs:element name="delimiter" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdatesqlservertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="jdbcmetadataextractorstrategy" type="xs:string" />
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexescreationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="" type="metadata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentindextest" >
      <xs:sequence>
        <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="metadata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaexportwithglobalquotingenabledtest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitcompositekeyjointest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablecommenttest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdatedelimitertest" >
      <xs:sequence>
        <xs:element name="expected_delimiter" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencereadingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlmultipleschemasequencetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdatejoincolumnnoconstrainttest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="delimiter" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="altertablequotespecifiedschematest" >
      <xs:complexContent>
       <xs:extension base="abstractaltertablequoteschematest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemamigratorhaltonerrortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hanaschemamigrationtargetscriptcreationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="varchartype" type="xs:string" />
          <xs:element name="clobtype" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdateproceedonerrortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnlengthtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeydroptest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="" type="schemaexport" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaoneentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schematwoentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="schemaoneentities" type="schemaoneentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="project" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="phones" type="phone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="projects" type="project" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedinheritanceforeignkeytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeymigrationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdatewithkeywordautoquotingenabledtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeydefinitionsecondarytabletest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeydefinitiononetoonetest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeydefinitiononetomanyjointabletest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeydefinitionmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="usersetting" nillable="true" minOccurs="0" />
        <xs:element name="groups" type="group" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usersetting" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="user" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedfieldpropertyannotationtest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="migrationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencegenerationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablegeneratortest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
          <xs:element name="initial_value" type="xs:long" />
          <xs:element name="expected_db_inserted_value" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablegeneratorstest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
          <xs:element name="initial_value" type="xs:long" />
          <xs:element name="expected_db_inserted_value" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencegeneratorstest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemadroptest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdatejoincolumnnoconstraintsecondarytabletest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="expected_script" type="xs:string" />
          <xs:element name="delimiter" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectionsreleasetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
          <xs:element name="connectionprovider" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runtimefetchfrommanagedtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeynoconstrainttest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constrainttest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="max_name_length" type="xs:long" />
          <xs:element name="explicit_fk_name_native" type="xs:string" />
          <xs:element name="explicit_fk_name_jpa" type="xs:string" />
          <xs:element name="explicit_uk_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeyconstraintmapsidtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeyconstrainttest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="championship" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="school" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="topstudents" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="studentsmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="school" nillable="true" minOccurs="0" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="gpa" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceexporttest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlidentitysequencetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="connectionprovider" type="drivermanagerconnectionproviderimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimizertest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlidentitysupporttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacysequenceexporttest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="negativevaluesequencetest" >
      <xs:complexContent>
       <xs:extension base="optimizer>">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytearrayidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="characterarrayidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivebytearrayidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivecharacterarrayidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="ip" type="inet" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postgresqlmultipletypesothercontributortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usertypenoncomparableidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usertypecomparableidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserver2012sequencegeneratorannotationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pooledhilosequenceidentifiertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreigngeneratortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonuniqueidtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidbasedidinterpretationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqluuidgeneratedvaluetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="book" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuid2generatorstringuniqueidentifieridtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuid2generatorbinaryuniqueidentifieridtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuid2generatoruniqueidentifieridtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateunproxytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyabstractentityreference" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="entity" type="abstractentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concreteentity" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="content" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyreferenceequalitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="finalgettersettertest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hanaoptimisticlockingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockrefreshtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="locknonewarmingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractskiplockedtest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="door" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedinheritanceoptimisticforceincrementtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergelistpreandpostpersisttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergelistpreandpostpersistwithidentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplecollectionrefentity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="GeneratedName" type="multiplecollectionentity" nillable="true" minOccurs="0" />
        <xs:element name="multiplecollectionentityid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alias" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="characters" type="character" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplecollectionentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="refentities1" type="multiplecollectionrefentity1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="refentities2" type="multiplecollectionrefentity2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplecollectionrefentity1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="GeneratedName" type="multiplecollectionentity" nillable="true" minOccurs="0" />
        <xs:element name="multiplecollectionentityid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="character" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="aliases" type="alias" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parents" type="parent1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanynonpkjoincolumntest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parents" type="parent1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertynamedidinnonjpacompositeidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertynamedidinembeddedidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertynamedidoutofnonjpacompositeidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idpropertyinsingletablesubclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idpropertyinsubclassidinmappedsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertynamedidinidclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertynamedidoutofidclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idpropertyintableperclasssubclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idpropertyinjoinedsubclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertynamedidoutofembeddedidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="email" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usercollectiontypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usercollectiontypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="userwithunimplementedcollection" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="emailaddresses" type="email" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="sessiondata" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="email" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="emailaddresses" type="email" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="sessiondata" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplebagfetchtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplebagfetchhqltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bagelementnullbasictest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentbagcontainstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bagduplicatestest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idbagelementnullbasictest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setelementnullbasictest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionednocascadeone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="manies" type="many" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unversionednocascadeone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="manies" type="many" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unversionedcascadeone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="manies" type="many" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedcascadeone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="manies" type="many" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setdelayedoperationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="parentid" type="xs:long" />
          <xs:element name="childid1" type="xs:long" />
          <xs:element name="childid2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detachedbagdelayedoperationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspectioncollectiontype" type="xs:anyType" />
          <xs:element name="loginspectionabstractpersistentcollection" type="xs:anyType" />
          <xs:element name="ignorequeuedoperationsonmerge" type="xs:anyType" />
          <xs:element name="queuedoperationwhenattachtosession" type="xs:anyType" />
          <xs:element name="queuedoperationwhendetachfromsession" type="xs:anyType" />
          <xs:element name="queuedoperationonrollback" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listdelayedoperationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="parentid" type="xs:long" />
          <xs:element name="childid1" type="xs:long" />
          <xs:element name="childid2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bagdelayedoperationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="parentid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listaddtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bagdelayedoperationnocascadetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="parentid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="emailaddresses" type="emailaddress" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="emailaddresses2" type="emailaddress" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="contact" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noninsertablecolumntest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="weight" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zoo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="tigers" type="tiger" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="lions" type="lion" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="animals" type="animal" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lion" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tiger" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="numberofstripes" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listelementnullbasictest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listindexreferencefromlistelementtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapelementnullbasictest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapvalue" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="previoushashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkey" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="defaultvalue" type="mapvalue" nillable="true" minOccurs="0" />
        <xs:element name="previoushashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentmaptest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multilingualstringparent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parent" type="multilingualstringparent" nillable="true" minOccurs="0" />
        <xs:element name="string" type="multilingualstring" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multilingualstring" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplesessioncollectionwarningtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplesessioncollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqllobstringtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="value1" type="xs:string" />
          <xs:element name="value2" type="xs:string" />
          <xs:element name="value3" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobstringtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="long_string_size" type="xs:long" />
          <xs:element name="value1" type="xs:string" />
          <xs:element name="value2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobentity" >
      <xs:sequence>
        <xs:element name="blob_length" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbctimestampdstwithutctest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbctimedefaulttimezonetest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbctimestampcustomtimezonetest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
          <xs:element name="time_zone" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbctimestampwithoututctimezonetest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="timezoneconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbctimestampcustomsessionleveltimezonetest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
          <xs:element name="time_zone" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localdatecustomsessionleveltimezonetest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="time_zone" type="xs:anyType" />
          <xs:element name="connectionprovider" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbctimecustomtimezonetest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
          <xs:element name="time_zone" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbctimestampdefaulttimezonetest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclassduplicatefieldswithtreattest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoflusheventlistenertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="listener" type="thelistener" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="items" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="language" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="//@column(unique" type="xs:string" />
        <xs:element name="fallback" type="language" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workflow" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="defaultlanguage" type="xs:anyType" />
        <xs:element name="supportedlocales" type="xs:anyType" />
        <xs:element name="localized" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="container" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="items" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentnamingstrategyforjoincolumntest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zipcode" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="GeneratedName" type="state" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="registeredtrademarks" type="xs:anyType" />
        <xs:element name="hq" type="address" nillable="true" minOccurs="0" />
        <xs:element name="addresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="industries" type="industry" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="referencecode" type="xs:string" />
        <xs:element name="placed" type="xs:dateTime" />
        <xs:element name="fulfilled" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="industry" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="specialprice" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionjointablenamingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinfetchwithenhancementtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unionsubclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="andlobtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplexmloverriddentest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionelementexplicitconversiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectioncompositeelementconversiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elementcollectiontests" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectioncompositeelementexplicitconversiontest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="simplevalueattributeconverterdescriptor" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionelementconversiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitenumconverterstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="converttodatabasecolumncalled" type="xs:anyType" />
          <xs:element name="converttoentityattributecalled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="customtype" type="mycustomjavatype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtycheckingtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="streetline1" type="xs:string" />
        <xs:element name="streetline2" type="xs:string" />
        <xs:element name="GeneratedName" type="postalarea" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitjavatypedescriptortest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="mutabletodatabasecallcount" type="xs:long" />
          <xs:element name="mutabletodomaincallcount" type="xs:long" />
          <xs:element name="immutabletodatabasecallcount" type="xs:long" />
          <xs:element name="immutabletodomaincallcount" type="xs:long" />
          <xs:element name="immutablemutabletodatabasecallcount" type="xs:long" />
          <xs:element name="immutablemutabletodomaincallcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributeconvertertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleconvertsannotationtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="converttodatabasecolumncalled" type="xs:anyType" />
          <xs:element name="converttoentityattributecalled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="packageprivateattributeconverterentitymanagerfactorytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterizedattributeconverterparametertypetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullhandlingtests" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicjodatimeconversiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="converttodatabasecolumncalled" type="xs:anyType" />
          <xs:element name="converttoentityattributecalled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleconvertannotationtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="converttodatabasecolumncalled" type="xs:anyType" />
          <xs:element name="converttoentityattributecalled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeyattributeconvertertest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeyconversiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapelementconversiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="andnationalizedtests" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="streetline1" type="xs:string" />
        <xs:element name="streetline2" type="xs:string" />
        <xs:element name="GeneratedName" type="postalarea" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryliteraltest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlwithexplicitconvertannotationstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="//note:essentiallythesameexacttestasexplicitdateconverterstest,butherewewillmixannotationsandxmlconverttodatabasecolumncalled" type="xs:anyType" />
          <xs:element name="converttoentityattributecalled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="convertertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitlynamedconverterclassestest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="packageprivateattributeconvertersessionfactorytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleembeddableoverriddenconvertertest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitdateconverterstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="//note:initiallyunabletoreproducethereportedproblemconverttodatabasecolumncalled" type="xs:anyType" />
          <xs:element name="converttoentityattributecalled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleoverriddenconvertertest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longtodateconversiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="emb" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="name" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="adult" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="clientid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emptycompositemanytoonekeytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentemptyembeddedowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="embedded" type="componentemptyembedded" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectbeforeupdateembeddedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="i" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="emptycompositeequivalenttonulltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="emptycompositecollectionkeylazytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="emptycompositemanytoonekeycachedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="emptycompositecollectionkeyeagertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idgeneratornamesglobalscopetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idgeneratornameslocalscopetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hilooptimizerconcurrencytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="createschema" type="xs:anyType" />
          <xs:element name="executor" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hilosequencemismatchstrategytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="sequencename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identityinsertsolecolumntest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identitygeneratorextendstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="saveentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="super" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sub" >
      <xs:complexContent>
       <xs:extension base="super">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreigngeneratorresourcelocaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nationalizedlobfieldtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringnationalizedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplenationalizedtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usenationalizedchardatasettingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionjdbcbatchtest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qualifiedtablenamingtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brandname" type="xs:string" />
        <xs:element name="price" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columndefinitionquotingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="roles" type="role" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="//theseexistsolelyforhhh-8464toensurethatthevariousformsofquotingarenormalizedinternally//(usingbackticks),includingthejoincolumn.withoutnormalization,themappingwillthrowa//duplicatemappingexception." type="house" nillable="true" minOccurs="0" />
        <xs:element name="house1" type="xs:long" />
        <xs:element name="house2" type="xs:long" />
        <xs:element name="//testukonfkw/globalquoting--seehhh-8638//thismustbeinitialized.severaldbsdonotallowmultiplenullvaluesinauniquecolumn.3" type="house" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quotetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="house" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="streetaddress" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablegeneratorquotingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="serviceregistry" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="role" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativequerydoesnotsupportiterationtest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="memberships" type="membership" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="membership" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="member" type="user" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="group" nillable="true" minOccurs="0" />
        <xs:element name="join" type="xs:dateTime" />
        <xs:element name="dues" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="memberships" type="membership" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativequeryscrollableresults" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpafunctiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="numvalue" >
      <xs:sequence>
        <xs:element name="num" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativequerysyncspacecachingtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="h2proctesting" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storedprocedureresultsetmappingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresrefcursorsupporttest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="sf" type="sessionfactory" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="isolatedevictableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonpkmanytooneassociationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="parent" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsequenceidentitybatchtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optionaleagerrefnonpknotfoundtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optionaleagerinembeddablenotfoundtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optionaleagermappedbynotfoundtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optionallazynotfoundtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="requiredlazynotfoundtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optionaleagernotfoundtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="window" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gate" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tree" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="palmtree" >
      <xs:complexContent>
       <xs:extension base="tree">
         <xs:sequence>
          <xs:element name="leavesize" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="portal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="windows" type="window" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultcacheconcurrencypropertytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="directreferencecacheentriestest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrongcircularitydetectiontest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationbindertest" >
      <xs:sequence>
        <xs:element name="loginspection" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="line" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invoice" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="replicatetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectionsreleaseautocommittest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="connectionprovider" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beforecompletionreleasetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcbatchingagressivereleasetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="idpart1" type="xs:anyType" />
        <xs:element name="idpart2" type="xs:anyType" />
        <xs:element name="otherproperty" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchingentityloaderinitializationwithnolockmodetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="mainid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchfetchnotfoundignoredefaultstyletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="statementinspector" type="xs:anyType" />
          <xs:element name="number_of_employees" type="xs:long" />
          <xs:element name="tasks" type="task" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchfetchrefreshtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchfetchreferencedcolumnnametest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="cities" type="city" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchfetchbootstraptest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchloadableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="otherproperty" type="xs:string" />
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultgeneratedvalueidentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultgeneratedvaluetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractskipautocommittest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonjpacompliancealreadystartedtransactiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="tm" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclestoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="valid" type="xs:anyType" />
        <xs:element name="repairtimestamps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hanastoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nickname" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="phones" type="phone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vote" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="votechoice" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doesnotwork" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="GeneratedName" type="doesnotworkpk" nillable="true" minOccurs="0" />
        <xs:element name="globadditinfotid" type="xs:long" />
        <xs:element name="globalnotes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritancemanytomanyforeignkeytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanyowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="manytomany" type="manytomanytarget" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanytarget" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedsubclasswithimplicitdiscriminatortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclasswithexplicitdiscriminatortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclasswithembeddabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclasswithignoredexplicitdiscriminatortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithcompositekey" >
      <xs:sequence>
        <xs:element name="pk" type="compositekey" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithstringcompositekey" >
      <xs:sequence>
        <xs:element name="pk" type="stringcompositekey" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querycachejoinfetchtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="structuredquerycachetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="atable" >
      <xs:sequence>
        <xs:element name="firstid" type="xs:anyType" />
        <xs:element name="tablebs" type="tableb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tableb" >
      <xs:sequence>
        <xs:element name="id" type="tablebid" nillable="true" minOccurs="0" />
        <xs:element name="tablea" type="atable" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablea" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="test" type="xs:string" />
        <xs:element name="test2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidcachingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytimeouttest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="connection_provider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
          <xs:element name="query" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtytrackingcollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtytrackingnonupdateabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtytrackingtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedpktest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mixedaccesstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="param_" type="xs:anyType" />
          <xs:element name="mapping_function" type="xs:anyType" />
          <xs:element name="id" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="initfromcachetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
          <xs:element name="documentid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicsessiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritedtest" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crossenhancementtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicenhancementtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extendedassociationmanagementtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericreturnvaluemappedsuperclassenhancementtest" >
      <xs:complexContent>
       <xs:extension base="marker>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="otherentityentrycontexttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="evictiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detachedgetidentifiertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetooneassociationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanyassociationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritedattributeassociationtest" >
      <xs:complexContent>
       <xs:extension base="item">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanyassociationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergedetachednoncascadedcollectioninembeddabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="root" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="leaves" type="leaf" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergedetachedcascadedcollectioninembeddabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositemergetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="entityid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergeenhancedentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="person" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="leaf" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="root" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyinitializationwithoutinlinedirtytrackingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyproxyonenhancedentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="parentid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazycollectionhandlingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryscrollingwithinheritancetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyonetomanywithequalsimplementationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="personid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidinuninitializedassociationtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazycollectiondetachtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="parentid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazycollectiondeletedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="postid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyloadingintegrationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="lastchildid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statelessqueryscrollingtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazycollectionloadingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="parentid" type="xs:long" />
          <xs:element name="" type="parent" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazybasicfieldaccesstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="entityid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazybasicpropertyaccesstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="entityid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazynotfoundonetoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazynotfoundonetoonenonupdatablenoninsertabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazynotfoundmanytoonenonupdatablenoninsertabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxyinitializeandupdateinlinedirtytrackingtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creditcardpayment" >
      <xs:complexContent>
       <xs:extension base="payment">
         <xs:sequence>
          <xs:element name="transactionid" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activity" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
          <xs:element name="" type="instruction" nillable="true" minOccurs="0" />
          <xs:element name="" type="webapplication" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadanonexistingentitytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="number_of_entities" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalproxytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapsidproxyunidirectionaltest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitysharedincollectionandtoonetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="oid" type="xs:anyType" />
        <xs:element name="thetext" type="xs:string" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="supplemental" type="ordersupplemental" nillable="true" minOccurs="0" />
        <xs:element name="supplemental2" type="ordersupplemental2" nillable="true" minOccurs="0" />
        <xs:element name="payments" type="payment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreigncustomer" >
      <xs:complexContent>
       <xs:extension base="customer">
         <xs:sequence>
          <xs:element name="vat" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazytoonesproxywithsubclassesstatelesstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleupdatetestwithlazyloading" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="lastchildid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazycollectiondeletedallowproxytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="postid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ordersupplemental" >
      <xs:sequence>
        <xs:element name="oid" type="xs:anyType" />
        <xs:element name="receivablesid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapsidproxybidirectionaltest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specializedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="GeneratedName" type="specializedkey" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasswithembeddabletest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleupdatetestwithlazyloadingandinlinedirtytracking" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="lastchildid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbatchingtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="childname" type="xs:string" />
          <xs:element name="parentid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specializedkey" >
      <xs:complexContent>
       <xs:extension base="generickey">
         <xs:sequence>
          <xs:element name="//@lazycollection(lazycollectionoption.extra)specializedentities" type="specializedentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deepinheritanceproxytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergedetachedtoproxytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidinuninitializedproxytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazytoonesproxymergewithsubclassestest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="payment" >
      <xs:sequence>
        <xs:element name="oid" type="xs:anyType" />
        <xs:element name="amount" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deepinheritancewithnonentitiesproxytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sharingreferencetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="webapplication" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="siteurl" type="xs:string" />
          <xs:element name="activities" type="activity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="debitcardpayment" >
      <xs:complexContent>
       <xs:extension base="payment">
         <xs:sequence>
          <xs:element name="transactionid" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadanonexistingnotfoundentitytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="oid" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="childcustomers" type="customer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractkey" >
      <xs:complexContent>
       <xs:extension base="modelentity">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="roles" type="roleentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="register" type="abstractkey" nillable="true" minOccurs="0" />
          <xs:element name="keys" type="abstractkey" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="parent" type="abstractkey" nillable="true" minOccurs="0" />
          <xs:element name="otherkeys" type="abstractkey" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="domesticcustomer" >
      <xs:complexContent>
       <xs:extension base="customer">
         <xs:sequence>
          <xs:element name="taxid" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazytoonesproxywithsubclassestest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="morespecializedkey" >
      <xs:complexContent>
       <xs:extension base="specializedkey">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="roleentity" >
      <xs:complexContent>
       <xs:extension base="modelentity">
         <xs:sequence>
          <xs:element name="value" type="xs:long" />
          <xs:element name="key" type="abstractkey" nillable="true" minOccurs="0" />
          <xs:element name="" type="specializedkey" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchfetchproxytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="number_of_entities" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazytoonesnoproxyfactorywithsubclassesstatefultest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instruction" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="summary" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazytoonesnoproxyfactorywithsubclassesstatelesstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxyinitializeandupdateinlinedirtytrackingdynamicupdatetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="metadatacache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryscrollingwithinheritanceproxyeagermanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generickey" >
      <xs:complexContent>
       <xs:extension base="abstractkey">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxyinitializeandupdatetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonepropertyaccessbyfieldtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="userid" type="xs:long" />
          <xs:element name="targetuserid" type="xs:long" />
          <xs:element name="officeid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonewithembeddedandnotoptionalfieldtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="userid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchgraphtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryscrollingwithinheritanceproxytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadanonexistingnotfoundbatchentitytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="number_of_entities" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setidentifieronaenhancedproxytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="lastchildid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ordersupplemental2" >
      <xs:sequence>
        <xs:element name="oid" type="xs:anyType" />
        <xs:element name="receivablesid" type="xs:anyType" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxydeletiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryscrollingwithinheritanceeagermanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyloadingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="parentid" type="xs:long" />
          <xs:element name="lastchildid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplelazygroupupdatetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="really_big_" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lgmb_from" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//lazy-attributewithoutlazygroup-annotation(thereforedefault-lazygroup)bigtext" type="xs:string" />
        <xs:element name="//lazy-associationwithmappdedbyinownlazygrouptorelation" type="lgmb_to" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidirectionallazygroupstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionallazygroupsinembeddabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazygrouptest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lgmb_to" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="fromrelation" type="lgmb_from" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyincachetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="orderid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uninitializedassociationsincachetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uninitializedlazybasiccachetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="personid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazybasicfieldnotinitializedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="entityid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unexpecteddeletetest3" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unexpecteddeletetest2" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="my" type="bar" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unexpecteddeletetest1" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="fooid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyloadingbyenhancersettertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name=",merged" type="item" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionallazytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazybasicfieldmergetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadedetachedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadedeletecollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="original" type="parent" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadewithfkconstrainttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="garageid,car1id,car2id" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadedeletemanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="original" type="child" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadeonuninitializedtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ondemandloadtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hhh3949test" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityupdatecachemodeignoretest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="company" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheannotationtests" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="entityid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytecodeenhancedimmutablereferencecachetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="continent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="user" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanycollectioncacheevictiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="referencecachetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="continent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="regionnametest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="cacheprefix" type="xs:string" />
          <xs:element name="localname" type="xs:string" />
          <xs:element name="prefixedname" type="xs:string" />
          <xs:element name="personrole" type="navigablerole" nillable="true" minOccurs="0" />
          <xs:element name="personnamerole" type="navigablerole" nillable="true" minOccurs="0" />
          <xs:element name="personnicknamesrole" type="navigablerole" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sharedregiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonrootentitywithcacheannotationtest" >
      <xs:complexContent>
       <xs:extension base="abase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonrootentitywithcacheableannotationtest" >
      <xs:complexContent>
       <xs:extension base="abase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectioncacheevictionwithoutmappedbytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="refreshupdateddatatest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheableitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shareddomaindataandqueryresultstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="query" type="xs:string" />
          <xs:element name="region" type="xs:string" />
          <xs:element name="prefix" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheditem1" >
      <xs:complexContent>
       <xs:extension base="abstractcacheditem">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcacheditem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheditem2" >
      <xs:complexContent>
       <xs:extension base="abstractcacheditem">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="it" >
      <xs:sequence>
        <xs:element name="key1" type="xs:anyType" />
        <xs:element name="key2" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="itwithpkclass" >
      <xs:sequence>
        <xs:element name="key1" type="xs:anyType" />
        <xs:element name="key2" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="role" >
      <xs:complexContent>
       <xs:extension base="versionedrecord">
         <xs:sequence>
          <xs:element name="" type="code" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessioncreatequeryfromcriteriatest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriaaliasfetchtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapsidonetooneselecttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listactionrole" >
      <xs:complexContent>
       <xs:extension base="versionedrecord">
         <xs:sequence>
          <xs:element name="role" type="code" nillable="true" minOccurs="0" />
          <xs:element name="" type="role" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="boughtfrom" type="seller" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seller" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="soldto" type="customer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="amount" type="xs:double" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="bids" type="bid" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="feature" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="//,cascade" type="feature" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonelazyorphanremovaltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetooneproxyorphanremovaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetooneeagernonoptionalorphanremovaltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tranche" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranchenmodell" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="y" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="y" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranche" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preisregelung" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranchenmodell" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="x" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranchenmodell" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tranchenmodell" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="tranchen" type="tranche" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="preisregelung" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="x" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tranchenmodell" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="tranchen" type="tranche" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="preisregelung" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tranche" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranchenmodell" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preisregelung" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranchenmodell" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonelazynonoptionalorphanremovaltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetooneeagerorphanremovaltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querystatsmaxsizetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hsqltruncfunctiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverdialectcollationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverdialecttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="GeneratedName" type="folder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceinformationmariadbtest" >
      <xs:complexContent>
       <xs:extension base="		baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="connectionprovider" type="drivermanagerconnectionproviderimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="owner" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hanabooleantest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="entity_name" type="xs:string" />
          <xs:element name="legacy_entity_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverdialecttemptablecollationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="originaldbcollation" type="xs:string" />
          <xs:element name="changeddbcollation" type="xs:string" />
          <xs:element name="collationchanged" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hanadecimaltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="entity_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product2" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="category" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hanacalcviewtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="calc_view_name" type="xs:string" />
          <xs:element name="calc_scenario_name" type="xs:string" />
          <xs:element name="projection_node_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverdialectpaginationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclefollowonlockingtest" >
      <xs:complexContent>
       <xs:extension base="		basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequenceinformationtest" >
      <xs:complexContent>
       <xs:extension base="		baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="products" type="product2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hanasearchtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="entity_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsequenceinformationextractortest" >
      <xs:complexContent>
       <xs:extension base="sequenceinformationextractor>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nationalizedignorecasetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usereservedkeywordinorderbytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqlorderbyidstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="omitancestorjoinwhencommonsecondarytablepresenttest" >
      <xs:complexContent>
       <xs:extension base="omitancestortestcase">
         <xs:sequence>
          <xs:element name="secondary_table_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="omitancestorjointest" >
      <xs:complexContent>
       <xs:extension base="omitancestortestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="omitancestorjoinwhensecondarytablepresenttest" >
      <xs:complexContent>
       <xs:extension base="omitancestortestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryhinthanatest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryhinttest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryhintsqlserver2012test" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="shop" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oraclepaginationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriaquerywithappliedfiltertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="student_id" type="identifier" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filterwitsubselectfetchmodetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanywithdynamicfiltertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filterdotnametest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanywithdynamicfiltertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchoptimisticlockingtest" >
      <xs:complexContent>
       <xs:extension base="		basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchingbatchfailuretest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optionalsecondarytablebatchtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="companies" type="company" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonbatchingbatchfailuretest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchinginheritancedeletetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iamafoo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conversionautoapplytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="price" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="quantity" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="theentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="theentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="theentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validnocdisupporttest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityloadedintwophaseloadtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="fetch_profile_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="fetch_profile_tree" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="minions" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionloadedintwophaseloadtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="//note//therearetwofetchprofilesbecausewheniuseonlyonetherelationorgunit.people//ismissinginthefetchprofile.//itismissingbecauseoflogicinfetchprofile.addfetch().donotunderstandtheimplementation//ofthemethodnow,sotheworkaroundistousetwofetchprofiles.fetch_profile_name" type="xs:string" />
          <xs:element name="fetch_profile_name_2" type="xs:string" />
          <xs:element name="ou_1" type="xs:string" />
          <xs:element name="ou_2" type="xs:string" />
          <xs:element name="p_1" type="xs:string" />
          <xs:element name="p_2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyduplicateinsertiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="parentid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:complexContent>
       <xs:extension base="product">
         <xs:sequence>
          <xs:element name="isbn" type="xs:string" />
          <xs:element name="" type="library" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="library" >
      <xs:sequence>
        <xs:element name="entid" type="xs:long" />
        <xs:element name="booksoninventory" type="xs:anyType" />
        <xs:element name="booksonisbn" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="entid" type="xs:long" />
        <xs:element name="inventorycode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="library" >
      <xs:sequence>
        <xs:element name="entid" type="xs:long" />
        <xs:element name="booksoninventory" type="xs:anyType" />
        <xs:element name="booksonisbn" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="entid" type="xs:long" />
        <xs:element name="inventorycode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:complexContent>
       <xs:extension base="product">
         <xs:sequence>
          <xs:element name="isbn" type="xs:string" />
          <xs:element name="" type="library" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="entid" type="xs:long" />
        <xs:element name="inventorycode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:complexContent>
       <xs:extension base="product">
         <xs:sequence>
          <xs:element name="isbn" type="xs:string" />
          <xs:element name="" type="library" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="library" >
      <xs:sequence>
        <xs:element name="entid" type="xs:long" />
        <xs:element name="booksoninventory" type="xs:anyType" />
        <xs:element name="booksonisbn" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiloadtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiloadsubselectcollectiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonemergetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removeorderingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicgetloadaccesstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxiedgetloadaccesstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergemanagedandcopiesallowedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="catalogfiltertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="" type="metadata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemafiltertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="serviceregistry" type="standardserviceregistryimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="metadata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencefiltertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="serviceregistry" type="standardserviceregistryimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="metadata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicstreamtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpastreamtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statelesssessionpersistentcontexttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statelesssessionconnectiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statelessdoworktest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="expected_entity_name" type="xs:string" />
          <xs:element name="persisted_test_entity_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statelesssessionnativequeryinserttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="sku" type="xs:string" />
        <xs:element name="GeneratedName" type="vendor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="producer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vendor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="producer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidenumeratedjavatypetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ordinalenumtypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="binderloginspection" type="xs:anyType" />
          <xs:element name="extractorloginspection" type="xs:anyType" />
          <xs:element name="" type="person" nillable="true" minOccurs="0" />
          <xs:element name="binder" type="xs:anyType" />
          <xs:element name="extractor" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbulkidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbulkcompositeidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="globalquotedidentifiersbulkidtest" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wildflyddlentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergenerationexceptionhandlingtest" >
      <xs:complexContent>
       <xs:extension base="baseexceptionhandlingtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stateobjectstateexceptionhandlingtest" >
      <xs:complexContent>
       <xs:extension base="baseexceptionhandlingtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonactivetransactionsessionfindjdbcexceptionhandlingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constraintviolationexceptionhandlingtest" >
      <xs:complexContent>
       <xs:extension base="baseexceptionhandlingtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionexceptionhandlingtest" >
      <xs:complexContent>
       <xs:extension base="baseexceptionhandlingtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transientobjectexceptionhandlingtest" >
      <xs:complexContent>
       <xs:extension base="baseexceptionhandlingtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryexceptionhandlingtest" >
      <xs:complexContent>
       <xs:extension base="baseexceptionhandlingtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="children" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="acces" >
      <xs:sequence>
        <xs:element name="idpk" type="xs:anyType" />
        <xs:element name="idpkdracc" type="droitacces" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="idpk" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="benefserv" >
      <xs:sequence>
        <xs:element name="idpk" type="xs:anyType" />
        <xs:element name="idpkser" type="service" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="parent" type="c" nillable="true" minOccurs="0" />
        <xs:element name="sequencenumber" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="droitacces" >
      <xs:sequence>
        <xs:element name="idpk" type="xs:anyType" />
        <xs:element name="idpkbenef" type="benefserv" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="prent" type="a" nillable="true" minOccurs="0" />
        <xs:element name="sequencenumber" type="xs:long" />
        <xs:element name="children" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storecustomer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="store" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cardkey" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="students" type="coursestudent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shoppingbaskets" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="owner" type="customers" nillable="true" minOccurs="0" />
        <xs:element name="basketdatetime" type="xs:anyType" />
        <xs:element name="items" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="card" >
      <xs:sequence>
        <xs:element name="primarykey" type="xs:anyType" />
        <xs:element name="fields" type="cardfield" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="main" type="cardfield" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="project" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basketitems" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="GeneratedName" type="shoppingbaskets" nillable="true" minOccurs="0" />
        <xs:element name="cost" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="customers" type="storecustomer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="coursestudent" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="student" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="stores" type="storecustomer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cardfield" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="primarykey" nillable="true" minOccurs="0" />
        <xs:element name="tmp" type="card" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="courses" type="coursestudent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customers" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="customerid" type="xs:long" />
        <xs:element name="shoppingbasketses" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatetimestampinheritancetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="sleep_millis" type="xs:long" />
          <xs:element name="customerid" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="someentity" >
      <xs:sequence>
        <xs:element name="id" type="someentityid" nillable="true" minOccurs="0" />
        <xs:element name="prop" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeididentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tvmagazin" >
      <xs:sequence>
        <xs:element name="id" type="tvmagazinpk" nillable="true" minOccurs="0" />
        <xs:element name="time" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="childpk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cardfield" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="primarykey" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="card" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="fields" type="cardfield" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="key" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderline" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="parentpk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tvprogramidclass" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="channel" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="presenter" nillable="true" minOccurs="0" />
        <xs:element name="time" type="xs:dateTime" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="channel" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="presenter" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidfkgeneratedvaluetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="littlegenius" >
      <xs:complexContent>
       <xs:extension base="child">
         <xs:sequence>
          <xs:element name="particularskill" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeidfkgeneratedvalueidentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tvprogram" >
      <xs:sequence>
        <xs:element name="id" type="tvmagazinpk" nillable="true" minOccurs="0" />
        <xs:element name="time" type="xs:dateTime" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="aid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
        <xs:element name="xraydata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="//allattributesmaptorelationship:attributeoverridenotallowedid" type="personid" nillable="true" minOccurs="0" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
        <xs:element name="nickname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//idattributemappedbyjoincolumndefaultemp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="query_all" type="xs:string" />
        <xs:element name="query_count" type="xs:string" />
        <xs:element name="query_by_credit" type="xs:string" />
        <xs:element name="bad_credit" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="contact" type="xs:string" />
        <xs:element name="credit" type="xs:string" />
        <xs:element name="creditlimit" type="xs:anyType" />
        <xs:element name="since" type="xs:anyType" />
        <xs:element name="balance" type="xs:anyType" />
        <xs:element name="ytdpayment" type="xs:anyType" />
        <xs:element name="customerinventories" type="customerinventory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customertwo" >
      <xs:sequence>
        <xs:element name="query_all" type="xs:string" />
        <xs:element name="query_count" type="xs:string" />
        <xs:element name="query_by_credit" type="xs:string" />
        <xs:element name="bad_credit" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="contact" type="xs:string" />
        <xs:element name="credit" type="xs:string" />
        <xs:element name="creditlimit" type="xs:anyType" />
        <xs:element name="since" type="xs:anyType" />
        <xs:element name="balance" type="xs:anyType" />
        <xs:element name="ytdpayment" type="xs:anyType" />
        <xs:element name="customerinventories" type="customerinventorytwo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerinventorytwo" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="custid" type="xs:long" />
        <xs:element name="customer" type="customertwo" nillable="true" minOccurs="0" />
        <xs:element name="vehicle" type="item" nillable="true" minOccurs="0" />
        <xs:element name="totalcost" type="xs:anyType" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerinventory" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="custid" type="xs:long" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="vehicle" type="item" nillable="true" minOccurs="0" />
        <xs:element name="totalcost" type="xs:anyType" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="query_by_category" type="xs:string" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="discount" type="xs:anyType" />
        <xs:element name="category" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exclusivedependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="//@joincolumn(name" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="query_by_category" type="xs:string" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="discount" type="xs:anyType" />
        <xs:element name="category" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerinventory" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="vehicle" type="item" nillable="true" minOccurs="0" />
        <xs:element name="totalcost" type="xs:anyType" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="query_all" type="xs:string" />
        <xs:element name="query_count" type="xs:string" />
        <xs:element name="query_by_credit" type="xs:string" />
        <xs:element name="bad_credit" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="contact" type="xs:string" />
        <xs:element name="credit" type="xs:string" />
        <xs:element name="creditlimit" type="xs:anyType" />
        <xs:element name="since" type="xs:anyType" />
        <xs:element name="balance" type="xs:anyType" />
        <xs:element name="ytdpayment" type="xs:anyType" />
        <xs:element name="customerinventories" type="customerinventory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employer" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="//idattributemappedbyjoincolumndefaultid" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="personid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="//allattributesmaptorelationship:attributeoverridenotallowedid" type="personid" nillable="true" minOccurs="0" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="personid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="//overridingnotallowed...//defaultjoincolumnnameisoverridden@mapsidid" type="xs:string" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="financialhistory" >
      <xs:sequence>
        <xs:element name="//overridingnotallowed...//defaultjoincolumnnameisoverridden@mapsidid" type="xs:string" />
        <xs:element name="lastup" type="xs:dateTime" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="financialhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="policy" >
      <xs:sequence>
        <xs:element name="id" type="policyid" nillable="true" minOccurs="0" />
        <xs:element name="dep" type="dependent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="//defaultcolumnnameisoverriddenname" type="xs:string" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="//defaultcolumnnamefor"name"attributeisoverriddenid" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="policy" >
      <xs:sequence>
        <xs:element name="id" type="policyid" nillable="true" minOccurs="0" />
        <xs:element name="dep" type="dependent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lineitems" type="orderline" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderline" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="amount" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="personinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
        <xs:element name="dependents" type="dependent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="foo" nillable="true" minOccurs="0" />
        <xs:element name="details" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="bar" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidderivedidwithidclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personinfo" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="person" nillable="true" minOccurs="0" />
        <xs:element name="info" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyset" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="some" type="property" nillable="true" minOccurs="0" />
        <xs:element name="generalproperties" type="property" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="charproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="character" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedanytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integerproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertylist" >
      <xs:complexContent>
       <xs:extension base="property>">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="somepropery" type="xs:anyType" />
          <xs:element name="generalproperties" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazypropertyset" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="some" type="property" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertymap" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="properties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="goalkeeper" >
      <xs:complexContent>
       <xs:extension base="footballer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="breakdance" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tower" >
      <xs:complexContent>
       <xs:extension base="militarybuilding">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bunny" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="teeth" type="pointytooth" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="toes" type="twinkletoes" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ball" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twinkletoes" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bunny" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shoe" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballer" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="club" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monkey" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soundsystem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pointytooth" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bunny" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="firtree" >
      <xs:complexContent>
       <xs:extension base="tree">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="serialnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planetcheatsheet" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="planet" nillable="true" minOccurs="0" />
        <xs:element name="mass" type="xs:double" />
        <xs:element name="radius" type="xs:double" />
        <xs:element name="numberofinhabitants" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatesequenceentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="completesequenceentity" >
      <xs:sequence>
        <xs:element name="seq_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="minimaltableentity" >
      <xs:sequence>
        <xs:element name="tbl_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dedicatedsequenceentity2" >
      <xs:sequence>
        <xs:element name="entity_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dedicatedsequenceentity1" >
      <xs:sequence>
        <xs:element name="sequence_suffix" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="minimalsequenceentity" >
      <xs:sequence>
        <xs:element name="seq_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="serialnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twinkletoes" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bunny" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ball" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shoe" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hotel" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="firtree" >
      <xs:complexContent>
       <xs:extension base="tree">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballer" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="club" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tower" >
      <xs:complexContent>
       <xs:extension base="militarybuilding">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="goalkeeper" >
      <xs:complexContent>
       <xs:extension base="footballer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bunny" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="teeth" type="pointytooth" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="toes" type="twinkletoes" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soundsystem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monkey" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planetcheatsheet" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="planet" nillable="true" minOccurs="0" />
        <xs:element name="mass" type="xs:double" />
        <xs:element name="radius" type="xs:double" />
        <xs:element name="numberofinhabitants" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="breakdance" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pointytooth" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bunny" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="andformulatest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sky" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="color" type="xs:string" />
        <xs:element name="day" type="xs:string" />
        <xs:element name="month" type="xs:string" />
        <xs:element name="area" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loaderwithinvalidquerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="player" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="team" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="team" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="players" type="player" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clothes" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="flavor" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vendor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bag" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="serial" type="xs:string" />
        <xs:element name="owner" type="rambler" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inhabitant" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="livesin" type="house" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rambler" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bags" type="bag" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="houseplaces" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="places" nillable="true" minOccurs="0" />
        <xs:element name="neighbour" type="places" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="itemcost" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="vendor" nillable="true" minOccurs="0" />
        <xs:element name="cost" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="luggage" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="owner" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="hasinside" type="clothes" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="house" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="GeneratedName" type="postman" nillable="true" minOccurs="0" />
        <xs:element name="hasinhabitants" type="inhabitant" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warehouseitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="vendor" nillable="true" minOccurs="0" />
        <xs:element name="defaultcost" type="itemcost" nillable="true" minOccurs="0" />
        <xs:element name="qtyinstock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postman" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="place" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="owner" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiple" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="id3" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple2" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storm" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="start" type="location" nillable="true" minOccurs="0" />
        <xs:element name="end" type="location" nillable="true" minOccurs="0" />
        <xs:element name="stormname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="domainadmin" >
      <xs:sequence>
        <xs:element name="domainname" type="xs:string" />
        <xs:element name="adminuser" type="xs:string" />
        <xs:element name="nickname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclassmappedsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listmappingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flight" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gardenshed" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="brand" type="xs:string" />
          <xs:element name="floors" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="square" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="position" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bigbed" >
      <xs:complexContent>
       <xs:extension base="bed">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course6" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="being" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bed" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="quality" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course7" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chair" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="pillow" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gardenshed" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="brand" type="xs:string" />
          <xs:element name="floors" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="friends" type="user" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course5" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="being">
         <xs:sequence>
          <xs:element name="firstname" type="xs:string" />
          <xs:element name="lastname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="circle" >
      <xs:complexContent>
       <xs:extension base="shape">
         <xs:sequence>
          <xs:element name="" type="color" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horse" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="shape" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course8" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:complexContent>
       <xs:extension base="woody">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="brand" type="xs:string" />
          <xs:element name="weight" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tourist" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="destination" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rentalcar" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="driver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cook" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="favouriteknife" type="knive" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="waiter" >
      <xs:complexContent>
       <xs:extension base="crew">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="driver" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boy" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="nicknames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bed" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="quality" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigbed" >
      <xs:complexContent>
       <xs:extension base="bed">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributeaccessortest" >
      <xs:complexContent>
       <xs:extension base="propertyaccessstrategybasicimpl">
         <xs:sequence>
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:complexContent>
       <xs:extension base="basefurniture">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foobar" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chair" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="pillow" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a320" >
      <xs:complexContent>
       <xs:extension base="plane">
         <xs:sequence>
          <xs:element name="javaembeddedversion" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="port" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="boats" type="boat" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plane" >
      <xs:complexContent>
       <xs:extension base="flyingobject">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="nbrofseats" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatedetachedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="savingsaccount" >
      <xs:complexContent>
       <xs:extension base="savingsaccountbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:complexContent>
       <xs:extension base="accountbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="productsqlserver" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="productidnf" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="productfamily" type="productsqlserver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="companyid" type="xs:long" />
        <xs:element name="defaultflag" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contract" >
      <xs:sequence>
        <xs:element name="contractnumber" type="xs:string" />
        <xs:element name="//integercompanycodeid" type="contractid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="manufacturer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="model" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="menu" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="ordernbr" type="xs:string" />
        <xs:element name="isdefault" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="message" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="languagecode" type="xs:string" />
        <xs:element name="languagename" type="xs:string" />
        <xs:element name="GeneratedName" type="language" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="model" >
      <xs:sequence>
        <xs:element name="id" type="modelid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manufacturer" >
      <xs:sequence>
        <xs:element name="id" type="manufacturerid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fooditem" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="item" type="xs:string" />
        <xs:element name="order" type="menu" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="productidnf" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="family" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="language" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boat" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="weight" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="death" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="howdoesithappen" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="life" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="duration" type="xs:long" />
        <xs:element name="fulldescription" type="xs:string" />
        <xs:element name="owner" type="cat" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sysuserorm" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="groups" type="sysgroupsorm" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sysgroupsorm" >
      <xs:sequence>
        <xs:element name="groupid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplecat" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="life" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="duration" type="xs:long" />
        <xs:element name="fulldescription" type="xs:string" />
        <xs:element name="owner" type="simplecat" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="b">
         <xs:sequence>
          <xs:element name="age" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="secondname" type="xs:string" />
        <xs:element name="storypart1" type="xs:string" />
        <xs:element name="storypart2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="id" type="dogpk" nillable="true" minOccurs="0" />
        <xs:element name="weight" type="xs:long" />
        <xs:element name="thoroughbredname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
        <xs:element name="single" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="citizen" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="GeneratedName" type="state" nillable="true" minOccurs="0" />
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ds" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="single" type="d" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="accountid" type="aid" nillable="true" minOccurs="0" />
        <xs:element name="shortcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidonmanytoone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="citizen" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dictionary" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="editor" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twilight" >
      <xs:complexContent>
       <xs:extension base="darkness">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attrset" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="attrvalues" type="attrvalue" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mark" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="casimirparticle" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedquerytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="game_titles" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="employeegroup" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="attrset" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="night" >
      <xs:complexContent>
       <xs:extension base="darkness">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="duration" type="xs:long" />
          <xs:element name="" type="xs:dateTime" />
          <xs:element name="" type="area" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alltables" >
      <xs:sequence>
        <xs:element name="tablename" type="xs:string" />
        <xs:element name="daysold" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chaos" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nickname" type="xs:string" />
        <xs:element name="particles" type="casimirparticle" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="area" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spaceship" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="speed" type="xs:double" />
        <xs:element name="GeneratedName" type="captain" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dimensions" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synonymousdictionary" >
      <xs:complexContent>
       <xs:extension base="dictionary">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attrvalue" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="captain" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeegroup" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="attrset" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="materializedblobentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="thes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedbook" >
      <xs:complexContent>
       <xs:extension base="abstractbook{">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="version" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:complexContent>
       <xs:extension base="abstractbook">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lobvalue" type="xs:anyType" />
        <xs:element name="qwerty" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="locator" type="xs:anyType" />
        <xs:element name="locator" type="xs:anyType" />
        <xs:element name="counter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compiledcode" >
      <xs:complexContent>
       <xs:extension base="abstractcompiledcode">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longstringholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="whatever" type="character" nillable="true" minOccurs="0" />
        <xs:element name="long" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityserialize" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="explicitlob" type="explicitserializable" nillable="true" minOccurs="0" />
        <xs:element name="explicit" type="explicitserializable" nillable="true" minOccurs="0" />
        <xs:element name="implicit" type="implicitserializable" nillable="true" minOccurs="0" />
        <xs:element name="explicitoverridingimplicit" type="implicitserializable" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="imageholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="longarray" type="xs:anyType" />
        <xs:element name="GeneratedName" type="dog" nillable="true" minOccurs="0" />
        <xs:element name="picarray" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="revision" type="xs:anyType" />
        <xs:element name="fulltext" type="xs:string" />
        <xs:element name="shortdescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedcompiledcode" >
      <xs:complexContent>
       <xs:extension base="abstractcompiledcode{">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="version" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondarytableschematest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inmemorycreationtimestampnullablecolumntest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="customer" type="customer6" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="supporttickets" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="resolution" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="last" type="order" nillable="true" minOccurs="0" />
        <xs:element name="tickets" type="supporttickets" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="ordernumber" type="xs:long" />
        <xs:element name="delivery" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer6" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer5" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="codedpairholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="pair" type="personpair" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tooth" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="leftneighbour" type="tooth" nillable="true" minOccurs="0" />
        <xs:element name="rightneighbour" type="tooth" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mouth" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mouth" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="teeth" type="tooth" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="codedpairsetholder" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="pairs" type="personpair" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:long" />
        <xs:element name="/***/children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***/default" type="child" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="/***/id" type="xs:long" />
        <xs:element name="/***/" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deck" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="cards" type="card" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="card" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="deck" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longkeynamingstrategytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="addresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:long" />
        <xs:element name="address" type="addressentry" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcharsetnamingstrategytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="entity1_prop1" type="xs:string" />
          <xs:element name="entity1_prop2" type="xs:string" />
          <xs:element name="entity1_prop3" type="xs:string" />
          <xs:element name="entity1_prop4" type="xs:string" />
          <xs:element name="entity1_prop5" type="xs:string" />
          <xs:element name="entity1_prop6" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="entity2_prop1" type="xs:string" />
          <xs:element name="entity2_prop2" type="xs:string" />
          <xs:element name="entity2_prop3" type="xs:string" />
          <xs:element name="entity2_prop4" type="xs:string" />
          <xs:element name="entity2_prop5" type="xs:string" />
          <xs:element name="entity2_prop6" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dvd" >
      <xs:sequence>
        <xs:element name="id" type="myoid" nillable="true" minOccurs="0" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="contactinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyrecord" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parcels" type="xs:anyType" />
        <xs:element name="legacyparcels" type="xs:anyType" />
        <xs:element name="unsortedparcels" type="propertyinfo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="legacyunsortedparcels" type="propertyinfo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="socialsite" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="website" type="xs:string" />
        <xs:element name="employee" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityinheritanceattributeoverridetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclassattributeoverridetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritedattributeoverridingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blogentry" >
      <xs:complexContent>
       <xs:extension base="entry">
         <xs:sequence>
          <xs:element name="text" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="trip" >
      <xs:complexContent>
       <xs:extension base="move">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addr" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="zipcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedsuperclassbasicpropertyidattributeoverridetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclasswithuuidasid" >
      <xs:complexContent>
       <xs:extension base="mappedsuperclasswithuuidasbasic">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="someotherentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:anyType" />
        <xs:element name="data" type="xs:anyType" />
        <xs:element name="//settingaarbitraryacterheretomakethistestalsopassagainstpostgresql//postgresqlthrowsotherwiseanexceptionwhenpersistingthenullvalue//org.postgresql.util.psqlexception:error:invalidbytesequenceforencoding"utf8":0x00acterdata" type="xs:anyType" />
        <xs:element name="data" type="xs:long" />
        <xs:element name="egerdata" type="xs:long" />
        <xs:element name="data" type="xs:long" />
        <xs:element name="data" type="xs:double" />
        <xs:element name="data" type="xs:double" />
        <xs:element name="GeneratedName" type="grade" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="someentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="timedata" type="xs:anyType" />
        <xs:element name="tsdata" type="xs:anyType" />
        <xs:element name="data" type="xs:anyType" />
        <xs:element name="chardata" type="character" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notfoundonetoonenoninsertablenonupdateabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notfoundtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonenotfoundtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notfoundlogicalonetoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doctor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="activelicense" type="xs:anyType" />
        <xs:element name="yearsexperience" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="narrative" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="GeneratedName" type="topic" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="topic" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="narratives" type="narrative" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formallastname" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="lastname" nillable="true" minOccurs="0" />
        <xs:element name="designation" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zipcode" >
      <xs:sequence>
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="forest" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="longdescription" type="xs:string" />
        <xs:element name="smalltext" type="xs:string" />
        <xs:element name="bigtext" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="near" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localcontactdetails" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="local" type="phonenumber" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="overseasphonenumber" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="player" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="team" type="soccerteam" nillable="true" minOccurs="0" />
        <xs:element name="//fortheworldcupofoneversusonematches,wehave//teamswithoneplayer(1v1team).onevoneteam" type="soccerteam" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flight" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="maxaltitudeinmilimeter" type="xs:long" />
        <xs:element name="maxaltitude" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="month" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="year" type="xs:long" />
        <xs:element name="month" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="washingmachine" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="transientisactive" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="communitybid" >
      <xs:complexContent>
       <xs:extension base="bid">
         <xs:sequence>
          <xs:element name="communitynote" type="starred" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="powerdrill" >
      <xs:complexContent>
       <xs:extension base="drill">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="forest2" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="longdescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="peugot" >
      <xs:complexContent>
       <xs:extension base="car">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="race" >
      <xs:sequence>
        <xs:element name="length" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soccerteam" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="physiologists" type="doctor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="players" type="player" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="onevone" type="player" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tree" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="note" type="starred" nillable="true" minOccurs="0" />
        <xs:element name="editorsnote" type="starred" nillable="true" minOccurs="0" />
        <xs:element name="approved" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:complexContent>
       <xs:extension base="firstname">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="" type="lastname" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contactdetails" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="local" type="phonenumber" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="overseasphonenumber" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ransom" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="kidnappername" type="xs:string" />
        <xs:element name="amount" type="monetaryamount" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="drill" >
      <xs:complexContent>
       <xs:extension base="tool">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="marketregion" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="regioncode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:complexContent>
       <xs:extension base="automobile">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="model" type="xs:string" />
          <xs:element name="" type="marketregion" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sportcar" >
      <xs:complexContent>
       <xs:extension base="car">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="son" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="father" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mother" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mother" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="sons" type="son" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="father" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="orderedsons" type="son" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a320b" >
      <xs:complexContent>
       <xs:extension base="a320">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatetimestamptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tuplizerinstantiatesbytebuddysubclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cuisine" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="databasecreationtimestampnullablecolumntest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="match" >
      <xs:complexContent>
       <xs:extension base="competition">
         <xs:sequence>
          <xs:element name="competitor1point" type="xs:string" />
          <xs:element name="version" type="xs:anyType" />
          <xs:element name="playerassn" type="socialsecuritynumber" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="socialsecuritymoralaccount" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="countrycode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bustrip" >
      <xs:sequence>
        <xs:element name="id" type="bustrippk" nillable="true" minOccurs="0" />
        <xs:element name="status" type="availability" nillable="true" minOccurs="0" />
        <xs:element name="serial" type="xs:anyType" />
        <xs:element name="terminustime" type="xs:dateTime" />
        <xs:element name="players" type="xs:anyType" />
        <xs:element name="roads" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="socialsecurityphysicalaccount" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="countrycode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="administration" >
      <xs:complexContent>
       <xs:extension base="organization">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="firstname" type="xs:string" />
          <xs:element name="lastname" type="xs:string" />
          <xs:element name="address" type="xs:string" />
          <xs:element name="version" type="xs:anyType" />
          <xs:element name="transientfield" type="xs:string" />
          <xs:element name="default" type="bustrip" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="organizations" type="organization" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaoverriddenannotationreadertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tennismatch" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competitor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contest" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="results" type="competitor" nillable="true" minOccurs="0" />
        <xs:element name="heldin" type="month" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tomato" >
      <xs:complexContent>
       <xs:extension base="vegetable">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="symboliclink" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="target" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="children" type="file" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="file" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="apple" >
      <xs:complexContent>
       <xs:extension base="fruit">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventinformation" >
      <xs:sequence>
        <xs:element name="notificationid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyasset" >
      <xs:complexContent>
       <xs:extension base="asset">
         <xs:sequence>
          <xs:element name="price" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="financialasset" >
      <xs:complexContent>
       <xs:extension base="asset">
         <xs:sequence>
          <xs:element name="price" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="symboliclink" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="target" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pool" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="address" type="pooladdress" nillable="true" minOccurs="0" />
        <xs:element name="secondaryaddress" type="pooladdress" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="propertyass" type="set" nillable="true" minOccurs="0" />
        <xs:element name="financialass" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sweater" >
      <xs:complexContent>
       <xs:extension base="clothing">
         <xs:sequence>
          <xs:element name="issweat" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clothing" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="asset" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:complexContent>
       <xs:extension base="customer">
         <xs:sequence>
          <xs:element name="companyname" type="xs:string" />
          <xs:element name="companyaddress" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="swimmingpool" >
      <xs:complexContent>
       <xs:extension base="pool">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="children" type="file" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="clients" type="client" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="balance" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programexecution" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="action" type="xs:string" />
        <xs:element name="applieson" type="file" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alarm" >
      <xs:complexContent>
       <xs:extension base="eventinformation">
         <xs:sequence>
          <xs:element name="eventinfo" type="eventinformation" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="file" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="firtsname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="client" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="street" type="xs:string" />
          <xs:element name="code" type="xs:string" />
          <xs:element name="city" type="xs:string" />
          <xs:element name="" type="account" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="legalentity">
         <xs:sequence>
          <xs:element name="customername" type="xs:string" />
          <xs:element name="customercode" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="carrot" >
      <xs:complexContent>
       <xs:extension base="vegetable">
         <xs:sequence>
          <xs:element name="length" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fruit" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="symboliclink" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="target" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="file" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="children" type="file" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rock" >
      <xs:complexContent>
       <xs:extension base="music">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="papertrash" >
      <xs:complexContent>
       <xs:extension base="trash">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="funk" >
      <xs:complexContent>
       <xs:extension base="music">
         <xs:sequence>
          <xs:element name="starred" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="duplicateddiscriminatorvaluetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="discriminator_value" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="music" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="avgbeat" type="xs:long" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="building" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="street" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trash" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noise" >
      <xs:complexContent>
       <xs:extension base="music">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="house" >
      <xs:complexContent>
       <xs:extension base="building">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vegetable" >
      <xs:sequence>
        <xs:element name="id" type="vegetablepk" nillable="true" minOccurs="0" />
        <xs:element name="priceincent" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclass" >
      <xs:complexContent>
       <xs:extension base="baseclass">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclass2" >
      <xs:complexContent>
       <xs:extension base="baseclass2">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseclass2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stamp" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="passport" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stamps" type="stamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="//todotestidentitygeneratorvisastamp" type="stamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bugsystem" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="bugs" type="bug" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="matrix" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="mvalues" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithanelementcollection" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="somestrings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nicknamesascendingnaturalsort" type="xs:anyType" />
        <xs:element name="nicknamesdescendingnaturalsort" type="xs:anyType" />
        <xs:element name="addressesascendingnaturalsort" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="addressesdescendingnaturalsort" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="addressescityascendingsort" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="addressescitydescendingsort" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="poi" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="raceexecution" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="poiarrival" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="widgets" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boy" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="nicknames" type="xs:anyType" />
        <xs:element name="hatednames" type="xs:anyType" />
        <xs:element name="preferrednames" type="xs:anyType" />
        <xs:element name="scorepernickname" type="xs:anyType" />
        <xs:element name="scoreperpreferredname" type="xs:anyType" />
        <xs:element name="favoritenumbers" type="xs:long" />
        <xs:element name="favoritetoys" type="toy" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="characters" type="character" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="foods" type="xs:anyType" />
        <xs:element name="countryattitudes" type="countryattitude" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="comment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="listofb" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="products" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="widgets" type="widgets" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablecollectionelementwithlazymanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcourse" >
      <xs:sequence>
        <xs:element name="testcourseid" type="xs:long" />
        <xs:element name="title" type="localizedstring" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="query" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="includedlocations" type="location" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sale" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="contacts" type="contact" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="elements" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="incorrectentity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stay" >
      <xs:sequence>
        <xs:element name="//memberdeclarationid" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="old" type="person" nillable="true" minOccurs="0" />
        <xs:element name="veryold" type="person" nillable="true" minOccurs="0" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="vessel" type="xs:string" />
        <xs:element name="authoriser" type="xs:string" />
        <xs:element name="comments" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="leaf" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="branch" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="branch" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="leaves" type="leaf" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="//memberdeclarationid" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="companyname" type="xs:string" />
        <xs:element name="stays" type="stay" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="oldstays" type="stay" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="veryoldstays" type="stay" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="orderedstay" type="stay" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flight" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="transientduration" type="xs:long" />
        <xs:element name="durationinsec" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="GeneratedName" type="company" nillable="true" minOccurs="0" />
        <xs:element name="triggereddata" type="xs:string" />
        <xs:element name="factor" type="xs:long" />
        <xs:element name="departure" type="xs:dateTime" />
        <xs:element name="buydate" type="xs:anyType" />
        <xs:element name="alternativedeparturedate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creationtimestamptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dbtimestamped" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="staff" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="sizeininches" type="xs:double" />
        <xs:element name="radiuss" type="xs:double" />
        <xs:element name="diameter" type="xs:double" />
        <xs:element name="kooky" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicule" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="registrationnumber" type="xs:string" />
        <xs:element name="current" type="conductor" nillable="true" minOccurs="0" />
        <xs:element name="year" type="xs:anyType" />
        <xs:element name="previous" type="conductor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="professionalagreement" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="expiration" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conductor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="truck" >
      <xs:complexContent>
       <xs:extension base="vehicule">
         <xs:sequence>
          <xs:element name="weight" type="xs:long" />
          <xs:element name="agreement" type="professionalagreement" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vmtimestamped" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="antenna" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="longitude" type="xs:string" />
        <xs:element name="latitude" type="xs:string" />
        <xs:element name="power" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="highestbid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="amount" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="itemid" type="xs:long" />
        <xs:element name="amount" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exchangerate" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="rate" type="xs:double" />
        <xs:element name="key" type="exchangeratekey" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="exchangeoffice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="atmosphere" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="gases" type="xs:anyType" />
        <xs:element name="colorperdate" type="xs:anyType" />
        <xs:element name="colorperlevel" type="xs:anyType" />
        <xs:element name="gasesperkey" type="xs:anyType" />
        <xs:element name="composition" type="xs:anyType" />
        <xs:element name="gasesdef" type="xs:anyType" />
        <xs:element name="gasesdefleg" type="xs:anyType" />
        <xs:element name="gasesperkeydef" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exchangeoffice" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="exchangerates" type="xs:anyType" />
        <xs:element name="exchangeratefees" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trainee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationuser" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="ref" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="atmosphere" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="gases" type="xs:anyType" />
        <xs:element name="colorperdate" type="xs:anyType" />
        <xs:element name="colorperlevel" type="xs:anyType" />
        <xs:element name="gasesperkey" type="xs:anyType" />
        <xs:element name="composition" type="xs:anyType" />
        <xs:element name="gasesdef" type="xs:anyType" />
        <xs:element name="gasesdefleg" type="xs:anyType" />
        <xs:element name="gasesperkeydef" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gas" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationgroup" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="generation" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="painter" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="paintings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="training" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="trainees" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newspaper" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="news" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="codename" type="xs:string" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="GeneratedName" type="software" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wardrobe" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="drawers" type="drawer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="currency" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="currency" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="software" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="versions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alphabeticaldirectory" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="drawer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="dresses" type="dress" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressentry" >
      <xs:sequence>
        <xs:element name="person" type="addressentrypk" nillable="true" minOccurs="0" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="book" type="addressbook" nillable="true" minOccurs="0" />
        <xs:element name="directory" type="alphabeticaldirectory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pressreleaseagency" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="providednews" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dress" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressbook" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="owner" type="xs:string" />
        <xs:element name="entries" type="xs:anyType" />
        <xs:element name="lastnameentries" type="xs:anyType" />
        <xs:element name="directoryentries" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="news" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="detail" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="painting" >
      <xs:sequence>
        <xs:element name="sizex" type="xs:long" />
        <xs:element name="sizey" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="painter" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gaskey" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="blacklistedzipcode" type="xs:string" />
        <xs:element name="line1" type="xs:string" />
        <xs:element name="line2" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="internalvalid" type="xs:anyType" />
        <xs:element name="floor" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ddlwithoutcallbacktest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="color" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tv" >
      <xs:sequence>
        <xs:element name="serial" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="exp" type="xs:dateTime" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="lifetime" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tvowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="tv" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cupholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="radius" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="powersupply" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="power" type="xs:anyType" />
        <xs:element name="position" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="minmax" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergenotnullcollectionusingidentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="screen" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="stop" type="button" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="powersupply" nillable="true" minOccurs="0" />
        <xs:element name="connectors" type="displayconnector" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="displaycolors" type="color" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="music" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergenotnullcollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="display" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brand" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rock" >
      <xs:complexContent>
       <xs:extension base="music">
         <xs:sequence>
          <xs:element name="bit" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="passport" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="owner" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionasbasictest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqldropconstraintthrowsexceptiontest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="room" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uniqueconstraintvalidationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="house" >
      <xs:complexContent>
       <xs:extension base="building">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="cost" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uniqueconstraintunittests" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uniqueconstraintthrowsconstraintviolationexceptiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="formulawithpartitionbytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinformulamanytoonenotignorelazyfetchingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinformulaonetomanynotignorelazyfetchingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="formulawithcolumntypestest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinformulaonetoonenotignorelazyfetchingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="formulawithaliastest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinformulamanytoonelazyfetchingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnorformulatest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="formulanativequerytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:sequence>
        <xs:element name="id" type="d_pk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classa" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="a_pk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classd" >
      <xs:complexContent>
       <xs:extension base="classc">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classb" >
      <xs:complexContent>
       <xs:extension base="classa">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="b">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classc" >
      <xs:complexContent>
       <xs:extension base="classb">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gsm" >
      <xs:complexContent>
       <xs:extension base="cellular">
         <xs:sequence>
          <xs:element name="frequency" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="voice" >
      <xs:complexContent>
       <xs:extension base="communication">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="street" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="streetname" type="xs:string" />
        <xs:element name="streetnamecopy" type="xs:string" />
        <xs:element name="GeneratedName" type="city" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="post" >
      <xs:complexContent>
       <xs:extension base="comment{">
         <xs:sequence>
          <xs:element name="comments" type="comment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="forum" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="posts" type="comment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="users" type="user" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computer" >
      <xs:complexContent>
       <xs:extension base="asset">
         <xs:sequence>
          <xs:element name="computername" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transaction" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="account" type="bankaccount" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="organisationuser" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="sometext" type="xs:string" />
          <xs:element name="" type="organisation" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="parentpk" nillable="true" minOccurs="0" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="cs" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="visitor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="asset" >
      <xs:sequence>
        <xs:element name="idasset" type="xs:anyType" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="organisation" >
      <xs:sequence>
        <xs:element name="idorganisation" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="organisationusers" type="organisationuser" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="troop" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="soldiers" type="soldier" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soldier" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="troop" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tiger" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="streets" type="street" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="mainstreets" type="street" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="comment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="post" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="forum" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="assets" type="asset" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="box" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="items" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="forum" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="politician" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="party" type="politicalparty" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="politicalparty" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="politicians" type="politician" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="favoritesuperhero" type="xs:string" />
        <xs:element name="favoritesinger" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zoo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="tigers" type="tiger" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="monkeys" type="monkey" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="visitors" type="visitor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bankaccount" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="transactions" type="transaction" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="schoolid" type="xs:string" />
        <xs:element name="schoolidsort" type="xs:anyType" />
        <xs:element name="academicyear" type="xs:anyType" />
        <xs:element name="itemlist" type="orderitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="idperson" type="xs:long" />
        <xs:element name="firstname,lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="model" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="manufacturer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="monkey" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bs" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trainer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="trainedtigers" type="tiger" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="trainedmonkeys" type="monkey" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="sortfield" type="xs:long" />
        <xs:element name="GeneratedName" type="box" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderitem" >
      <xs:sequence>
        <xs:element name="schoolid" type="xs:string" />
        <xs:element name="academicyear" type="xs:anyType" />
        <xs:element name="dayno" type="xs:anyType" />
        <xs:element name="dayname" type="xs:string" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ticket" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childhierarchy1" >
      <xs:complexContent>
       <xs:extension base="child<parenthierarchy1>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parenthierarchy22" >
      <xs:complexContent>
       <xs:extension base="parenthierarchy2<childhierarchy22>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childhierarchy22" >
      <xs:complexContent>
       <xs:extension base="childhierarchy2<parenthierarchy22>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parenthierarchy1" >
      <xs:complexContent>
       <xs:extension base="parent<childhierarchy1>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ferry" >
      <xs:complexContent>
       <xs:extension base="boat">
         <xs:sequence>
          <xs:element name="sea" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymapenum" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="ordinalmap" type="xs:anyType" />
        <xs:element name="stringmap" type="xs:anyType" />
        <xs:element name="firstlettermap" type="xs:anyType" />
        <xs:element name="lastnumbermap" type="xs:anyType" />
        <xs:element name="explicitoverridingimplicitmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumeratedsmoketest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="socialnetworkprofile" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="user" nillable="true" minOccurs="0" />
        <xs:element name="type" type="socialnetwork" nillable="true" minOccurs="0" />
        <xs:element name="networkid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="socialnetworkprofiles" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityenum" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="ordinal" type="common" nillable="true" minOccurs="0" />
        <xs:element name="string" type="common" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="firstletter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lastnumber" nillable="true" minOccurs="0" />
        <xs:element name="explicitoverridingimplicit" type="lastnumber" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="trimmed" nillable="true" minOccurs="0" />
        <xs:element name="formula" type="trimmed" nillable="true" minOccurs="0" />
        <xs:element name="set" type="common" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="americacupclass" >
      <xs:complexContent>
       <xs:extension base="boat">
         <xs:sequence>
          <xs:element name="" type="country" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="paper" >
      <xs:complexContent>
       <xs:extension base="item<papertype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dummy" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="transientdummyfield" type="k" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="papertype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="someguy" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dna" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="price" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="amount" type="xs:double" />
        <xs:element name="currency" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gene" >
      <xs:complexContent>
       <xs:extension base="enum>">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="state" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classes" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wildentity" >
      <xs:complexContent>
       <xs:extension base="object>">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="property" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primeminister" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="current" type="government" nillable="true" minOccurs="0" />
        <xs:element name="governments" type="government" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zimpl" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="zid" type="xs:anyType" />
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bimpl" >
      <xs:complexContent>
       <xs:extension base="aimpl">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aimpl" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="aid" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sky" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="cloudtypes" type="cloudtype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="maincloud" type="cloudtype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manufacturer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="models" type="model" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:sequence>
        <xs:element name="id" type="catpk" nillable="true" minOccurs="0" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="humancontacts" type="woman" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programmanager" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="manages" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inspector" >
      <xs:sequence>
        <xs:element name="_id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employees" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="contractors" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="friend" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="friends" type="friend" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="man" >
      <xs:sequence>
        <xs:element name="id" type="manpk" nillable="true" minOccurs="0" />
        <xs:element name="carname" type="xs:string" />
        <xs:element name="womens" type="woman" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="phnumber" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="contactinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customers" type="knownclient" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="items" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="categories" type="category" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="implantedin" type="city" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stolenitems" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="clients" type="knownclient" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="knownclient" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stores" type="store" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="producedincities" type="city" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permission" >
      <xs:sequence>
        <xs:element name="permission" type="xs:string" />
        <xs:element name="expiration" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="woman" >
      <xs:sequence>
        <xs:element name="id" type="womanpk" nillable="true" minOccurs="0" />
        <xs:element name="carname" type="xs:string" />
        <xs:element name="mens" type="man" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="cats" type="cat" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="supplier" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="suppstores" type="store" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customers" type="knownclient" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="suppliers" type="supplier" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="implantedin" type="city" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="knownclient" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stores" type="store" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contractor" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="hourlyrate" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="buildingcompany" >
      <xs:complexContent>
       <xs:extension base="company">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="foundedin" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupwithset" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="permissions" type="permission" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inspectorprefixes" >
      <xs:complexContent>
       <xs:extension base="inspector">
         <xs:sequence>
          <xs:element name="prefixes" type="xs:string" />
          <xs:element name="desertedareas" type="zone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="areas" type="zone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="phnumber" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employers" type="employer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="contactinfo" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jobinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="building" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="company" type="buildingcompany" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="permissions" type="permission" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonemapsidflushmodetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="color" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foresttype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="trees" type="treetype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="biggestrepresentative" type="biggestforest" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="frame" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lenses" type="lens" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lowername" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:complexContent>
       <xs:extension base="genericobject">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="warehouseitem" >
      <xs:complexContent>
       <xs:extension base="genericobject">
         <xs:sequence>
          <xs:element name="" type="item" nillable="true" minOccurs="0" />
          <xs:element name="" type="vendor" nillable="true" minOccurs="0" />
          <xs:element name="defaultcost" type="zitemcost" nillable="true" minOccurs="0" />
          <xs:element name="qtyinstock" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zitemcost" >
      <xs:complexContent>
       <xs:extension base="genericobject">
         <xs:sequence>
          <xs:element name="" type="item" nillable="true" minOccurs="0" />
          <xs:element name="" type="vendor" nillable="true" minOccurs="0" />
          <xs:element name="cost" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vendor" >
      <xs:complexContent>
       <xs:extension base="genericobject">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lotz" >
      <xs:sequence>
        <xs:element name="lotpk" type="lotzpk" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="location" type="xs:string" />
        <xs:element name="cars" type="carz" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deal" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="from" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="to" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notnullmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="body" type="color" nillable="true" minOccurs="0" />
        <xs:element name="owner" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="treetype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="foresttype" nillable="true" minOccurs="0" />
        <xs:element name="alternative" type="foresttype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderline" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="item" type="xs:string" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="replacement" type="order" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="parentpk" nillable="true" minOccurs="0" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="districtuser" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="createdby" type="xs:long" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="////@joincolumn(name" type="user" nillable="true" minOccurs="0" />
        <xs:element name="ldtmd" type="xs:long" />
        <xs:element name="pmtmp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lens" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="focal" type="xs:double" />
        <xs:element name="length" type="xs:double" />
        <xs:element name="GeneratedName" type="frame" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="userid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="carz" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="make" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="manufactured" type="xs:dateTime" />
        <xs:element name="lot" type="lotz" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="id" type="nodepk" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="parent" type="node" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="ordernbr" type="xs:string" />
        <xs:element name="orderlines" type="orderline" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="userkey" type="xs:long" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="createdby" type="xs:long" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="userid" type="xs:string" />
        <xs:element name="prefix" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname1" type="xs:string" />
        <xs:element name="lastname2" type="xs:string" />
        <xs:element name="middlename1" type="xs:string" />
        <xs:element name="middlename2" type="xs:string" />
        <xs:element name="suffix" type="xs:anyType" />
        <xs:element name="birth" type="xs:dateTime" />
        <xs:element name="birthstate" type="xs:anyType" />
        <xs:element name="birthcountry" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="usertype" type="xs:anyType" />
        <xs:element name="privilege" type="xs:anyType" />
        <xs:element name="state" type="xs:anyType" />
        <xs:element name="country" type="xs:anyType" />
        <xs:element name="preferredname" type="xs:string" />
        <xs:element name="birthplace" type="xs:string" />
        <xs:element name="districtusers" type="districtuser" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="school" type="xs:long" />
        <xs:element name="cluster" type="xs:long" />
        <xs:element name="ldtmm" type="xs:long" />
        <xs:element name="ldtmd" type="xs:long" />
        <xs:element name="pmtmp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="biggestforest" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="foresttype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vanillaswap" >
      <xs:sequence>
        <xs:element name="/***identifieroftheinterestrateswap*/instrumentid" type="xs:string" />
        <xs:element name="/***oftheswap(andofbothlegs).*/" type="currency" nillable="true" minOccurs="0" />
        <xs:element name="/***fixedleg(cashflowswiththefixedrate).*/" type="fixedleg" nillable="true" minOccurs="0" />
        <xs:element name="/***floatingleg(cashflowsboundtoafinancialindex).*/" type="floatleg" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manager" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="employer" type="internetprovider" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="regionalarticle" >
      <xs:sequence>
        <xs:element name="pk" type="regionalarticlepk" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="corptype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addresstype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="internetprovider" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brandname" type="xs:string" />
        <xs:element name="owner" type="legalstructure" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="isbn" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="summary" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="bornin" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nationality" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="iso2" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wealthyperson" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="vacationhomes" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="legacyvacationhomes" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="explicitvacationhomes" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithnestedembeddables" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="embeda" type="embeddablea" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="personname" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alias" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="name" nillable="true" minOccurs="0" />
        <xs:element name="source" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="favoritethings" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="web" type="internetfavorites" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spreaddeal" >
      <xs:complexContent>
       <xs:extension base="notonialdeal">
         <xs:sequence>
          <xs:element name="/***withthetenor.*/long" type="swap" nillable="true" minOccurs="0" />
          <xs:element name="/***withthelongertenor.*/short" type="swap" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="importer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="cars" type="car" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="brand" type="xs:string" />
        <xs:element name="producer" type="xs:string" />
        <xs:element name="since" type="xs:long" />
        <xs:element name="GeneratedName" type="dealer" nillable="true" minOccurs="0" />
        <xs:element name="otherdealers" type="dealer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="importers" type="importer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inmemoryupdatetimestamptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discount" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="discount" type="xs:double" />
        <xs:element name="owner" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:complexContent>
       <xs:extension base="mammal">
         <xs:sequence>
          <xs:element name="iq" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mammal" >
      <xs:complexContent>
       <xs:extension base="animal{">
         <xs:sequence>
          <xs:element name="ispregnant" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mammal" >
      <xs:complexContent>
       <xs:extension base="animal{">
         <xs:sequence>
          <xs:element name="ispregnant" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:complexContent>
       <xs:extension base="mammal">
         <xs:sequence>
          <xs:element name="iq" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:complexContent>
       <xs:extension base="mammal">
         <xs:sequence>
          <xs:element name="iq" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mammal" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="ispregnant" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mammal" >
      <xs:complexContent>
       <xs:extension base="animal{">
         <xs:sequence>
          <xs:element name="ispregnant" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="club" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="members" type="human" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:complexContent>
       <xs:extension base="mammal">
         <xs:sequence>
          <xs:element name="iq" type="xs:long" />
          <xs:element name="" type="club" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="emailaddress" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="lockedout" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="t800" >
      <xs:complexContent>
       <xs:extension base="robot">
         <xs:sequence>
          <xs:element name="targetname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="manufacturerpartnumber" type="xs:string" />
        <xs:element name="manufacturerid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="machine" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="weight" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:complexContent>
       <xs:extension base="component">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="robot" >
      <xs:complexContent>
       <xs:extension base="machine">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contactimpl" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userimpl" >
      <xs:sequence>
        <xs:element name="contacts" type="contact" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="printercable" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="printer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="printer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bug" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="categories" type="category" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="investments" type="investment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="investments" type="investment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="investor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="investments" type="investment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicattributeoverridetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributeoverrideenhancedusertypetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablewithonetomany_hhh_8860_test" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablewithonetomany_hhh_8564_test" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablewithonetomany_hhh_11302_test" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablewithmanytomany_hhh_11302_test" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foobar" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutableentityupdatequeryhandlingmodeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="states" type="state" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="photo" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="metadata" type="exif" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="caption" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="tickets" type="ticket" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="discounttickets" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="passport" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owneraddress" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonemapsidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shipment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="shipmentstate" nillable="true" minOccurs="0" />
        <xs:element name="auction" type="item" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="address" type="owneraddress" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trousers" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="zip" type="trouserszip" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="show" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="description" type="showdescription" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="heart" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="city" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computer" >
      <xs:sequence>
        <xs:element name="id" type="computerpk" nillable="true" minOccurs="0" />
        <xs:element name="cpu" type="xs:string" />
        <xs:element name="serial" type="serialnumber" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partyaffiliate" >
      <xs:sequence>
        <xs:element name="partyid" type="xs:string" />
        <xs:element name="GeneratedName" type="party" nillable="true" minOccurs="0" />
        <xs:element name="affiliatename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonemapsidchangeparenttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serialnumber" >
      <xs:sequence>
        <xs:element name="id" type="serialnumberpk" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optionalonetoonepkjcquerytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonejointableuniquenesstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personaddress" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonejointableoptionaltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonemapsidjoincolumntest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonejointablenonoptionaltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="showdescription" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="show" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trouserszip" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="trousers" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="personaddress" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="client" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="secondary" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optionalonetoonemapsidquerytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="deleted" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manageddevice" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="" type="device" nillable="true" minOccurs="0" />
          <xs:element name="" type="devicegroupconfig" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hardware" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="parent" type="hardware" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="devicegroupconfig" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="device" >
      <xs:complexContent>
       <xs:extension base="hardware">
         <xs:sequence>
          <xs:element name="" type="manageddevice" nillable="true" minOccurs="0" />
          <xs:element name="tag" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="body" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="heart" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="party" >
      <xs:sequence>
        <xs:element name="partyid" type="xs:string" />
        <xs:element name="GeneratedName" type="partyaffiliate" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="insertorderingwithjoinedtableinheritance" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithbidirectionalonetomany" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithunidirectionalonetoonejoincolumn" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithsecondarytable" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithbidirectionalonetoone" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithmanytoone" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithbidirectionalonetooneflushproblem" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithjoinedtablemultilevelinheritance" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elementcollectiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithmultiplemanytoone" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updateorderingidentityidentifiertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingselfreferencesingletableinheritance" >
      <xs:complexContent>
       <xs:extension base="entitytreenode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithbidirectionalmanytomany" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithsingletableinheritance" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithcascadeonpersist" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithbidirectionalmapsidonetoone" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithbidirectionalonetomanyflushproblem" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingduplicatetest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithunidirectionalonetoone" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithcompositetypeassociation" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithtableperclassinheritance" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="connectionprovider" type="preparedstatementspyconnectionprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderingwithbaseclassreferencingsubclass" >
      <xs:complexContent>
       <xs:extension base="roottable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertorderinghasparenttest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binarytypetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="offsetdatetimetest" >
      <xs:complexContent>
       <xs:extension base="abstractjavatimetypetest<offsetdatetime,">
         <xs:sequence>
          <xs:element name="year" type="xs:long" />
          <xs:element name="month" type="xs:long" />
          <xs:element name="day" type="xs:long" />
          <xs:element name="hour" type="xs:long" />
          <xs:element name="minute" type="xs:long" />
          <xs:element name="second" type="xs:long" />
          <xs:element name="nanosecond" type="xs:long" />
          <xs:element name="offset" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="java8datetimetests" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclelonglobtypetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instanttest" >
      <xs:complexContent>
       <xs:extension base="abstractjavatimetypetest<instant,">
         <xs:sequence>
          <xs:element name="year" type="xs:long" />
          <xs:element name="month" type="xs:long" />
          <xs:element name="day" type="xs:long" />
          <xs:element name="hour" type="xs:long" />
          <xs:element name="minute" type="xs:long" />
          <xs:element name="second" type="xs:long" />
          <xs:element name="nanosecond" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localdatetest" >
      <xs:complexContent>
       <xs:extension base="abstractjavatimetypetest<localdate,">
         <xs:sequence>
          <xs:element name="year" type="xs:long" />
          <xs:element name="month" type="xs:long" />
          <xs:element name="day" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timeandtimestamptest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserver2008nvarchartypetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
          <xs:element name="" type="schemaexport" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zoneddatetimetest" >
      <xs:complexContent>
       <xs:extension base="abstractjavatimetypetest<zoneddatetime,">
         <xs:sequence>
          <xs:element name="year" type="xs:long" />
          <xs:element name="month" type="xs:long" />
          <xs:element name="day" type="xs:long" />
          <xs:element name="hour" type="xs:long" />
          <xs:element name="minute" type="xs:long" />
          <xs:element name="second" type="xs:long" />
          <xs:element name="nanosecond" type="xs:long" />
          <xs:element name="zone" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localdatetimetest" >
      <xs:complexContent>
       <xs:extension base="abstractjavatimetypetest<localdatetime,">
         <xs:sequence>
          <xs:element name="year" type="xs:long" />
          <xs:element name="month" type="xs:long" />
          <xs:element name="day" type="xs:long" />
          <xs:element name="hour" type="xs:long" />
          <xs:element name="minute" type="xs:long" />
          <xs:element name="second" type="xs:long" />
          <xs:element name="nanosecond" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longlisttypecontributortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigdecimaltypetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraytypecontributortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraytypepropertiestest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="offsettimetest" >
      <xs:complexContent>
       <xs:extension base="abstractjavatimetypetest<offsettime,">
         <xs:sequence>
          <xs:element name="hour" type="xs:long" />
          <xs:element name="minute" type="xs:long" />
          <xs:element name="second" type="xs:long" />
          <xs:element name="nanosecond" type="xs:long" />
          <xs:element name="offset" type="xs:string" />
          <xs:element name="yearwhenpersistedwithouthibernate" type="xs:long" />
          <xs:element name="monthwhenpersistedwithouthibernate" type="xs:long" />
          <xs:element name="daywhenpersistedwithouthibernate" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobunfetchedpropertytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="smallinttoshortclassmappingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localtimetest" >
      <xs:complexContent>
       <xs:extension base="abstractjavatimetypetest<localtime,">
         <xs:sequence>
          <xs:element name="hour" type="xs:long" />
          <xs:element name="minute" type="xs:long" />
          <xs:element name="second" type="xs:long" />
          <xs:element name="nanosecond" type="xs:long" />
          <xs:element name="yearwhenpersistedwithouthibernate" type="xs:long" />
          <xs:element name="monthwhenpersistedwithouthibernate" type="xs:long" />
          <xs:element name="daywhenpersistedwithouthibernate" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="individuallyschemavalidatorimplconnectiontest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="tool" type="hibernateschemamanagementtool" nillable="true" minOccurs="0" />
          <xs:element name="configurationvalues" type="map" nillable="true" minOccurs="0" />
          <xs:element name="" type="executionoptions" nillable="true" minOccurs="0" />
          <xs:element name="connectionprovider" type="drivermanagerconnectionproviderimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaplatformloggingtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="individuallyschemavalidatorimpltest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="tool" type="hibernateschemamanagementtool" nillable="true" minOccurs="0" />
          <xs:element name="configurationvalues" type="map" nillable="true" minOccurs="0" />
          <xs:element name="" type="executionoptions" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schematooltransactionhandlingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dropschemaduringjtatxntest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityone" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ownerone" >
      <xs:complexContent>
       <xs:extension base="abstractowner">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="abstractowner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractowner" >
      <xs:complexContent>
       <xs:extension base="abstractentity>">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="entities" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metamodeltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="productentity" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="description" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="viewvalidationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longvarcharvalidationtest" >
      <xs:sequence>
        <xs:element name="jdbcmetadataextractorstrategy" type="xs:string" />
        <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jointablewithdefaultschematest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablenameswithunderscoretest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="synonymvalidationtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="numericvalidationtest" >
      <xs:sequence>
        <xs:element name="jdbcmetadataextractorstrategy" type="xs:string" />
        <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeegroup" >
      <xs:sequence>
        <xs:element name="id" type="employeegroupid" nillable="true" minOccurs="0" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazypersistwithdetachedassociationtest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nationalizedscalarquerytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithunusualtablenamejointest" >
      <xs:complexContent>
       <xs:extension base="entityjointest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="panel" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="clientid" type="xs:long" />
        <xs:element name="deltastamp" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregatefunctionswithsubselecttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertwithsubselecttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="employeenumber" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclasssubquerytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityjointest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatejoinedsubclasscorrelationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="title" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanysizetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanysizetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querysplittertest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="farm" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="crops" type="crop" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="accreditations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="castfunctiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="entity3" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="entity2" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="grandchild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="grandchildren" type="grandchild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="GeneratedName" type="title" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="department" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="withclausejoinrewritetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatefirstresultmaxresultstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="casestatementtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subquerytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tuplesupporttest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="" type="sessionfactory" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="coalescetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="person" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametercollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="deptno" type="xs:anyType" />
        <xs:element name="deptname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scrollabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deletequerysubqueryreferencingtargetpropertytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinonclausetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sizeattributereferencetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryparametersvalidationarraytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db297substringfunctionstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="trtpanel" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="panel" nillable="true" minOccurs="0" />
        <xs:element name="clientid" type="xs:long" />
        <xs:element name="deltastamp" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturaliddereferencetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionmapwithcomponentvaluetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="keyvalue" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crop" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="farms" type="farm" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectnewembeddedidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapfunctionexpressionstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="querytranslatorfactory" type="astquerytranslatorfactory" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryparametersvalidationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="castnullselectexpressiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="comments" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="login" type="xs:string" />
          <xs:element name="passwordexpirydays" type="xs:double" />
          <xs:element name="silly" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="heightinches" type="xs:double" />
        <xs:element name="sex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselectfetchcollectionfrombatchtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interceptornonnulltransactiontest" >
      <xs:complexContent>
       <xs:extension base="basejpaornativebootstrapfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inventory" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="store" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="storeprice" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="inventories" type="inventory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="msrp" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachelazyloadnotranstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicwalkingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithnonlazycollectionresultsetprocessortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityassociationresultsetprocessortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractor" >
      <xs:complexContent>
       <xs:extension base="user">
         <xs:sequence>
          <xs:element name="//illustratestheproblematicsituationdescribedinhhh-8330reportsto" type="department" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="user">
         <xs:sequence>
          <xs:element name="//illustratestheproblematicsituationdescribedinhhh-8980belongsto" type="department" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithnonlazyonetomanylistresultsetprocessortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="encapsulatedcompositeidresultsetprocessortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleresultsetprocessortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithnonlazyonetomanysetresultsetprocessortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="encapsulatedcompositeattributeresultsetprocessortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadplanbuildertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attachment" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="advertisements" type="advertisement" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="filename" type="xs:string" />
        <xs:element name="deleted" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanywithmaykeyandschemadefinitiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pageadvertisement" >
      <xs:complexContent>
       <xs:extension base="subjectadvertisement">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanybidirectionaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="advertisement" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="attachments" type="attachment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazytomanywhereuseclasswheretest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyonetomanynonuniqueidwheretest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagertomanywheredontuseclasswheretest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagertomanywhereuseclasswheretest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagermanytoonefetchmodeselectwheretest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyelementcollectionwithlazymanytoonenonuniqueidwheretest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagermanytoonefetchmodejoinwheretest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyelementcollectionbasicnonuniqueidwheretest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagertomanywheretest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazytomanywheretest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazytomanywheredontuseclasswheretest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazymanytomanynonuniqueidwheretest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transientoverrideaspersistentmappedsuperclass" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transientoverrideaspersistentsingletable" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritancedeletebatchtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transientoverrideaspersistenttableperclass" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singletablerelationstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subsubentity" >
      <xs:complexContent>
       <xs:extension base="subentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subentity" >
      <xs:complexContent>
       <xs:extension base="rootentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rootentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subsubsubentity" >
      <xs:complexContent>
       <xs:extension base="subsubentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multisingletableloadtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tableperclassinheritancepersisttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="john" type="man" nillable="true" minOccurs="0" />
          <xs:element name="jane" type="woman" nillable="true" minOccurs="0" />
          <xs:element name="susan" type="child" nillable="true" minOccurs="0" />
          <xs:element name="mark" type="child" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="familymembers" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedinheritancetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="polygon" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiinheritanceimplicitdowncasttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedinheritanceeagertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritingentity" >
      <xs:complexContent>
       <xs:extension base="parententity">
         <xs:sequence>
          <xs:element name="somevalue" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tableperclasswithembeddabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singletablewithembeddabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclasswithembeddabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singletableinheritancepersisttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="john" type="man" nillable="true" minOccurs="0" />
          <xs:element name="jane" type="woman" nillable="true" minOccurs="0" />
          <xs:element name="susan" type="child" nillable="true" minOccurs="0" />
          <xs:element name="mark" type="child" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="familymembers" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="quadrilateral" >
      <xs:complexContent>
       <xs:extension base="polygon">
         <xs:sequence>
          <xs:element name="anglea" type="xs:double" />
          <xs:element name="angleb" type="xs:double" />
          <xs:element name="anglec" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclassextendsentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transientoverrideaspersistentjoined" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedinheritancewithonetomanytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedinheritancepropertynameconflicttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclassinheritancetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tooneondeletetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcsqltypedescriptorconvertertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryexecutiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getterandismethodchecks" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablegeneratorvisibilitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generatedvaluetests" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyannotationtests" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="element_token" type="xs:string" />
          <xs:element name="table_alias" type="xs:string" />
          <xs:element name="column_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="GeneratedName" type="company" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="locations" type="location" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storedprocedureapitests" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeycolumnmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeycolumnelementcollectiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeycolumnonetomanyfktest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeycolumnbidionetomanyfktest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeycolumnonetomanyjointabletest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryapitest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablegeneratormultipledefinitiontest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclassonlycachingtests" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritedcacheabletest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachingwithsecondarytablestests" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classwithidentitycolumn" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identificationvariablestest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="destinationentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="from" type="fromentity" nillable="true" minOccurs="0" />
        <xs:element name="fullnamefrom" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="treatkeywordtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonelazynonoptionalorphanremovaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetooneeagernonoptionalorphanremovaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonelazyorphanremovaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetooneeagerorphanremovaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="mutableproperty" type="xs:dateTime" />
        <xs:element name="changedvalues" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="limitexpressiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectdistincthqltest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="distinct_passes_through_true_named_query" type="xs:string" />
          <xs:element name="distinct_passes_through_false_named_query" type="xs:string" />
          <xs:element name="distinct_passes_through_not_specified_named_query" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotateddetail" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//becauseotherwiseschemaexportwouldnotknowaboutit...domain" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotatedmaster" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="detail" type="annotateddetail" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryscrollingwithinheritancetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identityjoinedsubclassbatchingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclassbatchingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencejoinedsubclassbatchingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instantversiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localdatetimeversiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="offsetdatetimeversiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybasetimestampcomparisonannotationstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zoneddatetimeversiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyloadingloggingtest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyloadingtest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="parentid" type="xs:long" />
          <xs:element name="lastchildid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonelazyloadingbyidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascademergetoproxyentitycopyallowedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="default" type="project" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascademergetoproxysimpletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="_generator" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeidassociationswithembeddedcompositeidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bookstore" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="books" type="book" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unrelatedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testflushmodewithidentityselfreferencetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="publisher" nillable="true" minOccurs="0" />
        <xs:element name="books" type="book" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="publisher" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="authors" type="author" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nontransactionaldataaccesstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="allowupdateoperationoutsidetransaction" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="GeneratedName" type="author" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="varioustypesentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="issue" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="issuenumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptortransactiontest" >
      <xs:complexContent>
       <xs:extension base="basejpaornativebootstrapfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaaftercompletiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtabeforecompletionfailuretest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="child" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="message" >
      <xs:complexContent>
       <xs:extension base="ablockableentity">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:complexContent>
       <xs:extension base="ablockableentity">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="otherentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ablockableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="//wehavetwoone-to-oneassociationstomakesureparent_idisn'tconsideredaspartofthistableregardingduplicatemappingsother" type="otherentity" nillable="true" minOccurs="0" />
        <xs:element name="other2" type="ablockableentity" nillable="true" minOccurs="0" />
        <xs:element name="//twomany-to-onestomakesurethatstillworksinthisscenariomanytoone1" type="otherentity" nillable="true" minOccurs="0" />
        <xs:element name="manytoone2" type="ablockableentity" nillable="true" minOccurs="0" />
        <xs:element name="//twoone-to-manystomakesurethatconsideringone-to-onejoinsintheentitypersisterdoesn'tbreakthisonetomany1" type="otherentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="onetomany2" type="ablockableentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetoonefetchtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sorttest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxyinterfaceclassloadertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitoverridestests" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiccriteriaexecutiontests" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtycheckingwithembeddableandmappedsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="tabletopgame">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtycheckingwithmappedsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="tabletopgame">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtycheckingwithembeddedtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtycheckingwithembeddedongettertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityproxyserializationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preinserteventlistenervetounidirectionaltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preinserteventlistenervetobidirectionaltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablecallbacktest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergecontexttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="session" type="eventsource" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationentity" >
      <xs:sequence>
        <xs:element name="_id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfunctionmissingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributeconvertermetadatabuildercontributortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsqlfunctionmetadatabuildercontributortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="drivermanagerconnectionprovidervalidationconfigtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="ordernumber" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="items" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getandisvariantgetterwithtransientannotationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="itemnumber" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getandisvariantgettertest" >
      <xs:sequence>
        <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associateentitywithtwosessionstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="informixfunctiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="event" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchsortingtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extrastatetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="/***storingitasafieldsoitcanbeaccessedfromtheentitysetter.*/" type="session" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleentity" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachekeyimplementationhashcodetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readwritecachetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="original_title" type="xs:string" />
          <xs:element name="updated_title" type="xs:string" />
          <xs:element name="bookid" type="xs:long" />
          <xs:element name="endlatch" type="xs:anyType" />
          <xs:element name="intercepttransaction" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationmappednopackageentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="any" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="prop" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="in" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="prop" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionbinder" >
      <xs:complexContent>
       <xs:extension base="comparator>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="inferred_class_priority" type="xs:anyType" />
          <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
          <xs:element name="" type="collection" nillable="true" minOccurs="0" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="" type="propertyholder" nillable="true" minOccurs="0" />
          <xs:element name="batchsize" type="xs:long" />
          <xs:element name="mappedby" type="xs:string" />
          <xs:element name="collectiontype" type="xs:anyType" />
          <xs:element name="targetentity" type="xs:anyType" />
          <xs:element name="inversejoincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
          <xs:element name="cascadestrategy" type="xs:string" />
          <xs:element name="cacheconcurrencystrategy" type="xs:string" />
          <xs:element name="cacheregionname" type="xs:string" />
          <xs:element name="onetomany" type="xs:anyType" />
          <xs:element name="" type="indexcolumn" nillable="true" minOccurs="0" />
          <xs:element name="cascadedeleteenabled" type="xs:anyType" />
          <xs:element name="mapkeypropertyname" type="xs:string" />
          <xs:element name="insertable" type="xs:anyType" />
          <xs:element name="updatable" type="xs:anyType" />
          <xs:element name="fkjoincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
          <xs:element name="isexplicitassociationtable" type="xs:anyType" />
          <xs:element name="elementcolumns" type="ejb3column" nillable="true" minOccurs="0" />
          <xs:element name="isembedded" type="xs:anyType" />
          <xs:element name="property" type="xs:anyType" />
          <xs:element name="ignorenotfound" type="xs:anyType" />
          <xs:element name="" type="tablebinder" nillable="true" minOccurs="0" />
          <xs:element name="mapkeycolumns" type="ejb3column" nillable="true" minOccurs="0" />
          <xs:element name="mapkeymanytomanycolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
          <xs:element name="localgenerators" type="xs:anyType" />
          <xs:element name="inheritancestateperclass" type="xs:anyType" />
          <xs:element name="declaringclass" type="xs:anyType" />
          <xs:element name="declaringclassset" type="xs:anyType" />
          <xs:element name="" type="accesstype" nillable="true" minOccurs="0" />
          <xs:element name="hibernateextensionmapping" type="xs:anyType" />
          <xs:element name="issortedcollection" type="xs:anyType" />
          <xs:element name="jpaorderby" type="xs:anyType" />
          <xs:element name="sql" type="orderby" nillable="true" minOccurs="0" />
          <xs:element name="deprecated" type="sort" nillable="true" minOccurs="0" />
          <xs:element name="naturalsort" type="sortnatural" nillable="true" minOccurs="0" />
          <xs:element name="comparatorsort" type="sortcomparator" nillable="true" minOccurs="0" />
          <xs:element name="explicittype" type="xs:string" />
          <xs:element name="explicittypeparameters" type="xs:anyType" />
          <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetmappingsecondpass" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="ann" type="xs:anyType" />
        <xs:element name="context" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="isdefault" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitybinder" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="natural_id_cache_suffix" type="xs:string" />
          <xs:element name="context" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="annotatedclass" type="xs:anyType" />
          <xs:element name="" type="persistentclass" nillable="true" minOccurs="0" />
          <xs:element name="discriminatorvalue" type="xs:string" />
          <xs:element name="forcediscriminator" type="xs:anyType" />
          <xs:element name="insertablediscriminator" type="xs:anyType" />
          <xs:element name="dynamicinsert" type="xs:anyType" />
          <xs:element name="dynamicupdate" type="xs:anyType" />
          <xs:element name="explicithibernateentityannotation" type="xs:anyType" />
          <xs:element name="" type="optimisticlocktype" nillable="true" minOccurs="0" />
          <xs:element name="" type="polymorphismtype" nillable="true" minOccurs="0" />
          <xs:element name="selectbeforeupdate" type="xs:anyType" />
          <xs:element name="batchsize" type="xs:long" />
          <xs:element name="lazy" type="xs:anyType" />
          <xs:element name="proxyclass" type="xs:anyType" />
          <xs:element name="where" type="xs:string" />
          <xs:element name="secondarytables" type="xs:anyType" />
          <xs:element name="secondarytablejoins" type="xs:anyType" />
          <xs:element name="filters" type="filter" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="inheritancestate" nillable="true" minOccurs="0" />
          <xs:element name="ignoreidannotations" type="xs:anyType" />
          <xs:element name="property" type="accesstype" nillable="true" minOccurs="0" />
          <xs:element name="wrapidsinembeddedcomponents" type="xs:anyType" />
          <xs:element name="subselect" type="xs:string" />
          <xs:element name="iscached" type="xs:anyType" />
          <xs:element name="cacheconcurrentstrategy" type="xs:string" />
          <xs:element name="cacheregion" type="xs:string" />
          <xs:element name="cachelazyproperty" type="xs:anyType" />
          <xs:element name="naturalidcacheregion" type="xs:string" />
          <xs:element name="sec_tbl_ns_helper" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationbinder" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classpropertyholder" >
      <xs:complexContent>
       <xs:extension base="abstractpropertyholder">
         <xs:sequence>
          <xs:element name="" type="persistentclass" nillable="true" minOccurs="0" />
          <xs:element name="joins" type="xs:anyType" />
          <xs:element name="joinsperrealtablename" type="xs:anyType" />
          <xs:element name="" type="entitybinder" nillable="true" minOccurs="0" />
          <xs:element name="inheritancestateperclass" type="xs:anyType" />
          <xs:element name="attributeconversioninfomap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultenhancementcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 