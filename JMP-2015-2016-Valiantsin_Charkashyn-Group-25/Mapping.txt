ClassDiagram.Class>> ExchangeTicket =>=>=> RelationalSchema.Table>> exchangeticket;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> ExchangeRate =>=>=> RelationalSchema.Table>> exchangerate;
ClassDiagram.Class>> Currency =>=>=> RelationalSchema.Table>> currency;
ClassDiagram.Attribut>> ExchangeTicket.idticket:int =>=>=> RelationalSchema.Column>> exchangeticket.idticket;
ClassDiagram.Attribut>> ExchangeTicket.fromcurr:String =>=>=> RelationalSchema.Column>> exchangeticket.fromcurr;
ClassDiagram.Attribut>> ExchangeTicket.tocurr:String =>=>=> RelationalSchema.Column>> exchangeticket.tocurr;
ClassDiagram.Attribut>> ExchangeTicket.tocurramount:double =>=>=> RelationalSchema.Column>> exchangeticket.tocurramount;
ClassDiagram.Attribut>> ExchangeTicket.status:String =>=>=> RelationalSchema.Column>> exchangeticket.status;
ClassDiagram.Attribut>> Person.idperson:int =>=>=> RelationalSchema.Column>> person.idperson;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.surname:String =>=>=> RelationalSchema.Column>> person.surname;
ClassDiagram.Attribut>> Person.dateofbirth:String =>=>=> RelationalSchema.Column>> person.dateofbirth;
ClassDiagram.Attribut>> Person.passportnumber:String =>=>=> RelationalSchema.Column>> person.passportnumber;
ClassDiagram.Attribut>> Account.idaccount:int =>=>=> RelationalSchema.Column>> account.idaccount;
ClassDiagram.Attribut>> Account.description:String =>=>=> RelationalSchema.Column>> account.description;
ClassDiagram.Attribut>> Account.startdate:String =>=>=> RelationalSchema.Column>> account.startdate;
ClassDiagram.Attribut>> Account.enddate:String =>=>=> RelationalSchema.Column>> account.enddate;
ClassDiagram.Attribut>> Account.value:double =>=>=> RelationalSchema.Column>> account.value;
ClassDiagram.Attribut>> ExchangeRate.idrate:int =>=>=> RelationalSchema.Column>> exchangerate.idrate;
ClassDiagram.Attribut>> ExchangeRate.from:String =>=>=> RelationalSchema.Column>> exchangerate.from;
ClassDiagram.Attribut>> ExchangeRate.to:String =>=>=> RelationalSchema.Column>> exchangerate.to;
ClassDiagram.Attribut>> ExchangeRate.rate:double =>=>=> RelationalSchema.Column>> exchangerate.rate;
ClassDiagram.Attribut>> ExchangeRate.exchangeday:String =>=>=> RelationalSchema.Column>> exchangerate.exchangeday;
ClassDiagram.Attribut>> Currency.idcurrency:int =>=>=> RelationalSchema.Column>> currency.idcurrency PRIMARY KEY;
ClassDiagram.Attribut>> Currency.shortname:String =>=>=> RelationalSchema.Column>> currency.shortname;
Many-To-One relationship from ClassDiagram.Class>>ExchangeTicket  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>client;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>List<Account>;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>List<ExchangeTicket>;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>currency represented by ClassDiagram.Atrribute>>curr;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>man;
One-To-Many relationship from ClassDiagram.Class>>Currency  to ClassDiagram.Class>>List<Account>;
