ClassDiagram.Class>> ArticleModel =>=>=> RelationalSchema.Table>> articlemodel;
ClassDiagram.Class>> UserModel =>=>=> RelationalSchema.Table>> usermodel;
ClassDiagram.Class>> NoticeModel =>=>=> RelationalSchema.Table>> noticemodel;
ClassDiagram.Class>> CommentFavorModel =>=>=> RelationalSchema.Table>> commentfavormodel;
ClassDiagram.Class>> CategoryModel =>=>=> RelationalSchema.Table>> categorymodel;
ClassDiagram.Class>> CommentModel =>=>=> RelationalSchema.Table>> commentmodel;
ClassDiagram.Class>> ArticleFavorModel =>=>=> RelationalSchema.Table>> articlefavormodel;
ClassDiagram.Class>> RecommendModel =>=>=> RelationalSchema.Table>> recommendmodel;
ClassDiagram.Class>> RelatedArticleModel =>=>=> RelationalSchema.Table>> relatedarticlemodel;
ClassDiagram.Attribut>> ArticleModel.id:Integer =>=>=> RelationalSchema.Column>> articlemodel.id PRIMARY KEY;
ClassDiagram.Attribut>> ArticleModel.title:String =>=>=> RelationalSchema.Column>> articlemodel.title;
ClassDiagram.Attribut>> ArticleModel.description:String =>=>=> RelationalSchema.Column>> articlemodel.description;
ClassDiagram.Attribut>> ArticleModel.categoryid:Integer =>=>=> RelationalSchema.Column>> articlemodel.categoryid;
ClassDiagram.Attribut>> ArticleModel.tag:String =>=>=> RelationalSchema.Column>> articlemodel.tag;
ClassDiagram.Attribut>> ArticleModel.authorid:Integer =>=>=> RelationalSchema.Column>> articlemodel.authorid;
ClassDiagram.Attribut>> ArticleModel.commentcount:Integer =>=>=> RelationalSchema.Column>> articlemodel.commentcount;
ClassDiagram.Attribut>> ArticleModel.viewcount:Integer =>=>=> RelationalSchema.Column>> articlemodel.viewcount;
ClassDiagram.Attribut>> ArticleModel.likecount:Integer =>=>=> RelationalSchema.Column>> articlemodel.likecount;
ClassDiagram.Attribut>> ArticleModel.createtime:Date =>=>=> RelationalSchema.Column>> articlemodel.createtime;
ClassDiagram.Attribut>> ArticleModel.uptime:Date =>=>=> RelationalSchema.Column>> articlemodel.uptime;
ClassDiagram.Attribut>> ArticleModel.type:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ArticleModel.tags:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ArticleModel.author:UserModel =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ArticleModel.comments:List<CommentModel> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ArticleModel.//当前session用户是否喜欢该文章；若未登录默认为0favorstate:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ArticleModel.relatedarticle:List<Object[]> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> UserModel.id:Integer =>=>=> RelationalSchema.Column>> usermodel.id PRIMARY KEY;
ClassDiagram.Attribut>> UserModel.account:String =>=>=> RelationalSchema.Column>> usermodel.account;
ClassDiagram.Attribut>> UserModel.name:String =>=>=> RelationalSchema.Column>> usermodel.name;
ClassDiagram.Attribut>> UserModel.password:String =>=>=> RelationalSchema.Column>> usermodel.password;
ClassDiagram.Attribut>> UserModel.token:String =>=>=> RelationalSchema.Column>> usermodel.token;
ClassDiagram.Attribut>> UserModel.createtime:Date =>=>=> RelationalSchema.Column>> usermodel.createtime;
ClassDiagram.Attribut>> UserModel.uptime:Date =>=>=> RelationalSchema.Column>> usermodel.uptime;
ClassDiagram.Attribut>> NoticeModel.id:Integer =>=>=> RelationalSchema.Column>> noticemodel.id PRIMARY KEY;
ClassDiagram.Attribut>> NoticeModel.notifierid:Integer =>=>=> RelationalSchema.Column>> noticemodel.notifierid;
ClassDiagram.Attribut>> NoticeModel.receiverid:Integer =>=>=> RelationalSchema.Column>> noticemodel.receiverid;
ClassDiagram.Attribut>> NoticeModel.//1(commentid)，2(articleid),3(commentid)type:Integer =>=>=> RelationalSchema.Column>> noticemodel.//1(commentid)，2(articleid),3(commentid)type;
ClassDiagram.Attribut>> NoticeModel.parentid:Integer =>=>=> RelationalSchema.Column>> noticemodel.parentid;
ClassDiagram.Attribut>> NoticeModel.state:Integer =>=>=> RelationalSchema.Column>> noticemodel.state;
ClassDiagram.Attribut>> NoticeModel.createtime:Date =>=>=> RelationalSchema.Column>> noticemodel.createtime;
ClassDiagram.Attribut>> NoticeModel.action:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> NoticeModel.notifier:UserModel =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> NoticeModel.article:ArticleModel =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> NoticeModel.comment:CommentModel =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CommentFavorModel.commentid:Integer =>=>=> RelationalSchema.Column>> commentfavormodel.commentid PRIMARY KEY;
ClassDiagram.Attribut>> CommentFavorModel.userid:Integer =>=>=> RelationalSchema.Column>> commentfavormodel.userid PRIMARY KEY;
ClassDiagram.Attribut>> CommentFavorModel.articleid:Integer =>=>=> RelationalSchema.Column>> commentfavormodel.articleid;
ClassDiagram.Attribut>> CommentFavorModel.//点赞状态：0表示取消点赞，1表示已点赞state:Integer =>=>=> RelationalSchema.Column>> commentfavormodel.//点赞状态：0表示取消点赞，1表示已点赞state;
ClassDiagram.Attribut>> CommentFavorModel.uptime:Date =>=>=> RelationalSchema.Column>> commentfavormodel.uptime;
ClassDiagram.Attribut>> CategoryModel.id:Integer =>=>=> RelationalSchema.Column>> categorymodel.id PRIMARY KEY;
ClassDiagram.Attribut>> CategoryModel.type:String =>=>=> RelationalSchema.Column>> categorymodel.type;
ClassDiagram.Attribut>> CommentModel.id:Integer =>=>=> RelationalSchema.Column>> commentmodel.id PRIMARY KEY;
ClassDiagram.Attribut>> CommentModel.articleid:Integer =>=>=> RelationalSchema.Column>> commentmodel.articleid;
ClassDiagram.Attribut>> CommentModel.commentatorid:Integer =>=>=> RelationalSchema.Column>> commentmodel.commentatorid;
ClassDiagram.Attribut>> CommentModel.content:String =>=>=> RelationalSchema.Column>> commentmodel.content;
ClassDiagram.Attribut>> CommentModel.likecount:Integer =>=>=> RelationalSchema.Column>> commentmodel.likecount;
ClassDiagram.Attribut>> CommentModel.createtime:Date =>=>=> RelationalSchema.Column>> commentmodel.createtime;
ClassDiagram.Attribut>> CommentModel.uptime:Date =>=>=> RelationalSchema.Column>> commentmodel.uptime;
ClassDiagram.Attribut>> CommentModel.commentator:UserModel =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CommentModel.articletitle:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CommentModel.//当前session用户是否喜欢该评论；若未登录默认为0favorstate:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ArticleFavorModel.articleid:Integer =>=>=> RelationalSchema.Column>> articlefavormodel.articleid PRIMARY KEY;
ClassDiagram.Attribut>> ArticleFavorModel.userid:Integer =>=>=> RelationalSchema.Column>> articlefavormodel.userid PRIMARY KEY;
ClassDiagram.Attribut>> ArticleFavorModel.//点赞状态：0表示取消点赞，1表示已点赞state:Integer =>=>=> RelationalSchema.Column>> articlefavormodel.//点赞状态：0表示取消点赞，1表示已点赞state;
ClassDiagram.Attribut>> ArticleFavorModel.uptime:Date =>=>=> RelationalSchema.Column>> articlefavormodel.uptime;
ClassDiagram.Attribut>> RecommendModel.userid:Integer =>=>=> RelationalSchema.Column>> recommendmodel.userid PRIMARY KEY;
ClassDiagram.Attribut>> RecommendModel.recommendids:String =>=>=> RelationalSchema.Column>> recommendmodel.recommendids;
ClassDiagram.Attribut>> RelatedArticleModel.articleid:Integer =>=>=> RelationalSchema.Column>> relatedarticlemodel.articleid PRIMARY KEY;
ClassDiagram.Attribut>> RelatedArticleModel.relatedids:String =>=>=> RelationalSchema.Column>> relatedarticlemodel.relatedids;
