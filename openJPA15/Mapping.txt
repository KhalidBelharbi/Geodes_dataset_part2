ClassDiagram.Class>> Ask =>=>=> RelationalSchema.Table>> ask;
ClassDiagram.Class>> Bid =>=>=> RelationalSchema.Table>> bid;
ClassDiagram.Class>> Trader =>=>=> RelationalSchema.Table>> trader;
ClassDiagram.Class>> Trade =>=>=> RelationalSchema.Table>> trade;
ClassDiagram.Class>> Stock =>=>=> RelationalSchema.Table>> stock;
ClassDiagram.Attribut>> Ask.serialversionuid:long =>=>=> RelationalSchema.Column>> ask.serialversionuid;
ClassDiagram.Attribut>> Bid.serialversionuid:long =>=>=> RelationalSchema.Column>> bid.serialversionuid;
ClassDiagram.Attribut>> Trader.serialversionuid:long =>=>=> RelationalSchema.Column>> trader.serialversionuid;
ClassDiagram.Attribut>> Trader.name:String =>=>=> RelationalSchema.Column>> trader.name PRIMARY KEY;
ClassDiagram.Attribut>> Trader.version:int =>=>=> RelationalSchema.Column>> trader.version;
ClassDiagram.Attribut>> Trade.serialversionuid:long =>=>=> RelationalSchema.Column>> trade.serialversionuid;
ClassDiagram.Attribut>> Trade./***primaryidentityofacommittedtrade.*itsvalueisgeneratedbythepersistenceprovider.*theapplicationmustnotsetorchangethisvalue.*hencenosettermethodisprovided.*/id:Long =>=>=> RelationalSchema.Column>> trade./***primaryidentityofacommittedtrade.*itsvalueisgeneratedbythepersistenceprovider.*theapplicationmustnotsetorchangethisvalue.*hencenosettermethodisprovided.*/id PRIMARY KEY;
ClassDiagram.Attribut>> Trade.price:double =>=>=> RelationalSchema.Column>> trade.price;
ClassDiagram.Attribut>> Trade.volume:int =>=>=> RelationalSchema.Column>> trade.volume;
ClassDiagram.Attribut>> Stock.serialversionuid:long =>=>=> RelationalSchema.Column>> stock.serialversionuid;
ClassDiagram.Attribut>> Stock./***theprimaryidentityofastock.*theuniquenessoftheprimarykeysareoftenwarrantedbythepersistenceprovider.*inthiscase,uniqueofastocksymbolisensuredbyanexternalagency.*/symbol:String =>=>=> RelationalSchema.Column>> stock./***theprimaryidentityofastock.*theuniquenessoftheprimarykeysareoftenwarrantedbythepersistenceprovider.*inthiscase,uniqueofastocksymbolisensuredbyanexternalagency.*/symbol PRIMARY KEY;
ClassDiagram.Attribut>> Stock./***thenameofthecompanyrepresentedbythisfinancialinstrument.*/company:String =>=>=> RelationalSchema.Column>> stock./***thenameofthecompanyrepresentedbythisfinancialinstrument.*/company;
ClassDiagram.Attribut>> Stock.GeneratedName:Sector =>=>=> RelationalSchema.Column>> stock.GeneratedName;
ClassDiagram.Attribut>> Stock.price:double =>=>=> RelationalSchema.Column>> stock.price;
ClassDiagram.Attribut>> Stock.lastprice:double =>=>=> RelationalSchema.Column>> stock.lastprice;
Many-To-One relationship from ClassDiagram.Class>>Ask  to ClassDiagram.Class>>trader represented by ClassDiagram.Atrribute>>/***thewhohasmadetheoffer.*mustneverbenull.*/seller;
Many-To-One relationship from ClassDiagram.Class>>Bid  to ClassDiagram.Class>>trader represented by ClassDiagram.Atrribute>>/***thewhohasmadetheoffer.*mustneverbenull.*/buyer;
One-To-One relationship between ClassDiagram.Class>>Trade  to ClassDiagram.Class>>ask represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Trade  to ClassDiagram.Class>>bid represented by ClassDiagram.Atrribute>>GeneratedName;
