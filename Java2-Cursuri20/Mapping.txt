ClassDiagram.Class>> Publication =>=>=> RelationalSchema.Table>> publication;
ClassDiagram.Class>> Autor =>=>=> RelationalSchema.Table>> autor;
ClassDiagram.Class>> Publisher =>=>=> RelationalSchema.Table>> publisher;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Task =>=>=> RelationalSchema.Table>> task;
ClassDiagram.Attribut>> Publication.id:long =>=>=> RelationalSchema.Column>> publication.id PRIMARY KEY;
ClassDiagram.Attribut>> Publication.title:String =>=>=> RelationalSchema.Column>> publication.title;
ClassDiagram.Attribut>> Publication.publishingdate:LocalDate =>=>=> RelationalSchema.Column>> publication.publishingdate;
ClassDiagram.Attribut>> Autor.id:long =>=>=> RelationalSchema.Column>> autor.id PRIMARY KEY;
ClassDiagram.Attribut>> Autor.firstname:String =>=>=> RelationalSchema.Column>> autor.firstname;
ClassDiagram.Attribut>> Autor.lastname:String =>=>=> RelationalSchema.Column>> autor.lastname;
ClassDiagram.Attribut>> Publisher.id:long =>=>=> RelationalSchema.Column>> publisher.id PRIMARY KEY;
ClassDiagram.Attribut>> Publisher.name:String =>=>=> RelationalSchema.Column>> publisher.name;
ClassDiagram.Attribut>> Employee.id:long =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Task.id:long =>=>=> RelationalSchema.Column>> task.id PRIMARY KEY;
ClassDiagram.Attribut>> Task.description:String =>=>=> RelationalSchema.Column>> task.description;
ClassDiagram.Attribut>> Task.supervisor:String =>=>=> RelationalSchema.Column>> task.supervisor;
set<publication>: autor_set<publication>(autorID:autor [PK] #FK to autor,set<publication>ID:set<publication> [PK] #FK to set<publication>);
One-To-Many relationship from ClassDiagram.Class>>Publisher  to ClassDiagram.Class>>Set<Book>;
Many-To-One relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>publisher represented by ClassDiagram.Atrribute>>GeneratedName;
list<task>: employee_list<task>(employeeID:employee [PK] #FK to employee,list<task>ID:list<task> [PK] #FK to list<task>);
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Publication  ;
