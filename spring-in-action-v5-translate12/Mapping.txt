ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Ingredient =>=>=> RelationalSchema.Table>> ingredient;
ClassDiagram.Class>> Taco =>=>=> RelationalSchema.Table>> taco;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Attribut>> Order.serialversionuid:long =>=>=> RelationalSchema.Column>> order.serialversionuid;
ClassDiagram.Attribut>> Order.id:Long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.placedat:Date =>=>=> RelationalSchema.Column>> order.placedat;
ClassDiagram.Attribut>> Order.deliveryname:String =>=>=> RelationalSchema.Column>> order.deliveryname;
ClassDiagram.Attribut>> Order.deliverystreet:String =>=>=> RelationalSchema.Column>> order.deliverystreet;
ClassDiagram.Attribut>> Order.deliverycity:String =>=>=> RelationalSchema.Column>> order.deliverycity;
ClassDiagram.Attribut>> Order.deliverystate:String =>=>=> RelationalSchema.Column>> order.deliverystate;
ClassDiagram.Attribut>> Order.deliveryzip:String =>=>=> RelationalSchema.Column>> order.deliveryzip;
ClassDiagram.Attribut>> Order.ccnumber:String =>=>=> RelationalSchema.Column>> order.ccnumber;
ClassDiagram.Attribut>> Order.ccexpiration:String =>=>=> RelationalSchema.Column>> order.ccexpiration;
ClassDiagram.Attribut>> Order.cccvv:String =>=>=> RelationalSchema.Column>> order.cccvv;
ClassDiagram.Attribut>> Ingredient.id:String =>=>=> RelationalSchema.Column>> ingredient.id PRIMARY KEY;
ClassDiagram.Attribut>> Ingredient.name:String =>=>=> RelationalSchema.Column>> ingredient.name;
ClassDiagram.Attribut>> Ingredient.GeneratedName:Type =>=>=> RelationalSchema.Column>> ingredient.GeneratedName;
ClassDiagram.Attribut>> Taco.id:Long =>=>=> RelationalSchema.Column>> taco.id PRIMARY KEY;
ClassDiagram.Attribut>> Taco.name:String =>=>=> RelationalSchema.Column>> taco.name;
ClassDiagram.Attribut>> Taco.createdat:Date =>=>=> RelationalSchema.Column>> taco.createdat;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.fullname:String =>=>=> RelationalSchema.Column>> user.fullname;
ClassDiagram.Attribut>> User.street:String =>=>=> RelationalSchema.Column>> user.street;
ClassDiagram.Attribut>> User.city:String =>=>=> RelationalSchema.Column>> user.city;
ClassDiagram.Attribut>> User.state:String =>=>=> RelationalSchema.Column>> user.state;
ClassDiagram.Attribut>> User.zip:String =>=>=> RelationalSchema.Column>> user.zip;
ClassDiagram.Attribut>> User.phonenumber:String =>=>=> RelationalSchema.Column>> user.phonenumber;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
list<taco>: order_list<taco>(orderID:order [PK] #FK to order,list<taco>ID:list<taco> [PK] #FK to list<taco>);
list<ingredient>: taco_list<ingredient>(tacoID:taco [PK] #FK to taco,list<ingredient>ID:list<ingredient> [PK] #FK to list<ingredient>);
