ClassDiagram.Class>> Speaker =>=>=> RelationalSchema.Table>> speaker;
ClassDiagram.Class>> Developer =>=>=> RelationalSchema.Table>> developer;
ClassDiagram.Class>> Car =>=>=> RelationalSchema.Table>> car;
ClassDiagram.Class>> Seller =>=>=> RelationalSchema.Table>> seller;
ClassDiagram.Class>> Player =>=>=> RelationalSchema.Table>> player;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Tournaments =>=>=> RelationalSchema.Table>> tournaments;
ClassDiagram.Class>> Players =>=>=> RelationalSchema.Table>> players;
ClassDiagram.Attribut>> Speaker.id:Long =>=>=> RelationalSchema.Column>> speaker.id PRIMARY KEY;
ClassDiagram.Attribut>> Speaker.version:int =>=>=> RelationalSchema.Column>> speaker.version;
ClassDiagram.Attribut>> Speaker.firstname:String =>=>=> RelationalSchema.Column>> speaker.firstname;
ClassDiagram.Attribut>> Speaker.surname:String =>=>=> RelationalSchema.Column>> speaker.surname;
ClassDiagram.Attribut>> Speaker.bio:String =>=>=> RelationalSchema.Column>> speaker.bio;
ClassDiagram.Attribut>> Speaker.twitter:String =>=>=> RelationalSchema.Column>> speaker.twitter;
ClassDiagram.Attribut>> Developer.id:int =>=>=> RelationalSchema.Column>> developer.id PRIMARY KEY;
ClassDiagram.Attribut>> Developer.name:String =>=>=> RelationalSchema.Column>> developer.name;
ClassDiagram.Attribut>> Developer.GeneratedName:DeveloperType =>=>=> RelationalSchema.Column>> developer.GeneratedName;
ClassDiagram.Attribut>> Car.id:long =>=>=> RelationalSchema.Column>> car.id PRIMARY KEY;
ClassDiagram.Attribut>> Car.//названиеавтоname:String =>=>=> RelationalSchema.Column>> car.//названиеавтоname;
ClassDiagram.Attribut>> Car.//датавыпускаrelease:Date =>=>=> RelationalSchema.Column>> car.//датавыпускаrelease;
ClassDiagram.Attribut>> Car.//стоимостьcost:float =>=>=> RelationalSchema.Column>> car.//стоимостьcost;
ClassDiagram.Attribut>> Seller.id:long =>=>=> RelationalSchema.Column>> seller.id PRIMARY KEY;
ClassDiagram.Attribut>> Seller.//полноеимяfullname:String =>=>=> RelationalSchema.Column>> seller.//полноеимяfullname;
ClassDiagram.Attribut>> Seller.//возврастage:int =>=>=> RelationalSchema.Column>> seller.//возврастage;
ClassDiagram.Attribut>> Seller.//зар.платаsalary:float =>=>=> RelationalSchema.Column>> seller.//зар.платаsalary;
ClassDiagram.Attribut>> Player.serialversionuid:long =>=>=> RelationalSchema.Column>> player.serialversionuid;
ClassDiagram.Attribut>> Player.id:int =>=>=> RelationalSchema.Column>> player.id PRIMARY KEY;
ClassDiagram.Attribut>> Player.name:String =>=>=> RelationalSchema.Column>> player.name;
ClassDiagram.Attribut>> Player.surname:String =>=>=> RelationalSchema.Column>> player.surname;
ClassDiagram.Attribut>> Player.age:int =>=>=> RelationalSchema.Column>> player.age;
ClassDiagram.Attribut>> Player.birth:Date =>=>=> RelationalSchema.Column>> player.birth;
ClassDiagram.Attribut>> Phone.id:int =>=>=> RelationalSchema.Column>> phone.id PRIMARY KEY;
ClassDiagram.Attribut>> Phone.number:String =>=>=> RelationalSchema.Column>> phone.number;
ClassDiagram.Attribut>> Phone.type:String =>=>=> RelationalSchema.Column>> phone.type;
ClassDiagram.Attribut>> Employee.id:Long =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.surname:String =>=>=> RelationalSchema.Column>> employee.surname;
ClassDiagram.Attribut>> Employee.title:String =>=>=> RelationalSchema.Column>> employee.title;
ClassDiagram.Attribut>> Employee.created:Date =>=>=> RelationalSchema.Column>> employee.created;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.surname:String =>=>=> RelationalSchema.Column>> user.surname;
ClassDiagram.Attribut>> User.title:String =>=>=> RelationalSchema.Column>> user.title;
ClassDiagram.Attribut>> User.created:Date =>=>=> RelationalSchema.Column>> user.created;
ClassDiagram.Attribut>> Tournaments.serialversionuid:long =>=>=> RelationalSchema.Column>> tournaments.serialversionuid;
ClassDiagram.Attribut>> Tournaments.id:int =>=>=> RelationalSchema.Column>> tournaments.id PRIMARY KEY;
ClassDiagram.Attribut>> Tournaments.tournament:String =>=>=> RelationalSchema.Column>> tournaments.tournament;
ClassDiagram.Attribut>> Players.serialversionuid:long =>=>=> RelationalSchema.Column>> players.serialversionuid;
ClassDiagram.Attribut>> Players.id:int =>=>=> RelationalSchema.Column>> players.id PRIMARY KEY;
ClassDiagram.Attribut>> Players.name:String =>=>=> RelationalSchema.Column>> players.name;
ClassDiagram.Attribut>> Players.surname:String =>=>=> RelationalSchema.Column>> players.surname;
ClassDiagram.Attribut>> Players.age:int =>=>=> RelationalSchema.Column>> players.age;
ClassDiagram.Attribut>> Players.birth:Date =>=>=> RelationalSchema.Column>> players.birth;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Collection<Phone>;
collection: players_collection(playersID:players [PK] #FK to players,collectionID:collection [PK] #FK to collection);
