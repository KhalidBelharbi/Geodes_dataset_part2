ClassDiagram.Class>> AuthenticationToken =>=>=> RelationalSchema.Table>> authenticationtoken;
ClassDiagram.Class>> EventVegetarianRequest =>=>=> RelationalSchema.Table>> eventvegetarianrequest;
ClassDiagram.Class>> EventChildrenMenuRequest =>=>=> RelationalSchema.Table>> eventchildrenmenurequest;
ClassDiagram.Class>> EventChildrenAgeRequest =>=>=> RelationalSchema.Table>> eventchildrenagerequest;
ClassDiagram.Class>> EventPartnerRequest =>=>=> RelationalSchema.Table>> eventpartnerrequest;
ClassDiagram.Class>> EventGrownMenuRequest =>=>=> RelationalSchema.Table>> eventgrownmenurequest;
ClassDiagram.Class>> EventNumberOfPassesRequest =>=>=> RelationalSchema.Table>> eventnumberofpassesrequest;
ClassDiagram.Class>> Event =>=>=> RelationalSchema.Table>> event;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> LogoInformation =>=>=> RelationalSchema.Table>> logoinformation;
ClassDiagram.Class>> Logo =>=>=> RelationalSchema.Table>> logo;
ClassDiagram.Class>> Thumbnail =>=>=> RelationalSchema.Table>> thumbnail;
ClassDiagram.Class>> TeamUserSelection =>=>=> RelationalSchema.Table>> teamuserselection;
ClassDiagram.Class>> Team =>=>=> RelationalSchema.Table>> team;
ClassDiagram.Class>> ClassificationValue =>=>=> RelationalSchema.Table>> classificationvalue;
ClassDiagram.Class>> Classification =>=>=> RelationalSchema.Table>> classification;
ClassDiagram.Class>> ClassificationType =>=>=> RelationalSchema.Table>> classificationtype;
ClassDiagram.Class>> Activity =>=>=> RelationalSchema.Table>> activity;
ClassDiagram.Class>> ActivityPartnerRequest =>=>=> RelationalSchema.Table>> activitypartnerrequest;
ClassDiagram.Class>> Location =>=>=> RelationalSchema.Table>> location;
ClassDiagram.Class>> Versioninformation =>=>=> RelationalSchema.Table>> versioninformation;
ClassDiagram.Attribut>> AuthenticationToken.tokenid:Integer =>=>=> RelationalSchema.Column>> authenticationtoken.tokenid PRIMARY KEY;
ClassDiagram.Attribut>> AuthenticationToken.username:String =>=>=> RelationalSchema.Column>> authenticationtoken.username;
ClassDiagram.Attribut>> AuthenticationToken.value:String =>=>=> RelationalSchema.Column>> authenticationtoken.value;
ClassDiagram.Attribut>> EventVegetarianRequest.idvegetarianrequest:int =>=>=> RelationalSchema.Column>> eventvegetarianrequest.idvegetarianrequest PRIMARY KEY;
ClassDiagram.Attribut>> EventVegetarianRequest.iduser:int =>=>=> RelationalSchema.Column>> eventvegetarianrequest.iduser;
ClassDiagram.Attribut>> EventVegetarianRequest.idevent:int =>=>=> RelationalSchema.Column>> eventvegetarianrequest.idevent;
ClassDiagram.Attribut>> EventVegetarianRequest.vegetarian:int =>=>=> RelationalSchema.Column>> eventvegetarianrequest.vegetarian;
ClassDiagram.Attribut>> EventChildrenMenuRequest.ideventchildrenmenurequest:int =>=>=> RelationalSchema.Column>> eventchildrenmenurequest.ideventchildrenmenurequest PRIMARY KEY;
ClassDiagram.Attribut>> EventChildrenMenuRequest.iduser:int =>=>=> RelationalSchema.Column>> eventchildrenmenurequest.iduser;
ClassDiagram.Attribut>> EventChildrenMenuRequest.idevent:int =>=>=> RelationalSchema.Column>> eventchildrenmenurequest.idevent;
ClassDiagram.Attribut>> EventChildrenMenuRequest.childrenmenus:int =>=>=> RelationalSchema.Column>> eventchildrenmenurequest.childrenmenus;
ClassDiagram.Attribut>> EventChildrenAgeRequest.idchildrenagerequest:int =>=>=> RelationalSchema.Column>> eventchildrenagerequest.idchildrenagerequest PRIMARY KEY;
ClassDiagram.Attribut>> EventChildrenAgeRequest.iduser:int =>=>=> RelationalSchema.Column>> eventchildrenagerequest.iduser;
ClassDiagram.Attribut>> EventChildrenAgeRequest.idevent:int =>=>=> RelationalSchema.Column>> eventchildrenagerequest.idevent;
ClassDiagram.Attribut>> EventChildrenAgeRequest.childrenage:String =>=>=> RelationalSchema.Column>> eventchildrenagerequest.childrenage;
ClassDiagram.Attribut>> EventPartnerRequest.idpartnerrequest:int =>=>=> RelationalSchema.Column>> eventpartnerrequest.idpartnerrequest PRIMARY KEY;
ClassDiagram.Attribut>> EventPartnerRequest.partnerrequest:boolean =>=>=> RelationalSchema.Column>> eventpartnerrequest.partnerrequest;
ClassDiagram.Attribut>> EventPartnerRequest.iduser:int =>=>=> RelationalSchema.Column>> eventpartnerrequest.iduser;
ClassDiagram.Attribut>> EventPartnerRequest.idevent:int =>=>=> RelationalSchema.Column>> eventpartnerrequest.idevent;
ClassDiagram.Attribut>> EventGrownMenuRequest.ideventgrownmenurequest:int =>=>=> RelationalSchema.Column>> eventgrownmenurequest.ideventgrownmenurequest PRIMARY KEY;
ClassDiagram.Attribut>> EventGrownMenuRequest.iduser:int =>=>=> RelationalSchema.Column>> eventgrownmenurequest.iduser;
ClassDiagram.Attribut>> EventGrownMenuRequest.idevent:int =>=>=> RelationalSchema.Column>> eventgrownmenurequest.idevent;
ClassDiagram.Attribut>> EventGrownMenuRequest.grownmenus:int =>=>=> RelationalSchema.Column>> eventgrownmenurequest.grownmenus;
ClassDiagram.Attribut>> EventNumberOfPassesRequest.ideventnumberofpassesrequest:int =>=>=> RelationalSchema.Column>> eventnumberofpassesrequest.ideventnumberofpassesrequest PRIMARY KEY;
ClassDiagram.Attribut>> EventNumberOfPassesRequest.iduser:int =>=>=> RelationalSchema.Column>> eventnumberofpassesrequest.iduser;
ClassDiagram.Attribut>> EventNumberOfPassesRequest.idevent:int =>=>=> RelationalSchema.Column>> eventnumberofpassesrequest.idevent;
ClassDiagram.Attribut>> EventNumberOfPassesRequest.numberofpasses:int =>=>=> RelationalSchema.Column>> eventnumberofpassesrequest.numberofpasses;
ClassDiagram.Attribut>> Event.idevent:int =>=>=> RelationalSchema.Column>> event.idevent PRIMARY KEY;
ClassDiagram.Attribut>> Event.name:String =>=>=> RelationalSchema.Column>> event.name;
ClassDiagram.Attribut>> Event.description:String =>=>=> RelationalSchema.Column>> event.description;
ClassDiagram.Attribut>> Event.start:Date =>=>=> RelationalSchema.Column>> event.start;
ClassDiagram.Attribut>> Event.end:Date =>=>=> RelationalSchema.Column>> event.end;
ClassDiagram.Attribut>> Event.enabled:boolean =>=>=> RelationalSchema.Column>> event.enabled;
ClassDiagram.Attribut>> Event.signstart:Date =>=>=> RelationalSchema.Column>> event.signstart;
ClassDiagram.Attribut>> Event.signend:Date =>=>=> RelationalSchema.Column>> event.signend;
ClassDiagram.Attribut>> Event.unsignend:Date =>=>=> RelationalSchema.Column>> event.unsignend;
ClassDiagram.Attribut>> Event.memberprice:int =>=>=> RelationalSchema.Column>> event.memberprice;
ClassDiagram.Attribut>> Event.notmemberprice:int =>=>=> RelationalSchema.Column>> event.notmemberprice;
ClassDiagram.Attribut>> Event.noshowprice:int =>=>=> RelationalSchema.Column>> event.noshowprice;
ClassDiagram.Attribut>> Event.GeneratedName:Location =>=>=> RelationalSchema.Column>> event.GeneratedName;
ClassDiagram.Attribut>> Event.GeneratedName:Logo =>=>=> RelationalSchema.Column>> event.GeneratedName;
ClassDiagram.Attribut>> Event.canrequestpartner:boolean =>=>=> RelationalSchema.Column>> event.canrequestpartner;
ClassDiagram.Attribut>> Event.canrequestvegetarian:boolean =>=>=> RelationalSchema.Column>> event.canrequestvegetarian;
ClassDiagram.Attribut>> Event.canrequestchildrenage:boolean =>=>=> RelationalSchema.Column>> event.canrequestchildrenage;
ClassDiagram.Attribut>> Event.canrequestchildrenmenus:boolean =>=>=> RelationalSchema.Column>> event.canrequestchildrenmenus;
ClassDiagram.Attribut>> Event.canrequestgrownmenus:boolean =>=>=> RelationalSchema.Column>> event.canrequestgrownmenus;
ClassDiagram.Attribut>> Event.canrequestpasses:boolean =>=>=> RelationalSchema.Column>> event.canrequestpasses;
ClassDiagram.Attribut>> Event.partnerrequest:boolean =>=>=> RelationalSchema.Column>> event.partnerrequest;
ClassDiagram.Attribut>> Event.vegetarianrequest:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Event.grownmenurequest:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Event.childrenmenurequest:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Event.passesrequest:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Event.childrenagerequest:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Event.showattendingusers:boolean =>=>=> RelationalSchema.Column>> event.showattendingusers;
ClassDiagram.Attribut>> Event.activitylist:List<Activity> =>=>=> RelationalSchema.Column>> event.activitylist;
ClassDiagram.Attribut>> Event.selected:User =>=>=> RelationalSchema.Column>> event.selected;
ClassDiagram.Attribut>> User.blof:PERSONFOR =>=>=> RelationalSchema.Column>> user.blof;
ClassDiagram.Attribut>> User.shirtsizes:List<SelectItem> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.iduser:int =>=>=> RelationalSchema.Column>> user.iduser PRIMARY KEY;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.employeeid:String =>=>=> RelationalSchema.Column>> user.employeeid;
ClassDiagram.Attribut>> User.mail:String =>=>=> RelationalSchema.Column>> user.mail;
ClassDiagram.Attribut>> User.department:String =>=>=> RelationalSchema.Column>> user.department;
ClassDiagram.Attribut>> User.phone:String =>=>=> RelationalSchema.Column>> user.phone;
ClassDiagram.Attribut>> User.admin:boolean =>=>=> RelationalSchema.Column>> user.admin;
ClassDiagram.Attribut>> User.personaleforening:boolean =>=>=> RelationalSchema.Column>> user.personaleforening;
ClassDiagram.Attribut>> User.shirtsize:String =>=>=> RelationalSchema.Column>> user.shirtsize;
ClassDiagram.Attribut>> User.firstlogin:boolean =>=>=> RelationalSchema.Column>> user.firstlogin;
ClassDiagram.Attribut>> User.roles:List<String> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Logo.id:Long =>=>=> RelationalSchema.Column>> logo.id PRIMARY KEY;
ClassDiagram.Attribut>> Logo.name:String =>=>=> RelationalSchema.Column>> logo.name;
ClassDiagram.Attribut>> Logo.size:long =>=>=> RelationalSchema.Column>> logo.size;
ClassDiagram.Attribut>> Logo.contenttype:String =>=>=> RelationalSchema.Column>> logo.contenttype;
ClassDiagram.Attribut>> Logo.data:byte =>=>=> RelationalSchema.Column>> logo.data;
ClassDiagram.Attribut>> Thumbnail.serialversionuid:long =>=>=> RelationalSchema.Column>> thumbnail.serialversionuid;
ClassDiagram.Attribut>> Thumbnail.id:int =>=>=> RelationalSchema.Column>> thumbnail.id PRIMARY KEY;
ClassDiagram.Attribut>> Thumbnail.data:byte =>=>=> RelationalSchema.Column>> thumbnail.data;
ClassDiagram.Attribut>> Thumbnail.size:long =>=>=> RelationalSchema.Column>> thumbnail.size;
ClassDiagram.Attribut>> TeamUserSelection.id:int =>=>=> RelationalSchema.Column>> teamuserselection.id PRIMARY KEY;
ClassDiagram.Attribut>> TeamUserSelection.iduser:int =>=>=> RelationalSchema.Column>> teamuserselection.iduser;
ClassDiagram.Attribut>> TeamUserSelection.idteam:int =>=>=> RelationalSchema.Column>> teamuserselection.idteam;
ClassDiagram.Attribut>> TeamUserSelection.idevent:int =>=>=> RelationalSchema.Column>> teamuserselection.idevent;
ClassDiagram.Attribut>> Team.id:int =>=>=> RelationalSchema.Column>> team.id PRIMARY KEY;
ClassDiagram.Attribut>> Team.name:String =>=>=> RelationalSchema.Column>> team.name;
ClassDiagram.Attribut>> ClassificationValue.id:int =>=>=> RelationalSchema.Column>> classificationvalue.id PRIMARY KEY;
ClassDiagram.Attribut>> ClassificationValue.value:String =>=>=> RelationalSchema.Column>> classificationvalue.value;
ClassDiagram.Attribut>> Classification.id:int =>=>=> RelationalSchema.Column>> classification.id PRIMARY KEY;
ClassDiagram.Attribut>> Classification.name:String =>=>=> RelationalSchema.Column>> classification.name;
ClassDiagram.Attribut>> ClassificationType.id:int =>=>=> RelationalSchema.Column>> classificationtype.id PRIMARY KEY;
ClassDiagram.Attribut>> ClassificationType.name:String =>=>=> RelationalSchema.Column>> classificationtype.name;
ClassDiagram.Attribut>> ClassificationType.type:String =>=>=> RelationalSchema.Column>> classificationtype.type;
ClassDiagram.Attribut>> Activity.idactivity:int =>=>=> RelationalSchema.Column>> activity.idactivity PRIMARY KEY;
ClassDiagram.Attribut>> Activity.name:String =>=>=> RelationalSchema.Column>> activity.name;
ClassDiagram.Attribut>> Activity.description:String =>=>=> RelationalSchema.Column>> activity.description;
ClassDiagram.Attribut>> Activity.start:Date =>=>=> RelationalSchema.Column>> activity.start;
ClassDiagram.Attribut>> Activity.end:Date =>=>=> RelationalSchema.Column>> activity.end;
ClassDiagram.Attribut>> Activity.minimumplayers:int =>=>=> RelationalSchema.Column>> activity.minimumplayers;
ClassDiagram.Attribut>> Activity.minimumteams:int =>=>=> RelationalSchema.Column>> activity.minimumteams;
ClassDiagram.Attribut>> Activity.GeneratedName:Location =>=>=> RelationalSchema.Column>> activity.GeneratedName;
ClassDiagram.Attribut>> Activity.responsible:String =>=>=> RelationalSchema.Column>> activity.responsible;
ClassDiagram.Attribut>> Activity.canrequestpartner:boolean =>=>=> RelationalSchema.Column>> activity.canrequestpartner;
ClassDiagram.Attribut>> Activity.memberprice:Integer =>=>=> RelationalSchema.Column>> activity.memberprice;
ClassDiagram.Attribut>> Activity.notmemberprice:Integer =>=>=> RelationalSchema.Column>> activity.notmemberprice;
ClassDiagram.Attribut>> Activity.noshowprice:Integer =>=>=> RelationalSchema.Column>> activity.noshowprice;
ClassDiagram.Attribut>> Activity.partnerrequest:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Activity.text:String =>=>=> RelationalSchema.Column>> activity.text;
ClassDiagram.Attribut>> Activity.color:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Activity.scale:float =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Activity.percentage:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Activity.offset:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ActivityPartnerRequest.idpartnerrequest:int =>=>=> RelationalSchema.Column>> activitypartnerrequest.idpartnerrequest PRIMARY KEY;
ClassDiagram.Attribut>> ActivityPartnerRequest.iduser:int =>=>=> RelationalSchema.Column>> activitypartnerrequest.iduser;
ClassDiagram.Attribut>> ActivityPartnerRequest.idactivity:int =>=>=> RelationalSchema.Column>> activitypartnerrequest.idactivity;
ClassDiagram.Attribut>> ActivityPartnerRequest.partnernames:String =>=>=> RelationalSchema.Column>> activitypartnerrequest.partnernames;
ClassDiagram.Attribut>> Location.idlocation:int =>=>=> RelationalSchema.Column>> location.idlocation PRIMARY KEY;
ClassDiagram.Attribut>> Location.name:String =>=>=> RelationalSchema.Column>> location.name;
ClassDiagram.Attribut>> Versioninformation.idversioninformation:int =>=>=> RelationalSchema.Column>> versioninformation.idversioninformation PRIMARY KEY;
ClassDiagram.Attribut>> Versioninformation.major:int =>=>=> RelationalSchema.Column>> versioninformation.major;
ClassDiagram.Attribut>> Versioninformation.majorminor:int =>=>=> RelationalSchema.Column>> versioninformation.majorminor;
ClassDiagram.Attribut>> Versioninformation.minor:int =>=>=> RelationalSchema.Column>> versioninformation.minor;
ClassDiagram.Attribut>> Versioninformation.minorminor:int =>=>=> RelationalSchema.Column>> versioninformation.minorminor;
One-To-Many relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>Set<Activity>;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<event>: user_has_event(user_iduser:User [PK] #FK to User,event_idevent:set<event> [PK] #FK to set<event>);
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<activity>: user_has_event(user_iduser:User [PK] #FK to User,event_idevent:set<event> [PK] #FK to set<event>);user_has_activity(user_iduser:User [PK] #FK to User,activity_idactivity:set<activity> [PK] #FK to set<activity>);
Many-To-One relationship from ClassDiagram.Class>>Classification  to ClassDiagram.Class>>classificationtype represented by ClassDiagram.Atrribute>>type;
Many-To-Many relationship between ClassDiagram.Class>>Classification  and ClassDiagram.Class>>set<classificationvalue>: classification_has_value(id_classification:Classification [PK] #FK to Classification,id_classificationvalue:set<classificationvalue> [PK] #FK to set<classificationvalue>);
