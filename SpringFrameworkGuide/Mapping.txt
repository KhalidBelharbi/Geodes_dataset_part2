ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> UserRole =>=>=> RelationalSchema.Table>> userrole;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Attribut>> Category.serialversionuid:long =>=>=> RelationalSchema.Column>> category.serialversionuid;
ClassDiagram.Attribut>> Category.id:Integer =>=>=> RelationalSchema.Column>> category.id PRIMARY KEY;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> Category.description:String =>=>=> RelationalSchema.Column>> category.description;
ClassDiagram.Attribut>> Category.imageurl:String =>=>=> RelationalSchema.Column>> category.imageurl;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.id:Integer =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.enable:Boolean =>=>=> RelationalSchema.Column>> user.enable;
ClassDiagram.Attribut>> UserRole.serialversionuid:long =>=>=> RelationalSchema.Column>> userrole.serialversionuid;
ClassDiagram.Attribut>> UserRole.GeneratedName:Role =>=>=> RelationalSchema.Column>> userrole.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> UserRole.GeneratedName:User =>=>=> RelationalSchema.Column>> userrole.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> UserRole.other:String =>=>=> RelationalSchema.Column>> userrole.other;
ClassDiagram.Attribut>> Order.serialversionuid:long =>=>=> RelationalSchema.Column>> order.serialversionuid;
ClassDiagram.Attribut>> Order.id:Integer =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.status:Integer =>=>=> RelationalSchema.Column>> order.status;
ClassDiagram.Attribut>> Order.statusname:String =>=>=> RelationalSchema.Column>> order.statusname;
ClassDiagram.Attribut>> Product.serialversionuid:long =>=>=> RelationalSchema.Column>> product.serialversionuid;
ClassDiagram.Attribut>> Product.id:Integer =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.price:Double =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Product.imageurl1:String =>=>=> RelationalSchema.Column>> product.imageurl1;
ClassDiagram.Attribut>> Product.imageurl2:String =>=>=> RelationalSchema.Column>> product.imageurl2;
ClassDiagram.Attribut>> Product.imageurl3:String =>=>=> RelationalSchema.Column>> product.imageurl3;
ClassDiagram.Attribut>> Product.imageurl4:String =>=>=> RelationalSchema.Column>> product.imageurl4;
ClassDiagram.Attribut>> Product.imageurl5:String =>=>=> RelationalSchema.Column>> product.imageurl5;
ClassDiagram.Attribut>> Role.serialversionuid:long =>=>=> RelationalSchema.Column>> role.serialversionuid;
ClassDiagram.Attribut>> Role.id:Integer =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
One-To-Many relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>List<Product>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<UserRole>;
Many-To-One relationship from ClassDiagram.Class>>UserRole  to ClassDiagram.Class>>role represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>UserRole  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Category represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Role  to ClassDiagram.Class>>List<UserRole>;
