<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="genelistrepositorytests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="genelistrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genelistrepositorytestconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orthologservicetest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="graphqlconsumer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jsontoorthologsmapper" nillable="true" minOccurs="0" />
        <xs:element name="testinstance" type="orthologservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstageprocessorwithoutvalidationstest" >
      <xs:sequence>
        <xs:element name="testinstance" type="phenotypingstageprocessorwithoutvalidations" nillable="true" minOccurs="0" />
        <xs:element name="stagestatesetter" type="phenotypingstagestatesetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alldataprocessedtophenotypingfinishedprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="alldataprocessedtophenotypingfinishedprocessor" nillable="true" minOccurs="0" />
        <xs:element name="stagestatesetter" type="phenotypingstagestatesetter" nillable="true" minOccurs="0" />
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rollbacktoalldataprocessedprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="rollbacktoalldataprocessedprocessor" nillable="true" minOccurs="0" />
        <xs:element name="stagestatesetter" type="phenotypingstagestatesetter" nillable="true" minOccurs="0" />
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alldatasenttoalldataprocessedprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="alldatasenttoalldataprocessedprocessor" nillable="true" minOccurs="0" />
        <xs:element name="stagestatesetter" type="phenotypingstagestatesetter" nillable="true" minOccurs="0" />
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstartedprocessorwithtissuecreationtest" >
      <xs:sequence>
        <xs:element name="testinstance" type="phenotypingstartedprocessorwithtissuecreation" nillable="true" minOccurs="0" />
        <xs:element name="stagestatesetter" type="phenotypingstagestatesetter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="materialdepositedtypeservice" nillable="true" minOccurs="0" />
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
        <xs:element name="paraffin_embedded_sections_name" type="xs:string" />
        <xs:element name="fixed_tissue_name" type="xs:string" />
        <xs:element name="fixed" type="materialdepositedtype" nillable="true" minOccurs="0" />
        <xs:element name="paraffin" type="materialdepositedtype" nillable="true" minOccurs="0" />
        <xs:element name="automatic_tissue_creation_work_unit" type="xs:string" />
        <xs:element name="not_automatic_tissue_creation_work_unit" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstartedprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="phenotypingstartedprocessor" nillable="true" minOccurs="0" />
        <xs:element name="stagestatesetter" type="phenotypingstagestatesetter" nillable="true" minOccurs="0" />
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstagestatesettertest" >
      <xs:sequence>
        <xs:element name="testinstance" type="phenotypingstagestatesetter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="statusservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plansummarystatusupdatertest" >
      <xs:sequence>
        <xs:element name="testinstance" type="plansummarystatusupdater" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planstatemachineresolvertest" >
      <xs:sequence>
        <xs:element name="testinstance" type="planstatemachineresolver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypeplanabortprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="phenotypeplanabortprocessor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatesetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypeplanabandonprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="phenotypeplanabandonprocessor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatesetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="breedingplanabortprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="breedingplanabortprocessor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatesetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="breedingstartedprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="breedingstartedprocessor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatesetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abortfounderobtainedprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="abortfounderobtainedprocessor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatesetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embryosobtainedprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="embryosobtainedprocessor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatesetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="founderobtainedprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="founderobtainedprocessor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatesetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attemptinprogressprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="attemptinprogressprocessor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatesetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="confirmgenotypeprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="confirmgenotypeprocessor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="colonystatesetter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sequencerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sequenceservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="colonyabortprocessortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="colonyabortprocessor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="colonystatesetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fluentprojectfiltertest" >
      <xs:sequence>
        <xs:element name="testinstance" type="fluentprojectfilter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectqueryhelpertest" >
      <xs:sequence>
        <xs:element name="testinstance" type="projectqueryhelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectsummarystatusupdatertest" >
      <xs:sequence>
        <xs:element name="testinstance" type="projectsummarystatusupdater" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="statusservice" nillable="true" minOccurs="0" />
        <xs:element name="inactive" type="status" nillable="true" minOccurs="0" />
        <xs:element name="_1" type="status" nillable="true" minOccurs="0" />
        <xs:element name="_2" type="status" nillable="true" minOccurs="0" />
        <xs:element name="_aborted" type="status" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conflictscheckertest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="assignmentstatusservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectintentionservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectqueryhelper" nillable="true" minOccurs="0" />
        <xs:element name="testinstance" type="conflictschecker" nillable="true" minOccurs="0" />
        <xs:element name="assigned" type="assignmentstatus" nillable="true" minOccurs="0" />
        <xs:element name="inspect_gtl_mouse" type="assignmentstatus" nillable="true" minOccurs="0" />
        <xs:element name="inspect_attempt" type="assignmentstatus" nillable="true" minOccurs="0" />
        <xs:element name="inspect_conflict" type="assignmentstatus" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractprocessortest" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
          <xs:element name="testinstance" type="xs:anyType" />
          <xs:element name="" type="planstatesetter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="systemeventsexecutortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="systemeventsexecutor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatemachineresolver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="statetransitionsmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="coreapplicationtests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fluentpersonroleworkunitlisttest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planbuilder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="plantype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="attempttype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="status" nillable="true" minOccurs="0" />
        <xs:element name="isstatusabortion" type="xs:anyType" />
        <xs:element name="statusorder" type="xs:long" />
        <xs:element name="summary" type="status" nillable="true" minOccurs="0" />
        <xs:element name="pin" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outcomebuilder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="outcometypename" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="outcometype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="colony" nillable="true" minOccurs="0" />
        <xs:element name="isabortionstatuscolony" type="xs:anyType" />
        <xs:element name="statusorder" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectbuilder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="assignmentstatus" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyevaluatortest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertyevaluator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="changesdetectortest" >
      <xs:sequence>
        <xs:element name="class1nonesteddata" type="xs:anyType" />
        <xs:element name="class2nonesteddata" type="xs:anyType" />
        <xs:element name="class3nonesteddatadifferent" type="xs:anyType" />
        <xs:element name="class1nesteddata" type="xs:anyType" />
        <xs:element name="class2nesteddata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertycheckertest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="changesdetectorcomplexcasestest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectinspectortest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="objectinspector" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodetest" >
      <xs:sequence>
        <xs:element name="root" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertydescriptionextractortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="propertydescriptionextractor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="checkedclassestreetest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="checkedclassestree" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="historyserviceimpltest" >
      <xs:sequence>
        <xs:element name="date" type="xs:anyType" />
        <xs:element name="testinstance" type="xs:anyType" />
        <xs:element name="historybuilder" type="xs:anyType" />
        <xs:element name="GeneratedName" type="historyrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertymapgroupertest" >
      <xs:sequence>
        <xs:element name="testinstance" type="propertymapgrouper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="historychangesadaptorusingplanobjecttest" >
      <xs:sequence>
        <xs:element name="historychangesadaptor" type="plan" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="historybuildertest" >
      <xs:sequence>
        <xs:element name="testinstance" type="xs:anyType" />
        <xs:element name="GeneratedName" type="subjectretriever" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="systemsubject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="historychangesadaptortest" >
      <xs:sequence>
        <xs:element name="testinstance" type="project" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dbsetupfilepaths" >
      <xs:sequence>
        <xs:element name="gene_list_projection" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querybuildertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumstatehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transitionevaluation" >
      <xs:sequence>
        <xs:element name="transition" type="processevent" nillable="true" minOccurs="0" />
        <xs:element name="executable" type="xs:anyType" />
        <xs:element name="note" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="processevent" >
      <xs:complexContent>
       <xs:extension base="processor>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statemachineconstants" >
      <xs:sequence>
        <xs:element name="triggered_by_user" type="xs:anyType" />
        <xs:element name="not_triggered_by_user" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="systemeventsexecutor" >
      <xs:sequence>
        <xs:element name="statetransitionmanager" type="statetransitionsmanager" nillable="true" minOccurs="0" />
        <xs:element name="user_action_present_error_message" type="xs:string" />
        <xs:element name="GeneratedName" type="statemachineresolver" nillable="true" minOccurs="0" />
        <xs:element name="originalevent" type="processevent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statetransitionsmanager" >
      <xs:complexContent>
       <xs:extension base="processor>">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="processdata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transitionavailabilityevaluator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="statetransitionsmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractprocessor" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="statesetter" nillable="true" minOccurs="0" />
        <xs:element name="transition_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statesetter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="processor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statemachineresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="processexception" >
      <xs:complexContent>
       <xs:extension base="exception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="processstate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="coreapplication" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reventity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:long" />
        <xs:element name="createdby" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reporttypeserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="reporttyperepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingcolonyreportservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingcolonyreportserviceimpl" >
      <xs:sequence>
        <xs:element name="phenotypingcolonyreportservice" type="commonphenotypingcolonyreportserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="reportservice" type="reportserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="reportrows" type="xs:anyType" />
        <xs:element name="pap" type="commonphenotypingcolonyreportphenotypingattemptprojection" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="filteredoutcomemutationmap" type="xs:anyType" />
        <xs:element name="filteredmutationgenemap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgiphenotypingcolonyreportservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgiphenotypingcolonyreportserviceimpl" >
      <xs:sequence>
        <xs:element name="phenotypingcolonyreportservice" type="commonphenotypingcolonyreportserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="reportservice" type="reportserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="reportrows" type="xs:anyType" />
        <xs:element name="pap" type="commonphenotypingcolonyreportphenotypingattemptprojection" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="filteredoutcomemutationmap" type="xs:anyType" />
        <xs:element name="filteredmutationgenemap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportserviceimpl" >
      <xs:sequence>
        <xs:element name="colonyreportservice" type="mgicrisprallelereportcolonyserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="reportservice" type="reportserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="reportrows" type="xs:anyType" />
        <xs:element name="cp" type="mgicrisprallelereportcolonyprojection" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="filteredoutcomemutationmap" type="xs:anyType" />
        <xs:element name="filteredmutationgenemap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportmutationrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<mutation,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportmutationserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mgicrisprallelereportmutationrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportmutationgeneprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportmutationservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportcolonyservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportcolonyserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mgicrisprallelereportcolonyrepository" nillable="true" minOccurs="0" />
        <xs:element name="outcomereportservice" type="mgicrisprallelereportoutcomeserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="mutationreportservice" type="mgicrisprallelereportmutationserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="cp" type="mgicrisprallelereportcolonyprojection" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="filteredoutcomemutationmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportcolonyprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportcolonyrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<colony,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportoutcomerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<outcome,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportoutcomeservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportoutcomemutationprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportoutcomeserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mgicrisprallelereportoutcomerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mgicrisprallelereportservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportserviceimpl" >
      <xs:sequence>
        <xs:element name="phenotypingattemptservice" type="commonphenotypingcolonyreportphenotypingattemptserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="outcomereportservice" type="commonphenotypingcolonyreportoutcomeserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="mutationreportservice" type="commonphenotypingcolonyreportmutationserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="pap" type="commonphenotypingcolonyreportphenotypingattemptprojection" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="filteredoutcomemutationmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportphenotypingattemptservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportphenotypingattemptrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<phenotypingattempt,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportphenotypingattemptprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportphenotypingattemptserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="commonphenotypingcolonyreportphenotypingattemptrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportoutcomeserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="commonphenotypingcolonyreportoutcomerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportoutcomeservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportoutcomerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<outcome,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportoutcomemutationprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportmutationservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportmutationrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<mutation,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportmutationserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="commonphenotypingcolonyreportmutationrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commonphenotypingcolonyreportmutationgeneprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportphenotypingattemptservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportphenotypingattemptserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="geneinterestreportphenotypingattemptrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportphenotypingattemptprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportphenotypingattemptrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<phenotypingattempt,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geneinterestreportgeneservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportgeneserviceimpl" >
      <xs:sequence>
        <xs:element name="generepository" type="geneinterestreportgenerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportgenerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<gene,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geneinterestreportgeneprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportproductiontype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportcrisprproduction" >
      <xs:sequence>
        <xs:element name="projectservice" type="geneinterestreportprojectserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="geneservice" type="geneinterestreportgeneserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="genestatussummaryhelper" type="genestatussummaryhelperimpl" nillable="true" minOccurs="0" />
        <xs:element name="geneassignmentstatushelper" type="geneassignmentstatushelperimpl" nillable="true" minOccurs="0" />
        <xs:element name="projectionmergehelper" type="geneinterestreportprojectionmergehelperimpl" nillable="true" minOccurs="0" />
        <xs:element name="crisprprojectprojections" type="geneinterestreportprojectprojection" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="crisprgeneprojections" type="geneinterestreportgeneprojection" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="crisprgenes" type="xs:anyType" />
        <xs:element name="projectsforcrisprgenes" type="xs:anyType" />
        <xs:element name="assignmentforcrisprprojects" type="xs:anyType" />
        <xs:element name="productionplansforcrisprprojects" type="xs:anyType" />
        <xs:element name="statusforcrisprproductionplans" type="xs:anyType" />
        <xs:element name="summaryassignmentforcrisprgenes" type="xs:anyType" />
        <xs:element name="summaryproductionplanstatusforcrisprgenes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportphenotyping" >
      <xs:sequence>
        <xs:element name="phenotypingservice" type="geneinterestreportphenotypingserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="genestatussummaryhelper" type="genestatussummaryhelperimpl" nillable="true" minOccurs="0" />
        <xs:element name="pap" type="geneinterestreportphenotypingattemptprojection" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="filteredoutcomemutationmap" type="xs:anyType" />
        <xs:element name="filteredmutationgenemap" type="xs:anyType" />
        <xs:element name="phenotypinggenes" type="xs:anyType" />
        <xs:element name="projectsforphenotypinggenes" type="xs:anyType" />
        <xs:element name="phenotypingplansforprojects" type="xs:anyType" />
        <xs:element name="phenotypingstagestatusforphenotypingplans" type="xs:anyType" />
        <xs:element name="summaryearlyadultphenotypingstagestatusforphenotypinggenes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportphenotypingserviceimpl" >
      <xs:sequence>
        <xs:element name="phenotypingattemptservice" type="geneinterestreportphenotypingattemptserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="outcomereportservice" type="geneinterestreportoutcomeserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="mutationreportservice" type="geneinterestreportmutationserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="pap" type="geneinterestreportphenotypingattemptprojection" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="filteredoutcomemutationmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportphenotypingservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportmutationgeneprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportmutationservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportmutationserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="geneinterestreportmutationrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportmutationrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<mutation,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geneinterestreportprojectionmergehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportserviceimpl" >
      <xs:sequence>
        <xs:element name="reportservice" type="reportserviceimpl" nillable="true" minOccurs="0" />
        <xs:element name="crisprproduction" type="geneinterestreportcrisprproduction" nillable="true" minOccurs="0" />
        <xs:element name="phenotyping" type="geneinterestreportphenotyping" nillable="true" minOccurs="0" />
        <xs:element name="crisprgenes" type="xs:anyType" />
        <xs:element name="summaryassignmentforcrisprgenes" type="xs:anyType" />
        <xs:element name="summaryproductionplanstatusforcrisprgenes" type="xs:anyType" />
        <xs:element name="phenotypinggenes" type="xs:anyType" />
        <xs:element name="summaryearlyadultphenotypingstagestatusforphenotypinggenes" type="xs:anyType" />
        <xs:element name="summaryassignmentforgenes" type="xs:anyType" />
        <xs:element name="allgenes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportprojectionmergehelperimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportprojectrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<project,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geneinterestreportprojectprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportprojectservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportprojectserviceimpl" >
      <xs:sequence>
        <xs:element name="projectrepository" type="geneinterestreportprojectrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportoutcomerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<outcome,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geneinterestreportoutcomeserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="geneinterestreportoutcomerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportoutcomemutationprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneinterestreportoutcomeservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reporttyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<reporttype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geneassignmentstatushelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneassignmentstatushelperimpl" >
      <xs:sequence>
        <xs:element name="assignmentstatusservice" type="assignmentstatusserviceimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genestatussummaryhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planstatussummaryhelperimpl" >
      <xs:sequence>
        <xs:element name="statusservice" type="statusserviceimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genestatussummaryhelperimpl" >
      <xs:sequence>
        <xs:element name="planstatussummaryhelper" type="planstatussummaryhelperimpl" nillable="true" minOccurs="0" />
        <xs:element name="projectstatussummaryhelper" type="projectstatussummaryhelperimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectstatussummaryhelperimpl" >
      <xs:sequence>
        <xs:element name="planstatussummaryhelper" type="planstatussummaryhelperimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectstatussummaryhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planstatussummaryhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reportservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="report" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="report" type="xs:string" />
          <xs:element name="" type="reporttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reporttypeservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reportrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<report,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reporttype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
          <xs:element name="ispublic" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reportserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="reportrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="reporttyperepository" nillable="true" minOccurs="0" />
        <xs:element name="reporttypeservice" type="reporttypeserviceimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reporttypename" >
      <xs:sequence>
        <xs:element name="by_label" type="xs:anyType" />
        <xs:element name="label" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="ispublic" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="operations" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="actions" >
      <xs:sequence>
        <xs:element name="read_project_action" type="xs:string" />
        <xs:element name="read_plan_action" type="xs:string" />
        <xs:element name="read_outcome_action" type="xs:string" />
        <xs:element name="manage_users_action" type="xs:string" />
        <xs:element name="execute_manager_tasks_action" type="xs:string" />
        <xs:element name="update_plan_action" type="xs:string" />
        <xs:element name="create_project_action" type="xs:string" />
        <xs:element name="update_project_action" type="xs:string" />
        <xs:element name="update_user" type="xs:string" />
        <xs:element name="manage_gene_list_action" type="xs:string" />
        <xs:element name="update_to_phenotyping_started" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permissionserviceimpl" >
      <xs:sequence>
        <xs:element name="manage_users_key" type="xs:string" />
        <xs:element name="execute_manager_tasks_key" type="xs:string" />
        <xs:element name="update_plan" type="xs:string" />
        <xs:element name="create_production_plan" type="xs:string" />
        <xs:element name="create_phenotyping_plan" type="xs:string" />
        <xs:element name="update_project" type="xs:string" />
        <xs:element name="manage_gene_lists" type="xs:string" />
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="personservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="personrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="workunitservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectqueryhelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectvalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="actionpermission" >
      <xs:sequence>
        <xs:element name="actionname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permissionservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aapsystemsubject" >
      <xs:sequence>
        <xs:element name="login" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="userrefid" type="xs:string" />
        <xs:element name="email" type="xs:string" />
        <xs:element name="GeneratedName" type="workunit" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="personrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="isebiadmin" type="xs:anyType" />
        <xs:element name="roleworkunits" type="personroleworkunit" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="roleconsortia" type="personroleconsortium" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="workunitservice" nillable="true" minOccurs="0" />
        <xs:element name="cda_user_value" type="xs:string" />
        <xs:element name="dcc_user_value" type="xs:string" />
        <xs:element name="cda_user_key" type="xs:string" />
        <xs:element name="dcc_user_key" type="xs:string" />
        <xs:element name="not_user_information_message" type="xs:string" />
        <xs:element name="null_auth_id_message" type="xs:string" />
        <xs:element name="not_user_information_debug_message" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subjectretriever" >
      <xs:sequence>
        <xs:element name="anonymous_user" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="systemsubject" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourceprivacy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourceaccesschecker" >
      <xs:complexContent>
       <xs:extension base="resource>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="policydefinition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="speldeserializer" >
      <xs:complexContent>
       <xs:extension base="stddeserializer<expression>">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="elparser" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jsonfilepolicydefinition" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="default_policy_file_name" type="xs:string" />
        <xs:element name="policyfilepath" type="xs:string" />
        <xs:element name="rules" type="policyrule" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="policyenforcement" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicpolicyenforcement" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="policydefinition" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securityaccesscontext" >
      <xs:sequence>
        <xs:element name="subject" type="xs:anyType" />
        <xs:element name="resource" type="xs:anyType" />
        <xs:element name="action" type="xs:anyType" />
        <xs:element name="environment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplepolicydefinition" >
      <xs:sequence>
        <xs:element name="rules" type="policyrule" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="policyrule" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="/**booleanspel.ifevaluatedtotrue,thenthisruleisappliedtotherequestaccesscontext.*/target" type="xs:anyType" />
        <xs:element name="/**booleanspel,ifevaluatedtotrue,thenaccessgranted.*/condition" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourceaccesscheckerimpl" >
      <xs:sequence>
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextawarepolicyenforcement" >
      <xs:sequence>
        <xs:element name="policy" type="policyenforcement" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="subjectretriever" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abacpermissionevaluator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="subjectretriever" nillable="true" minOccurs="0" />
        <xs:element name="policy" type="policyenforcement" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="authservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="aapservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aapservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="external_service_url" type="xs:string" />
        <xs:element name="gentar_domain_reference" type="xs:string" />
        <xs:element name="expected_production_service_context_path" type="xs:string" />
        <xs:element name="serverservletcontextpath" type="xs:string" />
        <xs:element name="//bydefaulttheaaptokenissuedisvalidfor1hour.//thettlattributeallowsyoutochangethisperiod,and//themaximumvaluethatcanbespecifiedis3hours(180minutes).//wedecidedtouseavalueof3hoursintheabsenceofatokenrefreshmechanism//thatallowsyoutoextendthevalidperiodofanexistingtoken.//see:https://api.aai.ebi.ac.uk/docs/authentication/authentication.index.html#token-ttlttl_attribute" type="xs:string" />
        <xs:element name="authentication_endpoint" type="xs:string" />
        <xs:element name="domain_endpoint" type="xs:string" />
        <xs:element name="domain_manager_endpoint" type="xs:string" />
        <xs:element name="reset_password" type="xs:string" />
        <xs:element name="person_already_in_aap_error" type="xs:string" />
        <xs:element name="authentication_error" type="xs:string" />
        <xs:element name="non_production_operation_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditions" >
      <xs:sequence>
        <xs:element name="column_operator__template" type="xs:string" />
        <xs:element name="column_operator_list_template" type="xs:string" />
        <xs:element name="column_operator_number_template" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="graphqlconsumer" >
      <xs:sequence>
        <xs:element name="external_service_url" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="mapper" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querybuilder" >
      <xs:sequence>
        <xs:element name="template" type="xs:string" />
        <xs:element name="query" type="xs:string" />
        <xs:element name="root" type="xs:string" />
        <xs:element name="conditions" type="xs:anyType" />
        <xs:element name="fields" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="operators" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="changeentry" >
      <xs:sequence>
        <xs:element name="property" type="xs:string" />
        <xs:element name="oldvalue" type="xs:anyType" />
        <xs:element name="newvalue" type="xs:anyType" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="GeneratedName" type="changetype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="daa" type="xs:anyType" />
        <xs:element name="children" type="xs:anyType" />
        <xs:element name="parent" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertydefinition" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="parenttype" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectinspector" >
      <xs:sequence>
        <xs:element name="map" type="xs:anyType" />
        <xs:element name="//beingevaluated." type="xs:anyType" />
        <xs:element name="//mechanismtoavoidcirculardependenciesbyrememberingwhichclasseshavebeenevaluated." type="checkedclassestree" nillable="true" minOccurs="0" />
        <xs:element name="//fieldsthatarenotneededfortheanalysis.fieldstoignore" type="xs:anyType" />
        <xs:element name="GeneratedName" type="propertydescriptionextractor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertychecker" >
      <xs:sequence>
        <xs:element name="property_utils_bean" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyevaluator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="parentname" type="xs:string" />
        <xs:element name="data" type="propertydescription" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="checkedclassestree" >
      <xs:sequence>
        <xs:element name="tree" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertydescriptionextractor" >
      <xs:sequence>
        <xs:element name="name_separator" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertydescription" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertydefinition" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="issimplevalue" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ignoreforauditingchanges" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="changesdetector" >
      <xs:sequence>
        <xs:element name="fieldstoignore" type="xs:anyType" />
        <xs:element name="oldobjec" type="xs:anyType" />
        <xs:element name="newobjec" type="xs:anyType" />
        <xs:element name="oldobjectpropertydata" type="xs:anyType" />
        <xs:element name="newobjectpropertydata" type="xs:anyType" />
        <xs:element name="changeentries" type="changeentry" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectidextractor" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="changetype" >
      <xs:sequence>
        <xs:element name="by_label" type="xs:anyType" />
        <xs:element name="label" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditlistener" >
      <xs:sequence>
        <xs:element name="original" type="xs:anyType" />
        <xs:element name="new" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="historyrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<history,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="historydetail" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="field" type="xs:string" />
          <xs:element name="oldvalue" type="xs:string" />
          <xs:element name="newvalue" type="xs:string" />
          <xs:element name="referenceentity" type="xs:string" />
          <xs:element name="oldvalueentityid" type="xs:string" />
          <xs:element name="newvalueentityid" type="xs:string" />
          <xs:element name="note" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="historydetailrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<historydetail,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="historyservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="history" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="entityid" type="xs:long" />
          <xs:element name="user" type="xs:string" />
          <xs:element name="date" type="xs:anyType" />
          <xs:element name="comment" type="xs:string" />
          <xs:element name="historydetailset" type="historydetail" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="historyserviceimpl" >
      <xs:sequence>
        <xs:element name="historybuilder" type="xs:anyType" />
        <xs:element name="GeneratedName" type="historyrepository" nillable="true" minOccurs="0" />
        <xs:element name="field_name_separator" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="changedescriptioncreator" >
      <xs:sequence>
        <xs:element name="id_property_name" type="xs:string" />
        <xs:element name="separator" type="xs:string" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="historybuilder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="subjectretriever" nillable="true" minOccurs="0" />
        <xs:element name="resource_privacy_property_name" type="xs:string" />
        <xs:element name="restricted_object_property_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="historychangesadaptor" >
      <xs:sequence>
        <xs:element name="fieldstoexclude" type="xs:anyType" />
        <xs:element name="originaleniy" type="xs:anyType" />
        <xs:element name="neweniy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertymapgrouper" >
      <xs:sequence>
        <xs:element name="root" type="xs:string" />
        <xs:element name="groupedproperties" type="xs:anyType" />
        <xs:element name="property_name_separator" type="xs:string" />
        <xs:element name="element_in_a_collection_identifier" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="changedescription" >
      <xs:sequence>
        <xs:element name="//nameofthepropertyintheobjects.property" type="xs:string" />
        <xs:element name="//theoldvalueoftheproperty.oldvalue" type="xs:anyType" />
        <xs:element name="//thenewvalueoftheproperty.newvalue" type="xs:anyType" />
        <xs:element name="//nameoftheclassoftheproperty.neededifaposteriorcheckofthevaluesisneeded.parentclass" type="xs:string" />
        <xs:element name="//idinthe"parentclass"entityfortheoldvalue.oldvalueid" type="xs:anyType" />
        <xs:element name="//idinthe"parentclass"entityforthenewvalue.newvalueid" type="xs:anyType" />
        <xs:element name="//typeofchange" type="changetype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="catalogserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="attempttypeservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="workunitrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="workgroupservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="plantyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="privacyrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="statusrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="assignmentstatusrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="geneticmutationtyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="instituterepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="strainrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="straintyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="preparationtyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="materialdepositedtyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="speciesrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="consortiumservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="molecularmutationtyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="nucleasetyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="nucleaseclassrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mutationcategorizationrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="funderservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="outcometyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sequencetyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sequencecategoryrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="producttyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="distributionnetworkrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="qctyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="qcstatusrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="reagentrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="assaytyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="phenotypingstagetypeservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mutationcategorizationservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="listrecordtypeservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="guideformatrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="guidesourcerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="escellcentrepipelinerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="escellqccommentrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectcompletionnoterepository" nillable="true" minOccurs="0" />
        <xs:element name="conf" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="catalogservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="funder" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
          <xs:element name="plans" type="plan" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="workgroups" type="workgroup" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="funderservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="funderserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="funderrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="workgrouprepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="funderrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<funder,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workunitservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workunitrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<workunit,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workunit" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="fullname" type="xs:string" />
          <xs:element name="ilarcode" type="xs:string" />
          <xs:element name="consortia" type="consortium" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="workgroups" type="workgroup" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workunitserviceimpl" >
      <xs:sequence>
        <xs:element name="work_unit_not_exists_error" type="xs:string" />
        <xs:element name="GeneratedName" type="workunitrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workgrouprepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<workgroup,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workgroupservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workgroup" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
          <xs:element name="funders" type="funder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="workunits" type="workunit" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workgroupserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="workgrouprepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="workunitrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="institute" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
          <xs:element name="projectconsortia" type="projectconsortium" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instituteserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="instituterepository" nillable="true" minOccurs="0" />
        <xs:element name="institute_not_exists_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instituterepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<institute,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instituteservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="role" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rolerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<role,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="roleserviceimpl" >
      <xs:sequence>
        <xs:element name="manager_role" type="xs:string" />
        <xs:element name="general_role" type="xs:string" />
        <xs:element name="role_not_exists_error" type="xs:string" />
        <xs:element name="GeneratedName" type="rolerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="roleservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="personrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="aapservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="subjectretriever" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="managementservice" nillable="true" minOccurs="0" />
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
        <xs:element name="person_already_exists_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="authid" type="xs:string" />
          <xs:element name="isactive" type="xs:anyType" />
          <xs:element name="contactable" type="xs:anyType" />
          <xs:element name="//thepasswordisnotsavedinthedatabase.transientpassword" type="xs:string" />
          <xs:element name="email" type="xs:string" />
          <xs:element name="ebiadmin" type="xs:anyType" />
          <xs:element name="personrolesworkunits" type="personroleworkunit" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="personrolesconsortia" type="personroleconsortium" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personroleworkunit" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="person" nillable="true" minOccurs="0" />
          <xs:element name="" type="workunit" nillable="true" minOccurs="0" />
          <xs:element name="" type="role" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personroleconsortiumrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<personroleconsortium,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fluentpersonroleworkunitlist" >
      <xs:sequence>
        <xs:element name="personroleworkunits" type="personroleworkunit" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="personroleworkunitsfiltered" type="personroleworkunit" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personroleworkunitrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<personroleworkunit,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fluentpersonroleconsortiumlist" >
      <xs:sequence>
        <xs:element name="personroleconsortia" type="personroleconsortium" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="personroleconsortiafiltered" type="personroleconsortium" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personroleconsortium" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="person" nillable="true" minOccurs="0" />
          <xs:element name="" type="consortium" nillable="true" minOccurs="0" />
          <xs:element name="" type="role" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<person,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="consortiumserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="consortiumrepository" nillable="true" minOccurs="0" />
        <xs:element name="consortium_not_exists_error" type="xs:string" />
        <xs:element name="consortium_null_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="consortiumrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<consortium,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="consortiumservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="consortium" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
          <xs:element name="workunits" type="workunit" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="managementserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="personrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="workunitservice" nillable="true" minOccurs="0" />
        <xs:element name="roleservice" type="roleserviceimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managementservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="useroperationfailedexception" >
      <xs:complexContent>
       <xs:extension base="operationfailedexception">
         <xs:sequence>
          <xs:element name="debugmessage" type="xs:string" />
          <xs:element name="cause" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notfoundexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="systemoperationfailedexception" >
      <xs:complexContent>
       <xs:extension base="operationfailedexception">
         <xs:sequence>
          <xs:element name="error_message" type="xs:string" />
          <xs:element name="debugmessage" type="xs:string" />
          <xs:element name="exceptiondetail" type="xs:string" />
          <xs:element name="cause" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="invalidrequestexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commonerrormessages" >
      <xs:sequence>
        <xs:element name="null_field_error" type="xs:string" />
        <xs:element name="edit_plan_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="operationfailedexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="forbiddenaccessexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="error_template" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assemblymapconsumer" >
      <xs:sequence>
        <xs:element name="ensembl_url" type="xs:string" />
        <xs:element name="more_than_one_mapping" type="xs:string" />
        <xs:element name="any_mapping_found" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectsreporter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="predicatebuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cloner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paginationhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanutil" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="labeledtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionprinter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="streamablejpaspecificationrepository" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="streamablejpaspecificationrepositoryimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="textutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonhelper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseentity" >
      <xs:sequence>
        <xs:element name="createdat" type="xs:anyType" />
        <xs:element name="lastmodified" type="xs:anyType" />
        <xs:element name="createdby" type="xs:string" />
        <xs:element name="lastmodifiedby" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencecategoryservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencecategoryrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<sequencecategory,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencecategoryserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="sequencecategoryrepository" nillable="true" minOccurs="0" />
        <xs:element name="outcome_sequence" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencecategoryname" >
      <xs:sequence>
        <xs:element name="by_label" type="xs:anyType" />
        <xs:element name="label" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencecategory" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<sequence,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequence" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="sequence" type="xs:string" />
          <xs:element name="" type="sequencetype" nillable="true" minOccurs="0" />
          <xs:element name="" type="sequencecategory" nillable="true" minOccurs="0" />
          <xs:element name="sequencelocations" type="sequencelocation" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="projectintentionsequences" type="projectintentionsequence" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequenceservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="sequencerepository" nillable="true" minOccurs="0" />
        <xs:element name="not_found_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencetype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencetypeservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencetypeserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="sequencetyperepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencetyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<sequencetype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="chr" type="xs:string" />
          <xs:element name="start" type="xs:long" />
          <xs:element name="stop" type="xs:long" />
          <xs:element name="strand" type="xs:string" />
          <xs:element name="genomebuild" type="xs:string" />
          <xs:element name="" type="species" nillable="true" minOccurs="0" />
          <xs:element name="" type="strain" nillable="true" minOccurs="0" />
          <xs:element name="sequencelocations" type="sequencelocation" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="locationrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<location,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="locationservice" >
      <xs:sequence>
        <xs:element name="error" type="xs:string" />
        <xs:element name="GeneratedName" type="locationrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targrepescellmutationtyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepescellmutationtype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepescellmutationtype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepescellmutation" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="escell" type="targrepescell" nillable="true" minOccurs="0" />
          <xs:element name="alleleconfirmed" type="xs:anyType" />
          <xs:element name="mgiallelesymbolwithoutimpcabbreviation" type="xs:anyType" />
          <xs:element name="mgiallelesymbolsuperscript" type="xs:string" />
          <xs:element name="allelesymbolsuperscripttemplate" type="xs:string" />
          <xs:element name="mgialleleaccessionid" type="xs:string" />
          <xs:element name="alleletype" type="targrepescellmutationtype" nillable="true" minOccurs="0" />
          <xs:element name="genbankfile" type="targrepgenbankfile" nillable="true" minOccurs="0" />
          <xs:element name="containslacz" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepescellmutationrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepescellmutation,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepikmcprojectrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepikmcproject,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepikmcproject" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="status" type="targrepikmcprojectstatus" nillable="true" minOccurs="0" />
          <xs:element name="pipeline" type="targreppipeline" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepikmcprojectstatusrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepikmcprojectstatus,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepikmcprojectstatus" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="productstatustype" type="targrepikmcprojectstatustype" nillable="true" minOccurs="0" />
          <xs:element name="orderby" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepikmcprojectstatustyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepikmcprojectstatustype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepikmcprojectstatustype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targreptargetingvectorrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targreptargetingvector,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targreptargetingvector" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="allele" type="targrepallele" nillable="true" minOccurs="0" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="//namefortheikmcproject,ifit'sanewprojectnamethesystemcreatesanewentryin//thetarg_rep_ikmc_projecttable.ikmcprojectname" type="xs:string" />
          <xs:element name="intermediatevector" type="xs:string" />
          <xs:element name="reporttopublic" type="xs:anyType" />
          <xs:element name="pipeline" type="targreppipeline" nillable="true" minOccurs="0" />
          <xs:element name="ikmcproject" type="targrepikmcproject" nillable="true" minOccurs="0" />
          <xs:element name="mgiallelenameprediction" type="xs:string" />
          <xs:element name="alleletypeprediction" type="xs:string" />
          <xs:element name="productioncentreautoupdate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepescellservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targrepescellmutationsubtyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepescellmutationsubtype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepescellmutationsubtype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepescell" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="allele" type="targrepallele" nillable="true" minOccurs="0" />
          <xs:element name="targetingvector" type="targreptargetingvector" nillable="true" minOccurs="0" />
          <xs:element name="parentalcellline" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="comment" type="xs:string" />
          <xs:element name="//namefortheikmcproject,ifit'sanewprojectnamethesystemcreatesanewentryin//thetarg_rep_ikmc_projecttable.ikmcprojectname" type="xs:string" />
          <xs:element name="pipeline" type="targreppipeline" nillable="true" minOccurs="0" />
          <xs:element name="reporttopublic" type="xs:anyType" />
          <xs:element name="strain" type="targrepstrain" nillable="true" minOccurs="0" />
          <xs:element name="userqcmaptest" type="xs:string" />
          <xs:element name="userqckaryotype" type="xs:string" />
          <xs:element name="userqctvbackboneassay" type="xs:string" />
          <xs:element name="userqcloxpconfirmation" type="xs:string" />
          <xs:element name="userqcsouthernblot" type="xs:string" />
          <xs:element name="userqclossofwtallele" type="xs:string" />
          <xs:element name="userqcneocountqpcr" type="xs:string" />
          <xs:element name="userqclaczsrpcr" type="xs:string" />
          <xs:element name="userqcmutantspecificsrpcr" type="xs:string" />
          <xs:element name="userqcfiveprimecassetteintegrity" type="xs:string" />
          <xs:element name="userqcneosrpcr" type="xs:string" />
          <xs:element name="userqcfiveprimelrpcr" type="xs:string" />
          <xs:element name="userqcthreeprimelrpcr" type="xs:string" />
          <xs:element name="userqccomment" type="xs:string" />
          <xs:element name="mutationsubtype" type="targrepescellmutationsubtype" nillable="true" minOccurs="0" />
          <xs:element name="productioncentreautoupdate" type="xs:anyType" />
          <xs:element name="userqcloxpsrpcrandsequencing" type="xs:string" />
          <xs:element name="userqckaryotypespread" type="xs:string" />
          <xs:element name="userqckaryotypepcr" type="xs:string" />
          <xs:element name="userqcmouseclinic" type="targrepcentre" nillable="true" minOccurs="0" />
          <xs:element name="userqcchr1" type="xs:string" />
          <xs:element name="userqcchr11" type="xs:string" />
          <xs:element name="userqcchr8" type="xs:string" />
          <xs:element name="userqcchry" type="xs:string" />
          <xs:element name="userqclaczqpcr" type="xs:string" />
          <xs:element name="ikmcproject" type="targrepikmcproject" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepescellserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="targrepescellrepository" nillable="true" minOccurs="0" />
        <xs:element name="targ_rep_es_cell_not_found_error" type="xs:string" />
        <xs:element name="targ_rep_es_cell_name_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targrepescellrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepescell,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepstrain" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="mgistrainaccid" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepstrainrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepstrain,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepcentre" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="fullname" type="xs:string" />
          <xs:element name="ilarcode" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepcentrerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepcentre,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targreppipeline" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
          <xs:element name="reporttopublic" type="xs:anyType" />
          <xs:element name="genetrap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targreppipelinerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targreppipeline,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepgeneserviceimpl" >
      <xs:sequence>
        <xs:element name="generepository" type="targrepgenerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targrepgeneservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targrepgene" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="symbol" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="type" type="xs:string" />
          <xs:element name="genomebuild" type="xs:string" />
          <xs:element name="entrezgeneid" type="xs:long" />
          <xs:element name="ncbichromosome" type="xs:string" />
          <xs:element name="ncbistart" type="xs:long" />
          <xs:element name="ncbistop" type="xs:long" />
          <xs:element name="ncbistrand" type="xs:string" />
          <xs:element name="ensemblgeneid" type="xs:string" />
          <xs:element name="ensemblchromosome" type="xs:string" />
          <xs:element name="ensemblstart" type="xs:long" />
          <xs:element name="ensemblstop" type="xs:long" />
          <xs:element name="ensemblstrand" type="xs:string" />
          <xs:element name="mgicm" type="xs:string" />
          <xs:element name="mgichromosome" type="xs:string" />
          <xs:element name="mgistart" type="xs:long" />
          <xs:element name="mgistop" type="xs:long" />
          <xs:element name="mgistrand" type="xs:string" />
          <xs:element name="accid" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepgenerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepgene,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepdistributionqc" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="fiveprimesrpcr" type="xs:string" />
          <xs:element name="threeprimesrpcr" type="xs:string" />
          <xs:element name="karyotypelow" type="xs:double" />
          <xs:element name="karyotypehigh" type="xs:double" />
          <xs:element name="copynumber" type="xs:string" />
          <xs:element name="fiveprimelrpcr" type="xs:string" />
          <xs:element name="threeprimelrpcr" type="xs:string" />
          <xs:element name="thawing" type="xs:string" />
          <xs:element name="loa" type="xs:string" />
          <xs:element name="loxp" type="xs:string" />
          <xs:element name="lacz" type="xs:string" />
          <xs:element name="chr1" type="xs:string" />
          <xs:element name="chr8a" type="xs:string" />
          <xs:element name="chr8b" type="xs:string" />
          <xs:element name="chr11a" type="xs:string" />
          <xs:element name="chr11b" type="xs:string" />
          <xs:element name="chry" type="xs:string" />
          <xs:element name="escell" type="targrepescell" nillable="true" minOccurs="0" />
          <xs:element name="escelldistributioncentre" type="targrepescelldistributioncentre" nillable="true" minOccurs="0" />
          <xs:element name="loxpsrpcr" type="xs:string" />
          <xs:element name="neoqpcr" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepdistributionqcrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepdistributionqc,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepescelldistributioncentre" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepescelldistributioncentrerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepescelldistributioncentre,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepalleleservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targrepallelerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepallele,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepmutationsubtype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="code" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepmutationsubtyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepmutationsubtype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepallele" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="gene" type="targrepgene" nillable="true" minOccurs="0" />
          <xs:element name="//@value("defaultgrcm38")assembly" type="xs:string" />
          <xs:element name="chromosome" type="xs:string" />
          <xs:element name="strand" type="xs:string" />
          <xs:element name="homologyarmstart" type="xs:anyType" />
          <xs:element name="homologyarmend" type="xs:anyType" />
          <xs:element name="loxpstart" type="xs:anyType" />
          <xs:element name="loxpend" type="xs:anyType" />
          <xs:element name="cassettestart" type="xs:anyType" />
          <xs:element name="cassetteend" type="xs:anyType" />
          <xs:element name="cassette" type="xs:string" />
          <xs:element name="backbone" type="xs:string" />
          <xs:element name="subtypedescription" type="xs:string" />
          <xs:element name="floxedstartexon" type="xs:string" />
          <xs:element name="floxedendexon" type="xs:string" />
          <xs:element name="projectdesignid" type="xs:anyType" />
          <xs:element name="reporter" type="xs:string" />
          <xs:element name="mutationmethod" type="targrepmutationmethod" nillable="true" minOccurs="0" />
          <xs:element name="mutationtype" type="targrepmutationtype" nillable="true" minOccurs="0" />
          <xs:element name="mutationsubtype" type="targrepmutationsubtype" nillable="true" minOccurs="0" />
          <xs:element name="cassettetype" type="xs:string" />
          <xs:element name="intron" type="xs:anyType" />
          <xs:element name="type" type="xs:string" />
          <xs:element name="hasissue" type="xs:anyType" />
          <xs:element name="issuedescription" type="xs:string" />
          <xs:element name="sequence" type="xs:string" />
          <xs:element name="taqmancriticaldelassayid" type="xs:string" />
          <xs:element name="taqmanupstreamdelassayid" type="xs:string" />
          <xs:element name="taqmandownstreamdelassayid" type="xs:string" />
          <xs:element name="wildtypeoligossequence" type="xs:string" />
          <xs:element name="allelegenbankfile" type="targrepgenbankfile" nillable="true" minOccurs="0" />
          <xs:element name="vectorgenbankfile" type="targrepgenbankfile" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepgenbankfile" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="host" type="xs:string" />
          <xs:element name="type" type="xs:string" />
          <xs:element name="genbank_file_path" type="xs:string" />
          <xs:element name="allele_image_path" type="xs:string" />
          <xs:element name="cassette_image_path" type="xs:string" />
          <xs:element name="simple_image_path" type="xs:string" />
          <xs:element name="vector_image_path" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepgenbankfilerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepgenbankfile,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepalleleserviceimpl" >
      <xs:sequence>
        <xs:element name="allelerepository" type="targrepallelerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targrepmutationtyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepmutationtype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepmutationtype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="code" type="xs:string" />
          <xs:element name="allelecode" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepmutationmethodrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepmutationmethod,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepmutationmethod" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="code" type="xs:string" />
          <xs:element name="alleleprefix" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepallelesequenceannotationmutationtype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepallelesequenceannotationmutationtyperepository" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepallelesequenceannotation" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="mutationtype" type="targrepallelesequenceannotationmutationtype" nillable="true" minOccurs="0" />
          <xs:element name="expected" type="xs:string" />
          <xs:element name="actual" type="xs:string" />
          <xs:element name="comment" type="xs:string" />
          <xs:element name="oligosstartcoordinate" type="xs:anyType" />
          <xs:element name="oligosendcoordinate" type="xs:anyType" />
          <xs:element name="mutationlength" type="xs:anyType" />
          <xs:element name="genomicstartcoordinate" type="xs:anyType" />
          <xs:element name="genomicendcoordinate" type="xs:anyType" />
          <xs:element name="allele" type="targrepallele" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targrepallelesequenceannotationrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<targrepallelesequenceannotation,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<gene,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geneidentifiervalidator" >
      <xs:sequence>
        <xs:element name="accession_id_identifier" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mousegeneexternalreferencedto" >
      <xs:sequence>
        <xs:element name="accid" type="xs:string" />
        <xs:element name="symbol" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="genomebuild" type="xs:string" />
        <xs:element name="entrezgeneid" type="xs:long" />
        <xs:element name="ncbichromosome" type="xs:string" />
        <xs:element name="ncbistart" type="xs:long" />
        <xs:element name="ncbistop" type="xs:long" />
        <xs:element name="ncbistrand" type="xs:string" />
        <xs:element name="ensemblgeneid" type="xs:string" />
        <xs:element name="ensemblchromosome" type="xs:string" />
        <xs:element name="ensemblstart" type="xs:long" />
        <xs:element name="ensemblstop" type="xs:long" />
        <xs:element name="ensemblstrand" type="xs:string" />
        <xs:element name="mgicm" type="xs:string" />
        <xs:element name="mgichromosome" type="xs:string" />
        <xs:element name="mgistart" type="xs:long" />
        <xs:element name="mgistop" type="xs:long" />
        <xs:element name="mgistrand" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="externalreferenceconstants" >
      <xs:sequence>
        <xs:element name="gene_by_symbol_or_acc_id_query" type="xs:string" />
        <xs:element name="synonym_by_symbol_query" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneexternalserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="graphqlconsumer" nillable="true" minOccurs="0" />
        <xs:element name="elements_by_request" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneexternalservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gene" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="symbol" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="type" type="xs:string" />
          <xs:element name="genomebuild" type="xs:string" />
          <xs:element name="entrezgeneid" type="xs:long" />
          <xs:element name="ncbichromosome" type="xs:string" />
          <xs:element name="ncbistart" type="xs:long" />
          <xs:element name="ncbistop" type="xs:long" />
          <xs:element name="ncbistrand" type="xs:string" />
          <xs:element name="ensemblgeneid" type="xs:string" />
          <xs:element name="ensemblchromosome" type="xs:string" />
          <xs:element name="ensemblstart" type="xs:long" />
          <xs:element name="ensemblstop" type="xs:long" />
          <xs:element name="ensemblstrand" type="xs:string" />
          <xs:element name="mgicm" type="xs:string" />
          <xs:element name="mgichromosome" type="xs:string" />
          <xs:element name="mgistart" type="xs:long" />
          <xs:element name="mgistop" type="xs:long" />
          <xs:element name="mgistrand" type="xs:string" />
          <xs:element name="mutations" type="mutation" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="species" nillable="true" minOccurs="0" />
          <xs:element name="geneflags" type="geneflag" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="accid" type="xs:string" />
          <xs:element name="projectintentiongenes" type="projectintentiongene" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geneflagrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<geneflag,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geneflag" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="genes" type="gene" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geneserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="generepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="geneexternalservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="speciesservice" nillable="true" minOccurs="0" />
        <xs:element name="gene_is_synonym_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genelist" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="consortium" nillable="true" minOccurs="0" />
          <xs:element name="description" type="xs:string" />
          <xs:element name="listrecords" type="listrecord" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genelistservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="genelistrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="genelistrecordservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="genelistcsvconverter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="consortiumservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectsbygroupofgenesfinder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="projectservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genelistrecordservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="listrecordrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="genebylistrecordrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genelistrepository" >
      <xs:complexContent>
       <xs:extension base="jparepository<genelist,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genelistfilterbuilder" >
      <xs:sequence>
        <xs:element name="filters" type="xs:anyType" />
        <xs:element name="consortiumname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genelistfilter" >
      <xs:sequence>
        <xs:element name="filters" type="xs:anyType" />
        <xs:element name="consortiumname" type="xs:string" />
        <xs:element name="visible" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listrecord" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="genelist" nillable="true" minOccurs="0" />
        <xs:element name="note" type="xs:string" />
        <xs:element name="visible" type="xs:anyType" />
        <xs:element name="genesbyrecord" type="genebylistrecord" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="listrecordtypes" type="listrecordtype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listrecordtyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<listrecordtype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genelistprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listrecordtypeservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="listrecordtyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="listrecordrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="genelistrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listrecordtype" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="genelist" nillable="true" minOccurs="0" />
        <xs:element name="listrecords" type="listrecord" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortgenebygenelistrecordbyindex" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listrecordrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<listrecord,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listrecordspecs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genebylistrecordrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<genebylistrecord,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genebylistrecord" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="listrecord" nillable="true" minOccurs="0" />
        <xs:element name="accid" type="xs:string" />
        <xs:element name="transientinputsymbolvalue" type="xs:string" />
        <xs:element name="index" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genebygenelistrecordservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="genebylistrecordrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genelistcsvconverter" >
      <xs:sequence>
        <xs:element name="csv_gene_header" type="xs:string" />
        <xs:element name="csv_note_header" type="xs:string" />
        <xs:element name="csv_type_header" type="xs:string" />
        <xs:element name="csv_visible_header" type="xs:string" />
        <xs:element name="GeneratedName" type="geneexternalservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="genelistrecordservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="listrecordtypeservice" nillable="true" minOccurs="0" />
        <xs:element name="header_not_found_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statusservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="status" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
          <xs:element name="ordering" type="xs:anyType" />
          <xs:element name="isabortionstatus" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statusserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="statusrepository" nillable="true" minOccurs="0" />
        <xs:element name="status_not_found_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statusnames" >
      <xs:sequence>
        <xs:element name="plan_created" type="xs:string" />
        <xs:element name="attempt_aborted" type="xs:string" />
        <xs:element name="genotype_confirmed" type="xs:string" />
        <xs:element name="genotype_not_confirmed" type="xs:string" />
        <xs:element name="inactive" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statusrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<status,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statusstamp" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="allelesymbolhandler" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mutationrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="allelesymbolconstructor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="crisprallelesymbolconstructor" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mutationrepository" nillable="true" minOccurs="0" />
        <xs:element name="gene_symbol_section" type="xs:string" />
        <xs:element name="id_section" type="xs:string" />
        <xs:element name="endonuclease_mutation_name" type="xs:string" />
        <xs:element name="consortium_abbreviation_section" type="xs:string" />
        <xs:element name="ilar_code_section" type="xs:string" />
        <xs:element name="template" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="symbolsuggestionrequest" >
      <xs:sequence>
        <xs:element name="ilarcode" type="xs:string" />
        <xs:element name="consortiumabbreviation" type="xs:string" />
        <xs:element name="excludeconsortiumabbreviation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutationupdater" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mutationrepository" nillable="true" minOccurs="0" />
        <xs:element name="historyservice" type="mutation" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mutationvalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutationserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mutationrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sequenceservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mutationsequenceservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mutationupdater" nillable="true" minOccurs="0" />
        <xs:element name="historyservice" type="mutation" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="mutationvalidator" nillable="true" minOccurs="0" />
        <xs:element name="mutation_not_exist_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutationvalidator" >
      <xs:sequence>
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
        <xs:element name="cannot_read_plan" type="xs:string" />
        <xs:element name="null_field_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutationservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutationrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<mutation,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="molecularmutationtyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<molecularmutationtype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="molecularmutationtype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="type" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="molecularmutationtypeservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="molecularmutationtypeserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="molecularmutationtyperepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutation" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="//publicidentifierofthemutation.min" type="xs:string" />
          <xs:element name="mgialleleid" type="xs:string" />
          <xs:element name="symbol" type="xs:string" />
          <xs:element name="mgiallelesymbolrequiresconstruction" type="xs:anyType" />
          <xs:element name="mgiallelesymbolwithoutimpcabbreviation" type="xs:anyType" />
          <xs:element name="alleleconfirmed" type="xs:anyType" />
          <xs:element name="allelesymbolsuperscripttemplate" type="xs:string" />
          <xs:element name="//thenexttwofieldsareforarturo'spipelinedescription" type="xs:string" />
          <xs:element name="autodescription" type="xs:string" />
          <xs:element name="imitsallele" type="xs:long" />
          <xs:element name="" type="geneticmutationtype" nillable="true" minOccurs="0" />
          <xs:element name="" type="molecularmutationtype" nillable="true" minOccurs="0" />
          <xs:element name="" type="genbankfile" nillable="true" minOccurs="0" />
          <xs:element name="bamfile" type="xs:anyType" />
          <xs:element name="bamfileindex" type="xs:anyType" />
          <xs:element name="vcffile" type="xs:anyType" />
          <xs:element name="vcffileindex" type="xs:anyType" />
          <xs:element name="genes" type="gene" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="outcomes" type="outcome" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="mutationcategorizations" type="mutationcategorization" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="mutationqcresults" type="mutationqcresult" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="mutationsequences" type="mutationsequence" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geneticmutationtypeserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="geneticmutationtyperepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneticmutationtypeservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geneticmutationtype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geneticmutationtyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<geneticmutationtype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutationannotationrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<mutationannotation,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutationannotation" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="mutation" nillable="true" minOccurs="0" />
          <xs:element name="chr" type="xs:string" />
          <xs:element name="start" type="xs:long" />
          <xs:element name="stop" type="xs:long" />
          <xs:element name="refseq" type="xs:string" />
          <xs:element name="altseq" type="xs:string" />
          <xs:element name="exdels" type="xs:string" />
          <xs:element name="partialexdels" type="xs:string" />
          <xs:element name="txc" type="xs:string" />
          <xs:element name="splicedonor" type="xs:anyType" />
          <xs:element name="spliceacceptor" type="xs:anyType" />
          <xs:element name="proteincodingregion" type="xs:anyType" />
          <xs:element name="intronic" type="xs:anyType" />
          <xs:element name="frameshift" type="xs:anyType" />
          <xs:element name="linkedconsequence" type="xs:string" />
          <xs:element name="downstreamofstop" type="xs:anyType" />
          <xs:element name="stopgained" type="xs:anyType" />
          <xs:element name="aminoacid" type="xs:string" />
          <xs:element name="dupcoords" type="xs:string" />
          <xs:element name="consequence" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genbankfile" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="imitsgenbankfile" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genbankfilerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<genbankfile,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutationsequenceservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mutationsequencerepository" nillable="true" minOccurs="0" />
        <xs:element name="not_found_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutationsequencerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<mutationsequence,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutationsequence" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="mutation" nillable="true" minOccurs="0" />
          <xs:element name="" type="sequence" nillable="true" minOccurs="0" />
          <xs:element name="index" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutationcategorizationservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutationcategorizationserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mutationcategorizationrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mutationcategorizationtyperepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutationcategorizationrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<mutationcategorization,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutationcategorizationtyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<mutationcategorizationtype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutationcategorizationtype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutationcategorization" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
          <xs:element name="" type="mutationcategorizationtype" nillable="true" minOccurs="0" />
          <xs:element name="projectintentions" type="projectintention" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutationqcresultrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<mutationqcresult,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qctypeservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="qctyperepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qcstatusrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<qcstatus,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qcstatus" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qctype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qcstatusservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="qcstatusrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutationqcresult" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="mutation" nillable="true" minOccurs="0" />
          <xs:element name="" type="qctype" nillable="true" minOccurs="0" />
          <xs:element name="status" type="qcstatus" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qctyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<qctype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specimenservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="specimenstatemachineresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="specimenserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="specimentyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="specimenstatemachineresolver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="transitionavailabilityevaluator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="specimen" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="outcome" nillable="true" minOccurs="0" />
          <xs:element name="" type="strain" nillable="true" minOccurs="0" />
          <xs:element name="specimenexternalref" type="xs:string" />
          <xs:element name="" type="specimentype" nillable="true" minOccurs="0" />
          <xs:element name="" type="status" nillable="true" minOccurs="0" />
          <xs:element name="specimenstatusstamps" type="specimenstatusstamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="specimenproperties" type="specimenproperty" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="transientevent" type="processevent" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specimenrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<specimen,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specimentype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specimentyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<specimentype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specimenstate" >
      <xs:sequence>
        <xs:element name="internalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="specimenstatesetter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="statusservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="specimengroupabortprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specimenevent" >
      <xs:complexContent>
       <xs:extension base="processor>">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
          <xs:element name="initialstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="endstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="triggeredbyuser" type="xs:anyType" />
          <xs:element name="triggernote" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specimenpropertyrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<specimenproperty,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertytype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertytyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<propertytype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specimenproperty" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="specimen" nillable="true" minOccurs="0" />
          <xs:element name="" type="propertytype" nillable="true" minOccurs="0" />
          <xs:element name="value" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specimenstatusstamprepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<specimenstatusstamp,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specimenstatusstamp" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="specimen" nillable="true" minOccurs="0" />
          <xs:element name="" type="status" nillable="true" minOccurs="0" />
          <xs:element name="date" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectintention" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="project" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="molecularmutationtype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectintentiongene" nillable="true" minOccurs="0" />
        <xs:element name="projectintentionsequences" type="projectintentionsequence" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="mutationcategorizations" type="mutationcategorization" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectintentionservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectintentionrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<projectintention,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectintentionserviceimpl" >
      <xs:sequence>
        <xs:element name="project_intention_null_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectintentionsequence" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="projectintention" nillable="true" minOccurs="0" />
          <xs:element name="" type="sequence" nillable="true" minOccurs="0" />
          <xs:element name="index" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectintentionsequencerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<projectintentionsequence,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectintentiongenerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<projectintentiongene,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectintentiongene" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="projectintention" nillable="true" minOccurs="0" />
          <xs:element name="" type="gene" nillable="true" minOccurs="0" />
          <xs:element name="transientallorthologs" type="ortholog" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="transientbestorthologs" type="ortholog" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="colonyvalidator" >
      <xs:sequence>
        <xs:element name="null_field_error" type="xs:string" />
        <xs:element name="colony_name_already_exists_error" type="xs:string" />
        <xs:element name="colony_is_a_starting_point" type="xs:string" />
        <xs:element name="colony_is_not_genotype_confirmed" type="xs:string" />
        <xs:element name="GeneratedName" type="colonyrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstartingpointrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="distributionproduct" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="distributioncentre" type="workunit" nillable="true" minOccurs="0" />
          <xs:element name="" type="producttype" nillable="true" minOccurs="0" />
          <xs:element name="" type="colony" nillable="true" minOccurs="0" />
          <xs:element name="" type="distributionnetwork" nillable="true" minOccurs="0" />
          <xs:element name="startdate" type="xs:anyType" />
          <xs:element name="enddate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="distributionnetworkservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="distributionnetworkrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="distributionnetworkrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<distributionnetwork,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="distributionnetwork" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="distributionproductrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<distributionproduct,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="producttypeservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="producttyperepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="producttyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<producttype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="producttype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="colonystatusstamp" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="colony" nillable="true" minOccurs="0" />
          <xs:element name="" type="status" nillable="true" minOccurs="0" />
          <xs:element name="date" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="colonystatusstamprepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<colonystatusstamp,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="confirmgenotypeprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
          <xs:element name="" type="sequenceservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="colonyabortprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="colonyprocessorwithoutvalidations" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reversegenotypeconfirmationprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
          <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="colonystate" >
      <xs:sequence>
        <xs:element name="by_internal_name" type="xs:anyType" />
        <xs:element name="internalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="colonystatesetter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="statusservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="colonyevent" >
      <xs:complexContent>
       <xs:extension base="processor>">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
          <xs:element name="initialstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="endstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="triggeredbyuser" type="xs:anyType" />
          <xs:element name="triggernote" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="colonyrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<colony,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="colony" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="outcome" nillable="true" minOccurs="0" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="legacymodification" type="xs:anyType" />
          <xs:element name="legacywithoutsequence" type="xs:anyType" />
          <xs:element name="" type="strain" nillable="true" minOccurs="0" />
          <xs:element name="" type="status" nillable="true" minOccurs="0" />
          <xs:element name="genotypingcomment" type="xs:string" />
          <xs:element name="colonystatusstamps" type="colonystatusstamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="distributionproducts" type="distributionproduct" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="transientevent" type="processevent" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="colonyserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="colonystatemachineresolver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="transitionavailabilityevaluator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="colonystatemachineresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="colonyservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="speciesnames" >
      <xs:sequence>
        <xs:element name="by_label" type="xs:anyType" />
        <xs:element name="label" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="speciesservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="species" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="taxonid" type="xs:anyType" />
          <xs:element name="projects" type="project" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="speciesrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<species,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="speciesserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="speciesrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="excisiontype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="excisiontyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<excisiontype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="strainserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="strainrepository" nillable="true" minOccurs="0" />
        <xs:element name="strain_not_found_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strainservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strain" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="mgistrainaccid" type="xs:string" />
          <xs:element name="" type="excisiontype" nillable="true" minOccurs="0" />
          <xs:element name="straintypes" type="straintype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="straintype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="strains" type="strain" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="straintyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<straintype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="strainrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<strain,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jsontoorthologsmapper" >
      <xs:sequence>
        <xs:element name="mapper" type="xs:anyType" />
        <xs:element name="hgnc_url" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orthologserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="graphqlconsumer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jsontoorthologsmapper" nillable="true" minOccurs="0" />
        <xs:element name="threshold_support_count" type="xs:long" />
        <xs:element name="orthologs_by_acc_id_query" type="xs:string" />
        <xs:element name="orthologs_body_query" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ortholog" >
      <xs:sequence>
        <xs:element name="symbol" type="xs:string" />
        <xs:element name="category" type="xs:string" />
        <xs:element name="support" type="xs:string" />
        <xs:element name="supportcount" type="xs:anyType" />
        <xs:element name="link" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orthologservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectspecs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectpaths" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="projectrepository" nillable="true" minOccurs="0" />
        <xs:element name="historyservice" type="project" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="projectcreator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="orthologservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectqueryhelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectupdater" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectvalidator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planvalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectqueryhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectcompletionnoteservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectcompletionnote" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="note" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectcompletionnoteserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="projectcompletionnoterepository" nillable="true" minOccurs="0" />
        <xs:element name="note_not_found_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectcompletionnoterepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<projectcompletionnote,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projecttyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<projecttype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projecttype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="searchresult" >
      <xs:sequence>
        <xs:element name="input" type="xs:string" />
        <xs:element name="GeneratedName" type="project" nillable="true" minOccurs="0" />
        <xs:element name="comment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="search" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="searchtype" nillable="true" minOccurs="0" />
        <xs:element name="inputs" type="xs:anyType" />
        <xs:element name="filters" type="projectfilter" nillable="true" minOccurs="0" />
        <xs:element name="invalid_search_type" type="xs:string" />
        <xs:element name="no_search_type_defined" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchreport" >
      <xs:sequence>
        <xs:element name="date" type="xs:anyType" />
        <xs:element name="GeneratedName" type="searchtype" nillable="true" minOccurs="0" />
        <xs:element name="inputs" type="xs:anyType" />
        <xs:element name="filters" type="xs:anyType" />
        <xs:element name="results" type="searchresult" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="pagemetadata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchexecutor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searcher" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="searchexecutor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="searchexecutorbygene" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectsearcherservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectfilterbuilder" >
      <xs:sequence>
        <xs:element name="filters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectpredicates" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractfluentprojectfilter" >
      <xs:sequence>
        <xs:element name="data" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filtertypes" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectfilter" >
      <xs:sequence>
        <xs:element name="filters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fluentsearchresultfilter" >
      <xs:complexContent>
       <xs:extension base="abstractfluentprojectfilter<searchresult>">
         <xs:sequence>
          <xs:element name="data" type="searchresult" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fluentprojectfilter" >
      <xs:complexContent>
       <xs:extension base="abstractfluentprojectfilter<project>">
         <xs:sequence>
          <xs:element name="data" type="project" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="searchexecutorbygene" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="projectservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="geneexternalservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectsearcherserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="searcher" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchtype" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectrepository" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignmentstatusstamprepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<assignmentstatusstamp,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignmentstatusserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="assignmentstatusrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assignmentstatusrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<assignmentstatus,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignmentstatusaction" >
      <xs:sequence>
        <xs:element name="actionname" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assignmentstatus" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
          <xs:element name="ordering" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignmentstatuschecker" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assignmentstatusupdater" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="conflictschecker" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="assignmentstatusservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assignmentstatusstamp" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="project" nillable="true" minOccurs="0" />
          <xs:element name="" type="assignmentstatus" nillable="true" minOccurs="0" />
          <xs:element name="date" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignmentstatusnames" >
      <xs:sequence>
        <xs:element name="inactive_status_name" type="xs:string" />
        <xs:element name="assigned_status_name" type="xs:string" />
        <xs:element name="inspect_glt_mouse_status_name" type="xs:string" />
        <xs:element name="inspect_attempt_status_name" type="xs:string" />
        <xs:element name="inspect_conflict_status_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conflictschecker" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="assignmentstatusservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectintentionservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectqueryhelper" nillable="true" minOccurs="0" />
        <xs:element name="deletion_mutation_type_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assignmentstatusservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectupdater" >
      <xs:sequence>
        <xs:element name="historyservice" type="project" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="projectrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="assignmentstatusupdater" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectsummarystatusupdater" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projecthistoryrecorder" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectvalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projecthistoryrecorder" >
      <xs:sequence>
        <xs:element name="historyservice" type="project" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectcreator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="assignmentstatusupdater" nillable="true" minOccurs="0" />
        <xs:element name="historyservice" type="project" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="projectvalidator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="plancreator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectvalidator" >
      <xs:sequence>
        <xs:element name="phenotyping_stage_started" type="xs:string" />
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
        <xs:element name="resourceaccesschecker" type="project" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="projectqueryhelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="privacy" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="privacyservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="privacyserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="privacyrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="privacyrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<privacy,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="project" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="transientisobjectrestricted" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="tpn" type="xs:string" />
          <xs:element name="imitsmiplan" type="xs:long" />
          <xs:element name="" type="assignmentstatus" nillable="true" minOccurs="0" />
          <xs:element name="summary" type="status" nillable="true" minOccurs="0" />
          <xs:element name="assignmentstatusstamps" type="assignmentstatusstamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="summarystatusstamps" type="projectsummarystatusstamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="plans" type="plan" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="reactivationdate" type="xs:anyType" />
          <xs:element name="recovery" type="xs:anyType" />
          <xs:element name="escellqconly" type="xs:anyType" />
          <xs:element name="comment" type="xs:string" />
          <xs:element name="" type="privacy" nillable="true" minOccurs="0" />
          <xs:element name="projectintentions" type="projectintention" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="species" type="species" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="projectconsortia" type="projectconsortium" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="projectescellqc" nillable="true" minOccurs="0" />
          <xs:element name="" type="projecttype" nillable="true" minOccurs="0" />
          <xs:element name="completionnote" type="projectcompletionnote" nillable="true" minOccurs="0" />
          <xs:element name="completioncomment" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectsummarystatusstamp" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="project" nillable="true" minOccurs="0" />
          <xs:element name="" type="status" nillable="true" minOccurs="0" />
          <xs:element name="date" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectsummarystatusupdater" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="statusservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectsummarystatusstamprepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<projectsummarystatusstamp,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="escellqccommentrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<escellqccomment,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="escellqccommentserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="escellqccommentrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="escellqccomment" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="escellqccommentservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="escellcentrepipelineserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="escellcentrepipelinerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="escellcentrepipelinerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<escellcentrepipeline,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="escellcentrepipeline" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="centres" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="escellcentrepipelineservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectescellqc" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="project" nillable="true" minOccurs="0" />
          <xs:element name="numberofescellsreceived" type="xs:anyType" />
          <xs:element name="escellsreceivedfrom" type="escellcentrepipeline" nillable="true" minOccurs="0" />
          <xs:element name="escellsreceivedon" type="xs:anyType" />
          <xs:element name="numberofescellsstartingqc" type="xs:anyType" />
          <xs:element name="numberofescellspassingqc" type="xs:anyType" />
          <xs:element name="" type="escellqccomment" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectescellqcrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<projectescellqc,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectconsortiumrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<projectconsortium,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectconsortium" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="project" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="consortium" nillable="true" minOccurs="0" />
        <xs:element name="institutes" type="institute" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectintentionservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="projectqueryhelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plantype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="plantypename" >
      <xs:sequence>
        <xs:element name="by_label" type="xs:anyType" />
        <xs:element name="label" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plantypeservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plantyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<plantype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="plantypeserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="plantyperepository" nillable="true" minOccurs="0" />
        <xs:element name="plan_type_not_found_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="escellproductionplanstate" >
      <xs:sequence>
        <xs:element name="internalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="escellproductionplanevent" >
      <xs:complexContent>
       <xs:extension base="processor>">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
          <xs:element name="initialstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="endstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="triggeredbyuser" type="xs:anyType" />
          <xs:element name="triggernote" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abortchimerasfounderobtainedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chimerasfounderobtainedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="escellattemptinprogressprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="plancreator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="historyservice" type="plan" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="planstatusmanager" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planvalidator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectupdater" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planstatesetter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="statusservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planupdaterimpl" >
      <xs:sequence>
        <xs:element name="historyservice" type="plan" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="planrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planvalidator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projectservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatusmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planprocessorwithoutvalidations" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="planupdater" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planstatemachineresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planvalidator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="crisprattemptvalidator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="attempttypeservice" nillable="true" minOccurs="0" />
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
        <xs:element name="resourceaccesschecker" type="plan" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="projectvalidator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="phenotypeattemptvalidator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="colonyvalidator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="creallelemodificationvalidator" nillable="true" minOccurs="0" />
        <xs:element name="attempt_type_plan_type_invalid_association" type="xs:string" />
        <xs:element name="null_object_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="breedingplanstate" >
      <xs:sequence>
        <xs:element name="internalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="breedingstartedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="breedingplanabortprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="breedingplanevent" >
      <xs:complexContent>
       <xs:extension base="processor>">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
          <xs:element name="initialstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="endstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="triggeredbyuser" type="xs:anyType" />
          <xs:element name="triggernote" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attemptinprogressprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embryosobtainedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abortfounderobtainedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abortembryosobtainedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="founderobtainedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haploessentialproductionplanstate" >
      <xs:sequence>
        <xs:element name="internalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="crisprproductionplanstate" >
      <xs:sequence>
        <xs:element name="internalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="crisprproductionplanevent" >
      <xs:complexContent>
       <xs:extension base="processor>">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
          <xs:element name="initialstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="endstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="triggeredbyuser" type="xs:anyType" />
          <xs:element name="triggernote" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haploessentialproductionplanevent" >
      <xs:complexContent>
       <xs:extension base="processor>">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
          <xs:element name="initialstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="endstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="triggeredbyuser" type="xs:anyType" />
          <xs:element name="triggernote" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creallelemodificationplanreverttocreexcisioncompleteprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creallelemodificationplanregisteredprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creallelemodificationplancreexcisionstartedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creallelemodificationplanabortprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creallelemodificationplangenotypeconfirmedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creallelemodificationplancreexcisioncompleteprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creallelemodificationplanevent" >
      <xs:complexContent>
       <xs:extension base="processor>">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
          <xs:element name="initialstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="endstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="triggeredbyuser" type="xs:anyType" />
          <xs:element name="triggernote" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creallelemodificationplanstate" >
      <xs:sequence>
        <xs:element name="internalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypeplanstate" >
      <xs:sequence>
        <xs:element name="internalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reversephenotypeplanabortprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypeplanabandonprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypeplanabortprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypeplanevent" >
      <xs:complexContent>
       <xs:extension base="processor>">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
          <xs:element name="initialstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="endstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="triggeredbyuser" type="xs:anyType" />
          <xs:element name="triggernote" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="planqueryhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planstatusmanager" >
      <xs:sequence>
        <xs:element name="statetransitionmanager" type="statetransitionsmanager" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="systemeventsexecutor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatesetter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="plansummarystatusupdater" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatemachineresolver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="phenotypingstagestatesetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="protocol" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
          <xs:element name="plans" type="plan" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="protocoltype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="protocolversion" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="protocol" nillable="true" minOccurs="0" />
          <xs:element name="protocolurl" type="xs:string" />
          <xs:element name="version" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="protocolversionrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<protocolversion,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="protocoltype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="protocoltyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<protocoltype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="protocolrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<protocol,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attempttyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<attempttype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingproductionserviceimpl" >
      <xs:sequence>
        <xs:element name="phenotypingproductionrepository" type="phenotypingattemptrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="tissuedistributionrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attempttype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attempttypeservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstagestatemachineresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstageupdater" >
      <xs:sequence>
        <xs:element name="historyservice" type="phenotypingstage" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="statetransitionsmanager" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="phenotypingstagerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planupdater" nillable="true" minOccurs="0" />
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="phenotypingstagevalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstagevalidator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="phenotypingstagerepository" nillable="true" minOccurs="0" />
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstagetyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<phenotypingstagetype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingstagetype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingstagetypename" >
      <xs:sequence>
        <xs:element name="by_label" type="xs:anyType" />
        <xs:element name="label" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstagetypeservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstagetypeserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="phenotypingstagetyperepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tissuedistributionrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<tissuedistribution,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tissuedistribution" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="phenotypingstage" nillable="true" minOccurs="0" />
          <xs:element name="startdate" type="xs:anyType" />
          <xs:element name="enddate" type="xs:anyType" />
          <xs:element name="" type="materialdepositedtype" nillable="true" minOccurs="0" />
          <xs:element name="" type="workunit" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingstagestatesetter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="statusservice" nillable="true" minOccurs="0" />
        <xs:element name="suffixes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstageservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstagerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<phenotypingstage,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="adultevent" >
      <xs:complexContent>
       <xs:extension base="processor>">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
          <xs:element name="initialstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="endstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="triggeredbyuser" type="xs:anyType" />
          <xs:element name="triggernote" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingstagestate" >
      <xs:sequence>
        <xs:element name="internalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstageevent" >
      <xs:complexContent>
       <xs:extension base="processor>">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
          <xs:element name="initialstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="endstate" type="processstate" nillable="true" minOccurs="0" />
          <xs:element name="triggeredbyuser" type="xs:anyType" />
          <xs:element name="triggernote" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="adultstate" >
      <xs:sequence>
        <xs:element name="internalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alldatasenttoalldataprocessedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
          <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alldataprocessedtophenotypingfinishedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
          <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rollbacktophenotypingregisteredprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
          <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingstartedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
          <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingstartedprocessorwithtissuecreation" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
          <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
          <xs:element name="" type="materialdepositedtypeservice" nillable="true" minOccurs="0" />
          <xs:element name="work_unit_names_automatic_tissue_distribution" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingstageprocessorwithoutvalidations" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rollbacktoalldataprocessedprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
          <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingstagestatusstamprepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<phenotypingstagestatusstamp,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingstagestatusstamp" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="phenotypingstage" nillable="true" minOccurs="0" />
          <xs:element name="" type="status" nillable="true" minOccurs="0" />
          <xs:element name="date" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingstageserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="phenotypingstagestatemachineresolver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="transitionavailabilityevaluator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="phenotypingstagerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="phenotypingstagetyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planservice" nillable="true" minOccurs="0" />
        <xs:element name="resourceaccesschecker" type="phenotypingstage" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="phenotypingstagecreator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="phenotypingstageupdater" nillable="true" minOccurs="0" />
        <xs:element name="historyservice" type="phenotypingstage" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="read_phenotyping_stage_action" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="materialdepositedtypeserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="materialdepositedtyperepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="materialdepositedtypenames" >
      <xs:sequence>
        <xs:element name="by_label" type="xs:anyType" />
        <xs:element name="label" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="materialdepositedtypeservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="materialdepositedtype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="materialdepositedtyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<materialdepositedtype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingstagecreator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="historyservice" type="phenotypingstage" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="phenotypingstagestatesetter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="phenotypingstagevalidator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planupdater" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingstage" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="psn" type="xs:string" />
          <xs:element name="event" type="processevent" nillable="true" minOccurs="0" />
          <xs:element name="" type="phenotypingattempt" nillable="true" minOccurs="0" />
          <xs:element name="" type="phenotypingstagetype" nillable="true" minOccurs="0" />
          <xs:element name="phenotypingexperimentsstarted" type="xs:anyType" />
          <xs:element name="tissuedistributions" type="tissuedistribution" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="status" nillable="true" minOccurs="0" />
          <xs:element name="initialdatareleasedate" type="xs:anyType" />
          <xs:element name="phenotypingstagestatusstamps" type="phenotypingstagestatusstamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypingstagetypes" >
      <xs:sequence>
        <xs:element name="typename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingattempt" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="plan" nillable="true" minOccurs="0" />
          <xs:element name="imitsphenotypeattempt" type="xs:long" />
          <xs:element name="imitsphenotypingproduction" type="xs:long" />
          <xs:element name="imitsparentcolony" type="xs:long" />
          <xs:element name="donotcounttowardscompleteness" type="xs:anyType" />
          <xs:element name="phenotypingexternalref" type="xs:string" />
          <xs:element name="" type="strain" nillable="true" minOccurs="0" />
          <xs:element name="cohort" type="workunit" nillable="true" minOccurs="0" />
          <xs:element name="phenotypingstages" type="phenotypingstage" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phenotypeattemptvalidator" >
      <xs:sequence>
        <xs:element name="phenotyping_stage_started" type="xs:string" />
        <xs:element name="can_not_be_null" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingattemptrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<phenotypingattempt,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="escellattemptrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<escellattempt,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="escellattempt" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="plan" nillable="true" minOccurs="0" />
          <xs:element name="imitsmiattempt" type="xs:long" />
          <xs:element name="//connectiontotarg_rep_es_cell//thisstorestheidbutisnotspecifiedasaforeignkey//theidisconvertedtotheescellnameintheserviceanddto.targrepescellid" type="xs:long" />
          <xs:element name="midate" type="xs:anyType" />
          <xs:element name="miexternalref" type="xs:string" />
          <xs:element name="experimental" type="xs:anyType" />
          <xs:element name="comment" type="xs:string" />
          <xs:element name="blast" type="strain" nillable="true" minOccurs="0" />
          <xs:element name="totalblastsinjected" type="xs:anyType" />
          <xs:element name="totaltransferred" type="xs:anyType" />
          <xs:element name="numbersurrogatesreceiving" type="xs:anyType" />
          <xs:element name="totalpupsborn" type="xs:anyType" />
          <xs:element name="totalfemalechimeras" type="xs:anyType" />
          <xs:element name="totalmalechimeras" type="xs:anyType" />
          <xs:element name="//calculatebythesystem:total_female_chimeras+total_male_chimerastotalchimeras" type="xs:anyType" />
          <xs:element name="numberofmaleswith0to39percentchimerism" type="xs:anyType" />
          <xs:element name="numberofmaleswith40to79percentchimerism" type="xs:anyType" />
          <xs:element name="numberofmaleswith80to99percentchimerism" type="xs:anyType" />
          <xs:element name="numberofmaleswith100percentchimerism" type="xs:anyType" />
          <xs:element name="testcross" type="strain" nillable="true" minOccurs="0" />
          <xs:element name="datechimerasmated" type="xs:anyType" />
          <xs:element name="numberofchimeramatingsattempted" type="xs:anyType" />
          <xs:element name="numberofchimeramatingssuccessful" type="xs:anyType" />
          <xs:element name="numberofchimeraswithgltfromcct" type="xs:anyType" />
          <xs:element name="numberofchimeraswithgltfromgenotyping" type="xs:anyType" />
          <xs:element name="numberofchimeraswith0to9percentglt" type="xs:anyType" />
          <xs:element name="numberofchimeraswith10to49percentglt" type="xs:anyType" />
          <xs:element name="numberofchimeraswith50to99percentglt" type="xs:anyType" />
          <xs:element name="numberofchimeraswith100percentglt" type="xs:anyType" />
          <xs:element name="totalf1micefrommatings" type="xs:anyType" />
          <xs:element name="numberofcctoffspring" type="xs:anyType" />
          <xs:element name="//setbythesystemcassettetransmissionverified" type="xs:anyType" />
          <xs:element name="//setbythesystemcassettetransmissionverifiedautocomplete" type="xs:anyType" />
          <xs:element name="numberofhetoffspring" type="xs:anyType" />
          <xs:element name="numberoflivegltoffspring" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attempttypesname" >
      <xs:sequence>
        <xs:element name="by_label" type="xs:anyType" />
        <xs:element name="label" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phenotypingproductionservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attempttypeserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="attempttyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="plantyperepository" nillable="true" minOccurs="0" />
        <xs:element name="attempt_type_not_found_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creallelemodificationattempt" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="plan" nillable="true" minOccurs="0" />
        <xs:element name="imitsmouseallelemod" type="xs:long" />
        <xs:element name="/*2021-05-26thisfieldthatstoresanidrelatingtothetargrepalleletablewasintheimitsdatabasetable,butwasnotobviouslyusedbyanycurrentimitscode,suchasthecontroller,andwasnotpresentintheimitswebinterface.therewasalsonoobviousreferencetoimitsallelemodificationdatainthecurrenttargrepwebinterface.thefieldprobablyrepresentsahistoricalartifact,butthelinkstothetargrepalleletablewhenspecifiedappearedcorrect.wehavemigratedthedataincaseitisrequiredlater,butdointendtoexposethefieldpublicly.*/targrepallele" type="xs:long" />
        <xs:element name="numberofcrematingssuccessful" type="xs:anyType" />
        <xs:element name="modificationexternalref" type="xs:string" />
        <xs:element name="tatcre" type="xs:anyType" />
        <xs:element name="deleter" type="strain" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creallelemodificationvalidator" >
      <xs:sequence>
        <xs:element name="can_not_be_null" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creallelemodificationattemptrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<creallelemodificationattempt,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="breedingattemptrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<breedingattempt,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="breedingtype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="breedingattempt" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="plan" nillable="true" minOccurs="0" />
          <xs:element name="imitsmouseallelemod" type="xs:long" />
          <xs:element name="numberofcrematingsstarted" type="xs:anyType" />
          <xs:element name="numberofcarematingssuccessful" type="xs:anyType" />
          <xs:element name="creexcesion" type="xs:anyType" />
          <xs:element name="tatcre" type="xs:anyType" />
          <xs:element name="deleter" type="strain" nillable="true" minOccurs="0" />
          <xs:element name="type" type="breedingtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="breedingtyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<breedingtype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crisprattemptserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="crisprattemptrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="genotypeprimerrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="nucleaserepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="nucleasetyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="nucleaseclassrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mutagenesisdonorrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="assaytyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="guideformatrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="guidesourcerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="guidevalidator" >
      <xs:sequence>
        <xs:element name="null_field_error" type="xs:string" />
        <xs:element name="length_guide_sequence" type="xs:string" />
        <xs:element name="start_stop_positive_difference" type="xs:string" />
        <xs:element name="same_total_length" type="xs:string" />
        <xs:element name="sequence_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="guideformatrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<guideformat,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="guideformat" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="guiderepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<guide,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="guidesource" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="guidesourcerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<guidesource,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="guide" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="crisprattempt" nillable="true" minOccurs="0" />
          <xs:element name="sequence" type="xs:string" />
          <xs:element name="guidesequence" type="xs:string" />
          <xs:element name="pam" type="xs:string" />
          <xs:element name="chr" type="xs:string" />
          <xs:element name="start" type="xs:anyType" />
          <xs:element name="stop" type="xs:anyType" />
          <xs:element name="strand" type="xs:string" />
          <xs:element name="genomebuild" type="xs:string" />
          <xs:element name="grnaconcentration" type="xs:double" />
          <xs:element name="truncatedguide" type="xs:anyType" />
          <xs:element name="reversed" type="xs:anyType" />
          <xs:element name="sangerservice" type="xs:anyType" />
          <xs:element name="" type="guideformat" nillable="true" minOccurs="0" />
          <xs:element name="" type="guidesource" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nucleaserepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<nuclease,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nucleasetype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nucleasetyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<nucleasetype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nucleaseclass" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nucleaseclassrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<nucleaseclass,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nucleasevalidator" >
      <xs:sequence>
        <xs:element name="null_field_error" type="xs:string" />
        <xs:element name="wrong_type_error" type="xs:string" />
        <xs:element name="wrong_class_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nuclease" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="crisprattempt" nillable="true" minOccurs="0" />
          <xs:element name="concentration" type="xs:double" />
          <xs:element name="" type="nucleasetype" nillable="true" minOccurs="0" />
          <xs:element name="" type="nucleaseclass" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crisprattemptrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<crisprattempt,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reagent" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reagentservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reagentserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="reagentrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="crisprattemptreagent" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="crisprattempt" nillable="true" minOccurs="0" />
          <xs:element name="" type="reagent" nillable="true" minOccurs="0" />
          <xs:element name="concentration" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crisprattemptreagentrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<crisprattemptreagent,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reagentrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<reagent,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crisprattemptvalidator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="crisprattemptservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="nucleasevalidator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="guidevalidator" nillable="true" minOccurs="0" />
        <xs:element name="null_object_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutagenesisdonor" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="crisprattempt" nillable="true" minOccurs="0" />
          <xs:element name="concentration" type="xs:double" />
          <xs:element name="" type="preparationtype" nillable="true" minOccurs="0" />
          <xs:element name="oligosequencefasta" type="xs:string" />
          <xs:element name="//connectiontotarg_rep_targeting_vectorvectorname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutagenesisdonorrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<mutagenesisdonor,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preparationtyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<preparationtype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preparationtype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assay" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="crisprattempt" nillable="true" minOccurs="0" />
          <xs:element name="" type="assaytype" nillable="true" minOccurs="0" />
          <xs:element name="numfounderpups" type="xs:anyType" />
          <xs:element name="numfounderselectedforbreeding" type="xs:anyType" />
          <xs:element name="foundernumassays" type="xs:anyType" />
          <xs:element name="numdeletiong0mutants" type="xs:anyType" />
          <xs:element name="numg0wheremutationdetected" type="xs:anyType" />
          <xs:element name="numhdrg0mutants" type="xs:anyType" />
          <xs:element name="numhdrg0mutantsalldonorsinserted" type="xs:anyType" />
          <xs:element name="numnhejg0mutants" type="xs:anyType" />
          <xs:element name="numhrg0mutants" type="xs:anyType" />
          <xs:element name="numhdrg0mutantssubsetdonorsinserted" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assaytyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<assaytype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assaytype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assayrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<assay,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genotypeprimerrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<genotypeprimer,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genotypeprimer" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="sequence" type="xs:string" />
          <xs:element name="genomicstartcoordinate" type="xs:anyType" />
          <xs:element name="genomicendcoordinate" type="xs:anyType" />
          <xs:element name="" type="crisprattempt" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crisprattempt" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="plan" nillable="true" minOccurs="0" />
          <xs:element name="imitsmiattempt" type="xs:long" />
          <xs:element name="midate" type="xs:anyType" />
          <xs:element name="miexternalref" type="xs:string" />
          <xs:element name="experimental" type="xs:anyType" />
          <xs:element name="mutagenesisexternalref" type="xs:string" />
          <xs:element name="totalembryosinjected" type="xs:anyType" />
          <xs:element name="totalembryossurvived" type="xs:anyType" />
          <xs:element name="embryo2cell" type="xs:string" />
          <xs:element name="comment" type="xs:string" />
          <xs:element name="embryotransferday" type="xs:string" />
          <xs:element name="totaltransferred" type="xs:anyType" />
          <xs:element name="" type="assay" nillable="true" minOccurs="0" />
          <xs:element name="" type="strain" nillable="true" minOccurs="0" />
          <xs:element name="guides" type="guide" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="primers" type="genotypeprimer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="crisprattemptreagents" type="crisprattemptreagent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="nucleases" type="nuclease" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="mutagenesisdonors" type="mutagenesisdonor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crisprattemptservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attempttypechecker" >
      <xs:sequence>
        <xs:element name="crispr_type" type="xs:string" />
        <xs:element name="es_cell_type" type="xs:string" />
        <xs:element name="cre_allele_modification_type" type="xs:string" />
        <xs:element name="phenotyping_type" type="xs:string" />
        <xs:element name="not_defined_type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planspecs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="planrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planupdater" nillable="true" minOccurs="0" />
        <xs:element name="historyservice" type="plan" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="plancreator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planstatemachineresolver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="transitionavailabilityevaluator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planvalidator" nillable="true" minOccurs="0" />
        <xs:element name="plan_not_exists_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planstartingpointrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<planstartingpoint,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="planstartingpoint" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="plan" nillable="true" minOccurs="0" />
          <xs:element name="" type="outcome" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="planrepository" >
      <xs:complexContent>
       <xs:extension base="pagingandsortingrepository<plan,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="planfiltertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planfilter" >
      <xs:sequence>
        <xs:element name="filters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planfilterbuilder" >
      <xs:sequence>
        <xs:element name="filters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plan" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="event" type="processevent" nillable="true" minOccurs="0" />
          <xs:element name="pin" type="xs:string" />
          <xs:element name="" type="project" nillable="true" minOccurs="0" />
          <xs:element name="funders" type="funder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="workunit" nillable="true" minOccurs="0" />
          <xs:element name="" type="workgroup" nillable="true" minOccurs="0" />
          <xs:element name="" type="status" nillable="true" minOccurs="0" />
          <xs:element name="planstatusstamps" type="planstatusstamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="plansummarystatusstamps" type="plansummarystatusstamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="summary" type="status" nillable="true" minOccurs="0" />
          <xs:element name="" type="plantype" nillable="true" minOccurs="0" />
          <xs:element name="comment" type="xs:string" />
          <xs:element name="planflags" type="planflag" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="protocols" type="protocol" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="outcomes" type="outcome" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="planstartingpoints" type="planstartingpoint" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="attempttype" nillable="true" minOccurs="0" />
          <xs:element name="" type="crisprattempt" nillable="true" minOccurs="0" />
          <xs:element name="" type="phenotypingattempt" nillable="true" minOccurs="0" />
          <xs:element name="" type="breedingattempt" nillable="true" minOccurs="0" />
          <xs:element name="" type="creallelemodificationattempt" nillable="true" minOccurs="0" />
          <xs:element name="" type="escellattempt" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="plansummarystatusstamp" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="plan" nillable="true" minOccurs="0" />
          <xs:element name="" type="status" nillable="true" minOccurs="0" />
          <xs:element name="date" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="plansummarystatusstamprepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<plansummarystatusstamp,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="planstatusstamp" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="plan" nillable="true" minOccurs="0" />
          <xs:element name="" type="status" nillable="true" minOccurs="0" />
          <xs:element name="date" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="plansummarystatusupdater" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planstatusstamprepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<planstatusstamp,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="planflag" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="plans" type="plan" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="planflagrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<planflag,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencelocation" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="sequence" nillable="true" minOccurs="0" />
          <xs:element name="index" type="xs:anyType" />
          <xs:element name="" type="location" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencelocationrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<sequencelocation,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencelocationservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="sequencelocationrepository" nillable="true" minOccurs="0" />
        <xs:element name="not_found_error" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outcomeupdater" >
      <xs:sequence>
        <xs:element name="historyservice" type="outcome" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="statetransitionsmanager" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="outcomerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planupdater" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="outcomevalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outcome" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="tpo" type="xs:string" />
          <xs:element name="" type="outcometype" nillable="true" minOccurs="0" />
          <xs:element name="" type="plan" nillable="true" minOccurs="0" />
          <xs:element name="mutations" type="mutation" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="colony" nillable="true" minOccurs="0" />
          <xs:element name="" type="specimen" nillable="true" minOccurs="0" />
          <xs:element name="planstartingpoints" type="planstartingpoint" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outcomevalidator" >
      <xs:sequence>
        <xs:element name="policyenforcement" type="contextawarepolicyenforcement" nillable="true" minOccurs="0" />
        <xs:element name="null_field_error" type="xs:string" />
        <xs:element name="cannot_read_plan" type="xs:string" />
        <xs:element name="GeneratedName" type="colonyvalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outcomerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<outcome,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outcomeservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outcomeserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="outcomerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="outcometyperepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="outcomecreator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="outcomeupdater" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="outcomevalidator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mutationservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mutationvalidator" nillable="true" minOccurs="0" />
        <xs:element name="resourceaccesschecker" type="outcome" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="historyservice" type="outcome" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="read_outcome_action" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outcomecreator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="historyservice" type="outcome" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="colonystatesetter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="specimenstatesetter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mutationservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="outcomevalidator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="planupdater" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outcometype" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outcometyperepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<outcometype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outcometypename" >
      <xs:sequence>
        <xs:element name="by_label" type="xs:anyType" />
        <xs:element name="label" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wgeexonconsumer" >
      <xs:sequence>
        <xs:element name="exons_url" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wgecrisprsearchconsumer" >
      <xs:sequence>
        <xs:element name="crispr_search_url" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="application" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="default-policy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 