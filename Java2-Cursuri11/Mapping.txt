ClassDiagram.Class>> Magazin =>=>=> RelationalSchema.Table>> magazin;
ClassDiagram.Class>> Organizatie =>=>=> RelationalSchema.Table>> organizatie;
ClassDiagram.Class>> Produs =>=>=> RelationalSchema.Table>> produs;
ClassDiagram.Class>> Persoana =>=>=> RelationalSchema.Table>> persoana;
ClassDiagram.Class>> Adresa =>=>=> RelationalSchema.Table>> adresa;
ClassDiagram.Class>> Depozit =>=>=> RelationalSchema.Table>> depozit;
ClassDiagram.Class>> Factura =>=>=> RelationalSchema.Table>> factura;
ClassDiagram.Class>> Tricou =>=>=> RelationalSchema.Table>> tricou;
ClassDiagram.Attribut>> Magazin.ind:int =>=>=> RelationalSchema.Column>> magazin.ind PRIMARY KEY;
ClassDiagram.Attribut>> Magazin.emails:Map<String,String> =>=>=> RelationalSchema.Column>> magazin.emails;
ClassDiagram.Attribut>> Organizatie.id:int =>=>=> RelationalSchema.Column>> organizatie.id PRIMARY KEY;
ClassDiagram.Attribut>> Produs.id:int =>=>=> RelationalSchema.Column>> produs.id PRIMARY KEY;
ClassDiagram.Attribut>> Produs.pret:int =>=>=> RelationalSchema.Column>> produs.pret;
ClassDiagram.Attribut>> Produs.nume:String =>=>=> RelationalSchema.Column>> produs.nume;
ClassDiagram.Attribut>> Persoana.id:int =>=>=> RelationalSchema.Column>> persoana.id PRIMARY KEY;
ClassDiagram.Attribut>> Adresa.id:int =>=>=> RelationalSchema.Column>> adresa.id PRIMARY KEY;
ClassDiagram.Attribut>> Adresa.strada:String =>=>=> RelationalSchema.Column>> adresa.strada;
ClassDiagram.Attribut>> Depozit.id:int =>=>=> RelationalSchema.Column>> depozit.id PRIMARY KEY;
ClassDiagram.Attribut>> Depozit.firme:Map<Adresa,String> =>=>=> RelationalSchema.Column>> depozit.firme;
ClassDiagram.Attribut>> Factura.id:int =>=>=> RelationalSchema.Column>> factura.id PRIMARY KEY;
ClassDiagram.Attribut>> Factura.dataemitere:LocalDate =>=>=> RelationalSchema.Column>> factura.dataemitere;
ClassDiagram.Attribut>> Factura.GeneratedName:Status =>=>=> RelationalSchema.Column>> factura.GeneratedName;
ClassDiagram.Attribut>> Factura.emails:Collection<String> =>=>=> RelationalSchema.Column>> factura.emails;
ClassDiagram.Attribut>> Tricou.id:int =>=>=> RelationalSchema.Column>> tricou.id PRIMARY KEY;
ClassDiagram.Attribut>> Tricou.modele:Map<Marime,String> =>=>=> RelationalSchema.Column>> tricou.modele;
One-To-Many relationship from ClassDiagram.Class>>Organizatie  to ClassDiagram.Class>>Map<String,Adresa>;
Factura: produs_Factura(produsID:produs [PK] #FK to produs,FacturaID:Factura [PK] #FK to Factura);
One-To-Many relationship from ClassDiagram.Class>>Persoana  to ClassDiagram.Class>>Map<String,Adresa>;
Many-To-One relationship from ClassDiagram.Class>>Adresa  to ClassDiagram.Class>>Organizatie represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Adresa  to ClassDiagram.Class>>Persoana represented by ClassDiagram.Atrribute>>GeneratedName;
