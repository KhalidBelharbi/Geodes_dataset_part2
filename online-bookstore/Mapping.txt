ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> BookCategory =>=>=> RelationalSchema.Table>> bookcategory;
ClassDiagram.Attribut>> Book.id:Long =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.sku:String =>=>=> RelationalSchema.Column>> book.sku;
ClassDiagram.Attribut>> Book.name:String =>=>=> RelationalSchema.Column>> book.name;
ClassDiagram.Attribut>> Book.description:String =>=>=> RelationalSchema.Column>> book.description;
ClassDiagram.Attribut>> Book.unitprice:BigDecimal =>=>=> RelationalSchema.Column>> book.unitprice;
ClassDiagram.Attribut>> Book.imageurl:String =>=>=> RelationalSchema.Column>> book.imageurl;
ClassDiagram.Attribut>> Book.active:boolean =>=>=> RelationalSchema.Column>> book.active;
ClassDiagram.Attribut>> Book.unitsinstock:int =>=>=> RelationalSchema.Column>> book.unitsinstock;
ClassDiagram.Attribut>> Book.createdon:Date =>=>=> RelationalSchema.Column>> book.createdon;
ClassDiagram.Attribut>> Book.updon:Date =>=>=> RelationalSchema.Column>> book.updon;
ClassDiagram.Attribut>> BookCategory.id:Long =>=>=> RelationalSchema.Column>> bookcategory.id PRIMARY KEY;
ClassDiagram.Attribut>> BookCategory.categoryname:String =>=>=> RelationalSchema.Column>> bookcategory.categoryname;
Many-To-One relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>Book represented by ClassDiagram.Atrribute>>category;
One-To-Many relationship from ClassDiagram.Class>>BookCategory  to ClassDiagram.Class>>Set<Book>;
