ClassDiagram.Class>> Car =>=>=> RelationalSchema.Table>> car;
ClassDiagram.Class>> City =>=>=> RelationalSchema.Table>> city;
ClassDiagram.Class>> Discipline =>=>=> RelationalSchema.Table>> discipline;
ClassDiagram.Class>> Group =>=>=> RelationalSchema.Table>> group;
ClassDiagram.Class>> ContactInfo =>=>=> RelationalSchema.Table>> contactinfo;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Attribut>> Car.id:Integer =>=>=> RelationalSchema.Column>> car.id PRIMARY KEY;
ClassDiagram.Attribut>> Car.model:String =>=>=> RelationalSchema.Column>> car.model;
ClassDiagram.Attribut>> City.id:int =>=>=> RelationalSchema.Column>> city.id PRIMARY KEY;
ClassDiagram.Attribut>> City.name:String =>=>=> RelationalSchema.Column>> city.name;
ClassDiagram.Attribut>> City.foundationdate:LocalDateTime =>=>=> RelationalSchema.Column>> city.foundationdate;
ClassDiagram.Attribut>> City.type:CityType =>=>=> RelationalSchema.Column>> city.type;
ClassDiagram.Attribut>> City.happinessindex:Double =>=>=> RelationalSchema.Column>> city.happinessindex;
ClassDiagram.Attribut>> Discipline.id:Long =>=>=> RelationalSchema.Column>> discipline.id PRIMARY KEY;
ClassDiagram.Attribut>> Discipline.code:Integer =>=>=> RelationalSchema.Column>> discipline.code;
ClassDiagram.Attribut>> Discipline.description:String =>=>=> RelationalSchema.Column>> discipline.description;
ClassDiagram.Attribut>> Group.id:Long =>=>=> RelationalSchema.Column>> group.id PRIMARY KEY;
ClassDiagram.Attribut>> Group.name:String =>=>=> RelationalSchema.Column>> group.name;
ClassDiagram.Attribut>> Group.direction:String =>=>=> RelationalSchema.Column>> group.direction;
ClassDiagram.Attribut>> ContactInfo.id:Long =>=>=> RelationalSchema.Column>> contactinfo.id PRIMARY KEY;
ClassDiagram.Attribut>> ContactInfo.email:String =>=>=> RelationalSchema.Column>> contactinfo.email;
ClassDiagram.Attribut>> ContactInfo.telephonenumber:String =>=>=> RelationalSchema.Column>> contactinfo.telephonenumber;
ClassDiagram.Attribut>> Student.id:Long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
One-To-Many relationship from ClassDiagram.Class>>Group  to ClassDiagram.Class>>Set<Student>;
Many-To-Many relationship between ClassDiagram.Class>>Student  and ClassDiagram.Class>>set<discipline>: student_discipline(student:Student [PK] #FK to Student,discipline:set<discipline> [PK] #FK to set<discipline>);
Many-To-One relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>group represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Student  to ClassDiagram.Class>>contactinfo represented by ClassDiagram.Atrribute>>contact;
