ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> ConfirmUser =>=>=> RelationalSchema.Table>> confirmuser;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> Base =>=>=> RelationalSchema.Table>> base;
ClassDiagram.Attribut>> User.GeneratedName:Logger =>=>=> RelationalSchema.Column>> user.GeneratedName;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> ConfirmUser.code:String =>=>=> RelationalSchema.Column>> confirmuser.code;
ClassDiagram.Attribut>> ConfirmUser.expireddate:LocalDateTime =>=>=> RelationalSchema.Column>> confirmuser.expireddate;
ClassDiagram.Attribut>> ConfirmUser.confirmeddate:LocalDateTime =>=>=> RelationalSchema.Column>> confirmuser.confirmeddate;
ClassDiagram.Attribut>> Role.name:ERole =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> Phone.number:String =>=>=> RelationalSchema.Column>> phone.number;
ClassDiagram.Attribut>> Phone.region:String =>=>=> RelationalSchema.Column>> phone.region;
ClassDiagram.Attribut>> Base.GeneratedName:Logger =>=>=> RelationalSchema.Column>> base.GeneratedName;
ClassDiagram.Attribut>> Base.id:String =>=>=> RelationalSchema.Column>> base.id PRIMARY KEY;
ClassDiagram.Attribut>> Base.createddate:LocalDateTime =>=>=> RelationalSchema.Column>> base.createddate;
ClassDiagram.Attribut>> Base.createdby:String =>=>=> RelationalSchema.Column>> base.createdby;
ClassDiagram.Attribut>> Base.lastmodifiedby:String =>=>=> RelationalSchema.Column>> base.lastmodifiedby;
ClassDiagram.Attribut>> Base.lastmodifieddate:LocalDateTime =>=>=> RelationalSchema.Column>> base.lastmodifieddate;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Set<Phone>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Set<ConfirmUser>;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<role>: user_roles(user_id:User [PK] #FK to User,role_id:set<role> [PK] #FK to set<role>);
Many-To-One relationship from ClassDiagram.Class>>ConfirmUser  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>confirm;
Many-To-One relationship from ClassDiagram.Class>>Phone  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
