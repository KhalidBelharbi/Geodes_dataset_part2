ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Competition =>=>=> RelationalSchema.Table>> competition;
ClassDiagram.Class>> Feedback =>=>=> RelationalSchema.Table>> feedback;
ClassDiagram.Class>> Profile =>=>=> RelationalSchema.Table>> profile;
ClassDiagram.Class>> Event =>=>=> RelationalSchema.Table>> event;
ClassDiagram.Class>> FeedbackRecord =>=>=> RelationalSchema.Table>> feedbackrecord;
ClassDiagram.Class>> Prediction =>=>=> RelationalSchema.Table>> prediction;
ClassDiagram.Class>> CreditCard =>=>=> RelationalSchema.Table>> creditcard;
ClassDiagram.Class>> Question =>=>=> RelationalSchema.Table>> question;
ClassDiagram.Class>> Bet =>=>=> RelationalSchema.Table>> bet;
ClassDiagram.Attribut>> User.GeneratedName:UserProduct =>=>=> RelationalSchema.Column>> user.GeneratedName;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username PRIMARY KEY;
ClassDiagram.Attribut>> User.cash:float =>=>=> RelationalSchema.Column>> user.cash;
ClassDiagram.Attribut>> User.registration:Date =>=>=> RelationalSchema.Column>> user.registration;
ClassDiagram.Attribut>> User.lastlogin:Date =>=>=> RelationalSchema.Column>> user.lastlogin;
ClassDiagram.Attribut>> Competition.competitionnumber:Integer =>=>=> RelationalSchema.Column>> competition.competitionnumber PRIMARY KEY;
ClassDiagram.Attribut>> Competition.name:String =>=>=> RelationalSchema.Column>> competition.name;
ClassDiagram.Attribut>> Competition.GeneratedName:Country =>=>=> RelationalSchema.Column>> competition.GeneratedName;
ClassDiagram.Attribut>> Competition.GeneratedName:Sport =>=>=> RelationalSchema.Column>> competition.GeneratedName;
ClassDiagram.Attribut>> Competition.starting:Date =>=>=> RelationalSchema.Column>> competition.starting;
ClassDiagram.Attribut>> Competition.ending:Date =>=>=> RelationalSchema.Column>> competition.ending;
ClassDiagram.Attribut>> Feedback.fbnumber:Integer =>=>=> RelationalSchema.Column>> feedback.fbnumber PRIMARY KEY;
ClassDiagram.Attribut>> Feedback.fbtype:FeedbackType =>=>=> RelationalSchema.Column>> feedback.fbtype;
ClassDiagram.Attribut>> Feedback.email:String =>=>=> RelationalSchema.Column>> feedback.email;
ClassDiagram.Attribut>> Feedback.name:String =>=>=> RelationalSchema.Column>> feedback.name;
ClassDiagram.Attribut>> Feedback.summary:String =>=>=> RelationalSchema.Column>> feedback.summary;
ClassDiagram.Attribut>> Feedback.details:String =>=>=> RelationalSchema.Column>> feedback.details;
ClassDiagram.Attribut>> Feedback.submission:Date =>=>=> RelationalSchema.Column>> feedback.submission;
ClassDiagram.Attribut>> Feedback.filename:String =>=>=> RelationalSchema.Column>> feedback.filename;
ClassDiagram.Attribut>> Feedback.extension:String =>=>=> RelationalSchema.Column>> feedback.extension;
ClassDiagram.Attribut>> Feedback.filesize:int =>=>=> RelationalSchema.Column>> feedback.filesize;
ClassDiagram.Attribut>> Feedback.filedata:byte =>=>=> RelationalSchema.Column>> feedback.filedata;
ClassDiagram.Attribut>> Profile.id:String =>=>=> RelationalSchema.Column>> profile.id PRIMARY KEY;
ClassDiagram.Attribut>> Profile.name:String =>=>=> RelationalSchema.Column>> profile.name;
ClassDiagram.Attribut>> Profile.surname:String =>=>=> RelationalSchema.Column>> profile.surname;
ClassDiagram.Attribut>> Profile.email:String =>=>=> RelationalSchema.Column>> profile.email;
ClassDiagram.Attribut>> Profile.address:String =>=>=> RelationalSchema.Column>> profile.address;
ClassDiagram.Attribut>> Profile.phonenumber:String =>=>=> RelationalSchema.Column>> profile.phonenumber;
ClassDiagram.Attribut>> Profile.nationality:Country =>=>=> RelationalSchema.Column>> profile.nationality;
ClassDiagram.Attribut>> Profile.city:String =>=>=> RelationalSchema.Column>> profile.city;
ClassDiagram.Attribut>> Profile.birth:Date =>=>=> RelationalSchema.Column>> profile.birth;
ClassDiagram.Attribut>> Profile.profilepic:String =>=>=> RelationalSchema.Column>> profile.profilepic;
ClassDiagram.Attribut>> Event.eventnumber:Integer =>=>=> RelationalSchema.Column>> event.eventnumber PRIMARY KEY;
ClassDiagram.Attribut>> Event.description:String =>=>=> RelationalSchema.Column>> event.description;
ClassDiagram.Attribut>> Event.event:Date =>=>=> RelationalSchema.Column>> event.event;
ClassDiagram.Attribut>> Event.ending:Date =>=>=> RelationalSchema.Column>> event.ending;
ClassDiagram.Attribut>> Event.GeneratedName:Sport =>=>=> RelationalSchema.Column>> event.GeneratedName;
ClassDiagram.Attribut>> FeedbackRecord.fbrecordnumber:Integer =>=>=> RelationalSchema.Column>> feedbackrecord.fbrecordnumber PRIMARY KEY;
ClassDiagram.Attribut>> FeedbackRecord.administrator:User =>=>=> RelationalSchema.Column>> feedbackrecord.administrator;
ClassDiagram.Attribut>> FeedbackRecord.GeneratedName:Feedback =>=>=> RelationalSchema.Column>> feedbackrecord.GeneratedName;
ClassDiagram.Attribut>> FeedbackRecord.read:boolean =>=>=> RelationalSchema.Column>> feedbackrecord.read;
ClassDiagram.Attribut>> Prediction.predictionnumber:Integer =>=>=> RelationalSchema.Column>> prediction.predictionnumber PRIMARY KEY;
ClassDiagram.Attribut>> Prediction.GeneratedName:Question =>=>=> RelationalSchema.Column>> prediction.GeneratedName;
ClassDiagram.Attribut>> Prediction.answer:String =>=>=> RelationalSchema.Column>> prediction.answer;
ClassDiagram.Attribut>> Prediction.odds:float =>=>=> RelationalSchema.Column>> prediction.odds;
ClassDiagram.Attribut>> Prediction.outcome:Boolean =>=>=> RelationalSchema.Column>> prediction.outcome;
ClassDiagram.Attribut>> CreditCard.cardnumber:String =>=>=> RelationalSchema.Column>> creditcard.cardnumber PRIMARY KEY;
ClassDiagram.Attribut>> CreditCard.due:Date =>=>=> RelationalSchema.Column>> creditcard.due;
ClassDiagram.Attribut>> CreditCard.balance:double =>=>=> RelationalSchema.Column>> creditcard.balance;
ClassDiagram.Attribut>> CreditCard.limit:double =>=>=> RelationalSchema.Column>> creditcard.limit;
ClassDiagram.Attribut>> CreditCard.GeneratedName:CardType =>=>=> RelationalSchema.Column>> creditcard.GeneratedName;
ClassDiagram.Attribut>> CreditCard.GeneratedName:Status =>=>=> RelationalSchema.Column>> creditcard.GeneratedName;
ClassDiagram.Attribut>> CreditCard.default_balance:double =>=>=> RelationalSchema.Column>> creditcard.default_balance;
ClassDiagram.Attribut>> CreditCard.default_limit:double =>=>=> RelationalSchema.Column>> creditcard.default_limit;
ClassDiagram.Attribut>> Question.questionnumber:Integer =>=>=> RelationalSchema.Column>> question.questionnumber PRIMARY KEY;
ClassDiagram.Attribut>> Question.question:String =>=>=> RelationalSchema.Column>> question.question;
ClassDiagram.Attribut>> Question.betminimum:float =>=>=> RelationalSchema.Column>> question.betminimum;
ClassDiagram.Attribut>> Question.result:int =>=>=> RelationalSchema.Column>> question.result;
ClassDiagram.Attribut>> Bet.betnumber:Integer =>=>=> RelationalSchema.Column>> bet.betnumber PRIMARY KEY;
ClassDiagram.Attribut>> Bet.type:BetType =>=>=> RelationalSchema.Column>> bet.type;
ClassDiagram.Attribut>> Bet.status:BetStatus =>=>=> RelationalSchema.Column>> bet.status;
ClassDiagram.Attribut>> Bet.stake:float =>=>=> RelationalSchema.Column>> bet.stake;
ClassDiagram.Attribut>> Bet.placement:Date =>=>=> RelationalSchema.Column>> bet.placement;
ClassDiagram.Attribut>> Bet.starting:Date =>=>=> RelationalSchema.Column>> bet.starting;
ClassDiagram.Attribut>> Bet.resolving:Date =>=>=> RelationalSchema.Column>> bet.resolving;
ClassDiagram.Attribut>> Bet.winnings:float =>=>=> RelationalSchema.Column>> bet.winnings;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>creditcard represented by ClassDiagram.Atrribute>>defaultcard;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>profile represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Bet>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Map<String,CreditCard>;
One-To-Many relationship from ClassDiagram.Class>>Competition  to ClassDiagram.Class>>ArrayList<Event>;
One-To-One relationship between ClassDiagram.Class>>Profile  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>competition represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>List<Question>;
Many-To-One relationship from ClassDiagram.Class>>CreditCard  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>owner;
One-To-Many relationship from ClassDiagram.Class>>Question  to ClassDiagram.Class>>List<Prediction>;
Many-To-One relationship from ClassDiagram.Class>>Question  to ClassDiagram.Class>>event represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Bet  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>bettor;
One-To-Many relationship from ClassDiagram.Class>>Bet  to ClassDiagram.Class>>List<Prediction>;
