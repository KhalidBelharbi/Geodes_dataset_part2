ClassDiagram.Class>> Appoinment =>=>=> RelationalSchema.Table>> appoinment;
ClassDiagram.Class>> Doctor =>=>=> RelationalSchema.Table>> doctor;
ClassDiagram.Class>> Patient =>=>=> RelationalSchema.Table>> patient;
ClassDiagram.Attribut>> Appoinment.id:Long =>=>=> RelationalSchema.Column>> appoinment.id PRIMARY KEY;
ClassDiagram.Attribut>> Appoinment.appointmenttime:Timestamp =>=>=> RelationalSchema.Column>> appoinment.appointmenttime;
ClassDiagram.Attribut>> Appoinment.started:boolean =>=>=> RelationalSchema.Column>> appoinment.started;
ClassDiagram.Attribut>> Appoinment.ended:boolean =>=>=> RelationalSchema.Column>> appoinment.ended;
ClassDiagram.Attribut>> Appoinment.reason:String =>=>=> RelationalSchema.Column>> appoinment.reason;
ClassDiagram.Attribut>> Doctor.id:Long =>=>=> RelationalSchema.Column>> doctor.id PRIMARY KEY;
ClassDiagram.Attribut>> Doctor.firstname:String =>=>=> RelationalSchema.Column>> doctor.firstname;
ClassDiagram.Attribut>> Doctor.lastname:String =>=>=> RelationalSchema.Column>> doctor.lastname;
ClassDiagram.Attribut>> Doctor.speciality:String =>=>=> RelationalSchema.Column>> doctor.speciality;
ClassDiagram.Attribut>> Patient.id:Long =>=>=> RelationalSchema.Column>> patient.id PRIMARY KEY;
ClassDiagram.Attribut>> Patient.firstname:String =>=>=> RelationalSchema.Column>> patient.firstname;
ClassDiagram.Attribut>> Patient.lastname:String =>=>=> RelationalSchema.Column>> patient.lastname;
ClassDiagram.Attribut>> Patient.phone:String =>=>=> RelationalSchema.Column>> patient.phone;
ClassDiagram.Attribut>> Patient.GeneratedName:Insurance =>=>=> RelationalSchema.Column>> patient.GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Appoinment  to ClassDiagram.Class>>patient represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Appoinment  to ClassDiagram.Class>>doctor represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Doctor  to ClassDiagram.Class>>List<Appoinment>;
Many-To-Many relationship between ClassDiagram.Class>>Patient  and ClassDiagram.Class>>list<doctor>: patient_doctor(patient_id:Patient [PK] #FK to Patient,doctor_id:list<doctor> [PK] #FK to list<doctor>);
One-To-Many relationship from ClassDiagram.Class>>Patient  to ClassDiagram.Class>>List<Appoinment>;
