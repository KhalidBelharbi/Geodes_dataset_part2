ClassDiagram.Class>> Administrator =>=>=> RelationalSchema.Table>> administrator;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> CustomerOrder =>=>=> RelationalSchema.Table>> customerorder;
ClassDiagram.Class>> OrderStatus =>=>=> RelationalSchema.Table>> orderstatus;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Groups =>=>=> RelationalSchema.Table>> groups;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> OrderDetail =>=>=> RelationalSchema.Table>> orderdetail;
ClassDiagram.Attribut>> Administrator.serialversionuid:long =>=>=> RelationalSchema.Column>> administrator.serialversionuid;
ClassDiagram.Attribut>> Customer.serialversionuid:long =>=>=> RelationalSchema.Column>> customer.serialversionuid;
ClassDiagram.Attribut>> Product.serialversionuid:long =>=>=> RelationalSchema.Column>> product.serialversionuid;
ClassDiagram.Attribut>> Product.id:Integer =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.price:double =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Product.description:String =>=>=> RelationalSchema.Column>> product.description;
ClassDiagram.Attribut>> Product.img:String =>=>=> RelationalSchema.Column>> product.img;
ClassDiagram.Attribut>> Product.imgsrc:byte =>=>=> RelationalSchema.Column>> product.imgsrc;
ClassDiagram.Attribut>> CustomerOrder.serialversionuid:long =>=>=> RelationalSchema.Column>> customerorder.serialversionuid;
ClassDiagram.Attribut>> CustomerOrder.created:Date =>=>=> RelationalSchema.Column>> customerorder.created;
ClassDiagram.Attribut>> CustomerOrder.id:Integer =>=>=> RelationalSchema.Column>> customerorder.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerOrder.amount:double =>=>=> RelationalSchema.Column>> customerorder.amount;
ClassDiagram.Attribut>> OrderStatus.serialversionuid:long =>=>=> RelationalSchema.Column>> orderstatus.serialversionuid;
ClassDiagram.Attribut>> OrderStatus.id:Integer =>=>=> RelationalSchema.Column>> orderstatus.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderStatus.status:String =>=>=> RelationalSchema.Column>> orderstatus.status;
ClassDiagram.Attribut>> OrderStatus.description:String =>=>=> RelationalSchema.Column>> orderstatus.description;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.id:Integer =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.email:String =>=>=> RelationalSchema.Column>> person.email;
ClassDiagram.Attribut>> Person.address:String =>=>=> RelationalSchema.Column>> person.address;
ClassDiagram.Attribut>> Person.city:String =>=>=> RelationalSchema.Column>> person.city;
ClassDiagram.Attribut>> Person.password:String =>=>=> RelationalSchema.Column>> person.password;
ClassDiagram.Attribut>> Groups.serialversionuid:long =>=>=> RelationalSchema.Column>> groups.serialversionuid;
ClassDiagram.Attribut>> Groups.id:Integer =>=>=> RelationalSchema.Column>> groups.id PRIMARY KEY;
ClassDiagram.Attribut>> Groups.name:String =>=>=> RelationalSchema.Column>> groups.name;
ClassDiagram.Attribut>> Groups.description:String =>=>=> RelationalSchema.Column>> groups.description;
ClassDiagram.Attribut>> Category.serialversionuid:long =>=>=> RelationalSchema.Column>> category.serialversionuid;
ClassDiagram.Attribut>> Category.id:Integer =>=>=> RelationalSchema.Column>> category.id PRIMARY KEY;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> Category.tags:String =>=>=> RelationalSchema.Column>> category.tags;
ClassDiagram.Attribut>> OrderDetail.serialversionuid:long =>=>=> RelationalSchema.Column>> orderdetail.serialversionuid;
ClassDiagram.Attribut>> OrderDetail.GeneratedName:OrderDetailPK =>=>=> RelationalSchema.Column>> orderdetail.GeneratedName;
ClassDiagram.Attribut>> OrderDetail.qty:int =>=>=> RelationalSchema.Column>> orderdetail.qty;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>List<CustomerOrder>;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>CustomerOrder  to ClassDiagram.Class>>orderstatus represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>CustomerOrder  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>CustomerOrder  to ClassDiagram.Class>>List<OrderDetail>;
One-To-Many relationship from ClassDiagram.Class>>OrderStatus  to ClassDiagram.Class>>List<CustomerOrder>;
Many-To-Many relationship between ClassDiagram.Class>>Person  and ClassDiagram.Class>>list<groups>: person_groups(email:Person [PK] #FK to Person,groups_id:list<groups> [PK] #FK to list<groups>);
One-To-Many relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>List<Product>;
Many-To-One relationship from ClassDiagram.Class>>OrderDetail  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>OrderDetail  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>id;
