<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="persistence-dialect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence-customize" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javaee5" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3tx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigersupportimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumconverter" >
      <xs:complexContent>
       <xs:extension base="abstractconverter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dxotigerutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationreader" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="next" type="xs:anyType" />
          <xs:element name="converterscache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timepattern" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conversionrule" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="excludenull" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestamppattern" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dxoconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datepattern" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nevertx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requiresnewtx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mandatorytx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requiredtx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notsupportedtx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertymetanotfoundruntimeexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymetafactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnmetafactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablemeta" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="catalog" type="xs:string" />
        <xs:element name="schema" type="xs:string" />
        <xs:element name="s" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymeta" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="tablemeta" nillable="true" minOccurs="0" />
        <xs:element name="propertymetamap" type="xs:anyType" />
        <xs:element name="additionalinfomap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertymetafactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnmetafactoryimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymetacache" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="lastmodified" type="xs:long" />
        <xs:element name="GeneratedName" type="entitymeta" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymetafactoryimpl" >
      <xs:sequence>
        <xs:element name="entitymetacachemap" type="xs:anyType" />
        <xs:element name="GeneratedName" type="tablemetafactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertymetafactoryimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="columnmetafactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablemetafactoryimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dbmsdialect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertymeta" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="atransient" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="GeneratedName" type="columnmeta" nillable="true" minOccurs="0" />
        <xs:element name="additionalinfomap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="db2dialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="h2dialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mssqldialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hsqldialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="maxdbdialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derbydialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracledialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgredialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqldialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="firebirddialect" >
      <xs:complexContent>
       <xs:extension base="standarddialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standarddialect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablemetafactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnmeta" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="unique" type="xs:anyType" />
        <xs:element name="nullable" type="xs:anyType" />
        <xs:element name="insertable" type="xs:anyType" />
        <xs:element name="updatable" type="xs:anyType" />
        <xs:element name="columndefinition" type="xs:string" />
        <xs:element name="table" type="xs:string" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="precision" type="xs:long" />
        <xs:element name="scale" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletons2container" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binding" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aspect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="initmethod" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autobindingtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instancetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="intertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="destroymethod" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertytype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bindingtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3intertypedefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2intertypedefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pojocomponentdefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3componentdefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertydefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="destroymethoddefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="initmethoddefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpropertydefbuilder" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resourcepropertydefbuilder" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejbpropertydefbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractpropertydefbuilder<ejb>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitpropertydefbuilder" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bindingpropertydefbuilder" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistencecontextpropertydefbuilder" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aspectannotationaspectdefbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractaspectdefbuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metaannotationaspectdefbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractaspectdefbuilder">
         <xs:sequence>
          <xs:element name="metaannotationtype" type="xs:anyType" />
          <xs:element name="interceptornamespace" type="xs:string" />
          <xs:element name="interceptorsuffix" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractaspectdefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3annotationaspectdefbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractaspectdefbuilder">
         <xs:sequence>
          <xs:element name="txinterceptors" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2destroymethoddefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="intertypedefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2initmethoddefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3initmethoddefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aspectdefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationhandler" >
      <xs:complexContent>
       <xs:extension base="constantannotationhandler">
         <xs:sequence>
          <xs:element name="initialized" type="xs:anyType" />
          <xs:element name="componentdefbuilders" type="componentdefbuilder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="propertydefbuilders" type="propertydefbuilder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="aspectdefbuilders" type="aspectdefbuilder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="intertypedefbuilders" type="intertypedefbuilder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="initmethoddefbuilders" type="initmethoddefbuilder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="destroymethoddefbuilders" type="destroymethoddefbuilder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentdefbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3descfactory" >
      <xs:sequence>
        <xs:element name="initialized" type="xs:anyType" />
        <xs:element name="ejb3descs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3requiresnewinterceptor" >
      <xs:complexContent>
       <xs:extension base="abstractejb3txinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractejb3txinterceptor" >
      <xs:complexContent>
       <xs:extension base="abstracttxinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3requiredinterceptor" >
      <xs:complexContent>
       <xs:extension base="abstractejb3txinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3businessmethoddesc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3desc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3interceptordesc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3interceptorsupportinterceptor" >
      <xs:sequence>
        <xs:element name="interceptorclass" type="xs:anyType" />
        <xs:element name="interceptor" type="xs:anyType" />
        <xs:element name="interceptor" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3businessmethoddescimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="ejb3desc" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="interceptors" type="ejb3interceptordesc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invocationcontextimpl" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
        <xs:element name="lifecyclecallback" type="xs:anyType" />
        <xs:element name="contextdata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3interceptorsupportintertype" >
      <xs:complexContent>
       <xs:extension base="abstractintertype">
         <xs:sequence>
          <xs:element name="interceptorclasses" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3interceptordescimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="ejb3desc" nillable="true" minOccurs="0" />
        <xs:element name="interceptorclass" type="xs:anyType" />
        <xs:element name="interceptormethods" type="xs:anyType" />
        <xs:element name="postconstructmethods" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aroundinvokesupportinterceptor" >
      <xs:sequence>
        <xs:element name="aroundinvoke" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3descimpl" >
      <xs:sequence>
        <xs:element name="beanclass" type="xs:anyType" />
        <xs:element name="beanclassname" type="xs:string" />
        <xs:element name="stateless" type="xs:anyType" />
        <xs:element name="stateful" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="businessinterfaces" type="xs:anyType" />
        <xs:element name="cmt" type="xs:anyType" />
        <xs:element name="interceptors" type="ejb3interceptordesc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="businessmethods" type="ejb3businessmethoddesc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="aroundinvokemethods" type="xs:anyType" />
        <xs:element name="postconstructmethods" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sejbexception" >
      <xs:complexContent>
       <xs:extension base="ejbexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="messagecode" type="xs:string" />
          <xs:element name="args" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityreaderprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityreaderfactory" >
      <xs:sequence>
        <xs:element name="initialized" type="xs:anyType" />
        <xs:element name="providers" type="entityreaderprovider" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityreader" >
      <xs:complexContent>
       <xs:extension base="datareader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="temporaltypeutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectmanager" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingfileautodetector" >
      <xs:complexContent>
       <xs:extension base="abstractresourceautodetector">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceclassautodetector" >
      <xs:complexContent>
       <xs:extension base="abstractclassautodetector">
         <xs:sequence>
          <xs:element name="annotations" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitmanager" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummyentitymanager" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultpersistenceunitprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jndipersistenceunitprovider" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="persistenceunitmanager" nillable="true" minOccurs="0" />
        <xs:element name="jndinames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitcontextimpl" >
      <xs:sequence>
        <xs:element name="entitymanagers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="txscopedentitymanagerproxy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="tm" type="xs:anyType" />
        <xs:element name="emf" type="xs:anyType" />
        <xs:element name="pum" type="persistenceunitmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitmanagerimpl" >
      <xs:sequence>
        <xs:element name="default_persistence_unit_name" type="xs:string" />
        <xs:element name="persistence_unit_name_suffix" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="usecontext" type="xs:anyType" />
        <xs:element name="defaultpersistenceunitname" type="xs:string" />
        <xs:element name="persistenceunitnamesuffix" type="xs:string" />
        <xs:element name="container" type="xs:anyType" />
        <xs:element name="providers" type="persistenceunitprovider" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectmanagerimpl" >
      <xs:sequence>
        <xs:element name="dialects" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummyentitymanagerdialect" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialectmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerproviderimpl" >
      <xs:sequence>
        <xs:element name="default_entity_manager_name" type="xs:string" />
        <xs:element name="container" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="entitymanagerbasename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectableentitymanagerproxy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="entitymanagerprovider" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitconfigurationimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="persistenceunitmanager" nillable="true" minOccurs="0" />
        <xs:element name="mappingfiles" type="xs:anyType" />
        <xs:element name="persistenceclasses" type="xs:anyType" />
        <xs:element name="mappingfileautodetectors" type="xs:anyType" />
        <xs:element name="persistenceclassautodetectors" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectnotfoundexception" >
      <xs:complexContent>
       <xs:extension base="sruntimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydescprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributedesc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydesc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydescfactory" >
      <xs:sequence>
        <xs:element name="initialized" type="xs:anyType" />
        <xs:element name="providers" type="entitydescprovider" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="entitydescs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tostring" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trace" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sync" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpletrace" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tracethrows" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lifecycleadapter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hotawaredelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="removesession" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerpropertyannotationhandler" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentmapfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionsutil" >
      <xs:complexContent>
       <xs:extension base="e>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reflectionutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerbigdecimalconversion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parametername" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcontext" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expression" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expecteddatareader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2" >
      <xs:complexContent>
       <xs:extension base="runner">
         <xs:sequence>
          <xs:element name="s2junit4_config_key" type="xs:string" />
          <xs:element name="s2junit4_config_path" type="xs:string" />
          <xs:element name="configurationcontainer" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="delegate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configfileincluder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="easymocktestcase" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="//instancefields" type="easymocksupport" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2testclassrunner" >
      <xs:complexContent>
       <xs:extension base="testclassrunner">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2assert" >
      <xs:complexContent>
       <xs:extension base="assert">
         <xs:sequence>
          <xs:element name="adapter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="warmdeploy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="easymocktype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="txbehaviortype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mock" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="prerequisite" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="easymock" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="txbehavior" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mocks" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2testmethodrunner" >
      <xs:complexContent>
       <xs:extension base="exception">
         <xs:sequence>
          <xs:element name="s2junit4_path" type="xs:string" />
          <xs:element name="env_path" type="xs:string" />
          <xs:element name="env_value" type="xs:string" />
          <xs:element name="test" type="xs:anyType" />
          <xs:element name="testclass" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="notifier" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="introspector" type="s2testintrospector" nillable="true" minOccurs="0" />
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="testcontext" type="internaltestcontext" nillable="true" minOccurs="0" />
          <xs:element name="boundfields" type="xs:anyType" />
          <xs:element name="" type="easymocksupport" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="easymocksupport" >
      <xs:sequence>
        <xs:element name="//instancefieldsmocks" type="xs:anyType" />
        <xs:element name="boundfields" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configfileincluderimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="configfiles" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dataaccessorimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="testcontext" nillable="true" minOccurs="0" />
        <xs:element name="tm" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="em" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="dbmetadata" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationtestintrospector" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="beforeclassannotation" type="xs:anyType" />
          <xs:element name="afterclassannotation" type="xs:anyType" />
          <xs:element name="beforeannotation" type="xs:anyType" />
          <xs:element name="afterannotation" type="xs:anyType" />
          <xs:element name="enableignore" type="xs:anyType" />
          <xs:element name="enableprerequisite" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="internaltestcontextimpl" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
          <xs:element name="handler" type="tigerannotationhandler" nillable="true" minOccurs="0" />
          <xs:element name="mockinterceptors" type="xs:anyType" />
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="servletcontext" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="servletconfig" type="xs:anyType" />
          <xs:element name="request" type="xs:anyType" />
          <xs:element name="response" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="testclass" type="xs:anyType" />
          <xs:element name="test" type="xs:anyType" />
          <xs:element name="autoincluding" type="xs:anyType" />
          <xs:element name="autopreparing" type="xs:anyType" />
          <xs:element name="containerinitialized" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conventiontestintrospector" >
      <xs:complexContent>
       <xs:extension base="annotationtestintrospector">
         <xs:sequence>
          <xs:element name="nontestannotations" type="xs:anyType" />
          <xs:element name="nontestmethodnamepatterns" type="xs:anyType" />
          <xs:element name="beforeclassmethodname" type="xs:string" />
          <xs:element name="afterclassmethodname" type="xs:string" />
          <xs:element name="beforemethodname" type="xs:string" />
          <xs:element name="aftermethodname" type="xs:string" />
          <xs:element name="recordmethodname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatapreparerimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="testdataxlspaths" type="xs:anyType" />
        <xs:element name="GeneratedName" type="dataaccessor" nillable="true" minOccurs="0" />
        <xs:element name="replacedb" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expecteddatareaderimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="expecteddataxlspaths" type="xs:anyType" />
        <xs:element name="GeneratedName" type="dataaccessor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ognlexpression" >
      <xs:sequence>
        <xs:element name="source" type="xs:string" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2testintrospector" >
      <xs:complexContent>
       <xs:extension base="throwable>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2tigertestcase" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="//instancefields" type="easymocksupport" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s2testclassmethodsrunner" >
      <xs:complexContent>
       <xs:extension base="runner">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="testmethods" type="xs:anyType" />
          <xs:element name="testclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dataaccessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2parameterized" >
      <xs:complexContent>
       <xs:extension base="s2testclassrunner">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="internaltestcontext" >
      <xs:complexContent>
       <xs:extension base="testcontext">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatapreparer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge" >
      <xs:sequence>
        <xs:element name="foo" type="xs:long" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="baz" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="deptno" type="xs:long" />
        <xs:element name="dname" type="xs:string" />
        <xs:element name="loc" type="xs:string" />
        <xs:element name="versionno" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="empno" type="xs:long" />
        <xs:element name="ename" type="xs:string" />
        <xs:element name="job" type="xs:string" />
        <xs:element name="mgr" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="hiredate" type="xs:anyType" />
        <xs:element name="sal" type="xs:double" />
        <xs:element name="comm" type="xs:double" />
        <xs:element name="deptno" type="xs:anyType" />
        <xs:element name="password" type="xs:anyType" />
        <xs:element name="dummy" type="xs:string" />
        <xs:element name="GeneratedName" type="department" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="empdto" >
      <xs:sequence>
        <xs:element name="ename" type="xs:string" />
        <xs:element name="job" type="xs:string" />
        <xs:element name="dname" type="xs:string" />
        <xs:element name="mname" type="xs:string" />
        <xs:element name="sal" type="xs:string" />
        <xs:element name="comm" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dxotigerutiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
        <xs:element name="ordinal" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:sequence>
        <xs:element name="ordinal" type="color" nillable="true" minOccurs="0" />
        <xs:element name="name" type="color" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beantomapdxocommandbuildertigertest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
          <xs:element name="builder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beantobeandxocommandbuildertigertest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
          <xs:element name="builder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="color" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dxointerceptortigertest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tigerannotationreadertest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
          <xs:element name="factory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hogehoge" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:anyType" />
        <xs:element name="baz" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beantobeandxocommandtigertest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
          <xs:element name="builder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beantomapdxocommandtigertest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
          <xs:element name="builder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeedto" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="departmentname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymetanotfoundruntimeexceptiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymetatest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="" type="entitymeta" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="employeename" type="xs:string" />
        <xs:element name="salary" type="xs:anyType" />
        <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="assistants" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="department" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="departmentid" type="xs:long" />
        <xs:element name="departmentname" type="xs:string" />
        <xs:element name="departmentversion" type="xs:anyType" />
        <xs:element name="departmentinserted" type="xs:anyType" />
        <xs:element name="departmentupdated" type="xs:anyType" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymetacachetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymetafactoryimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="foo" type="xs:string" />
          <xs:element name="aaa" type="xs:string" />
          <xs:element name="factory" type="entitymetafactoryimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablemetafactoryimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="factory" type="tablemetafactoryimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnmetafactoryimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="factory" type="columnmetafactoryimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymetafactoryimpltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="factory" type="propertymetafactoryimpl" nillable="true" minOccurs="0" />
          <xs:element name="transientaaa" type="xs:string" />
          <xs:element name="bbb" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymetatest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="" type="propertymeta" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoge13" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptor2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge5" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge18" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge17" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge9" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge14" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge11a" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge19derived" >
      <xs:complexContent>
       <xs:extension base="hoge19base">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoge8" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge15" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge12" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge19" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge7" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge16" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge13" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge18" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge19base" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge17" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge11b" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge10" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptor1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationhandlerfactorytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoge21" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge6" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmls2containerbuilderxincludetest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoge14" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge2" >
      <xs:sequence>
        <xs:element name="fff" type="xs:string" />
        <xs:element name="ggg" type="xs:string" />
        <xs:element name="hhh" type="xs:string" />
        <xs:element name="lll" type="xs:string" />
        <xs:element name="mmm" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge11" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="em1" type="xs:anyType" />
        <xs:element name="em2" type="xs:anyType" />
        <xs:element name="em3" type="xs:anyType" />
        <xs:element name="em4" type="xs:anyType" />
        <xs:element name="em5" type="xs:anyType" />
        <xs:element name="em6" type="xs:anyType" />
        <xs:element name="emf1" type="xs:anyType" />
        <xs:element name="emf2" type="xs:anyType" />
        <xs:element name="emf3" type="xs:anyType" />
        <xs:element name="emf4" type="xs:anyType" />
        <xs:element name="emf5" type="xs:anyType" />
        <xs:element name="emf6" type="xs:anyType" />
        <xs:element name="ds1" type="xs:anyType" />
        <xs:element name="ds2" type="xs:anyType" />
        <xs:element name="ds3" type="xs:anyType" />
        <xs:element name="ds4" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge20" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge7" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge15" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge3" >
      <xs:sequence>
        <xs:element name="component" type="xs:string" />
        <xs:element name="aspect" type="xs:string" />
        <xs:element name="inter_type" type="xs:string" />
        <xs:element name="aaa_binding" type="xs:string" />
        <xs:element name="bbb_binding" type="xs:string" />
        <xs:element name="init_method" type="xs:string" />
        <xs:element name="destroy_method" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge" >
      <xs:sequence>
        <xs:element name="bbb" type="xs:string" />
        <xs:element name="ccc" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge12" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ihoge16" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationhandlertest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="handler" type="tigerannotationhandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singletons2containertest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removesessiontest" >
      <xs:complexContent>
       <xs:extension base="s2frameworktestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="returnvalueinterceptor" >
      <xs:sequence>
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tracethrowstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tracetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="returnvalue" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="returnvaluetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="synctest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tostringtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aopproxytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tigerpropertyannotationhandlertest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="path" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tigerpropertyannotationhandlertarget2" >
      <xs:sequence>
        <xs:element name="defaultfield" type="xs:long" />
        <xs:element name="readfield" type="xs:long" />
        <xs:element name="writefield" type="xs:long" />
        <xs:element name="readwritefield" type="xs:long" />
        <xs:element name="nonefield" type="xs:long" />
        <xs:element name="hasgetter" type="xs:long" />
        <xs:element name="hassetter" type="xs:long" />
        <xs:element name="hasgettersetter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerpropertyannotationhandlertarget" >
      <xs:sequence>
        <xs:element name="readfield_" type="xs:long" />
        <xs:element name="writefield_" type="xs:long" />
        <xs:element name="readwritefield_" type="xs:long" />
        <xs:element name="nonefield_" type="xs:long" />
        <xs:element name="field_" type="xs:long" />
        <xs:element name="field_" type="xs:long" />
        <xs:element name="field_" type="xs:long" />
        <xs:element name="nonannotatedfield_" type="xs:long" />
        <xs:element name="field_" type="xs:anyType" />
        <xs:element name="arrayfield_" type="xs:string" />
        <xs:element name="arrayfield_" type="xs:long" />
        <xs:element name="test" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodutiltigertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tigerbigdecimalconversiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericutiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationutiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reflectionutiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigermaputiltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstejb3txinterceptortest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aroundinvokesupportinterceptortest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitydescfactorytest" >
      <xs:complexContent>
       <xs:extension base="easymocktestcase">
         <xs:sequence>
          <xs:element name="1" type="entitydesc" nillable="true" minOccurs="0" />
          <xs:element name="2" type="entitydesc" nillable="true" minOccurs="0" />
          <xs:element name="provider1" type="entitydescprovider" nillable="true" minOccurs="0" />
          <xs:element name="provider2" type="entitydescprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityreaderfactorytest" >
      <xs:complexContent>
       <xs:extension base="easymocktestcase">
         <xs:sequence>
          <xs:element name="reader1" type="entityreader" nillable="true" minOccurs="0" />
          <xs:element name="reader2" type="entityreader" nillable="true" minOccurs="0" />
          <xs:element name="provider1" type="entityreaderprovider" nillable="true" minOccurs="0" />
          <xs:element name="provider2" type="entityreaderprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitconfigurationimpltest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
          <xs:element name="cfg" type="persistenceunitconfigurationimpl" nillable="true" minOccurs="0" />
          <xs:element name="unitmanager" type="persistenceunitmanager" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="resourcedetector" type="xs:anyType" />
          <xs:element name="classdetector" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectableentitymanagerproxytest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="entitymanagerprovider" nillable="true" minOccurs="0" />
          <xs:element name="proxy" type="selectableentitymanagerproxy" nillable="true" minOccurs="0" />
          <xs:element name="foo" type="xs:anyType" />
          <xs:element name="bar" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitmanagerimpltest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
          <xs:element name="pum" type="persistenceunitmanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceclassautodetectortest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="detector" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappingfileautodetectortest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="detector" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ihoge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge2" >
      <xs:sequence>
        <xs:element name="foo" type="ifoo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ibar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ifoo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2tigertestcasetest" >
      <xs:complexContent>
       <xs:extension base="s2tigertestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="map" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="seasar2test" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:string" />
          <xs:element name="count" type="xs:long" />
          <xs:element name="txactive" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationtestintrospectortest" >
      <xs:complexContent>
       <xs:extension base="easymocktestcase">
         <xs:sequence>
          <xs:element name="introspector" type="annotationtestintrospector" nillable="true" minOccurs="0" />
          <xs:element name="context" type="internaltestcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conventiontestintrospectortest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="introspector" type="conventiontestintrospector" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="internaltestcontextimpltest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="testctx" type="internaltestcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expecteddatareaderimpltest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="reader" type="expecteddatareader" nillable="true" minOccurs="0" />
          <xs:element name="" type="testcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ognlexpressiontest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatapreparerimpltest" >
      <xs:complexContent>
       <xs:extension base="s2testcase">
         <xs:sequence>
          <xs:element name="" type="testdatapreparer" nillable="true" minOccurs="0" />
          <xs:element name="" type="testcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoge" >
      <xs:sequence>
        <xs:element name="foo" type="ifoo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="easymocktestcasetest" >
      <xs:complexContent>
       <xs:extension base="easymocktestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="map" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fooorm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2junit4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="server" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hogeorm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="barorm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="barorm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hogeorm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitmanagerimpltest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingfileautodetectortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceclassautodetectortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test$mocktest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test.seasar2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s2tigertestcasetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test$nonautoincludingtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expecteddatareaderimpltest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcontextimpltest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdatapreparerimpltest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conventiontestintrospectortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcontextimpltest2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test$autoincludingtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test.s2testclassmethodsrunner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test.s2testintrospector2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seasar2test.s2testintrospector" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationhandlertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmls2containerbuilderxincludetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmls2containerbuilderxincludetest_included" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerpropertyannotationhandlertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="removesessiontest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tigerannotationreadertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dxointerceptortigertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="empno" type="xs:long" />
        <xs:element name="ename" type="xs:string" />
        <xs:element name="deptno" type="xs:long" />
        <xs:element name="dname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listtest" >
      <xs:sequence>
        <xs:element name="fempty" type="xs:anyType" />
        <xs:element name="ffull" type="xs:anyType" />
        <xs:element name="fgheavy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeedaoimpl" >
      <xs:sequence>
        <xs:element name="getemployeehandler" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeedaoimpltest" >
      <xs:sequence>
        <xs:element name="ctx" type="testcontext" nillable="true" minOccurs="0" />
        <xs:element name="dao" type="employeedao" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeedao" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="greeting" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="greetingclientimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="greeting" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="greetingimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="greetingmain" >
      <xs:sequence>
        <xs:element name="path" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="greetingclient" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jndi" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="greetingmain" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 