ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Class>> Tag =>=>=> RelationalSchema.Table>> tag;
ClassDiagram.Class>> Outcomes =>=>=> RelationalSchema.Table>> outcomes;
ClassDiagram.Class>> Ships =>=>=> RelationalSchema.Table>> ships;
ClassDiagram.Class>> Classes =>=>=> RelationalSchema.Table>> classes;
ClassDiagram.Class>> Battles =>=>=> RelationalSchema.Table>> battles;
ClassDiagram.Attribut>> Post.id:Long =>=>=> RelationalSchema.Column>> post.id PRIMARY KEY;
ClassDiagram.Attribut>> Post.title:String =>=>=> RelationalSchema.Column>> post.title;
ClassDiagram.Attribut>> Post.description:String =>=>=> RelationalSchema.Column>> post.description;
ClassDiagram.Attribut>> Post.content:String =>=>=> RelationalSchema.Column>> post.content;
ClassDiagram.Attribut>> Post.postedat:Date =>=>=> RelationalSchema.Column>> post.postedat;
ClassDiagram.Attribut>> Post.lastupdat:Date =>=>=> RelationalSchema.Column>> post.lastupdat;
ClassDiagram.Attribut>> Tag.id:Long =>=>=> RelationalSchema.Column>> tag.id PRIMARY KEY;
ClassDiagram.Attribut>> Tag.name:String =>=>=> RelationalSchema.Column>> tag.name;
ClassDiagram.Attribut>> Outcomes.ship:String =>=>=> RelationalSchema.Column>> outcomes.ship PRIMARY KEY;
ClassDiagram.Attribut>> Outcomes.battle:String =>=>=> RelationalSchema.Column>> outcomes.battle;
ClassDiagram.Attribut>> Outcomes.result:String =>=>=> RelationalSchema.Column>> outcomes.result;
ClassDiagram.Attribut>> Ships.name:String =>=>=> RelationalSchema.Column>> ships.name PRIMARY KEY;
ClassDiagram.Attribut>> Ships.launched:String =>=>=> RelationalSchema.Column>> ships.launched;
ClassDiagram.Attribut>> Classes.classes:String =>=>=> RelationalSchema.Column>> classes.classes PRIMARY KEY;
ClassDiagram.Attribut>> Classes.type:Rating =>=>=> RelationalSchema.Column>> classes.type;
ClassDiagram.Attribut>> Classes.GeneratedName:Priority =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Classes.priorityvalue:int =>=>=> RelationalSchema.Column>> classes.priorityvalue;
ClassDiagram.Attribut>> Classes.country:String =>=>=> RelationalSchema.Column>> classes.country;
ClassDiagram.Attribut>> Classes.numguns:int =>=>=> RelationalSchema.Column>> classes.numguns;
ClassDiagram.Attribut>> Classes.bore:int =>=>=> RelationalSchema.Column>> classes.bore;
ClassDiagram.Attribut>> Classes.desplacement:int =>=>=> RelationalSchema.Column>> classes.desplacement;
ClassDiagram.Attribut>> Classes.//этополесохранитсякакvarchar:Category =>=>=> RelationalSchema.Column>> classes.//этополесохранитсякакvarchar;
ClassDiagram.Attribut>> Battles.name:String =>=>=> RelationalSchema.Column>> battles.name PRIMARY KEY;
ClassDiagram.Attribut>> Battles.GeneratedName:Date =>=>=> RelationalSchema.Column>> battles.GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Post  and ClassDiagram.Class>>Tag: post_tags(post_id:Post [PK] #FK to Post,tag_id:Tag [PK] #FK to Tag);
Many-To-One relationship from ClassDiagram.Class>>Outcomes  to ClassDiagram.Class>>battles represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Ships  to ClassDiagram.Class>>classes represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Battles  to ClassDiagram.Class>>Set<Outcomes>;
