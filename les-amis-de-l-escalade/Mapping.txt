ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> ReservationInquiry =>=>=> RelationalSchema.Table>> reservationinquiry;
ClassDiagram.Class>> Sector =>=>=> RelationalSchema.Table>> sector;
ClassDiagram.Class>> Spot =>=>=> RelationalSchema.Table>> spot;
ClassDiagram.Class>> Topo =>=>=> RelationalSchema.Table>> topo;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Path =>=>=> RelationalSchema.Table>> path;
ClassDiagram.Class>> Lenght =>=>=> RelationalSchema.Table>> lenght;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Comment =>=>=> RelationalSchema.Table>> comment;
ClassDiagram.Attribut>> Address.idaddress:Integer =>=>=> RelationalSchema.Column>> address.idaddress PRIMARY KEY;
ClassDiagram.Attribut>> Address.streetnumber:String =>=>=> RelationalSchema.Column>> address.streetnumber;
ClassDiagram.Attribut>> Address.streetname:String =>=>=> RelationalSchema.Column>> address.streetname;
ClassDiagram.Attribut>> Address.postcode:String =>=>=> RelationalSchema.Column>> address.postcode;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.region:String =>=>=> RelationalSchema.Column>> address.region;
ClassDiagram.Attribut>> Address.country:String =>=>=> RelationalSchema.Column>> address.country;
ClassDiagram.Attribut>> ReservationInquiry.idinquiry:Long =>=>=> RelationalSchema.Column>> reservationinquiry.idinquiry PRIMARY KEY;
ClassDiagram.Attribut>> ReservationInquiry.statut:String =>=>=> RelationalSchema.Column>> reservationinquiry.statut;
ClassDiagram.Attribut>> ReservationInquiry.message:String =>=>=> RelationalSchema.Column>> reservationinquiry.message;
ClassDiagram.Attribut>> ReservationInquiry.lend:Date =>=>=> RelationalSchema.Column>> reservationinquiry.lend;
ClassDiagram.Attribut>> Sector.idsector:Long =>=>=> RelationalSchema.Column>> sector.idsector PRIMARY KEY;
ClassDiagram.Attribut>> Sector.name:String =>=>=> RelationalSchema.Column>> sector.name;
ClassDiagram.Attribut>> Sector.numberofpath:Integer =>=>=> RelationalSchema.Column>> sector.numberofpath;
ClassDiagram.Attribut>> Spot.idspot:Integer =>=>=> RelationalSchema.Column>> spot.idspot PRIMARY KEY;
ClassDiagram.Attribut>> Spot.name:String =>=>=> RelationalSchema.Column>> spot.name;
ClassDiagram.Attribut>> Spot.numberofpath:Integer =>=>=> RelationalSchema.Column>> spot.numberofpath;
ClassDiagram.Attribut>> Spot.difficultlevel:String =>=>=> RelationalSchema.Column>> spot.difficultlevel;
ClassDiagram.Attribut>> Spot.tag:Boolean =>=>=> RelationalSchema.Column>> spot.tag;
ClassDiagram.Attribut>> Topo.idtopo:Integer =>=>=> RelationalSchema.Column>> topo.idtopo PRIMARY KEY;
ClassDiagram.Attribut>> Topo.name:String =>=>=> RelationalSchema.Column>> topo.name;
ClassDiagram.Attribut>> Topo.available:Boolean =>=>=> RelationalSchema.Column>> topo.available;
ClassDiagram.Attribut>> Topo.description:String =>=>=> RelationalSchema.Column>> topo.description;
ClassDiagram.Attribut>> Topo.location:String =>=>=> RelationalSchema.Column>> topo.location;
ClassDiagram.Attribut>> Topo.publication:Date =>=>=> RelationalSchema.Column>> topo.publication;
ClassDiagram.Attribut>> User.iduser:Integer =>=>=> RelationalSchema.Column>> user.iduser PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.login:String =>=>=> RelationalSchema.Column>> user.login;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> Path.idpath:Long =>=>=> RelationalSchema.Column>> path.idpath PRIMARY KEY;
ClassDiagram.Attribut>> Path.name:String =>=>=> RelationalSchema.Column>> path.name;
ClassDiagram.Attribut>> Path.height:Float =>=>=> RelationalSchema.Column>> path.height;
ClassDiagram.Attribut>> Path.cotation:String =>=>=> RelationalSchema.Column>> path.cotation;
ClassDiagram.Attribut>> Path.pointnumber:Integer =>=>=> RelationalSchema.Column>> path.pointnumber;
ClassDiagram.Attribut>> Path.numberoflengh:Integer =>=>=> RelationalSchema.Column>> path.numberoflengh;
ClassDiagram.Attribut>> Lenght.idlenght:Long =>=>=> RelationalSchema.Column>> lenght.idlenght PRIMARY KEY;
ClassDiagram.Attribut>> Lenght.name:String =>=>=> RelationalSchema.Column>> lenght.name;
ClassDiagram.Attribut>> Lenght.height:float =>=>=> RelationalSchema.Column>> lenght.height;
ClassDiagram.Attribut>> Lenght.cotation:String =>=>=> RelationalSchema.Column>> lenght.cotation;
ClassDiagram.Attribut>> Role.code:Integer =>=>=> RelationalSchema.Column>> role.code PRIMARY KEY;
ClassDiagram.Attribut>> Role.label:String =>=>=> RelationalSchema.Column>> role.label;
ClassDiagram.Attribut>> Comment.idcomment:Long =>=>=> RelationalSchema.Column>> comment.idcomment PRIMARY KEY;
ClassDiagram.Attribut>> Comment.comment:String =>=>=> RelationalSchema.Column>> comment.comment;
ClassDiagram.Attribut>> Comment.publication:Date =>=>=> RelationalSchema.Column>> comment.publication;
Many-To-One relationship from ClassDiagram.Class>>ReservationInquiry  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ReservationInquiry  to ClassDiagram.Class>>Topo represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Sector  to ClassDiagram.Class>>List<Path>;
Many-To-One relationship from ClassDiagram.Class>>Sector  to ClassDiagram.Class>>Spot represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Spot  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Spot  to ClassDiagram.Class>>List<Sector>;
One-To-Many relationship from ClassDiagram.Class>>Spot  to ClassDiagram.Class>>List<Comment>;
One-To-Many relationship from ClassDiagram.Class>>Topo  to ClassDiagram.Class>>List<ReservationInquiry>;
Many-To-One relationship from ClassDiagram.Class>>Topo  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Role represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Topo>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<ReservationInquiry>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Comment>;
One-To-Many relationship from ClassDiagram.Class>>Path  to ClassDiagram.Class>>List<Lenght>;
Many-To-One relationship from ClassDiagram.Class>>Path  to ClassDiagram.Class>>Sector represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Lenght  to ClassDiagram.Class>>Path represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Role  to ClassDiagram.Class>>List<User>;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>Spot represented by ClassDiagram.Atrribute>>GeneratedName;
