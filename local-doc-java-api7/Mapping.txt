ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Administrator =>=>=> RelationalSchema.Table>> administrator;
ClassDiagram.Class>> StatusEntry =>=>=> RelationalSchema.Table>> statusentry;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> TutoringSession =>=>=> RelationalSchema.Table>> tutoringsession;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> PersonDetails =>=>=> RelationalSchema.Table>> persondetails;
ClassDiagram.Class>> Guardian =>=>=> RelationalSchema.Table>> guardian;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.middlename:String =>=>=> RelationalSchema.Column>> person.middlename;
ClassDiagram.Attribut>> Person.nickname:String =>=>=> RelationalSchema.Column>> person.nickname;
ClassDiagram.Attribut>> Person.suffix:String =>=>=> RelationalSchema.Column>> person.suffix;
ClassDiagram.Attribut>> Person.email:String =>=>=> RelationalSchema.Column>> person.email;
ClassDiagram.Attribut>> Person.homephone:String =>=>=> RelationalSchema.Column>> person.homephone;
ClassDiagram.Attribut>> Person.mobilephone:String =>=>=> RelationalSchema.Column>> person.mobilephone;
ClassDiagram.Attribut>> Person.password:String =>=>=> RelationalSchema.Column>> person.password;
ClassDiagram.Attribut>> Administrator.serialversionuid:long =>=>=> RelationalSchema.Column>> administrator.serialversionuid;
ClassDiagram.Attribut>> StatusEntry.serialversionuid:long =>=>=> RelationalSchema.Column>> statusentry.serialversionuid;
ClassDiagram.Attribut>> StatusEntry.id:Long =>=>=> RelationalSchema.Column>> statusentry.id PRIMARY KEY;
ClassDiagram.Attribut>> StatusEntry.currentstatus:StatusType =>=>=> RelationalSchema.Column>> statusentry.currentstatus;
ClassDiagram.Attribut>> StatusEntry.statusdate:Calendar =>=>=> RelationalSchema.Column>> statusentry.statusdate;
ClassDiagram.Attribut>> Address.serialversionuid:long =>=>=> RelationalSchema.Column>> address.serialversionuid;
ClassDiagram.Attribut>> Address.id:Long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.street1:String =>=>=> RelationalSchema.Column>> address.street1;
ClassDiagram.Attribut>> Address.street2:String =>=>=> RelationalSchema.Column>> address.street2;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.province:String =>=>=> RelationalSchema.Column>> address.province;
ClassDiagram.Attribut>> Address.country:String =>=>=> RelationalSchema.Column>> address.country;
ClassDiagram.Attribut>> Address.postalcode:String =>=>=> RelationalSchema.Column>> address.postalcode;
ClassDiagram.Attribut>> Address.isprimary:boolean =>=>=> RelationalSchema.Column>> address.isprimary;
ClassDiagram.Attribut>> Address.active:boolean =>=>=> RelationalSchema.Column>> address.active;
ClassDiagram.Attribut>> TutoringSession.serialversionuid:long =>=>=> RelationalSchema.Column>> tutoringsession.serialversionuid;
ClassDiagram.Attribut>> TutoringSession.id:Long =>=>=> RelationalSchema.Column>> tutoringsession.id PRIMARY KEY;
ClassDiagram.Attribut>> TutoringSession.sessiondate:Calendar =>=>=> RelationalSchema.Column>> tutoringsession.sessiondate;
ClassDiagram.Attribut>> Student.serialversionuid:long =>=>=> RelationalSchema.Column>> student.serialversionuid;
ClassDiagram.Attribut>> Student.school:String =>=>=> RelationalSchema.Column>> student.school;
ClassDiagram.Attribut>> Student.grade:int =>=>=> RelationalSchema.Column>> student.grade;
ClassDiagram.Attribut>> Student.status:StatusType =>=>=> RelationalSchema.Column>> student.status;
ClassDiagram.Attribut>> Student.active:boolean =>=>=> RelationalSchema.Column>> student.active;
ClassDiagram.Attribut>> PersonDetails.serialversionuid:long =>=>=> RelationalSchema.Column>> persondetails.serialversionuid;
ClassDiagram.Attribut>> PersonDetails.id:Long =>=>=> RelationalSchema.Column>> persondetails.id PRIMARY KEY;
ClassDiagram.Attribut>> PersonDetails.photo:byte =>=>=> RelationalSchema.Column>> persondetails.photo;
ClassDiagram.Attribut>> PersonDetails.birthday:Date =>=>=> RelationalSchema.Column>> persondetails.birthday;
ClassDiagram.Attribut>> Guardian.serialversionuid:long =>=>=> RelationalSchema.Column>> guardian.serialversionuid;
ClassDiagram.Attribut>> Guardian.active:boolean =>=>=> RelationalSchema.Column>> guardian.active;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>List<Address>;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>details;
Many-To-One relationship from ClassDiagram.Class>>StatusEntry  to ClassDiagram.Class>>Student represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>StatusEntry  to ClassDiagram.Class>>TutoringSession represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>GeneratedName;
Student: tutoringsession_Student(tutoringsessionID:tutoringsession [PK] #FK to tutoringsession,StudentID:Student [PK] #FK to Student);
One-To-Many relationship from ClassDiagram.Class>>TutoringSession  to ClassDiagram.Class>>List<StatusEntry>;
Guardian: student_Guardian(studentID:student [PK] #FK to student,GuardianID:Guardian [PK] #FK to Guardian);
One-To-Many relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>List<StatusEntry>;
One-To-One relationship between ClassDiagram.Class>>PersonDetails  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>GeneratedName;
