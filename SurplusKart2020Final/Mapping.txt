ClassDiagram.Class>> StatutoryInfo =>=>=> RelationalSchema.Table>> statutoryinfo;
ClassDiagram.Class>> Task =>=>=> RelationalSchema.Table>> task;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Parcel =>=>=> RelationalSchema.Table>> parcel;
ClassDiagram.Class>> Authorities =>=>=> RelationalSchema.Table>> authorities;
ClassDiagram.Class>> ImageModel =>=>=> RelationalSchema.Table>> imagemodel;
ClassDiagram.Class>> Negotiate =>=>=> RelationalSchema.Table>> negotiate;
ClassDiagram.Class>> sellerDoc =>=>=> RelationalSchema.Table>> sellerdoc;
ClassDiagram.Class>> CartItem =>=>=> RelationalSchema.Table>> cartitem;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Transaction =>=>=> RelationalSchema.Table>> transaction;
ClassDiagram.Class>> ProductRequest =>=>=> RelationalSchema.Table>> productrequest;
ClassDiagram.Attribut>> StatutoryInfo.statutoryinfoid:int =>=>=> RelationalSchema.Column>> statutoryinfo.statutoryinfoid PRIMARY KEY;
ClassDiagram.Attribut>> StatutoryInfo.name:String =>=>=> RelationalSchema.Column>> statutoryinfo.name;
ClassDiagram.Attribut>> StatutoryInfo.pan:String =>=>=> RelationalSchema.Column>> statutoryinfo.pan;
ClassDiagram.Attribut>> StatutoryInfo.tingst:String =>=>=> RelationalSchema.Column>> statutoryinfo.tingst;
ClassDiagram.Attribut>> StatutoryInfo.cin:String =>=>=> RelationalSchema.Column>> statutoryinfo.cin;
ClassDiagram.Attribut>> StatutoryInfo.range:String =>=>=> RelationalSchema.Column>> statutoryinfo.range;
ClassDiagram.Attribut>> StatutoryInfo.division:String =>=>=> RelationalSchema.Column>> statutoryinfo.division;
ClassDiagram.Attribut>> StatutoryInfo.druglicno:String =>=>=> RelationalSchema.Column>> statutoryinfo.druglicno;
ClassDiagram.Attribut>> StatutoryInfo.fssaino:String =>=>=> RelationalSchema.Column>> statutoryinfo.fssaino;
ClassDiagram.Attribut>> StatutoryInfo.premises:String =>=>=> RelationalSchema.Column>> statutoryinfo.premises;
ClassDiagram.Attribut>> StatutoryInfo.employeenos:int =>=>=> RelationalSchema.Column>> statutoryinfo.employeenos;
ClassDiagram.Attribut>> StatutoryInfo.prodmanufactured:String =>=>=> RelationalSchema.Column>> statutoryinfo.prodmanufactured;
ClassDiagram.Attribut>> StatutoryInfo.//@mapsid,whichdefinesthatsecundusidentifierwillbedeterminedby//primusidentifier,//and@joincolumn,specifyingwhichcolumninsecundustablewillbeused//forjoining./*@onetoone	@mapsid	@joincolumn(name:int =>=>=> RelationalSchema.Column>> statutoryinfo.//@mapsid,whichdefinesthatsecundusidentifierwillbedeterminedby//primusidentifier,//and@joincolumn,specifyingwhichcolumninsecundustablewillbeused//forjoining./*@onetoone	@mapsid	@joincolumn(name;
ClassDiagram.Attribut>> Task.id:Long =>=>=> RelationalSchema.Column>> task.id PRIMARY KEY;
ClassDiagram.Attribut>> Task.name:String =>=>=> RelationalSchema.Column>> task.name;
ClassDiagram.Attribut>> Task.duedate:LocalDate =>=>=> RelationalSchema.Column>> task.duedate;
ClassDiagram.Attribut>> Task.completed:Boolean =>=>=> RelationalSchema.Column>> task.completed;
ClassDiagram.Attribut>> Product.prid:int =>=>=> RelationalSchema.Column>> product.prid PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.category:String =>=>=> RelationalSchema.Column>> product.category;
ClassDiagram.Attribut>> Product.identity:String =>=>=> RelationalSchema.Column>> product.identity;
ClassDiagram.Attribut>> Product.state:String =>=>=> RelationalSchema.Column>> product.state;
ClassDiagram.Attribut>> Product.city:String =>=>=> RelationalSchema.Column>> product.city;
ClassDiagram.Attribut>> Product.brand:String =>=>=> RelationalSchema.Column>> product.brand;
ClassDiagram.Attribut>> Product.qtyexpressed:String =>=>=> RelationalSchema.Column>> product.qtyexpressed;
ClassDiagram.Attribut>> Product.sellerid:int =>=>=> RelationalSchema.Column>> product.sellerid;
ClassDiagram.Attribut>> Product.buyerid:int =>=>=> RelationalSchema.Column>> product.buyerid;
ClassDiagram.Attribut>> Product.availablepackets:double =>=>=> RelationalSchema.Column>> product.availablepackets;
ClassDiagram.Attribut>> Product.unitprice:double =>=>=> RelationalSchema.Column>> product.unitprice;
ClassDiagram.Attribut>> Product.packsize:double =>=>=> RelationalSchema.Column>> product.packsize;
ClassDiagram.Attribut>> Product.remainpacket:double =>=>=> RelationalSchema.Column>> product.remainpacket;
ClassDiagram.Attribut>> Product.toblob	*//*@lob//@column(name:Date =>=>=> RelationalSchema.Column>> product.toblob	*//*@lob//@column(name;
ClassDiagram.Attribut>> Product.expire:Date =>=>=> RelationalSchema.Column>> product.expire;
ClassDiagram.Attribut>> Product.//@temporal(javax.persistence.temporaltype.)upon:Date =>=>=> RelationalSchema.Column>> product.//@temporal(javax.persistence.temporaltype.)upon;
ClassDiagram.Attribut>> Product.loadedby:int =>=>=> RelationalSchema.Column>> product.loadedby;
ClassDiagram.Attribut>> Product.approved:boolean =>=>=> RelationalSchema.Column>> product.approved;
ClassDiagram.Attribut>> Product.approvedby:int =>=>=> RelationalSchema.Column>> product.approvedby;
ClassDiagram.Attribut>> Parcel.parcelid:int =>=>=> RelationalSchema.Column>> parcel.parcelid PRIMARY KEY;
ClassDiagram.Attribut>> Parcel.transid:int =>=>=> RelationalSchema.Column>> parcel.transid;
ClassDiagram.Attribut>> Parcel.userid:int =>=>=> RelationalSchema.Column>> parcel.userid;
ClassDiagram.Attribut>> Parcel.//buyer,seller,adminrole:String =>=>=> RelationalSchema.Column>> parcel.//buyer,seller,adminrole;
ClassDiagram.Attribut>> Parcel.docketno:String =>=>=> RelationalSchema.Column>> parcel.docketno;
ClassDiagram.Attribut>> Parcel.status:String =>=>=> RelationalSchema.Column>> parcel.status;
ClassDiagram.Attribut>> Parcel.updt:Date =>=>=> RelationalSchema.Column>> parcel.updt;
ClassDiagram.Attribut>> Authorities.authorityid:int =>=>=> RelationalSchema.Column>> authorities.authorityid PRIMARY KEY;
ClassDiagram.Attribut>> Authorities.role:Enumeration =>=>=> RelationalSchema.Column>> authorities.role;
ClassDiagram.Attribut>> ImageModel.id:Integer =>=>=> RelationalSchema.Column>> imagemodel.id PRIMARY KEY;
ClassDiagram.Attribut>> ImageModel.productid:Integer =>=>=> RelationalSchema.Column>> imagemodel.productid;
ClassDiagram.Attribut>> ImageModel.imagename:String =>=>=> RelationalSchema.Column>> imagemodel.imagename;
ClassDiagram.Attribut>> ImageModel.pictype:String =>=>=> RelationalSchema.Column>> imagemodel.pictype;
ClassDiagram.Attribut>> ImageModel.imagetype:String =>=>=> RelationalSchema.Column>> imagemodel.imagetype;
ClassDiagram.Attribut>> ImageModel.pic:byte =>=>=> RelationalSchema.Column>> imagemodel.pic;
ClassDiagram.Attribut>> Negotiate.negotiateid:int =>=>=> RelationalSchema.Column>> negotiate.negotiateid PRIMARY KEY;
ClassDiagram.Attribut>> Negotiate.productid:int =>=>=> RelationalSchema.Column>> negotiate.productid;
ClassDiagram.Attribut>> Negotiate.userid:int =>=>=> RelationalSchema.Column>> negotiate.userid;
ClassDiagram.Attribut>> Negotiate.buyerorseller:String =>=>=> RelationalSchema.Column>> negotiate.buyerorseller;
ClassDiagram.Attribut>> Negotiate.price:double =>=>=> RelationalSchema.Column>> negotiate.price;
ClassDiagram.Attribut>> Negotiate.quantity:double =>=>=> RelationalSchema.Column>> negotiate.quantity;
ClassDiagram.Attribut>> Negotiate.message:String =>=>=> RelationalSchema.Column>> negotiate.message;
ClassDiagram.Attribut>> Negotiate.status:String =>=>=> RelationalSchema.Column>> negotiate.status;
ClassDiagram.Attribut>> Negotiate.updon:Date =>=>=> RelationalSchema.Column>> negotiate.updon;
ClassDiagram.Attribut>> sellerDoc.documentid:int =>=>=> RelationalSchema.Column>> sellerdoc.documentid PRIMARY KEY;
ClassDiagram.Attribut>> sellerDoc.transid:int =>=>=> RelationalSchema.Column>> sellerdoc.transid;
ClassDiagram.Attribut>> sellerDoc.updon:Date =>=>=> RelationalSchema.Column>> sellerdoc.updon;
ClassDiagram.Attribut>> sellerDoc.invoice:byte =>=>=> RelationalSchema.Column>> sellerdoc.invoice;
ClassDiagram.Attribut>> sellerDoc.lrreceipt:byte =>=>=> RelationalSchema.Column>> sellerdoc.lrreceipt;
ClassDiagram.Attribut>> sellerDoc.performainvoice:byte =>=>=> RelationalSchema.Column>> sellerdoc.performainvoice;
ClassDiagram.Attribut>> sellerDoc.doc1:byte =>=>=> RelationalSchema.Column>> sellerdoc.doc1;
ClassDiagram.Attribut>> sellerDoc.doc2:byte =>=>=> RelationalSchema.Column>> sellerdoc.doc2;
ClassDiagram.Attribut>> CartItem.itemid:int =>=>=> RelationalSchema.Column>> cartitem.itemid PRIMARY KEY;
ClassDiagram.Attribut>> CartItem.buyerid:int =>=>=> RelationalSchema.Column>> cartitem.buyerid;
ClassDiagram.Attribut>> CartItem.name:String =>=>=> RelationalSchema.Column>> cartitem.name;
ClassDiagram.Attribut>> CartItem.prid:int =>=>=> RelationalSchema.Column>> cartitem.prid;
ClassDiagram.Attribut>> CartItem.sellerid:int =>=>=> RelationalSchema.Column>> cartitem.sellerid;
ClassDiagram.Attribut>> CartItem.buypacketqty:int =>=>=> RelationalSchema.Column>> cartitem.buypacketqty;
ClassDiagram.Attribut>> CartItem.estimatedprice:double =>=>=> RelationalSchema.Column>> cartitem.estimatedprice;
ClassDiagram.Attribut>> CartItem.updatedon:LocalDate =>=>=> RelationalSchema.Column>> cartitem.updatedon;
ClassDiagram.Attribut>> CartItem.startdate:LocalDate =>=>=> RelationalSchema.Column>> cartitem.startdate;
ClassDiagram.Attribut>> User.userid:int =>=>=> RelationalSchema.Column>> user.userid PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.role:EnumUserRoles =>=>=> RelationalSchema.Column>> user.role;
ClassDiagram.Attribut>> Transaction.transid:int =>=>=> RelationalSchema.Column>> transaction.transid PRIMARY KEY;
ClassDiagram.Attribut>> Transaction.prid:int =>=>=> RelationalSchema.Column>> transaction.prid;
ClassDiagram.Attribut>> Transaction.sellerid:int =>=>=> RelationalSchema.Column>> transaction.sellerid;
ClassDiagram.Attribut>> Transaction.buyerid:int =>=>=> RelationalSchema.Column>> transaction.buyerid;
ClassDiagram.Attribut>> Transaction.buypacketqty:int =>=>=> RelationalSchema.Column>> transaction.buypacketqty;
ClassDiagram.Attribut>> Transaction.estimatedprice:double =>=>=> RelationalSchema.Column>> transaction.estimatedprice;
ClassDiagram.Attribut>> Transaction.updatedon:LocalDate =>=>=> RelationalSchema.Column>> transaction.updatedon;
ClassDiagram.Attribut>> Transaction.updatedby:String =>=>=> RelationalSchema.Column>> transaction.updatedby;
ClassDiagram.Attribut>> Transaction.startdate:LocalDate =>=>=> RelationalSchema.Column>> transaction.startdate;
ClassDiagram.Attribut>> Transaction.//(columndefinition:LocalDate =>=>=> RelationalSchema.Column>> transaction.//(columndefinition;
ClassDiagram.Attribut>> Transaction.//(columndefinition:LocalDate =>=>=> RelationalSchema.Column>> transaction.//(columndefinition;
ClassDiagram.Attribut>> Transaction.//(columndefinition:LocalDate =>=>=> RelationalSchema.Column>> transaction.//(columndefinition;
ClassDiagram.Attribut>> Transaction.//(columndefinition:LocalDate =>=>=> RelationalSchema.Column>> transaction.//(columndefinition;
ClassDiagram.Attribut>> Transaction.productapprovedbybuyer:boolean =>=>=> RelationalSchema.Column>> transaction.productapprovedbybuyer;
ClassDiagram.Attribut>> Transaction.dtproductapprovedbybuyer:LocalDate =>=>=> RelationalSchema.Column>> transaction.dtproductapprovedbybuyer;
ClassDiagram.Attribut>> Transaction.//(columndefinition:LocalDate =>=>=> RelationalSchema.Column>> transaction.//(columndefinition;
ClassDiagram.Attribut>> Transaction.//(columndefinition:LocalDate =>=>=> RelationalSchema.Column>> transaction.//(columndefinition;
ClassDiagram.Attribut>> Transaction.dttransactioncompleted:LocalDate =>=>=> RelationalSchema.Column>> transaction.dttransactioncompleted;
ClassDiagram.Attribut>> Transaction.transactionstatus:EnumTransactionStatus =>=>=> RelationalSchema.Column>> transaction.transactionstatus;
ClassDiagram.Attribut>> ProductRequest.prid:int =>=>=> RelationalSchema.Column>> productrequest.prid PRIMARY KEY;
ClassDiagram.Attribut>> ProductRequest.name:String =>=>=> RelationalSchema.Column>> productrequest.name;
ClassDiagram.Attribut>> ProductRequest.category:String =>=>=> RelationalSchema.Column>> productrequest.category;
ClassDiagram.Attribut>> ProductRequest.identity:String =>=>=> RelationalSchema.Column>> productrequest.identity;
ClassDiagram.Attribut>> ProductRequest.state:String =>=>=> RelationalSchema.Column>> productrequest.state;
ClassDiagram.Attribut>> ProductRequest.city:String =>=>=> RelationalSchema.Column>> productrequest.city;
ClassDiagram.Attribut>> ProductRequest.brand:String =>=>=> RelationalSchema.Column>> productrequest.brand;
ClassDiagram.Attribut>> ProductRequest.qtyexpressed:String =>=>=> RelationalSchema.Column>> productrequest.qtyexpressed;
ClassDiagram.Attribut>> ProductRequest.sellerid:int =>=>=> RelationalSchema.Column>> productrequest.sellerid;
ClassDiagram.Attribut>> ProductRequest.buyerid:int =>=>=> RelationalSchema.Column>> productrequest.buyerid;
ClassDiagram.Attribut>> ProductRequest.availableqty:double =>=>=> RelationalSchema.Column>> productrequest.availableqty;
ClassDiagram.Attribut>> ProductRequest.unitprice:double =>=>=> RelationalSchema.Column>> productrequest.unitprice;
ClassDiagram.Attribut>> ProductRequest.packsize:double =>=>=> RelationalSchema.Column>> productrequest.packsize;
ClassDiagram.Attribut>> ProductRequest.remainqty:double =>=>=> RelationalSchema.Column>> productrequest.remainqty;
ClassDiagram.Attribut>> ProductRequest.toblob	*///@column(name:byte =>=>=> RelationalSchema.Column>> productrequest.toblob	*///@column(name;
ClassDiagram.Attribut>> ProductRequest.pic2:byte =>=>=> RelationalSchema.Column>> productrequest.pic2;
ClassDiagram.Attribut>> ProductRequest.pic3:byte =>=>=> RelationalSchema.Column>> productrequest.pic3;
ClassDiagram.Attribut>> ProductRequest.coa:byte =>=>=> RelationalSchema.Column>> productrequest.coa;
ClassDiagram.Attribut>> ProductRequest.manufacture:Date =>=>=> RelationalSchema.Column>> productrequest.manufacture;
ClassDiagram.Attribut>> ProductRequest.expire:Date =>=>=> RelationalSchema.Column>> productrequest.expire;
ClassDiagram.Attribut>> ProductRequest.//@temporal(javax.persistence.temporaltype.)upon:Date =>=>=> RelationalSchema.Column>> productrequest.//@temporal(javax.persistence.temporaltype.)upon;
ClassDiagram.Attribut>> ProductRequest.loadedby:int =>=>=> RelationalSchema.Column>> productrequest.loadedby;
ClassDiagram.Attribut>> ProductRequest.approved:boolean =>=>=> RelationalSchema.Column>> productrequest.approved;
ClassDiagram.Attribut>> ProductRequest.approvedby:int =>=>=> RelationalSchema.Column>> productrequest.approvedby;
Many-To-One relationship from ClassDiagram.Class>>Authorities  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>//@javax.persistence.onetoone//@mapsid//@joincolumn(name;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>userdtls represented by ClassDiagram.Atrribute>>//@onetoone(fetch;
