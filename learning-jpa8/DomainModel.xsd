<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="team04" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="members" type="member04" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member04" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="team" type="team04" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member03" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="team03" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="members" type="member03" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member05" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="//일대일관계에서주테이블(member05)에외래키(locker01_id)를사용locker" type="locker05" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locker05" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//양방향설정member" type="member05" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="team01" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member01" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="team" type="team01" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member02" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="team" type="team02" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="team02" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="members" type="member02" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member07" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="products" type="product07" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product07" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="members" type="member07" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member06" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="products" type="product06" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product06" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member09" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="orders" type="order09" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order09" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="member" type="member09" nillable="true" minOccurs="0" />
        <xs:element name="product" type="product09" nillable="true" minOccurs="0" />
        <xs:element name="orderamount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product09" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member08product08" >
      <xs:sequence>
        <xs:element name="//product08id.member와연결member" type="member08" nillable="true" minOccurs="0" />
        <xs:element name="//member08id.product와연결product" type="product08" nillable="true" minOccurs="0" />
        <xs:element name="orderamount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product08" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member08" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="memberproducts" type="member08product08" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
</xs:schema> 