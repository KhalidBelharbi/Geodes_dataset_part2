ClassDiagram.Class>> Team04 =>=>=> RelationalSchema.Table>> team04;
ClassDiagram.Class>> Member04 =>=>=> RelationalSchema.Table>> member04;
ClassDiagram.Class>> Member03 =>=>=> RelationalSchema.Table>> member03;
ClassDiagram.Class>> Team03 =>=>=> RelationalSchema.Table>> team03;
ClassDiagram.Class>> Member05 =>=>=> RelationalSchema.Table>> member05;
ClassDiagram.Class>> Locker05 =>=>=> RelationalSchema.Table>> locker05;
ClassDiagram.Class>> Team01 =>=>=> RelationalSchema.Table>> team01;
ClassDiagram.Class>> Member01 =>=>=> RelationalSchema.Table>> member01;
ClassDiagram.Class>> Member02 =>=>=> RelationalSchema.Table>> member02;
ClassDiagram.Class>> Team02 =>=>=> RelationalSchema.Table>> team02;
ClassDiagram.Class>> Member07 =>=>=> RelationalSchema.Table>> member07;
ClassDiagram.Class>> Product07 =>=>=> RelationalSchema.Table>> product07;
ClassDiagram.Class>> Member06 =>=>=> RelationalSchema.Table>> member06;
ClassDiagram.Class>> Product06 =>=>=> RelationalSchema.Table>> product06;
ClassDiagram.Class>> Member09 =>=>=> RelationalSchema.Table>> member09;
ClassDiagram.Class>> Order09 =>=>=> RelationalSchema.Table>> order09;
ClassDiagram.Class>> Product09 =>=>=> RelationalSchema.Table>> product09;
ClassDiagram.Class>> Member08Product08 =>=>=> RelationalSchema.Table>> member08product08;
ClassDiagram.Class>> Product08 =>=>=> RelationalSchema.Table>> product08;
ClassDiagram.Class>> Member08 =>=>=> RelationalSchema.Table>> member08;
ClassDiagram.Attribut>> Team04.id:Long =>=>=> RelationalSchema.Column>> team04.id PRIMARY KEY;
ClassDiagram.Attribut>> Team04.name:String =>=>=> RelationalSchema.Column>> team04.name;
ClassDiagram.Attribut>> Member04.id:Long =>=>=> RelationalSchema.Column>> member04.id PRIMARY KEY;
ClassDiagram.Attribut>> Member04.username:String =>=>=> RelationalSchema.Column>> member04.username;
ClassDiagram.Attribut>> Member03.id:Long =>=>=> RelationalSchema.Column>> member03.id PRIMARY KEY;
ClassDiagram.Attribut>> Team03.id:Long =>=>=> RelationalSchema.Column>> team03.id PRIMARY KEY;
ClassDiagram.Attribut>> Team03.name:String =>=>=> RelationalSchema.Column>> team03.name;
ClassDiagram.Attribut>> Member05.id:Long =>=>=> RelationalSchema.Column>> member05.id PRIMARY KEY;
ClassDiagram.Attribut>> Member05.username:String =>=>=> RelationalSchema.Column>> member05.username;
ClassDiagram.Attribut>> Locker05.id:Long =>=>=> RelationalSchema.Column>> locker05.id PRIMARY KEY;
ClassDiagram.Attribut>> Locker05.name:String =>=>=> RelationalSchema.Column>> locker05.name;
ClassDiagram.Attribut>> Team01.id:Long =>=>=> RelationalSchema.Column>> team01.id PRIMARY KEY;
ClassDiagram.Attribut>> Team01.name:String =>=>=> RelationalSchema.Column>> team01.name;
ClassDiagram.Attribut>> Member01.id:Long =>=>=> RelationalSchema.Column>> member01.id PRIMARY KEY;
ClassDiagram.Attribut>> Member01.username:String =>=>=> RelationalSchema.Column>> member01.username;
ClassDiagram.Attribut>> Member02.id:Long =>=>=> RelationalSchema.Column>> member02.id PRIMARY KEY;
ClassDiagram.Attribut>> Member02.username:String =>=>=> RelationalSchema.Column>> member02.username;
ClassDiagram.Attribut>> Team02.id:Long =>=>=> RelationalSchema.Column>> team02.id PRIMARY KEY;
ClassDiagram.Attribut>> Team02.name:String =>=>=> RelationalSchema.Column>> team02.name;
ClassDiagram.Attribut>> Member07.id:String =>=>=> RelationalSchema.Column>> member07.id PRIMARY KEY;
ClassDiagram.Attribut>> Member07.username:String =>=>=> RelationalSchema.Column>> member07.username;
ClassDiagram.Attribut>> Product07.id:String =>=>=> RelationalSchema.Column>> product07.id PRIMARY KEY;
ClassDiagram.Attribut>> Product07.name:String =>=>=> RelationalSchema.Column>> product07.name;
ClassDiagram.Attribut>> Member06.id:String =>=>=> RelationalSchema.Column>> member06.id PRIMARY KEY;
ClassDiagram.Attribut>> Member06.username:String =>=>=> RelationalSchema.Column>> member06.username;
ClassDiagram.Attribut>> Product06.id:String =>=>=> RelationalSchema.Column>> product06.id PRIMARY KEY;
ClassDiagram.Attribut>> Product06.name:String =>=>=> RelationalSchema.Column>> product06.name;
ClassDiagram.Attribut>> Member09.id:String =>=>=> RelationalSchema.Column>> member09.id PRIMARY KEY;
ClassDiagram.Attribut>> Member09.username:String =>=>=> RelationalSchema.Column>> member09.username;
ClassDiagram.Attribut>> Order09.id:Long =>=>=> RelationalSchema.Column>> order09.id PRIMARY KEY;
ClassDiagram.Attribut>> Order09.orderamount:int =>=>=> RelationalSchema.Column>> order09.orderamount;
ClassDiagram.Attribut>> Product09.id:String =>=>=> RelationalSchema.Column>> product09.id PRIMARY KEY;
ClassDiagram.Attribut>> Product09.name:String =>=>=> RelationalSchema.Column>> product09.name;
ClassDiagram.Attribut>> Member08Product08.//product08id.member와연결member:Member08 =>=>=> RelationalSchema.Column>> member08product08.//product08id.member와연결member PRIMARY KEY;
ClassDiagram.Attribut>> Member08Product08.//member08id.product와연결product:Product08 =>=>=> RelationalSchema.Column>> member08product08.//member08id.product와연결product PRIMARY KEY;
ClassDiagram.Attribut>> Member08Product08.orderamount:int =>=>=> RelationalSchema.Column>> member08product08.orderamount;
ClassDiagram.Attribut>> Product08.id:String =>=>=> RelationalSchema.Column>> product08.id PRIMARY KEY;
ClassDiagram.Attribut>> Product08.name:String =>=>=> RelationalSchema.Column>> product08.name;
ClassDiagram.Attribut>> Member08.id:String =>=>=> RelationalSchema.Column>> member08.id PRIMARY KEY;
ClassDiagram.Attribut>> Member08.username:String =>=>=> RelationalSchema.Column>> member08.username;
One-To-Many relationship from ClassDiagram.Class>>Team04  to ClassDiagram.Class>>List<Member04>;
Many-To-One relationship from ClassDiagram.Class>>Member04  to ClassDiagram.Class>>Team04 represented by ClassDiagram.Atrribute>>team;
One-To-Many relationship from ClassDiagram.Class>>Team03  to ClassDiagram.Class>>List<Member03>;
One-To-One relationship between ClassDiagram.Class>>Member05  to ClassDiagram.Class>>Locker05 represented by ClassDiagram.Atrribute>>//일대일관계에서주테이블(member05)에외래키(locker01_id)를사용locker;
One-To-One relationship between ClassDiagram.Class>>Locker05  to ClassDiagram.Class>>Member05 represented by ClassDiagram.Atrribute>>//양방향설정member;
Many-To-One relationship from ClassDiagram.Class>>Member01  to ClassDiagram.Class>>T represented by ClassDiagram.Atrribute>>team;
Many-To-One relationship from ClassDiagram.Class>>Member02  to ClassDiagram.Class>>T represented by ClassDiagram.Atrribute>>team;
One-To-Many relationship from ClassDiagram.Class>>Team02  to ClassDiagram.Class>>List<Member02>;
Many-To-Many relationship between ClassDiagram.Class>>Member07  and ClassDiagram.Class>>T: member07_product07(member07_id:Member07 [PK] #FK to Member07,product07_id:T [PK] #FK to T);
Many-To-Many relationship between ClassDiagram.Class>>Member06  and ClassDiagram.Class>>T: member06_product06(member06_id:Member06 [PK] #FK to Member06,product06_id:T [PK] #FK to T);
One-To-Many relationship from ClassDiagram.Class>>Member09  to ClassDiagram.Class>>List<Order09>;
Many-To-One relationship from ClassDiagram.Class>>Order09  to ClassDiagram.Class>>member09 represented by ClassDiagram.Atrribute>>member;
Many-To-One relationship from ClassDiagram.Class>>Order09  to ClassDiagram.Class>>T represented by ClassDiagram.Atrribute>>product;
Many-To-One relationship from ClassDiagram.Class>>Member08Product08  to ClassDiagram.Class>>member08 represented by ClassDiagram.Atrribute>>//product08id.member와연결member;
Many-To-One relationship from ClassDiagram.Class>>Member08Product08  to ClassDiagram.Class>>T represented by ClassDiagram.Atrribute>>//member08id.product와연결product;
One-To-Many relationship from ClassDiagram.Class>>Member08  to ClassDiagram.Class>>List<Member08Product08>;
