ClassDiagram.Class>> CacheableEntity =>=>=> RelationalSchema.Table>> cacheableentity;
ClassDiagram.Class>> Story =>=>=> RelationalSchema.Table>> story;
ClassDiagram.Class>> M21UniDepartment =>=>=> RelationalSchema.Table>> m21unidepartment;
ClassDiagram.Class>> M21UniEmployee =>=>=> RelationalSchema.Table>> m21uniemployee;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> EntityF =>=>=> RelationalSchema.Table>> entityf;
ClassDiagram.Class>> OptSelectEntity =>=>=> RelationalSchema.Table>> optselectentity;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> EntityG =>=>=> RelationalSchema.Table>> entityg;
ClassDiagram.Class>> M2MBiEmployee =>=>=> RelationalSchema.Table>> m2mbiemployee;
ClassDiagram.Class>> M2MBiDepartment =>=>=> RelationalSchema.Table>> m2mbidepartment;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> Task =>=>=> RelationalSchema.Table>> task;
ClassDiagram.Class>> EntityE =>=>=> RelationalSchema.Table>> entitye;
ClassDiagram.Class>> A =>=>=> RelationalSchema.Table>> a;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> EntityD =>=>=> RelationalSchema.Table>> entityd;
ClassDiagram.Class>> TestSnakeCaseDDL =>=>=> RelationalSchema.Table>> testsnakecaseddl;
ClassDiagram.Class>> TestDelimitIdentifiers =>=>=> RelationalSchema.Table>> testdelimitidentifiers;
ClassDiagram.Class>> EntityBool =>=>=> RelationalSchema.Table>> entitybool;
ClassDiagram.Class>> EntityBoolChar =>=>=> RelationalSchema.Table>> entityboolchar;
ClassDiagram.Class>> InputStreamLobEntity =>=>=> RelationalSchema.Table>> inputstreamlobentity;
ClassDiagram.Class>> ReaderLobEntity =>=>=> RelationalSchema.Table>> readerlobentity;
ClassDiagram.Class>> EntityWithStoredProcedure =>=>=> RelationalSchema.Table>> entitywithstoredprocedure;
ClassDiagram.Class>> XmlColEntity =>=>=> RelationalSchema.Table>> xmlcolentity;
ClassDiagram.Class>> Movie =>=>=> RelationalSchema.Table>> movie;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Artist =>=>=> RelationalSchema.Table>> artist;
ClassDiagram.Class>> TestBadVersionField =>=>=> RelationalSchema.Table>> testbadversionfield;
ClassDiagram.Class>> UnenhancedPropertyAccess =>=>=> RelationalSchema.Table>> unenhancedpropertyaccess;
ClassDiagram.Class>> UnenhancedFieldAccess =>=>=> RelationalSchema.Table>> unenhancedfieldaccess;
ClassDiagram.Class>> UnenhancedPObject =>=>=> RelationalSchema.Table>> unenhancedpobject;
ClassDiagram.Class>> UnenhancedFieldAccessPrimitiveWrapper =>=>=> RelationalSchema.Table>> unenhancedfieldaccessprimitivewrapper;
ClassDiagram.Class>> UnenhancedPropertyAccessSubclass =>=>=> RelationalSchema.Table>> unenhancedpropertyaccesssubclass;
ClassDiagram.Class>> UnenhancedMany =>=>=> RelationalSchema.Table>> unenhancedmany;
ClassDiagram.Class>> UnenhancedUnlistedReferer =>=>=> RelationalSchema.Table>> unenhancedunlistedreferer;
ClassDiagram.Class>> UnenhancedFieldAccessPrimitiveWrapperSubclass =>=>=> RelationalSchema.Table>> unenhancedfieldaccessprimitivewrappersubclass;
ClassDiagram.Class>> EnhancedSubClass =>=>=> RelationalSchema.Table>> enhancedsubclass;
ClassDiagram.Class>> UnenhancedBootstrapInstance2 =>=>=> RelationalSchema.Table>> unenhancedbootstrapinstance2;
ClassDiagram.Class>> UnenhancedBootstrapInstance =>=>=> RelationalSchema.Table>> unenhancedbootstrapinstance;
ClassDiagram.Class>> Software =>=>=> RelationalSchema.Table>> software;
ClassDiagram.Class>> Hardware =>=>=> RelationalSchema.Table>> hardware;
ClassDiagram.Class>> Device =>=>=> RelationalSchema.Table>> device;
ClassDiagram.Class>> UnenhancedOne =>=>=> RelationalSchema.Table>> unenhancedone;
ClassDiagram.Class>> UnenhancedCompoundPKFieldAccess =>=>=> RelationalSchema.Table>> unenhancedcompoundpkfieldaccess;
ClassDiagram.Class>> UnenhancedCompoundPKPropertyAccess =>=>=> RelationalSchema.Table>> unenhancedcompoundpkpropertyaccess;
ClassDiagram.Class>> UnenhancedCompoundPKFieldAccessSubclass =>=>=> RelationalSchema.Table>> unenhancedcompoundpkfieldaccesssubclass;
ClassDiagram.Class>> UnenhancedIdentityIdPropertyAccess =>=>=> RelationalSchema.Table>> unenhancedidentityidpropertyaccess;
ClassDiagram.Class>> UnenhancedUnlistedClass =>=>=> RelationalSchema.Table>> unenhancedunlistedclass;
ClassDiagram.Class>> UnenhancedFieldAccessSubclass =>=>=> RelationalSchema.Table>> unenhancedfieldaccesssubclass;
ClassDiagram.Class>> EnhancedSuperClass =>=>=> RelationalSchema.Table>> enhancedsuperclass;
ClassDiagram.Class>> AuditedEntry =>=>=> RelationalSchema.Table>> auditedentry;
ClassDiagram.Class>> X =>=>=> RelationalSchema.Table>> x;
ClassDiagram.Class>> EntityE =>=>=> RelationalSchema.Table>> entitye;
ClassDiagram.Class>> IntegerVersionEntity =>=>=> RelationalSchema.Table>> integerversionentity;
ClassDiagram.Class>> Entity9 =>=>=> RelationalSchema.Table>> entity9;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> Entity5 =>=>=> RelationalSchema.Table>> entity5;
ClassDiagram.Class>> Entity14 =>=>=> RelationalSchema.Table>> entity14;
ClassDiagram.Class>> Entity1 =>=>=> RelationalSchema.Table>> entity1;
ClassDiagram.Class>> Entity10 =>=>=> RelationalSchema.Table>> entity10;
ClassDiagram.Class>> IntVersionEntity =>=>=> RelationalSchema.Table>> intversionentity;
ClassDiagram.Class>> TimestampVersionEntity =>=>=> RelationalSchema.Table>> timestampversionentity;
ClassDiagram.Class>> Entity4 =>=>=> RelationalSchema.Table>> entity4;
ClassDiagram.Class>> Entity11 =>=>=> RelationalSchema.Table>> entity11;
ClassDiagram.Class>> Entity20 =>=>=> RelationalSchema.Table>> entity20;
ClassDiagram.Class>> EntityD =>=>=> RelationalSchema.Table>> entityd;
ClassDiagram.Class>> Entity8 =>=>=> RelationalSchema.Table>> entity8;
ClassDiagram.Class>> NoVersionEntity =>=>=> RelationalSchema.Table>> noversionentity;
ClassDiagram.Class>> Entity6 =>=>=> RelationalSchema.Table>> entity6;
ClassDiagram.Class>> Entity13 =>=>=> RelationalSchema.Table>> entity13;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> Entity7 =>=>=> RelationalSchema.Table>> entity7;
ClassDiagram.Class>> SerializableDetachedStateManager =>=>=> RelationalSchema.Table>> serializabledetachedstatemanager;
ClassDiagram.Class>> Passenger =>=>=> RelationalSchema.Table>> passenger;
ClassDiagram.Class>> Owner =>=>=> RelationalSchema.Table>> owner;
ClassDiagram.Class>> Driver =>=>=> RelationalSchema.Table>> driver;
ClassDiagram.Class>> Entity12 =>=>=> RelationalSchema.Table>> entity12;
ClassDiagram.Class>> Entity3 =>=>=> RelationalSchema.Table>> entity3;
ClassDiagram.Class>> GlobalListenerEntity =>=>=> RelationalSchema.Table>> globallistenerentity;
ClassDiagram.Class>> ListenerInEntity =>=>=> RelationalSchema.Table>> listenerinentity;
ClassDiagram.Class>> DuplicateListenerEntity =>=>=> RelationalSchema.Table>> duplicatelistenerentity;
ClassDiagram.Class>> PostPersistEntity =>=>=> RelationalSchema.Table>> postpersistentity;
ClassDiagram.Class>> PostLoadListenerEntity =>=>=> RelationalSchema.Table>> postloadlistenerentity;
ClassDiagram.Class>> Message =>=>=> RelationalSchema.Table>> message;
ClassDiagram.Class>> MSCListenerEntity =>=>=> RelationalSchema.Table>> msclistenerentity;
ClassDiagram.Class>> ExceptionsFromCallbacksEntity =>=>=> RelationalSchema.Table>> exceptionsfromcallbacksentity;
ClassDiagram.Class>> EntityListenerMappedSuperClass =>=>=> RelationalSchema.Table>> entitylistenermappedsuperclass;
ClassDiagram.Class>> EntityListenerEntity =>=>=> RelationalSchema.Table>> entitylistenerentity;
ClassDiagram.Class>> AddListenerEntity =>=>=> RelationalSchema.Table>> addlistenerentity;
ClassDiagram.Class>> Assignment =>=>=> RelationalSchema.Table>> assignment;
ClassDiagram.Class>> ClassPeriod =>=>=> RelationalSchema.Table>> classperiod;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> SubTopic =>=>=> RelationalSchema.Table>> subtopic;
ClassDiagram.Class>> Topic =>=>=> RelationalSchema.Table>> topic;
ClassDiagram.Class>> Security =>=>=> RelationalSchema.Table>> security;
ClassDiagram.Class>> AccessModsEntity =>=>=> RelationalSchema.Table>> accessmodsentity;
ClassDiagram.Class>> PrivAccessModsEntity =>=>=> RelationalSchema.Table>> privaccessmodsentity;
ClassDiagram.Class>> EntityContact =>=>=> RelationalSchema.Table>> entitycontact;
ClassDiagram.Class>> PessimisticLockEntity =>=>=> RelationalSchema.Table>> pessimisticlockentity;
ClassDiagram.Class>> TestEJBNoPersistentFields =>=>=> RelationalSchema.Table>> testejbnopersistentfields;
ClassDiagram.Class>> ByteArray =>=>=> RelationalSchema.Table>> bytearray;
ClassDiagram.Class>> MapElementPCChild =>=>=> RelationalSchema.Table>> mapelementpcchild;
ClassDiagram.Class>> DependentFieldsPC =>=>=> RelationalSchema.Table>> dependentfieldspc;
ClassDiagram.Class>> DateVersion =>=>=> RelationalSchema.Table>> dateversion;
ClassDiagram.Class>> RecursivelyEmbeddedPC =>=>=> RelationalSchema.Table>> recursivelyembeddedpc;
ClassDiagram.Class>> Entity1 =>=>=> RelationalSchema.Table>> entity1;
ClassDiagram.Class>> SequenceAssigned3 =>=>=> RelationalSchema.Table>> sequenceassigned3;
ClassDiagram.Class>> SingleIdLong =>=>=> RelationalSchema.Table>> singleidlong;
ClassDiagram.Class>> FetchB =>=>=> RelationalSchema.Table>> fetchb;
ClassDiagram.Class>> InstanceCallbacksTest =>=>=> RelationalSchema.Table>> instancecallbackstest;
ClassDiagram.Class>> DetachSMPC =>=>=> RelationalSchema.Table>> detachsmpc;
ClassDiagram.Class>> AppIdSubD =>=>=> RelationalSchema.Table>> appidsubd;
ClassDiagram.Class>> ModInstanceCallbackTests =>=>=> RelationalSchema.Table>> modinstancecallbacktests;
ClassDiagram.Class>> RuntimeTest2 =>=>=> RelationalSchema.Table>> runtimetest2;
ClassDiagram.Class>> ObjectCollectionHolder =>=>=> RelationalSchema.Table>> objectcollectionholder;
ClassDiagram.Class>> AttachC =>=>=> RelationalSchema.Table>> attachc;
ClassDiagram.Class>> PCPerson =>=>=> RelationalSchema.Table>> pcperson;
ClassDiagram.Class>> AppIdClassString =>=>=> RelationalSchema.Table>> appidclassstring;
ClassDiagram.Class>> EmbeddedPC =>=>=> RelationalSchema.Table>> embeddedpc;
ClassDiagram.Class>> AppIdHolder =>=>=> RelationalSchema.Table>> appidholder;
ClassDiagram.Class>> ModRuntimeTest2 =>=>=> RelationalSchema.Table>> modruntimetest2;
ClassDiagram.Class>> AttachVersionB =>=>=> RelationalSchema.Table>> attachversionb;
ClassDiagram.Class>> InterfaceHolder =>=>=> RelationalSchema.Table>> interfaceholder;
ClassDiagram.Class>> AllFieldsTypeTest =>=>=> RelationalSchema.Table>> allfieldstypetest;
ClassDiagram.Class>> SecondaryTab =>=>=> RelationalSchema.Table>> secondarytab;
ClassDiagram.Class>> InterfaceTestImpl4 =>=>=> RelationalSchema.Table>> interfacetestimpl4;
ClassDiagram.Class>> SingleIdString =>=>=> RelationalSchema.Table>> singleidstring;
ClassDiagram.Class>> SequenceAssigned =>=>=> RelationalSchema.Table>> sequenceassigned;
ClassDiagram.Class>> ValueStrategyPC =>=>=> RelationalSchema.Table>> valuestrategypc;
ClassDiagram.Class>> PersistenceAware =>=>=> RelationalSchema.Table>> persistenceaware;
ClassDiagram.Class>> InterfaceTestImpl1 =>=>=> RelationalSchema.Table>> interfacetestimpl1;
ClassDiagram.Class>> AttachVersionC =>=>=> RelationalSchema.Table>> attachversionc;
ClassDiagram.Class>> LockGroupPCKnownSubclass =>=>=> RelationalSchema.Table>> lockgrouppcknownsubclass;
ClassDiagram.Class>> BlobTest =>=>=> RelationalSchema.Table>> blobtest;
ClassDiagram.Class>> PCDirectory =>=>=> RelationalSchema.Table>> pcdirectory;
ClassDiagram.Class>> SingleIdChar =>=>=> RelationalSchema.Table>> singleidchar;
ClassDiagram.Class>> OuterJoinValuePC =>=>=> RelationalSchema.Table>> outerjoinvaluepc;
ClassDiagram.Class>> PCClassPC =>=>=> RelationalSchema.Table>> pcclasspc;
ClassDiagram.Class>> ProxiesPC =>=>=> RelationalSchema.Table>> proxiespc;
ClassDiagram.Class>> EmbeddedOwnerPC =>=>=> RelationalSchema.Table>> embeddedownerpc;
ClassDiagram.Class>> SequenceAssigned2 =>=>=> RelationalSchema.Table>> sequenceassigned2;
ClassDiagram.Class>> AttachF =>=>=> RelationalSchema.Table>> attachf;
ClassDiagram.Class>> SingleIdWrapper =>=>=> RelationalSchema.Table>> singleidwrapper;
ClassDiagram.Class>> FetchGroupTestObject =>=>=> RelationalSchema.Table>> fetchgrouptestobject;
ClassDiagram.Class>> SingleIdInt =>=>=> RelationalSchema.Table>> singleidint;
ClassDiagram.Class>> ConcreteMappedAppIdSub =>=>=> RelationalSchema.Table>> concretemappedappidsub;
ClassDiagram.Class>> InverseA =>=>=> RelationalSchema.Table>> inversea;
ClassDiagram.Class>> AppIdSubE =>=>=> RelationalSchema.Table>> appidsube;
ClassDiagram.Class>> PCAddress =>=>=> RelationalSchema.Table>> pcaddress;
ClassDiagram.Class>> RuntimeTest3 =>=>=> RelationalSchema.Table>> runtimetest3;
ClassDiagram.Class>> AttachB =>=>=> RelationalSchema.Table>> attachb;
ClassDiagram.Class>> ComplexEmbeddedPC =>=>=> RelationalSchema.Table>> complexembeddedpc;
ClassDiagram.Class>> ManagedInterfaceOwner =>=>=> RelationalSchema.Table>> managedinterfaceowner;
ClassDiagram.Class>> ModRuntimeTest1 =>=>=> RelationalSchema.Table>> modruntimetest1;
ClassDiagram.Class>> NonMappedInterfaceImpl =>=>=> RelationalSchema.Table>> nonmappedinterfaceimpl;
ClassDiagram.Class>> Inner =>=>=> RelationalSchema.Table>> inner;
ClassDiagram.Class>> AttachVersionA =>=>=> RelationalSchema.Table>> attachversiona;
ClassDiagram.Class>> PersistentMapHolder =>=>=> RelationalSchema.Table>> persistentmapholder;
ClassDiagram.Class>> InterfaceTestImpl3 =>=>=> RelationalSchema.Table>> interfacetestimpl3;
ClassDiagram.Class>> PCFile =>=>=> RelationalSchema.Table>> pcfile;
ClassDiagram.Class>> SingleIdByte =>=>=> RelationalSchema.Table>> singleidbyte;
ClassDiagram.Class>> Lobs =>=>=> RelationalSchema.Table>> lobs;
ClassDiagram.Class>> Entity2 =>=>=> RelationalSchema.Table>> entity2;
ClassDiagram.Class>> FetchGroupTestObjectChild =>=>=> RelationalSchema.Table>> merchandise;
ClassDiagram.Class>> AttachD =>=>=> RelationalSchema.Table>> attachd;
ClassDiagram.Class>> RuntimeTest5 =>=>=> RelationalSchema.Table>> runtimetest5;
ClassDiagram.Class>> AppIdSubC =>=>=> RelationalSchema.Table>> appidsubc;
ClassDiagram.Class>> LockGroupPC2 =>=>=> RelationalSchema.Table>> lockgrouppc2;
ClassDiagram.Class>> FetchA =>=>=> RelationalSchema.Table>> fetcha;
ClassDiagram.Class>> ArraysTest =>=>=> RelationalSchema.Table>> arraystest;
ClassDiagram.Class>> SCOTest =>=>=> RelationalSchema.Table>> scotest;
ClassDiagram.Class>> SingleIdShort =>=>=> RelationalSchema.Table>> singleidshort;
ClassDiagram.Class>> RuntimeTest1 =>=>=> RelationalSchema.Table>> runtimetest1;
ClassDiagram.Class>> PCDepartment =>=>=> RelationalSchema.Table>> pcdepartment;
ClassDiagram.Class>> PCEmployee =>=>=> RelationalSchema.Table>> pcemployee;
ClassDiagram.Class>> PCCompany =>=>=> RelationalSchema.Table>> pccompany;
ClassDiagram.Class>> MixedInterfaceImpl =>=>=> RelationalSchema.Table>> mixedinterfaceimpl;
ClassDiagram.Class>> AttachE =>=>=> RelationalSchema.Table>> attache;
ClassDiagram.Class>> RuntimeTest4 =>=>=> RelationalSchema.Table>> runtimetest4;
ClassDiagram.Class>> Blobs =>=>=> RelationalSchema.Table>> blobs;
ClassDiagram.Class>> AppIdSubB =>=>=> RelationalSchema.Table>> appidsubb;
ClassDiagram.Class>> AImplB =>=>=> RelationalSchema.Table>> aimplb;
ClassDiagram.Class>> ExternalValues =>=>=> RelationalSchema.Table>> externalvalues;
ClassDiagram.Class>> Transition =>=>=> RelationalSchema.Table>> transition;
ClassDiagram.Class>> PCCountry =>=>=> RelationalSchema.Table>> pccountry;
ClassDiagram.Class>> AppIdSubF =>=>=> RelationalSchema.Table>> appidsubf;
ClassDiagram.Class>> InverseB =>=>=> RelationalSchema.Table>> inverseb;
ClassDiagram.Class>> AttachA =>=>=> RelationalSchema.Table>> attacha;
ClassDiagram.Class>> ManagedInterfaceOwnerAppId =>=>=> RelationalSchema.Table>> managedinterfaceownerappid;
ClassDiagram.Class>> LockGroupPC =>=>=> RelationalSchema.Table>> lockgrouppc;
ClassDiagram.Class>> State =>=>=> RelationalSchema.Table>> state;
ClassDiagram.Class>> MapElementPC =>=>=> RelationalSchema.Table>> mapelementpc;
ClassDiagram.Class>> InterfaceTestImpl2 =>=>=> RelationalSchema.Table>> interfacetestimpl2;
ClassDiagram.Class>> ColumnIOPC =>=>=> RelationalSchema.Table>> columniopc;
ClassDiagram.Class>> CalendarFields =>=>=> RelationalSchema.Table>> calendarfields;
ClassDiagram.Class>> AllFieldTypesTest =>=>=> RelationalSchema.Table>> allfieldtypestest;
ClassDiagram.Class>> TestStaticInnerClasses =>=>=> RelationalSchema.Table>> teststaticinnerclasses;
ClassDiagram.Class>> TestEJBLobs =>=>=> RelationalSchema.Table>> testejblobs;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> SubclassPerson =>=>=> RelationalSchema.Table>> subclassperson;
ClassDiagram.Class>> NamedEntity =>=>=> RelationalSchema.Table>> namedentity;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Place =>=>=> RelationalSchema.Table>> place;
ClassDiagram.Class>> EntityWithTimestampPK =>=>=> RelationalSchema.Table>> entitywithtimestamppk;
ClassDiagram.Class>> TemporalFieldTypes =>=>=> RelationalSchema.Table>> temporalfieldtypes;
ClassDiagram.Class>> AllFieldTypes =>=>=> RelationalSchema.Table>> allfieldtypes;
ClassDiagram.Class>> Java8TimeTypes =>=>=> RelationalSchema.Table>> java8timetypes;
ClassDiagram.Class>> VersionTSEntity =>=>=> RelationalSchema.Table>> versiontsentity;
ClassDiagram.Class>> ResultClsAnnotation =>=>=> RelationalSchema.Table>> resultclsannotation;
ClassDiagram.Class>> EntityPerson =>=>=> RelationalSchema.Table>> entityperson;
ClassDiagram.Class>> GeneratedIdObject =>=>=> RelationalSchema.Table>> generatedidobject;
ClassDiagram.Class>> EntityEmployee =>=>=> RelationalSchema.Table>> entityemployee;
ClassDiagram.Class>> SequencedEntity =>=>=> RelationalSchema.Table>> sequencedentity;
ClassDiagram.Class>> HSQLEmployee =>=>=> RelationalSchema.Table>> hsqlemployee;
ClassDiagram.Class>> HSQLEmployee2 =>=>=> RelationalSchema.Table>> hsqlemployee2;
ClassDiagram.Class>> SuperPropertyEntity =>=>=> RelationalSchema.Table>> superpropertyentity;
ClassDiagram.Class>> PropertySub2 =>=>=> RelationalSchema.Table>> propertysub2;
ClassDiagram.Class>> MixedNestedEmbedEntity =>=>=> RelationalSchema.Table>> mixednestedembedentity;
ClassDiagram.Class>> FieldSub2 =>=>=> RelationalSchema.Table>> fieldsub2;
ClassDiagram.Class>> PropEmbedEntity =>=>=> RelationalSchema.Table>> propembedentity;
ClassDiagram.Class>> PropertySub3 =>=>=> RelationalSchema.Table>> propertysub3;
ClassDiagram.Class>> FieldSub3 =>=>=> RelationalSchema.Table>> fieldsub3;
ClassDiagram.Class>> DefPropMixedFieldAccess =>=>=> RelationalSchema.Table>> defpropmixedfieldaccess;
ClassDiagram.Class>> PropertyAccessCapitalizationOldBehavior =>=>=> RelationalSchema.Table>> propertyaccesscapitalizationoldbehavior;
ClassDiagram.Class>> PropEntity =>=>=> RelationalSchema.Table>> propentity;
ClassDiagram.Class>> MenuItem =>=>=> RelationalSchema.Table>> menuitem;
ClassDiagram.Class>> FieldSub =>=>=> RelationalSchema.Table>> fieldsub;
ClassDiagram.Class>> PropertyAccessCapitalization =>=>=> RelationalSchema.Table>> propertyaccesscapitalization;
ClassDiagram.Class>> PropAccessFieldStratsEntity =>=>=> RelationalSchema.Table>> propaccessfieldstratsentity;
ClassDiagram.Class>> PropAccess =>=>=> RelationalSchema.Table>> propaccess;
ClassDiagram.Class>> PropertySub =>=>=> RelationalSchema.Table>> propertysub;
ClassDiagram.Class>> FieldEmbedEntity =>=>=> RelationalSchema.Table>> fieldembedentity;
ClassDiagram.Class>> DefFieldMixedPropAccess =>=>=> RelationalSchema.Table>> deffieldmixedpropaccess;
ClassDiagram.Class>> PropMixedEntity =>=>=> RelationalSchema.Table>> propmixedentity;
ClassDiagram.Class>> MixedMultEmbedEntity =>=>=> RelationalSchema.Table>> mixedmultembedentity;
ClassDiagram.Class>> FieldAccessPropStratsEntity =>=>=> RelationalSchema.Table>> fieldaccesspropstratsentity;
ClassDiagram.Class>> SuperFieldEntity =>=>=> RelationalSchema.Table>> superfieldentity;
ClassDiagram.Class>> MixedFieldSub =>=>=> RelationalSchema.Table>> mixedfieldsub;
ClassDiagram.Class>> FieldAccess =>=>=> RelationalSchema.Table>> fieldaccess;
ClassDiagram.Class>> GrandChild =>=>=> RelationalSchema.Table>> grandchild;
ClassDiagram.Class>> Child =>=>=> RelationalSchema.Table>> child;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> LineItem =>=>=> RelationalSchema.Table>> lineitem;
ClassDiagram.Class>> Parent =>=>=> RelationalSchema.Table>> parent;
ClassDiagram.Class>> Car =>=>=> RelationalSchema.Table>> car;
ClassDiagram.Class>> Outer =>=>=> RelationalSchema.Table>> outer;
ClassDiagram.Class>> Model =>=>=> RelationalSchema.Table>> model;
ClassDiagram.Class>> ShipPackage =>=>=> RelationalSchema.Table>> shippackage;
ClassDiagram.Class>> Label =>=>=> RelationalSchema.Table>> label;
ClassDiagram.Class>> Make =>=>=> RelationalSchema.Table>> make;
ClassDiagram.Class>> Toy =>=>=> RelationalSchema.Table>> toy;
ClassDiagram.Class>> ShipPackage2 =>=>=> RelationalSchema.Table>> shippackage2;
ClassDiagram.Class>> ToyBox =>=>=> RelationalSchema.Table>> toybox;
ClassDiagram.Class>> Label2 =>=>=> RelationalSchema.Table>> label2;
ClassDiagram.Class>> Inner =>=>=> RelationalSchema.Table>> inner;
ClassDiagram.Class>> PUSchemaInSequenceAnnotationEntity =>=>=> RelationalSchema.Table>> puschemainsequenceannotationentity;
ClassDiagram.Class>> PUSchemaInSequenceMappingEntity =>=>=> RelationalSchema.Table>> puschemainsequencemappingentity;
ClassDiagram.Class>> PUDefaultSchemaEntity =>=>=> RelationalSchema.Table>> pudefaultschemaentity;
ClassDiagram.Class>> PUSchemaInTableMappingEntity =>=>=> RelationalSchema.Table>> puschemaintablemappingentity;
ClassDiagram.Class>> PUSchemaInTableAnnotationEntity =>=>=> RelationalSchema.Table>> puschemaintableannotationentity;
ClassDiagram.Class>> ESQLDateID =>=>=> RelationalSchema.Table>> esqldateid;
ClassDiagram.Class>> EDBigIntegerID =>=>=> RelationalSchema.Table>> edbigintegerid;
ClassDiagram.Class>> EBigDecimalID =>=>=> RelationalSchema.Table>> ebigdecimalid;
ClassDiagram.Class>> EBigIntegerID =>=>=> RelationalSchema.Table>> ebigintegerid;
ClassDiagram.Class>> EDBigDecimalID =>=>=> RelationalSchema.Table>> edbigdecimalid;
ClassDiagram.Class>> EDateID =>=>=> RelationalSchema.Table>> edateid;
ClassDiagram.Class>> EDSQLDateID =>=>=> RelationalSchema.Table>> edsqldateid;
ClassDiagram.Class>> EDDateID =>=>=> RelationalSchema.Table>> eddateid;
ClassDiagram.Class>> CharRootEntity =>=>=> RelationalSchema.Table>> charrootentity;
ClassDiagram.Class>> CharAbstractEntity =>=>=> RelationalSchema.Table>> charabstractentity;
ClassDiagram.Class>> StringLeafEntity =>=>=> RelationalSchema.Table>> stringleafentity;
ClassDiagram.Class>> StringRootEntity =>=>=> RelationalSchema.Table>> stringrootentity;
ClassDiagram.Class>> CharLeafEntity =>=>=> RelationalSchema.Table>> charleafentity;
ClassDiagram.Class>> IntegerLeafEntity =>=>=> RelationalSchema.Table>> integerleafentity;
ClassDiagram.Class>> StringAbstractEntity =>=>=> RelationalSchema.Table>> stringabstractentity;
ClassDiagram.Class>> Manager =>=>=> RelationalSchema.Table>> manager;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> IntegerAbstractEntity =>=>=> RelationalSchema.Table>> integerabstractentity;
ClassDiagram.Class>> IntegerRootEntity =>=>=> RelationalSchema.Table>> integerrootentity;
ClassDiagram.Class>> Part =>=>=> RelationalSchema.Table>> part;
ClassDiagram.Class>> EmbeddedOwnerPC =>=>=> RelationalSchema.Table>> embeddedownerpc;
ClassDiagram.Class>> MaleUser =>=>=> RelationalSchema.Table>> maleuser;
ClassDiagram.Class>> ArtCourse =>=>=> RelationalSchema.Table>> artcourse;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> EmbeddedPC =>=>=> RelationalSchema.Table>> embeddedpc;
ClassDiagram.Class>> Entity1 =>=>=> RelationalSchema.Table>> entity1;
ClassDiagram.Class>> RuntimeTest2 =>=>=> RelationalSchema.Table>> runtimetest2;
ClassDiagram.Class>> CompUser =>=>=> RelationalSchema.Table>> compuser;
ClassDiagram.Class>> ComplexEmbeddedPC =>=>=> RelationalSchema.Table>> complexembeddedpc;
ClassDiagram.Class>> FemaleUser =>=>=> RelationalSchema.Table>> femaleuser;
ClassDiagram.Class>> ScienceCourse =>=>=> RelationalSchema.Table>> sciencecourse;
ClassDiagram.Class>> Trousers =>=>=> RelationalSchema.Table>> trousers;
ClassDiagram.Class>> Textile =>=>=> RelationalSchema.Table>> textile;
ClassDiagram.Class>> Shirt =>=>=> RelationalSchema.Table>> shirt;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Entity2 =>=>=> RelationalSchema.Table>> entity2;
ClassDiagram.Class>> RuntimeTest1 =>=>=> RelationalSchema.Table>> runtimetest1;
ClassDiagram.Class>> TemporalEntity =>=>=> RelationalSchema.Table>> temporalentity;
ClassDiagram.Class>> ImplicitValueStrategyEntity =>=>=> RelationalSchema.Table>> implicitvaluestrategyentity;
ClassDiagram.Class>> ValueStrategyEntity =>=>=> RelationalSchema.Table>> valuestrategyentity;
ClassDiagram.Class>> QCEntity =>=>=> RelationalSchema.Table>> qcentity;
ClassDiagram.Class>> UnidirectionalOne2OneOwner =>=>=> RelationalSchema.Table>> unidirectionalone2oneowner;
ClassDiagram.Class>> Entity2 =>=>=> RelationalSchema.Table>> entity2;
ClassDiagram.Class>> BidirectionalOne2OneOwner =>=>=> RelationalSchema.Table>> bidirectionalone2oneowner;
ClassDiagram.Class>> UnidirectionalOne2OneOwned =>=>=> RelationalSchema.Table>> unidirectionalone2oneowned;
ClassDiagram.Class>> Entity1 =>=>=> RelationalSchema.Table>> entity1;
ClassDiagram.Class>> BidirectionalOne2OneOwned =>=>=> RelationalSchema.Table>> bidirectionalone2oneowned;
ClassDiagram.Class>> QCEntityM2O =>=>=> RelationalSchema.Table>> qcentitym2o;
ClassDiagram.Class>> MapValEntity =>=>=> RelationalSchema.Table>> mapvalentity;
ClassDiagram.Class>> OneToEntity =>=>=> RelationalSchema.Table>> onetoentity;
ClassDiagram.Class>> ToManyLazy =>=>=> RelationalSchema.Table>> tomanylazy;
ClassDiagram.Class>> RelEntity =>=>=> RelationalSchema.Table>> relentity;
ClassDiagram.Class>> MapEntity =>=>=> RelationalSchema.Table>> mapentity;
ClassDiagram.Class>> EagerEntity =>=>=> RelationalSchema.Table>> eagerentity;
ClassDiagram.Class>> LazyEntity =>=>=> RelationalSchema.Table>> lazyentity;
ClassDiagram.Class>> ToManyEager =>=>=> RelationalSchema.Table>> tomanyeager;
ClassDiagram.Class>> FloatIdEntity =>=>=> RelationalSchema.Table>> floatidentity;
ClassDiagram.Class>> SQLBigDecimalIdEntity =>=>=> RelationalSchema.Table>> sqlbigdecimalidentity;
ClassDiagram.Class>> DoubleObjIdEntity =>=>=> RelationalSchema.Table>> doubleobjidentity;
ClassDiagram.Class>> StringIdEntity =>=>=> RelationalSchema.Table>> stringidentity;
ClassDiagram.Class>> ComplexCompoundIdTestEntity =>=>=> RelationalSchema.Table>> complexcompoundidtestentity;
ClassDiagram.Class>> BooleanIdEntity =>=>=> RelationalSchema.Table>> booleanidentity;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> AccountGroup =>=>=> RelationalSchema.Table>> accountgroup;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> TypeEntity =>=>=> RelationalSchema.Table>> typeentity;
ClassDiagram.Class>> SimpleCompoundIdTestEntity =>=>=> RelationalSchema.Table>> simplecompoundidtestentity;
ClassDiagram.Class>> SQLDateIdEntity =>=>=> RelationalSchema.Table>> sqldateidentity;
ClassDiagram.Class>> SQLBigIntegerIdEntity =>=>=> RelationalSchema.Table>> sqlbigintegeridentity;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Attendance =>=>=> RelationalSchema.Table>> attendance;
ClassDiagram.Class>> CompoundBooleanIdEntity =>=>=> RelationalSchema.Table>> compoundbooleanidentity;
ClassDiagram.Class>> IdentityGenerationType =>=>=> RelationalSchema.Table>> identitygenerationtype;
ClassDiagram.Class>> TimestampVersion =>=>=> RelationalSchema.Table>> timestampversion;
ClassDiagram.Class>> ShortVersion =>=>=> RelationalSchema.Table>> shortversion;
ClassDiagram.Class>> IntVersion =>=>=> RelationalSchema.Table>> intversion;
ClassDiagram.Class>> PObject =>=>=> RelationalSchema.Table>> pobject;
ClassDiagram.Class>> PObjectNative =>=>=> RelationalSchema.Table>> pobjectnative;
ClassDiagram.Class>> NumericVersionedEntity =>=>=> RelationalSchema.Table>> numericversionedentity;
ClassDiagram.Class>> Parent =>=>=> RelationalSchema.Table>> parent;
ClassDiagram.Class>> Child =>=>=> RelationalSchema.Table>> child;
ClassDiagram.Class>> TimestampedEntity =>=>=> RelationalSchema.Table>> timestampedentity;
ClassDiagram.Class>> AutoIncrementEntity =>=>=> RelationalSchema.Table>> autoincremententity;
ClassDiagram.Class>> HorizL =>=>=> RelationalSchema.Table>> horizl;
ClassDiagram.Class>> HorizAppInterVerticalD =>=>=> RelationalSchema.Table>> horizappinterverticald;
ClassDiagram.Class>> ConstantJoinPC3 =>=>=> RelationalSchema.Table>> constantjoinpc3;
ClassDiagram.Class>> HorizH =>=>=> RelationalSchema.Table>> horizh;
ClassDiagram.Class>> LRSCompoundPC =>=>=> RelationalSchema.Table>> lrscompoundpc;
ClassDiagram.Class>> RuntimeTest2 =>=>=> RelationalSchema.Table>> runtimetest2;
ClassDiagram.Class>> Base =>=>=> RelationalSchema.Table>> base;
ClassDiagram.Class>> OpOrderPCSub =>=>=> RelationalSchema.Table>> oporderpcsub;
ClassDiagram.Class>> HorizAppSingleA =>=>=> RelationalSchema.Table>> horizappsinglea;
ClassDiagram.Class>> HorizInterFlatB =>=>=> RelationalSchema.Table>> horizinterflatb;
ClassDiagram.Class>> HorizD =>=>=> RelationalSchema.Table>> horizd;
ClassDiagram.Class>> PagingPC =>=>=> RelationalSchema.Table>> pagingpc;
ClassDiagram.Class>> HelperPC =>=>=> RelationalSchema.Table>> helperpc;
ClassDiagram.Class>> HorizAppMultiB =>=>=> RelationalSchema.Table>> horizappmultib;
ClassDiagram.Class>> LRSPC =>=>=> RelationalSchema.Table>> lrspc;
ClassDiagram.Class>> AttachC =>=>=> RelationalSchema.Table>> attachc;
ClassDiagram.Class>> AutoIncrementPC1 =>=>=> RelationalSchema.Table>> autoincrementpc1;
ClassDiagram.Class>> MappingTest2 =>=>=> RelationalSchema.Table>> mappingtest2;
ClassDiagram.Class>> HorizInterVerticalA =>=>=> RelationalSchema.Table>> horizinterverticala;
ClassDiagram.Class>> AttachF =>=>=> RelationalSchema.Table>> attachf;
ClassDiagram.Class>> HorizInterFlatC =>=>=> RelationalSchema.Table>> horizinterflatc;
ClassDiagram.Class>> BaseSub2 =>=>=> RelationalSchema.Table>> basesub2;
ClassDiagram.Class>> DFGTest =>=>=> RelationalSchema.Table>> dfgtest;
ClassDiagram.Class>> HorizInterVerticalD =>=>=> RelationalSchema.Table>> horizinterverticald;
ClassDiagram.Class>> ByteArrayPKPC2 =>=>=> RelationalSchema.Table>> bytearraypkpc2;
ClassDiagram.Class>> HorizE =>=>=> RelationalSchema.Table>> horize;
ClassDiagram.Class>> HelperPC4 =>=>=> RelationalSchema.Table>> helperpc4;
ClassDiagram.Class>> HorizAppMultiC =>=>=> RelationalSchema.Table>> horizappmultic;
ClassDiagram.Class>> AttachB =>=>=> RelationalSchema.Table>> attachb;
ClassDiagram.Class>> HorizAppSingleD =>=>=> RelationalSchema.Table>> horizappsingled;
ClassDiagram.Class>> EagerPCSub =>=>=> RelationalSchema.Table>> eagerpcsub;
ClassDiagram.Class>> MappingTest3 =>=>=> RelationalSchema.Table>> mappingtest3;
ClassDiagram.Class>> HorizA =>=>=> RelationalSchema.Table>> horiza;
ClassDiagram.Class>> JoinSubclassBaseSubVert =>=>=> RelationalSchema.Table>> joinsubclassbasesubvert;
ClassDiagram.Class>> UnidirectionalOneToOneOwned =>=>=> RelationalSchema.Table>> unidirectionalonetooneowned;
ClassDiagram.Class>> HorizM =>=>=> RelationalSchema.Table>> horizm;
ClassDiagram.Class>> EagerOuterJoinPC2 =>=>=> RelationalSchema.Table>> eagerouterjoinpc2;
ClassDiagram.Class>> RawSQL =>=>=> RelationalSchema.Table>> rawsql;
ClassDiagram.Class>> ConstantJoinPC2 =>=>=> RelationalSchema.Table>> constantjoinpc2;
ClassDiagram.Class>> InvertB =>=>=> RelationalSchema.Table>> invertb;
ClassDiagram.Class>> HorizAppInterVerticalA =>=>=> RelationalSchema.Table>> horizappinterverticala;
ClassDiagram.Class>> HorizI =>=>=> RelationalSchema.Table>> horizi;
ClassDiagram.Class>> BaseSub1Sub1 =>=>=> RelationalSchema.Table>> basesub1sub1;
ClassDiagram.Class>> RuntimeTest3 =>=>=> RelationalSchema.Table>> runtimetest3;
ClassDiagram.Class>> InverseKeyMapPC =>=>=> RelationalSchema.Table>> inversekeymappc;
ClassDiagram.Class>> EagerPC =>=>=> RelationalSchema.Table>> eagerpc;
ClassDiagram.Class>> HorizInterFlatA =>=>=> RelationalSchema.Table>> horizinterflata;
ClassDiagram.Class>> HorizAppSingleB =>=>=> RelationalSchema.Table>> horizappsingleb;
ClassDiagram.Class>> AttachD =>=>=> RelationalSchema.Table>> attachd;
ClassDiagram.Class>> EntityWithFailedExternalizer =>=>=> RelationalSchema.Table>> entitywithfailedexternalizer;
ClassDiagram.Class>> AutoIncrementOpOrderPCSub =>=>=> RelationalSchema.Table>> autoincrementoporderpcsub;
ClassDiagram.Class>> HorizG =>=>=> RelationalSchema.Table>> horizg;
ClassDiagram.Class>> MappingTest5 =>=>=> RelationalSchema.Table>> mappingtest5;
ClassDiagram.Class>> HorizAppMultiA =>=>=> RelationalSchema.Table>> horizappmultia;
ClassDiagram.Class>> RecursivelyEmbeddedPC =>=>=> RelationalSchema.Table>> recursivelyembeddedpc;
ClassDiagram.Class>> AutoIncrementPC2 =>=>=> RelationalSchema.Table>> autoincrementpc2;
ClassDiagram.Class>> HelperPC2 =>=>=> RelationalSchema.Table>> helperpc2;
ClassDiagram.Class>> HorizC =>=>=> RelationalSchema.Table>> horizc;
ClassDiagram.Class>> JoinTableMapPC =>=>=> RelationalSchema.Table>> jointablemappc;
ClassDiagram.Class>> MappingTest1 =>=>=> RelationalSchema.Table>> mappingtest1;
ClassDiagram.Class>> HorizInterVerticalB =>=>=> RelationalSchema.Table>> horizinterverticalb;
ClassDiagram.Class>> HorizRelation =>=>=> RelationalSchema.Table>> horizrelation;
ClassDiagram.Class>> AutoIncrementOpOrderPC =>=>=> RelationalSchema.Table>> autoincrementoporderpc;
ClassDiagram.Class>> LocatorTestObject =>=>=> RelationalSchema.Table>> locatortestobject;
ClassDiagram.Class>> EagerOuterJoinPC =>=>=> RelationalSchema.Table>> eagerouterjoinpc;
ClassDiagram.Class>> HorizO =>=>=> RelationalSchema.Table>> horizo;
ClassDiagram.Class>> OpOrderPC =>=>=> RelationalSchema.Table>> oporderpc;
ClassDiagram.Class>> PagingHelperPC =>=>=> RelationalSchema.Table>> paginghelperpc;
ClassDiagram.Class>> EmbeddedOwnerPC =>=>=> RelationalSchema.Table>> embeddedownerpc;
ClassDiagram.Class>> ConstantJoinPC =>=>=> RelationalSchema.Table>> constantjoinpc;
ClassDiagram.Class>> HorizK =>=>=> RelationalSchema.Table>> horizk;
ClassDiagram.Class>> HorizAppInterVerticalC =>=>=> RelationalSchema.Table>> horizappinterverticalc;
ClassDiagram.Class>> BuildSchemaPC =>=>=> RelationalSchema.Table>> buildschemapc;
ClassDiagram.Class>> TransactionalClassPC =>=>=> RelationalSchema.Table>> transactionalclasspc;
ClassDiagram.Class>> CustomMappingPC =>=>=> RelationalSchema.Table>> custommappingpc;
ClassDiagram.Class>> LockGroupSubclass =>=>=> RelationalSchema.Table>> lockgroupsubclass;
ClassDiagram.Class>> DataStoreTripsPC =>=>=> RelationalSchema.Table>> datastoretripspc;
ClassDiagram.Class>> RuntimeTest1 =>=>=> RelationalSchema.Table>> runtimetest1;
ClassDiagram.Class>> ConstantJoinPC4 =>=>=> RelationalSchema.Table>> constantjoinpc4;
ClassDiagram.Class>> RecursiveEntityWithCompositeId =>=>=> RelationalSchema.Table>> recursiveentitywithcompositeid;
ClassDiagram.Class>> SQLMapItem =>=>=> RelationalSchema.Table>> sqlmapitem;
ClassDiagram.Class>> Entity1 =>=>=> RelationalSchema.Table>> entity1;
ClassDiagram.Class>> SQLMapPerson =>=>=> RelationalSchema.Table>> sqlmapperson;
ClassDiagram.Class>> OwnerOfEntityWithCompositeId =>=>=> RelationalSchema.Table>> ownerofentitywithcompositeid;
ClassDiagram.Class>> SQLMapOrder =>=>=> RelationalSchema.Table>> sqlmaporder;
ClassDiagram.Class>> SQLMapAddress =>=>=> RelationalSchema.Table>> sqlmapaddress;
ClassDiagram.Class>> EntityWithCompositeId =>=>=> RelationalSchema.Table>> entitywithcompositeid;
ClassDiagram.Class>> Entity2 =>=>=> RelationalSchema.Table>> entity2;
ClassDiagram.Class>> ComplexEmbeddedPC =>=>=> RelationalSchema.Table>> complexembeddedpc;
ClassDiagram.Class>> HorizN =>=>=> RelationalSchema.Table>> horizn;
ClassDiagram.Class>> EmbeddedPC =>=>=> RelationalSchema.Table>> embeddedpc;
ClassDiagram.Class>> InvertA =>=>=> RelationalSchema.Table>> inverta;
ClassDiagram.Class>> HorizAppInterVerticalB =>=>=> RelationalSchema.Table>> horizappinterverticalb;
ClassDiagram.Class>> BaseSub1Sub2 =>=>=> RelationalSchema.Table>> basesub1sub2;
ClassDiagram.Class>> HorizJ =>=>=> RelationalSchema.Table>> horizj;
ClassDiagram.Class>> CircularFKPC2 =>=>=> RelationalSchema.Table>> circularfkpc2;
ClassDiagram.Class>> ConstantJoinPC5 =>=>=> RelationalSchema.Table>> constantjoinpc5;
ClassDiagram.Class>> UnidirectionalOneToOneOwner =>=>=> RelationalSchema.Table>> unidirectionalonetooneowner;
ClassDiagram.Class>> JoinSubclassBase =>=>=> RelationalSchema.Table>> joinsubclassbase;
ClassDiagram.Class>> HorizAppSingleC =>=>=> RelationalSchema.Table>> horizappsinglec;
ClassDiagram.Class>> AttachE =>=>=> RelationalSchema.Table>> attache;
ClassDiagram.Class>> BaseSub1 =>=>=> RelationalSchema.Table>> basesub1;
ClassDiagram.Class>> HorizAppMultiD =>=>=> RelationalSchema.Table>> horizappmultid;
ClassDiagram.Class>> ByteArrayPKPC =>=>=> RelationalSchema.Table>> bytearraypkpc;
ClassDiagram.Class>> HorizF =>=>=> RelationalSchema.Table>> horizf;
ClassDiagram.Class>> JoinSubclassBaseSubFlat =>=>=> RelationalSchema.Table>> joinsubclassbasesubflat;
ClassDiagram.Class>> MappingTest4 =>=>=> RelationalSchema.Table>> mappingtest4;
ClassDiagram.Class>> CircularFKPC =>=>=> RelationalSchema.Table>> circularfkpc;
ClassDiagram.Class>> HorizInterFlatD =>=>=> RelationalSchema.Table>> horizinterflatd;
ClassDiagram.Class>> AutoIncrementPC3 =>=>=> RelationalSchema.Table>> autoincrementpc3;
ClassDiagram.Class>> AttachA =>=>=> RelationalSchema.Table>> attacha;
ClassDiagram.Class>> HorizB =>=>=> RelationalSchema.Table>> horizb;
ClassDiagram.Class>> HelperPC3 =>=>=> RelationalSchema.Table>> helperpc3;
ClassDiagram.Class>> PagingAppIdPC =>=>=> RelationalSchema.Table>> pagingappidpc;
ClassDiagram.Class>> HorizInterVerticalC =>=>=> RelationalSchema.Table>> horizinterverticalc;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> MapperEntity =>=>=> RelationalSchema.Table>> mapperentity;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> MappedEntity =>=>=> RelationalSchema.Table>> mappedentity;
ClassDiagram.Class>> TestFKColumnNames =>=>=> RelationalSchema.Table>> testfkcolumnnames;
ClassDiagram.Class>> NamedUniqueB =>=>=> RelationalSchema.Table>> nameduniqueb;
ClassDiagram.Class>> UniqueA =>=>=> RelationalSchema.Table>> uniquea;
ClassDiagram.Class>> NamedUniqueA =>=>=> RelationalSchema.Table>> nameduniquea;
ClassDiagram.Class>> UniqueB =>=>=> RelationalSchema.Table>> uniqueb;
ClassDiagram.Class>> MyDBCSEntity =>=>=> RelationalSchema.Table>> mydbcsentity;
ClassDiagram.Class>> CD =>=>=> RelationalSchema.Table>> cd;
ClassDiagram.Class>> ExtValue1 =>=>=> RelationalSchema.Table>> extvalue1;
ClassDiagram.Class>> AbstractExtValue =>=>=> RelationalSchema.Table>> abstractextvalue;
ClassDiagram.Class>> UserData =>=>=> RelationalSchema.Table>> userdata;
ClassDiagram.Class>> OrderJPA =>=>=> RelationalSchema.Table>> orderjpa;
ClassDiagram.Class>> Merchandise =>=>=> RelationalSchema.Table>> merchandise;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> CombinedPKTestEntity =>=>=> RelationalSchema.Table>> combinedpktestentity;
ClassDiagram.Class>> Child =>=>=> RelationalSchema.Table>> child;
ClassDiagram.Class>> Parent =>=>=> RelationalSchema.Table>> parent;
ClassDiagram.Class>> Singer =>=>=> RelationalSchema.Table>> singer;
ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> CombinedPKListEntity =>=>=> RelationalSchema.Table>> combinedpklistentity;
ClassDiagram.Class>> Trainer =>=>=> RelationalSchema.Table>> trainer;
ClassDiagram.Class>> BattingOrder =>=>=> RelationalSchema.Table>> battingorder;
ClassDiagram.Class>> ObOcEntity =>=>=> RelationalSchema.Table>> obocentity;
ClassDiagram.Class>> Home =>=>=> RelationalSchema.Table>> home;
ClassDiagram.Class>> ColDefTestEntity =>=>=> RelationalSchema.Table>> coldeftestentity;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Game =>=>=> RelationalSchema.Table>> game;
ClassDiagram.Class>> BiOrderEntity =>=>=> RelationalSchema.Table>> biorderentity;
ClassDiagram.Class>> BiOrderMappedByEntity =>=>=> RelationalSchema.Table>> biordermappedbyentity;
ClassDiagram.Class>> Owner =>=>=> RelationalSchema.Table>> owner;
ClassDiagram.Class>> Widget =>=>=> RelationalSchema.Table>> widget;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> ColDefTestElement =>=>=> RelationalSchema.Table>> coldeftestelement;
ClassDiagram.Class>> Car =>=>=> RelationalSchema.Table>> car;
ClassDiagram.Class>> Player =>=>=> RelationalSchema.Table>> player;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> VicePresident =>=>=> RelationalSchema.Table>> vicepresident;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Office =>=>=> RelationalSchema.Table>> office;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> VicePresident =>=>=> RelationalSchema.Table>> vicepresident;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> VicePresident =>=>=> RelationalSchema.Table>> vicepresident;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> VicePresident =>=>=> RelationalSchema.Table>> vicepresident;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> VicePresident =>=>=> RelationalSchema.Table>> vicepresident;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Item1 =>=>=> RelationalSchema.Table>> item1;
ClassDiagram.Class>> Compny2 =>=>=> RelationalSchema.Table>> compny2;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> VicePresident =>=>=> RelationalSchema.Table>> vicepresident;
ClassDiagram.Class>> Item2 =>=>=> RelationalSchema.Table>> item2;
ClassDiagram.Class>> Compny1 =>=>=> RelationalSchema.Table>> compny1;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> VicePresident =>=>=> RelationalSchema.Table>> vicepresident;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> Employee3 =>=>=> RelationalSchema.Table>> employee3;
ClassDiagram.Class>> Department2 =>=>=> RelationalSchema.Table>> department2;
ClassDiagram.Class>> Employee2 =>=>=> RelationalSchema.Table>> employee2;
ClassDiagram.Class>> Department3 =>=>=> RelationalSchema.Table>> department3;
ClassDiagram.Class>> Department1 =>=>=> RelationalSchema.Table>> department1;
ClassDiagram.Class>> Employee1 =>=>=> RelationalSchema.Table>> employee1;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> VicePresident =>=>=> RelationalSchema.Table>> vicepresident;
ClassDiagram.Class>> MultilingualString =>=>=> RelationalSchema.Table>> multilingualstring;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Semester =>=>=> RelationalSchema.Table>> semester;
ClassDiagram.Class>> TimeKeeper =>=>=> RelationalSchema.Table>> timekeeper;
ClassDiagram.Class>> TimeEntity =>=>=> RelationalSchema.Table>> timeentity;
ClassDiagram.Class>> Game =>=>=> RelationalSchema.Table>> game;
ClassDiagram.Class>> Application =>=>=> RelationalSchema.Table>> application;
ClassDiagram.Class>> Chess =>=>=> RelationalSchema.Table>> pidstidmscrootentity;
ClassDiagram.Class>> Applicant =>=>=> RelationalSchema.Table>> applicant;
ClassDiagram.Class>> Magazine =>=>=> RelationalSchema.Table>> magazine;
ClassDiagram.Class>> DtaSrc =>=>=> RelationalSchema.Table>> dtasrc;
ClassDiagram.Class>> IndoorGame =>=>=> RelationalSchema.Table>> pidstidmscrootentity;
ClassDiagram.Class>> Binder =>=>=> RelationalSchema.Table>> binder;
ClassDiagram.Class>> Scrabble =>=>=> RelationalSchema.Table>> pidstidmscrootentity;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Publisher =>=>=> RelationalSchema.Table>> publisher;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> DtaSrcField =>=>=> RelationalSchema.Table>> dtasrcfield;
ClassDiagram.Class>> PartTimeEmployee =>=>=> RelationalSchema.Table>> parttimeemployee;
ClassDiagram.Class>> Supplier =>=>=> RelationalSchema.Table>> supplier;
ClassDiagram.Class>> PartComposite =>=>=> RelationalSchema.Table>> partcomposite;
ClassDiagram.Class>> LineItem =>=>=> RelationalSchema.Table>> lineitem;
ClassDiagram.Class>> Invoice =>=>=> RelationalSchema.Table>> invoice;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Usage =>=>=> RelationalSchema.Table>> usage;
ClassDiagram.Class>> FullTimeEmployee =>=>=> RelationalSchema.Table>> fulltimeemployee;
ClassDiagram.Class>> Part =>=>=> RelationalSchema.Table>> part;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> PartBase =>=>=> RelationalSchema.Table>> partbase;
ClassDiagram.Class>> MaxQueryMapEntity =>=>=> RelationalSchema.Table>> maxquerymapentity;
ClassDiagram.Class>> MaxQueryEntity =>=>=> RelationalSchema.Table>> maxqueryentity;
ClassDiagram.Class>> TableNameInXmlEntity =>=>=> RelationalSchema.Table>> tablenameinxmlentity;
ClassDiagram.Class>> PrecisionTestEntity =>=>=> RelationalSchema.Table>> precisiontestentity;
ClassDiagram.Class>> Authority =>=>=> RelationalSchema.Table>> authority;
ClassDiagram.Class>> Child =>=>=> RelationalSchema.Table>> child;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> ParentWithAppIdentity =>=>=> RelationalSchema.Table>> parentwithappidentity;
ClassDiagram.Class>> ParentWithAutoIdentity =>=>=> RelationalSchema.Table>> parentwithautoidentity;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> ParentWithSequenceIdentity =>=>=> RelationalSchema.Table>> parentwithsequenceidentity;
ClassDiagram.Class>> EmbeddedIdEntity =>=>=> RelationalSchema.Table>> embeddedidentity;
ClassDiagram.Class>> Flat2 =>=>=> RelationalSchema.Table>> flat2;
ClassDiagram.Class>> TablePerClass1 =>=>=> RelationalSchema.Table>> tableperclass1;
ClassDiagram.Class>> AnnoTest1 =>=>=> RelationalSchema.Table>> annotest1;
ClassDiagram.Class>> MultiColumnSecondaryVersionPC =>=>=> RelationalSchema.Table>> multicolumnsecondaryversionpc;
ClassDiagram.Class>> MultiColumnVersionPC =>=>=> RelationalSchema.Table>> multicolumnversionpc;
ClassDiagram.Class>> EmbedOwner =>=>=> RelationalSchema.Table>> embedowner;
ClassDiagram.Class>> NonstandardMappingEntity4 =>=>=> RelationalSchema.Table>> nonstandardmappingentity4;
ClassDiagram.Class>> Generator =>=>=> RelationalSchema.Table>> generator;
ClassDiagram.Class>> UnenhancedMixedAccess =>=>=> RelationalSchema.Table>> unenhancedmixedaccess;
ClassDiagram.Class>> NativeSequenceEntity =>=>=> RelationalSchema.Table>> nativesequenceentity;
ClassDiagram.Class>> UnenhancedInappropriateTransient =>=>=> RelationalSchema.Table>> unenhancedinappropriatetransient;
ClassDiagram.Class>> AnnoTest2 =>=>=> RelationalSchema.Table>> annotest2;
ClassDiagram.Class>> EntityWithIndices =>=>=> RelationalSchema.Table>> entitywithindices;
ClassDiagram.Class>> EmbeddableSuperSub =>=>=> RelationalSchema.Table>> embeddablesupersub;
ClassDiagram.Class>> NonstandardMappingEntity =>=>=> RelationalSchema.Table>> nonstandardmappingentity;
ClassDiagram.Class>> Flat1 =>=>=> RelationalSchema.Table>> flat1;
ClassDiagram.Class>> TablePerClass2 =>=>=> RelationalSchema.Table>> tableperclass2;
ClassDiagram.Class>> ExtensionsEntity =>=>=> RelationalSchema.Table>> extensionsentity;
ClassDiagram.Class>> AnnoTest3 =>=>=> RelationalSchema.Table>> annotest3;
ClassDiagram.Class>> NonstandardMappingEntity3 =>=>=> RelationalSchema.Table>> nonstandardmappingentity3;
ClassDiagram.Class>> PropertyAccess1 =>=>=> RelationalSchema.Table>> propertyaccess1;
ClassDiagram.Class>> Department3 =>=>=> RelationalSchema.Table>> department3;
ClassDiagram.Class>> EntityA_Coll_Embed_Embed =>=>=> RelationalSchema.Table>> entitya_coll_embed_embed;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> EntityA_Embed_Complex =>=>=> RelationalSchema.Table>> entitya_embed_complex;
ClassDiagram.Class>> Employee3 =>=>=> RelationalSchema.Table>> employee3;
ClassDiagram.Class>> Company2 =>=>=> RelationalSchema.Table>> company2;
ClassDiagram.Class>> Seller =>=>=> RelationalSchema.Table>> seller;
ClassDiagram.Class>> Division =>=>=> RelationalSchema.Table>> division;
ClassDiagram.Class>> Item3 =>=>=> RelationalSchema.Table>> item3;
ClassDiagram.Class>> EntityA_Embed_ToOne =>=>=> RelationalSchema.Table>> entitya_embed_toone;
ClassDiagram.Class>> EntityA_Embed_Embed_ToMany =>=>=> RelationalSchema.Table>> entitya_embed_embed_tomany;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> EntityA_Embed_Coll_Integer =>=>=> RelationalSchema.Table>> entitya_embed_coll_integer;
ClassDiagram.Class>> Item2 =>=>=> RelationalSchema.Table>> item2;
ClassDiagram.Class>> Department2 =>=>=> RelationalSchema.Table>> department2;
ClassDiagram.Class>> Topic =>=>=> RelationalSchema.Table>> topic;
ClassDiagram.Class>> SubjectWithIdClass =>=>=> RelationalSchema.Table>> subjectwithidclass;
ClassDiagram.Class>> Subject =>=>=> RelationalSchema.Table>> subject;
ClassDiagram.Class>> EntityA_Embed_MappedToOne =>=>=> RelationalSchema.Table>> entitya_embed_mappedtoone;
ClassDiagram.Class>> EntityA_Embed =>=>=> RelationalSchema.Table>> entitya_embed;
ClassDiagram.Class>> Employee2 =>=>=> RelationalSchema.Table>> employee2;
ClassDiagram.Class>> EntityB1 =>=>=> RelationalSchema.Table>> entityb1;
ClassDiagram.Class>> Recliner =>=>=> RelationalSchema.Table>> recliner;
ClassDiagram.Class>> EntityA_Embed_MappedToOneCascadeDelete =>=>=> RelationalSchema.Table>> entitya_embed_mappedtoonecascadedelete;
ClassDiagram.Class>> EntityA_Embed_Single_Coll =>=>=> RelationalSchema.Table>> entitya_embed_single_coll;
ClassDiagram.Class>> EntityA_Coll_Embed_ToOne =>=>=> RelationalSchema.Table>> entitya_coll_embed_toone;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> ProgramManager =>=>=> RelationalSchema.Table>> programmanager;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> PartTimeEmployee =>=>=> RelationalSchema.Table>> parttimeemployee;
ClassDiagram.Class>> PropertyRecord =>=>=> RelationalSchema.Table>> propertyrecord;
ClassDiagram.Class>> EntityA_Embed_Coll_Embed =>=>=> RelationalSchema.Table>> entitya_embed_coll_embed;
ClassDiagram.Class>> Item4 =>=>=> RelationalSchema.Table>> item4;
ClassDiagram.Class>> VicePresident =>=>=> RelationalSchema.Table>> vicepresident;
ClassDiagram.Class>> EntityA_Embed_Embed =>=>=> RelationalSchema.Table>> entitya_embed_embed;
ClassDiagram.Class>> Company1 =>=>=> RelationalSchema.Table>> company1;
ClassDiagram.Class>> EParent =>=>=> RelationalSchema.Table>> eparent;
ClassDiagram.Class>> EGeneric =>=>=> RelationalSchema.Table>> egeneric;
ClassDiagram.Class>> Department1 =>=>=> RelationalSchema.Table>> department1;
ClassDiagram.Class>> EntityA_Embed_Coll_Map =>=>=> RelationalSchema.Table>> entitya_embed_coll_map;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> A =>=>=> RelationalSchema.Table>> a;
ClassDiagram.Class>> EntityA_Embed_ToMany =>=>=> RelationalSchema.Table>> entitya_embed_tomany;
ClassDiagram.Class>> ParkingSpot =>=>=> RelationalSchema.Table>> parkingspot;
ClassDiagram.Class>> Employee1 =>=>=> RelationalSchema.Table>> employee1;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> EChild =>=>=> RelationalSchema.Table>> echild;
ClassDiagram.Class>> ProgramManager =>=>=> RelationalSchema.Table>> programmanager;
ClassDiagram.Class>> EntityB2 =>=>=> RelationalSchema.Table>> entityb2;
ClassDiagram.Class>> Item1 =>=>=> RelationalSchema.Table>> item1;
ClassDiagram.Class>> Item5 =>=>=> RelationalSchema.Table>> item5;
ClassDiagram.Class>> EntityA_Coll_String =>=>=> RelationalSchema.Table>> entitya_coll_string;
ClassDiagram.Class>> Dependent4 =>=>=> RelationalSchema.Table>> dependent4;
ClassDiagram.Class>> MedicalHistory1 =>=>=> RelationalSchema.Table>> medicalhistory1;
ClassDiagram.Class>> Employee5 =>=>=> RelationalSchema.Table>> employee5;
ClassDiagram.Class>> Book1 =>=>=> RelationalSchema.Table>> book1;
ClassDiagram.Class>> Employee1 =>=>=> RelationalSchema.Table>> employee1;
ClassDiagram.Class>> Line1 =>=>=> RelationalSchema.Table>> line1;
ClassDiagram.Class>> Library1 =>=>=> RelationalSchema.Table>> library1;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Person2 =>=>=> RelationalSchema.Table>> person2;
ClassDiagram.Class>> Parent3 =>=>=> RelationalSchema.Table>> parent3;
ClassDiagram.Class>> Person3 =>=>=> RelationalSchema.Table>> person3;
ClassDiagram.Class>> Dependent5 =>=>=> RelationalSchema.Table>> dependent5;
ClassDiagram.Class>> Employee4 =>=>=> RelationalSchema.Table>> employee4;
ClassDiagram.Class>> Page =>=>=> RelationalSchema.Table>> page;
ClassDiagram.Class>> MedicalHistory4 =>=>=> RelationalSchema.Table>> medicalhistory4;
ClassDiagram.Class>> Dependent1 =>=>=> RelationalSchema.Table>> dependent1;
ClassDiagram.Class>> Beneficiary =>=>=> RelationalSchema.Table>> beneficiary;
ClassDiagram.Class>> Person1 =>=>=> RelationalSchema.Table>> person1;
ClassDiagram.Class>> Library =>=>=> RelationalSchema.Table>> library;
ClassDiagram.Class>> Dependent5a =>=>=> RelationalSchema.Table>> dependent5a;
ClassDiagram.Class>> MedicalHistory2 =>=>=> RelationalSchema.Table>> medicalhistory2;
ClassDiagram.Class>> Employee2 =>=>=> RelationalSchema.Table>> employee2;
ClassDiagram.Class>> BeneContact =>=>=> RelationalSchema.Table>> benecontact;
ClassDiagram.Class>> Dependent3 =>=>=> RelationalSchema.Table>> dependent3;
ClassDiagram.Class>> MedicalHistory3 =>=>=> RelationalSchema.Table>> medicalhistory3;
ClassDiagram.Class>> Employee3 =>=>=> RelationalSchema.Table>> employee3;
ClassDiagram.Class>> Dependent2 =>=>=> RelationalSchema.Table>> dependent2;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Page1 =>=>=> RelationalSchema.Table>> page1;
ClassDiagram.Class>> Person4 =>=>=> RelationalSchema.Table>> person4;
ClassDiagram.Class>> EntityWithEnum =>=>=> RelationalSchema.Table>> entitywithenum;
ClassDiagram.Class>> NoNoArgs =>=>=> RelationalSchema.Table>> nonoargs;
ClassDiagram.Class>> ManagedInverseTestInstance =>=>=> RelationalSchema.Table>> managedinversetestinstance;
ClassDiagram.Class>> BasicSubclassInstance =>=>=> RelationalSchema.Table>> basicsubclassinstance;
ClassDiagram.Class>> DetachablePC =>=>=> RelationalSchema.Table>> detachablepc;
ClassDiagram.Class>> Entity1 =>=>=> RelationalSchema.Table>> entity1;
ClassDiagram.Class>> No2NoArgs =>=>=> RelationalSchema.Table>> no2noargs;
ClassDiagram.Class>> IDOwningClassTestEntity =>=>=> RelationalSchema.Table>> idowningclasstestentity;
ClassDiagram.Class>> BaseEntity =>=>=> RelationalSchema.Table>> baseentity;
ClassDiagram.Class>> SubclassClone =>=>=> RelationalSchema.Table>> subclassclone;
ClassDiagram.Class>> PCClone =>=>=> RelationalSchema.Table>> pcclone;
ClassDiagram.Class>> No3NoArgs =>=>=> RelationalSchema.Table>> no3noargs;
ClassDiagram.Class>> BackingFieldNameMismatchInstance =>=>=> RelationalSchema.Table>> backingfieldnamemismatchinstance;
ClassDiagram.Class>> DerivedEntity =>=>=> RelationalSchema.Table>> derivedentity;
ClassDiagram.Class>> DetachableVersionedPC =>=>=> RelationalSchema.Table>> detachableversionedpc;
ClassDiagram.Class>> NoClone =>=>=> RelationalSchema.Table>> noclone;
ClassDiagram.Class>> NonPCClone =>=>=> RelationalSchema.Table>> nonpcclone;
ClassDiagram.Class>> ManagedInverseTestInstance2 =>=>=> RelationalSchema.Table>> managedinversetestinstance2;
ClassDiagram.Class>> Entity2 =>=>=> RelationalSchema.Table>> entity2;
ClassDiagram.Class>> Invoice =>=>=> RelationalSchema.Table>> invoice;
ClassDiagram.Class>> EntityC_B1M_Map_JT =>=>=> RelationalSchema.Table>> entityc_b1m_map_jt;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> Bi_1ToM_JT =>=>=> RelationalSchema.Table>> bi_1tom_jt;
ClassDiagram.Class>> EmbeddableSuperSub =>=>=> RelationalSchema.Table>> embeddablesupersub;
ClassDiagram.Class>> EntityC_U1M_Map_FK =>=>=> RelationalSchema.Table>> entityc_u1m_map_fk;
ClassDiagram.Class>> EntityC_B11JT =>=>=> RelationalSchema.Table>> entityc_b11jt;
ClassDiagram.Class>> EntityC_U1MFK =>=>=> RelationalSchema.Table>> entityc_u1mfk;
ClassDiagram.Class>> EntityC_U1M_Map_RelKey_FK =>=>=> RelationalSchema.Table>> entityc_u1m_map_relkey_fk;
ClassDiagram.Class>> Uni_1ToM_Map_FK =>=>=> RelationalSchema.Table>> uni_1tom_map_fk;
ClassDiagram.Class>> Bi_1To1_JT =>=>=> RelationalSchema.Table>> bi_1to1_jt;
ClassDiagram.Class>> SimpleEntity =>=>=> RelationalSchema.Table>> simpleentity;
ClassDiagram.Class>> FullTimeEmployee =>=>=> RelationalSchema.Table>> fulltimeemployee;
ClassDiagram.Class>> Uni_1ToM_Map_RelKey_FK =>=>=> RelationalSchema.Table>> uni_1tom_map_relkey_fk;
ClassDiagram.Class>> EntityC_B1MFK =>=>=> RelationalSchema.Table>> entityc_b1mfk;
ClassDiagram.Class>> EntityC_U11JT =>=>=> RelationalSchema.Table>> entityc_u11jt;
ClassDiagram.Class>> LineItem =>=>=> RelationalSchema.Table>> lineitem;
ClassDiagram.Class>> Uni_1ToM_FK =>=>=> RelationalSchema.Table>> uni_1tom_fk;
ClassDiagram.Class>> Uni_1To1_JT =>=>=> RelationalSchema.Table>> uni_1to1_jt;
ClassDiagram.Class>> Bi_1ToM_Map_RelKey_JT =>=>=> RelationalSchema.Table>> bi_1tom_map_relkey_jt;
ClassDiagram.Class>> EntityC_B1MJT =>=>=> RelationalSchema.Table>> entityc_b1mjt;
ClassDiagram.Class>> EntityC_B1M_Map_RelKey_JT =>=>=> RelationalSchema.Table>> entityc_b1m_map_relkey_jt;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> Uni_1ToM_JT =>=>=> RelationalSchema.Table>> uni_1tom_jt;
ClassDiagram.Class>> PartTimeEmployee =>=>=> RelationalSchema.Table>> parttimeemployee;
ClassDiagram.Class>> Uni_MTo1_JT =>=>=> RelationalSchema.Table>> uni_mto1_jt;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> Bi_1ToM_FK =>=>=> RelationalSchema.Table>> bi_1tom_fk;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Bi_1ToM_Map_JT =>=>=> RelationalSchema.Table>> bi_1tom_map_jt;
ClassDiagram.Class>> SimpleEntity2 =>=>=> RelationalSchema.Table>> simpleentity2;
ClassDiagram.Class>> TimestampedEntity =>=>=> RelationalSchema.Table>> timestampedentity;
ClassDiagram.Class>> NullValues =>=>=> RelationalSchema.Table>> nullvalues;
ClassDiagram.Class>> DimDay =>=>=> RelationalSchema.Table>> dimday;
ClassDiagram.Class>> FactWorkAssignment =>=>=> RelationalSchema.Table>> factworkassignment;
ClassDiagram.Class>> Photo =>=>=> RelationalSchema.Table>> photo;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> CompUser =>=>=> RelationalSchema.Table>> compuser;
ClassDiagram.Class>> Manager =>=>=> RelationalSchema.Table>> manager;
ClassDiagram.Class>> FemaleUser =>=>=> RelationalSchema.Table>> femaleuser;
ClassDiagram.Class>> VideoStore =>=>=> RelationalSchema.Table>> videostore;
ClassDiagram.Class>> A =>=>=> RelationalSchema.Table>> a;
ClassDiagram.Class>> BlogUser =>=>=> RelationalSchema.Table>> bloguser;
ClassDiagram.Class>> Publisher =>=>=> RelationalSchema.Table>> publisher;
ClassDiagram.Class>> D =>=>=> RelationalSchema.Table>> d;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> LineItem =>=>=> RelationalSchema.Table>> lineitem;
ClassDiagram.Class>> MaleUser =>=>=> RelationalSchema.Table>> maleuser;
ClassDiagram.Class>> Exempt =>=>=> RelationalSchema.Table>> exempt;
ClassDiagram.Class>> Dependent =>=>=> RelationalSchema.Table>> dependent;
ClassDiagram.Class>> Magazine =>=>=> RelationalSchema.Table>> magazine;
ClassDiagram.Class>> CreditCard =>=>=> RelationalSchema.Table>> creditcard;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Request =>=>=> RelationalSchema.Table>> request;
ClassDiagram.Class>> FrequentFlierPlan =>=>=> RelationalSchema.Table>> frequentflierplan;
ClassDiagram.Class>> B =>=>=> RelationalSchema.Table>> b;
ClassDiagram.Class>> TransactionHistory =>=>=> RelationalSchema.Table>> transactionhistory;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> ShipRate =>=>=> RelationalSchema.Table>> shiprate;
ClassDiagram.Class>> Shop =>=>=> RelationalSchema.Table>> shop;
ClassDiagram.Class>> Bar =>=>=> RelationalSchema.Table>> bar;
ClassDiagram.Class>> Foo =>=>=> RelationalSchema.Table>> foo;
ClassDiagram.Class>> Producer =>=>=> RelationalSchema.Table>> producer;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> MyUserEntity =>=>=> RelationalSchema.Table>> myuserentity;
ClassDiagram.Class>> AddressEntity =>=>=> RelationalSchema.Table>> addressentity;
ClassDiagram.Class>> Contractor =>=>=> RelationalSchema.Table>> contractor;
ClassDiagram.Class>> Semester =>=>=> RelationalSchema.Table>> semester;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> EntityWithIdClass =>=>=> RelationalSchema.Table>> entitywithidclass;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Movie =>=>=> RelationalSchema.Table>> movie;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> C =>=>=> RelationalSchema.Table>> c;
ClassDiagram.Class>> Transaction =>=>=> RelationalSchema.Table>> transaction;
ClassDiagram.Class>> ScheduledAssignment =>=>=> RelationalSchema.Table>> scheduledassignment;
ClassDiagram.Class>> ManyOneEntity =>=>=> RelationalSchema.Table>> manyoneentity;
ClassDiagram.Class>> Lookup =>=>=> RelationalSchema.Table>> lookup;
ClassDiagram.Class>> SimpleEntity2 =>=>=> RelationalSchema.Table>> simpleentity2;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Magazine =>=>=> RelationalSchema.Table>> magazine;
ClassDiagram.Class>> SimpleEntity =>=>=> RelationalSchema.Table>> simpleentity;
ClassDiagram.Class>> ScheduleDay =>=>=> RelationalSchema.Table>> scheduleday;
ClassDiagram.Class>> ManyOneEntitySub =>=>=> RelationalSchema.Table>> manyoneentitysub;
ClassDiagram.Class>> Hardware =>=>=> RelationalSchema.Table>> hardware;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Publisher =>=>=> RelationalSchema.Table>> publisher;
ClassDiagram.Class>> Case =>=>=> RelationalSchema.Table>> case;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> ComplexF =>=>=> RelationalSchema.Table>> complexf;
ClassDiagram.Class>> ComplexB =>=>=> RelationalSchema.Table>> complexb;
ClassDiagram.Class>> Osoba =>=>=> RelationalSchema.Table>> osoba;
ClassDiagram.Class>> RuntimeTest3 =>=>=> RelationalSchema.Table>> runtimetest3;
ClassDiagram.Class>> ModRuntimeTest2 =>=>=> RelationalSchema.Table>> modruntimetest2;
ClassDiagram.Class>> QueryTest3 =>=>=> RelationalSchema.Table>> querytest3;
ClassDiagram.Class>> CircularFKPC2 =>=>=> RelationalSchema.Table>> circularfkpc2;
ClassDiagram.Class>> QTimeout =>=>=> RelationalSchema.Table>> qtimeout;
ClassDiagram.Class>> QueryTest2 =>=>=> RelationalSchema.Table>> querytest2;
ClassDiagram.Class>> Entity2 =>=>=> RelationalSchema.Table>> entity2;
ClassDiagram.Class>> ComplexG =>=>=> RelationalSchema.Table>> complexg;
ClassDiagram.Class>> ComplexC =>=>=> RelationalSchema.Table>> complexc;
ClassDiagram.Class>> SimpleAppIdPC =>=>=> RelationalSchema.Table>> simpleappidpc;
ClassDiagram.Class>> RuntimeTest2 =>=>=> RelationalSchema.Table>> runtimetest2;
ClassDiagram.Class>> CircularFKPC =>=>=> RelationalSchema.Table>> circularfkpc;
ClassDiagram.Class>> QueryTest4 =>=>=> RelationalSchema.Table>> querytest4;
ClassDiagram.Class>> ModRuntimeTest1 =>=>=> RelationalSchema.Table>> modruntimetest1;
ClassDiagram.Class>> Projekt =>=>=> RelationalSchema.Table>> projekt;
ClassDiagram.Class>> TransactionalClassPC =>=>=> RelationalSchema.Table>> transactionalclasspc;
ClassDiagram.Class>> ComplexE =>=>=> RelationalSchema.Table>> complexe;
ClassDiagram.Class>> RuntimeTest4 =>=>=> RelationalSchema.Table>> runtimetest4;
ClassDiagram.Class>> ComplexA =>=>=> RelationalSchema.Table>> complexa;
ClassDiagram.Class>> Entity1 =>=>=> RelationalSchema.Table>> entity1;
ClassDiagram.Class>> ComplexD =>=>=> RelationalSchema.Table>> complexd;
ClassDiagram.Class>> RuntimeTest5 =>=>=> RelationalSchema.Table>> runtimetest5;
ClassDiagram.Class>> CompoundAppIdPC =>=>=> RelationalSchema.Table>> compoundappidpc;
ClassDiagram.Class>> RuntimeTest1 =>=>=> RelationalSchema.Table>> runtimetest1;
ClassDiagram.Class>> QueryTest1 =>=>=> RelationalSchema.Table>> querytest1;
ClassDiagram.Class>> CrtRequisicaoEntity =>=>=> RelationalSchema.Table>> crtrequisicaoentity;
ClassDiagram.Class>> CrtRequisicaoChequePersEntity =>=>=> RelationalSchema.Table>> crtrequisicaochequepersentity;
ClassDiagram.Class>> CrtOperacaoEntity =>=>=> RelationalSchema.Table>> crtoperacaoentity;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Dependent =>=>=> RelationalSchema.Table>> dependent;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> NamedQueryEntity =>=>=> RelationalSchema.Table>> namedqueryentity;
ClassDiagram.Class>> OrderItem =>=>=> RelationalSchema.Table>> orderitem;
ClassDiagram.Class>> HungarianNotationFieldDuplicates =>=>=> RelationalSchema.Table>> hungariannotationfieldduplicates;
ClassDiagram.Class>> HungarianNotationFields =>=>=> RelationalSchema.Table>> hungariannotationfields;
ClassDiagram.Class>> OtherClass =>=>=> RelationalSchema.Table>> otherclass;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> People =>=>=> RelationalSchema.Table>> people;
ClassDiagram.Class>> PersistentRelation =>=>=> RelationalSchema.Table>> persistentrelation;
ClassDiagram.Class>> City =>=>=> RelationalSchema.Table>> city;
ClassDiagram.Class>> RelationGraph =>=>=> RelationalSchema.Table>> relationgraph;
ClassDiagram.Class>> UnidirectionalManyToOne =>=>=> RelationalSchema.Table>> unidirectionalmanytoone;
ClassDiagram.Class>> ChildClass =>=>=> RelationalSchema.Table>> childclass;
ClassDiagram.Class>> ChainEntityA =>=>=> RelationalSchema.Table>> chainentitya;
ClassDiagram.Class>> EntityBInverseEager =>=>=> RelationalSchema.Table>> entitybinverseeager;
ClassDiagram.Class>> TargetedIFaceRelationParent =>=>=> RelationalSchema.Table>> targetedifacerelationparent;
ClassDiagram.Class>> EntityCInverseEager =>=>=> RelationalSchema.Table>> entitycinverseeager;
ClassDiagram.Class>> LRSEntity =>=>=> RelationalSchema.Table>> lrsentity;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> OneManyEagerChild =>=>=> RelationalSchema.Table>> onemanyeagerchild;
ClassDiagram.Class>> ConcurrentEntityLeft =>=>=> RelationalSchema.Table>> concurrententityleft;
ClassDiagram.Class>> CascadingOneManyParent =>=>=> RelationalSchema.Table>> cascadingonemanyparent;
ClassDiagram.Class>> GrandChild =>=>=> RelationalSchema.Table>> grandchild;
ClassDiagram.Class>> PPhone =>=>=> RelationalSchema.Table>> pphone;
ClassDiagram.Class>> BasicEntity =>=>=> RelationalSchema.Table>> basicentity;
ClassDiagram.Class>> VCS =>=>=> RelationalSchema.Table>> vcs;
ClassDiagram.Class>> MapKeyParent =>=>=> RelationalSchema.Table>> mapkeyparent;
ClassDiagram.Class>> C =>=>=> RelationalSchema.Table>> c;
ClassDiagram.Class>> HandlerToHandlerMapInstance =>=>=> RelationalSchema.Table>> handlertohandlermapinstance;
ClassDiagram.Class>> IdOrderedOneManyParent =>=>=> RelationalSchema.Table>> idorderedonemanyparent;
ClassDiagram.Class>> EntityAInverseEager =>=>=> RelationalSchema.Table>> entityainverseeager;
ClassDiagram.Class>> BidiParent =>=>=> RelationalSchema.Table>> bidiparent;
ClassDiagram.Class>> CascadingOneManyChild =>=>=> RelationalSchema.Table>> cascadingonemanychild;
ClassDiagram.Class>> TblChild =>=>=> RelationalSchema.Table>> tblchild;
ClassDiagram.Class>> AText =>=>=> RelationalSchema.Table>> atext;
ClassDiagram.Class>> OneOneChild =>=>=> RelationalSchema.Table>> oneonechild;
ClassDiagram.Class>> VC =>=>=> RelationalSchema.Table>> vc;
ClassDiagram.Class>> AEvident =>=>=> RelationalSchema.Table>> aevident;
ClassDiagram.Class>> ACase =>=>=> RelationalSchema.Table>> acase;
ClassDiagram.Class>> MapKeyChild =>=>=> RelationalSchema.Table>> mapkeychild;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> EntityDInverseEager =>=>=> RelationalSchema.Table>> entitydinverseeager;
ClassDiagram.Class>> Child =>=>=> RelationalSchema.Table>> child;
ClassDiagram.Class>> IdOrderedOneManyChild =>=>=> RelationalSchema.Table>> idorderedonemanychild;
ClassDiagram.Class>> RelationToHandlerMapInstance =>=>=> RelationalSchema.Table>> relationtohandlermapinstance;
ClassDiagram.Class>> InheritanceHierarchyConcrete =>=>=> RelationalSchema.Table>> inheritancehierarchyconcrete;
ClassDiagram.Class>> OneManyLazyChild =>=>=> RelationalSchema.Table>> onemanylazychild;
ClassDiagram.Class>> EntityA2InverseEager =>=>=> RelationalSchema.Table>> entitya2inverseeager;
ClassDiagram.Class>> HandlerToRelationMapInstance =>=>=> RelationalSchema.Table>> handlertorelationmapinstance;
ClassDiagram.Class>> CM =>=>=> RelationalSchema.Table>> cm;
ClassDiagram.Class>> D =>=>=> RelationalSchema.Table>> d;
ClassDiagram.Class>> EntityA1InverseEager =>=>=> RelationalSchema.Table>> entitya1inverseeager;
ClassDiagram.Class>> Util1xmRt =>=>=> RelationalSchema.Table>> util1xmrt;
ClassDiagram.Class>> BidiChild =>=>=> RelationalSchema.Table>> bidichild;
ClassDiagram.Class>> ChildChildClass =>=>=> RelationalSchema.Table>> childchildclass;
ClassDiagram.Class>> OneManyEagerParent =>=>=> RelationalSchema.Table>> onemanyeagerparent;
ClassDiagram.Class>> ChainEntityB =>=>=> RelationalSchema.Table>> chainentityb;
ClassDiagram.Class>> GrandChildClass =>=>=> RelationalSchema.Table>> grandchildclass;
ClassDiagram.Class>> ConcurrentEntityRight =>=>=> RelationalSchema.Table>> concurrententityright;
ClassDiagram.Class>> PPerson =>=>=> RelationalSchema.Table>> pperson;
ClassDiagram.Class>> OneOneParent =>=>=> RelationalSchema.Table>> oneoneparent;
ClassDiagram.Class>> HandlerCollectionInstance =>=>=> RelationalSchema.Table>> handlercollectioninstance;
ClassDiagram.Class>> DataStoreManyOneIdOwner =>=>=> RelationalSchema.Table>> datastoremanyoneidowner;
ClassDiagram.Class>> RelationToRelationMapInstance =>=>=> RelationalSchema.Table>> relationtorelationmapinstance;
ClassDiagram.Class>> TblGrandChild =>=>=> RelationalSchema.Table>> tblgrandchild;
ClassDiagram.Class>> Parent =>=>=> RelationalSchema.Table>> parent;
ClassDiagram.Class>> ParentClass =>=>=> RelationalSchema.Table>> parentclass;
ClassDiagram.Class>> TblParent =>=>=> RelationalSchema.Table>> tblparent;
ClassDiagram.Class>> ChainEntityC =>=>=> RelationalSchema.Table>> chainentityc;
ClassDiagram.Class>> MultipleSameTypedEmbedded =>=>=> RelationalSchema.Table>> multiplesametypedembedded;
ClassDiagram.Class>> ManyOneCompoundIdOwner =>=>=> RelationalSchema.Table>> manyonecompoundidowner;
ClassDiagram.Class>> InheritanceHierarchyAbstract =>=>=> RelationalSchema.Table>> inheritancehierarchyabstract;
ClassDiagram.Class>> ManyOneIdOwner =>=>=> RelationalSchema.Table>> manyoneidowner;
ClassDiagram.Class>> Util1xmLf =>=>=> RelationalSchema.Table>> util1xmlf;
ClassDiagram.Class>> DataStoreBasicEntity =>=>=> RelationalSchema.Table>> datastorebasicentity;
ClassDiagram.Class>> IncompleteRelationshipSubclass =>=>=> RelationalSchema.Table>> incompleterelationshipsubclass;
ClassDiagram.Class>> LrsEntityB =>=>=> RelationalSchema.Table>> lrsentityb;
ClassDiagram.Class>> IncompleteRelationshipParentEntity =>=>=> RelationalSchema.Table>> incompleterelationshipparententity;
ClassDiagram.Class>> IncompleteRelationshipChildEntity =>=>=> RelationalSchema.Table>> incompleterelationshipchildentity;
ClassDiagram.Class>> LrsEntityA =>=>=> RelationalSchema.Table>> lrsentitya;
ClassDiagram.Class>> E =>=>=> RelationalSchema.Table>> e;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Lecturer =>=>=> RelationalSchema.Table>> lecturer;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> MixedMappingLocation =>=>=> RelationalSchema.Table>> mixedmappinglocation;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> AccountingHierarchyRate =>=>=> RelationalSchema.Table>> accountinghierarchyrate;
ClassDiagram.Class>> AccountingHierarchy =>=>=> RelationalSchema.Table>> accountinghierarchy;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> PersonTest =>=>=> RelationalSchema.Table>> persontest;
ClassDiagram.Class>> DepartmentTest =>=>=> RelationalSchema.Table>> departmenttest;
ClassDiagram.Class>> OrderedNameEntity =>=>=> RelationalSchema.Table>> orderednameentity;
ClassDiagram.Class>> OrderedOneToManyEntity =>=>=> RelationalSchema.Table>> orderedonetomanyentity;
ClassDiagram.Class>> OrderedElementEntity =>=>=> RelationalSchema.Table>> orderedelemententity;
ClassDiagram.Class>> UnorderedNameEntity =>=>=> RelationalSchema.Table>> unorderednameentity;
ClassDiagram.Class>> OrderedManyToManyEntity =>=>=> RelationalSchema.Table>> orderedmanytomanyentity;
ClassDiagram.Class>> LongVersionEntity =>=>=> RelationalSchema.Table>> longversionentity;
ClassDiagram.Class>> ShortVersionEntity =>=>=> RelationalSchema.Table>> shortversionentity;
ClassDiagram.Class>> PrimativeShortVersionEntity =>=>=> RelationalSchema.Table>> primativeshortversionentity;
ClassDiagram.Class>> TimestampVersionEntity =>=>=> RelationalSchema.Table>> timestampversionentity;
ClassDiagram.Class>> PrimativeLongVersionEntity =>=>=> RelationalSchema.Table>> primativelongversionentity;
ClassDiagram.Class>> ChildVersionEntity =>=>=> RelationalSchema.Table>> childversionentity;
ClassDiagram.Class>> Document =>=>=> RelationalSchema.Table>> document;
ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> Ent1 =>=>=> RelationalSchema.Table>> ent1;
ClassDiagram.Class>> EntityD3 =>=>=> RelationalSchema.Table>> entityd3;
ClassDiagram.Class>> EntityI =>=>=> RelationalSchema.Table>> entityi;
ClassDiagram.Class>> EntityE =>=>=> RelationalSchema.Table>> entitye;
ClassDiagram.Class>> EntityI3 =>=>=> RelationalSchema.Table>> entityi3;
ClassDiagram.Class>> Dog2 =>=>=> RelationalSchema.Table>> dog2;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> EntityD =>=>=> RelationalSchema.Table>> entityd;
ClassDiagram.Class>> EntityI2 =>=>=> RelationalSchema.Table>> entityi2;
ClassDiagram.Class>> Car2 =>=>=> RelationalSchema.Table>> car2;
ClassDiagram.Class>> Chevrolet =>=>=> RelationalSchema.Table>> chevrolet;
ClassDiagram.Class>> EntityD2 =>=>=> RelationalSchema.Table>> entityd2;
ClassDiagram.Class>> Animal =>=>=> RelationalSchema.Table>> animal;
ClassDiagram.Class>> Dog =>=>=> RelationalSchema.Table>> dog;
ClassDiagram.Class>> EntityH =>=>=> RelationalSchema.Table>> entityh;
ClassDiagram.Class>> Cat =>=>=> RelationalSchema.Table>> cat;
ClassDiagram.Class>> EntityF =>=>=> RelationalSchema.Table>> entityf;
ClassDiagram.Class>> Cat2 =>=>=> RelationalSchema.Table>> cat2;
ClassDiagram.Class>> EntityI4 =>=>=> RelationalSchema.Table>> entityi4;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> EntityD =>=>=> RelationalSchema.Table>> entityd;
ClassDiagram.Class>> EntityD4 =>=>=> RelationalSchema.Table>> entityd4;
ClassDiagram.Class>> EntityE =>=>=> RelationalSchema.Table>> entitye;
ClassDiagram.Class>> EntityG =>=>=> RelationalSchema.Table>> entityg;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> EntityD3 =>=>=> RelationalSchema.Table>> entityd3;
ClassDiagram.Class>> EntityF =>=>=> RelationalSchema.Table>> entityf;
ClassDiagram.Class>> EntityD2 =>=>=> RelationalSchema.Table>> entityd2;
ClassDiagram.Class>> Car =>=>=> RelationalSchema.Table>> car;
ClassDiagram.Class>> EntityD4 =>=>=> RelationalSchema.Table>> entityd4;
ClassDiagram.Class>> Pontiac =>=>=> RelationalSchema.Table>> pontiac;
ClassDiagram.Class>> Chevrolet2 =>=>=> RelationalSchema.Table>> chevrolet2;
ClassDiagram.Class>> Animal2 =>=>=> RelationalSchema.Table>> animal2;
ClassDiagram.Class>> EntityG =>=>=> RelationalSchema.Table>> entityg;
ClassDiagram.Class>> Pontiac2 =>=>=> RelationalSchema.Table>> pontiac2;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> ByteArrayHolder =>=>=> RelationalSchema.Table>> bytearrayholder;
ClassDiagram.Class>> EnumSetOwner =>=>=> RelationalSchema.Table>> enumsetowner;
ClassDiagram.Class>> EnumFieldType =>=>=> RelationalSchema.Table>> enumfieldtype;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> FGAddress =>=>=> RelationalSchema.Table>> fgaddress;
ClassDiagram.Class>> FGDepartment =>=>=> RelationalSchema.Table>> fgdepartment;
ClassDiagram.Class>> FGManager =>=>=> RelationalSchema.Table>> fgmanager;
ClassDiagram.Class>> FGEmployee =>=>=> RelationalSchema.Table>> fgemployee;
ClassDiagram.Class>> XmlUncacheableEntity =>=>=> RelationalSchema.Table>> xmluncacheableentity;
ClassDiagram.Class>> UncacheableEntity =>=>=> RelationalSchema.Table>> uncacheableentity;
ClassDiagram.Class>> CacheableEntity =>=>=> RelationalSchema.Table>> cacheableentity;
ClassDiagram.Class>> XmlCacheableEntity =>=>=> RelationalSchema.Table>> xmlcacheableentity;
ClassDiagram.Class>> NegatedCachableEntity =>=>=> RelationalSchema.Table>> negatedcachableentity;
ClassDiagram.Class>> ChildUncacheable =>=>=> RelationalSchema.Table>> childuncacheable;
ClassDiagram.Class>> ParentUnspecifiedEntity =>=>=> RelationalSchema.Table>> parentunspecifiedentity;
ClassDiagram.Class>> UnspecifiedEntity =>=>=> RelationalSchema.Table>> unspecifiedentity;
ClassDiagram.Class>> NegatedUncacheableEntity =>=>=> RelationalSchema.Table>> negateduncacheableentity;
ClassDiagram.Class>> ExplicitFieldAccess =>=>=> RelationalSchema.Table>> explicitfieldaccess;
ClassDiagram.Class>> ExplicitFieldAccessMixed =>=>=> RelationalSchema.Table>> explicitfieldaccessmixed;
ClassDiagram.Class>> ExplicitPropertyAccess =>=>=> RelationalSchema.Table>> explicitpropertyaccess;
ClassDiagram.Class>> MdrTestEntity =>=>=> RelationalSchema.Table>> mdrtestentity;
ClassDiagram.Class>> ArrayMember =>=>=> RelationalSchema.Table>> arraymember;
ClassDiagram.Class>> ImplicitFieldAccessSubclass =>=>=> RelationalSchema.Table>> implicitfieldaccesssubclass;
ClassDiagram.Class>> ImplicitFieldAccessBase =>=>=> RelationalSchema.Table>> implicitfieldaccessbase;
ClassDiagram.Class>> ExplicitPropertyAccessMixed =>=>=> RelationalSchema.Table>> explicitpropertyaccessmixed;
ClassDiagram.Class>> RuntimeTest1 =>=>=> RelationalSchema.Table>> runtimetest1;
ClassDiagram.Class>> MetaTest3 =>=>=> RelationalSchema.Table>> metatest3;
ClassDiagram.Class>> MetaTest7 =>=>=> RelationalSchema.Table>> metatest7;
ClassDiagram.Class>> OrderByPCRel =>=>=> RelationalSchema.Table>> orderbypcrel;
ClassDiagram.Class>> ValueStrategyPC =>=>=> RelationalSchema.Table>> valuestrategypc;
ClassDiagram.Class>> ExternalValues =>=>=> RelationalSchema.Table>> externalvalues;
ClassDiagram.Class>> MetaTest2 =>=>=> RelationalSchema.Table>> metatest2;
ClassDiagram.Class>> FieldOrderPCSubclass =>=>=> RelationalSchema.Table>> fieldorderpcsubclass;
ClassDiagram.Class>> OrderByPCRelSub =>=>=> RelationalSchema.Table>> orderbypcrelsub;
ClassDiagram.Class>> MetaTest6 =>=>=> RelationalSchema.Table>> metatest6;
ClassDiagram.Class>> OrderByPC =>=>=> RelationalSchema.Table>> orderbypc;
ClassDiagram.Class>> SequenceAssigned3 =>=>=> RelationalSchema.Table>> sequenceassigned3;
ClassDiagram.Class>> FieldOrderPC =>=>=> RelationalSchema.Table>> fieldorderpc;
ClassDiagram.Class>> RuntimeTest2 =>=>=> RelationalSchema.Table>> runtimetest2;
ClassDiagram.Class>> TransactionalClassPC =>=>=> RelationalSchema.Table>> transactionalclasspc;
ClassDiagram.Class>> MetaTest4 =>=>=> RelationalSchema.Table>> metatest4;
ClassDiagram.Class>> RuntimeTest3 =>=>=> RelationalSchema.Table>> runtimetest3;
ClassDiagram.Class>> SequenceAssigned =>=>=> RelationalSchema.Table>> sequenceassigned;
ClassDiagram.Class>> MetaTest1 =>=>=> RelationalSchema.Table>> metatest1;
ClassDiagram.Class>> MetaTest5 =>=>=> RelationalSchema.Table>> metatest5;
ClassDiagram.Class>> SequenceAssigned2 =>=>=> RelationalSchema.Table>> sequenceassigned2;
ClassDiagram.Class>> NonPersistentFieldsPC =>=>=> RelationalSchema.Table>> nonpersistentfieldspc;
ClassDiagram.Class>> TestMetamodelWithEnum =>=>=> RelationalSchema.Table>> testmetamodelwithenum;
ClassDiagram.Class>> PObject =>=>=> RelationalSchema.Table>> pobject;
ClassDiagram.Class>> DetachmentOneManyParent =>=>=> RelationalSchema.Table>> detachmentonemanyparent;
ClassDiagram.Class>> Record =>=>=> RelationalSchema.Table>> record;
ClassDiagram.Class>> DetachmentOneManyChild =>=>=> RelationalSchema.Table>> detachmentonemanychild;
ClassDiagram.Class>> DMCustomerInventory =>=>=> RelationalSchema.Table>> dmcustomerinventory;
ClassDiagram.Class>> SimpleC =>=>=> RelationalSchema.Table>> simplec;
ClassDiagram.Class>> SimpleB =>=>=> RelationalSchema.Table>> simpleb;
ClassDiagram.Class>> DMCustomer =>=>=> RelationalSchema.Table>> dmcustomer;
ClassDiagram.Class>> SimpleRef =>=>=> RelationalSchema.Table>> simpleref;
ClassDiagram.Class>> NoDetachedStateEntityFieldAccess =>=>=> RelationalSchema.Table>> nodetachedstateentityfieldaccess;
ClassDiagram.Class>> NoDetachedStateEntityPropertyAccess =>=>=> RelationalSchema.Table>> nodetachedstateentitypropertyaccess;
ClassDiagram.Class>> DMItem =>=>=> RelationalSchema.Table>> dmitem;
ClassDiagram.Class>> SimpleA =>=>=> RelationalSchema.Table>> simplea;
ClassDiagram.Class>> ResWordEntity =>=>=> RelationalSchema.Table>> reswordentity;
ClassDiagram.Class>> EntityVeryLongNames =>=>=> RelationalSchema.Table>> entityverylongnames;
ClassDiagram.Class>> EntityReservedWords =>=>=> RelationalSchema.Table>> entityreservedwords;
ClassDiagram.Class>> EmbeddableSuperSub =>=>=> RelationalSchema.Table>> embeddablesupersub;
ClassDiagram.Class>> AnnoTest2 =>=>=> RelationalSchema.Table>> annotest2;
ClassDiagram.Class>> PropertyAccess1 =>=>=> RelationalSchema.Table>> propertyaccess1;
ClassDiagram.Class>> Store1 =>=>=> RelationalSchema.Table>> store1;
ClassDiagram.Class>> Schedule =>=>=> RelationalSchema.Table>> schedule;
ClassDiagram.Class>> Site =>=>=> RelationalSchema.Table>> site;
ClassDiagram.Class>> FlightSchedule =>=>=> RelationalSchema.Table>> flightschedule;
ClassDiagram.Class>> Flat2 =>=>=> RelationalSchema.Table>> flat2;
ClassDiagram.Class>> Entity2 =>=>=> RelationalSchema.Table>> entity2;
ClassDiagram.Class>> TablePerClass2 =>=>=> RelationalSchema.Table>> tableperclass2;
ClassDiagram.Class>> AnnoTest3 =>=>=> RelationalSchema.Table>> annotest3;
ClassDiagram.Class>> EmbedOwner =>=>=> RelationalSchema.Table>> embedowner;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Store =>=>=> RelationalSchema.Table>> store;
ClassDiagram.Class>> ContractEmployee =>=>=> RelationalSchema.Table>> contractemployee;
ClassDiagram.Class>> AnnoTest1 =>=>=> RelationalSchema.Table>> annotest1;
ClassDiagram.Class>> EmbeddedIdEntity =>=>=> RelationalSchema.Table>> embeddedidentity;
ClassDiagram.Class>> TxRollbackEntity =>=>=> RelationalSchema.Table>> txrollbackentity;
ClassDiagram.Class>> TablePerClass1 =>=>=> RelationalSchema.Table>> tableperclass1;
ClassDiagram.Class>> Site1 =>=>=> RelationalSchema.Table>> site1;
ClassDiagram.Class>> OrderByEntity =>=>=> RelationalSchema.Table>> orderbyentity;
ClassDiagram.Class>> Generator =>=>=> RelationalSchema.Table>> generator;
ClassDiagram.Class>> Flat1 =>=>=> RelationalSchema.Table>> flat1;
ClassDiagram.Class>> Entity1 =>=>=> RelationalSchema.Table>> entity1;
ClassDiagram.Class>> LifeCycleDDEntitySub =>=>=> RelationalSchema.Table>> lifecycleddentitysub;
ClassDiagram.Class>> FlightSchedule =>=>=> RelationalSchema.Table>> flightschedule;
ClassDiagram.Class>> LifeCycleDDEntity2 =>=>=> RelationalSchema.Table>> lifecycleddentity2;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Entity1 =>=>=> RelationalSchema.Table>> entity1;
ClassDiagram.Class>> TxRollbackEntity =>=>=> RelationalSchema.Table>> txrollbackentity;
ClassDiagram.Class>> ContractEmployee =>=>=> RelationalSchema.Table>> contractemployee;
ClassDiagram.Class>> Schedule =>=>=> RelationalSchema.Table>> schedule;
ClassDiagram.Class>> Entity2 =>=>=> RelationalSchema.Table>> entity2;
ClassDiagram.Class>> LifeCycleDDEntity =>=>=> RelationalSchema.Table>> lifecycleddentity;
ClassDiagram.Class>> PColl_EntityStringEager =>=>=> RelationalSchema.Table>> pcoll_entitystringeager;
ClassDiagram.Class>> PColl_EntityA =>=>=> RelationalSchema.Table>> pcoll_entitya;
ClassDiagram.Class>> PColl_EntityA1 =>=>=> RelationalSchema.Table>> pcoll_entitya1;
ClassDiagram.Class>> PColl_EntityStringLazy =>=>=> RelationalSchema.Table>> pcoll_entitystringlazy;
ClassDiagram.Class>> PColl_EntityC =>=>=> RelationalSchema.Table>> pcoll_entityc;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> DerivedA =>=>=> RelationalSchema.Table>> deriveda;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> DerivedB =>=>=> RelationalSchema.Table>> derivedb;
ClassDiagram.Class>> PColl_EntityB =>=>=> RelationalSchema.Table>> pcoll_entityb;
ClassDiagram.Class>> TopLevel =>=>=> RelationalSchema.Table>> toplevel;
ClassDiagram.Class>> SimpleEntity =>=>=> RelationalSchema.Table>> simpleentity;
ClassDiagram.Class>> OrderedOneManyChild =>=>=> RelationalSchema.Table>> orderedonemanychild;
ClassDiagram.Class>> Purchase =>=>=> RelationalSchema.Table>> purchase;
ClassDiagram.Class>> MapHolder =>=>=> RelationalSchema.Table>> mapholder;
ClassDiagram.Class>> CachedManager =>=>=> RelationalSchema.Table>> cachedmanager;
ClassDiagram.Class>> CachedPerson =>=>=> RelationalSchema.Table>> cachedperson;
ClassDiagram.Class>> CachedEmployee =>=>=> RelationalSchema.Table>> cachedemployee;
ClassDiagram.Class>> CascadeChild =>=>=> RelationalSchema.Table>> cascadechild;
ClassDiagram.Class>> IdentityIdClass =>=>=> RelationalSchema.Table>> identityidclass;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> OrderedOneManyParent =>=>=> RelationalSchema.Table>> orderedonemanyparent;
ClassDiagram.Class>> CachedEntityStatistics =>=>=> RelationalSchema.Table>> cachedentitystatistics;
ClassDiagram.Class>> OptimisticLockInstance =>=>=> RelationalSchema.Table>> optimisticlockinstance;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> CacheObjectB =>=>=> RelationalSchema.Table>> cacheobjectb;
ClassDiagram.Class>> CacheObjectF =>=>=> RelationalSchema.Table>> cacheobjectf;
ClassDiagram.Class>> SelfReferencingCacheTestObject =>=>=> RelationalSchema.Table>> selfreferencingcachetestobject;
ClassDiagram.Class>> AttachF =>=>=> RelationalSchema.Table>> attachf;
ClassDiagram.Class>> CacheObjectJ =>=>=> RelationalSchema.Table>> cacheobjectj;
ClassDiagram.Class>> AttachB =>=>=> RelationalSchema.Table>> attachb;
ClassDiagram.Class>> CacheObjectAChild1 =>=>=> RelationalSchema.Table>> cacheobjectachild1;
ClassDiagram.Class>> EmbeddingOwnerEntity =>=>=> RelationalSchema.Table>> embeddingownerentity;
ClassDiagram.Class>> AttachC =>=>=> RelationalSchema.Table>> attachc;
ClassDiagram.Class>> RuntimeTest1 =>=>=> RelationalSchema.Table>> runtimetest1;
ClassDiagram.Class>> CacheObjectC =>=>=> RelationalSchema.Table>> cacheobjectc;
ClassDiagram.Class>> CacheObjectG =>=>=> RelationalSchema.Table>> cacheobjectg;
ClassDiagram.Class>> PObject =>=>=> RelationalSchema.Table>> pobject;
ClassDiagram.Class>> M2MEntityE =>=>=> RelationalSchema.Table>> m2mentitye;
ClassDiagram.Class>> AttachE =>=>=> RelationalSchema.Table>> attache;
ClassDiagram.Class>> CacheObjectBChild1 =>=>=> RelationalSchema.Table>> cacheobjectbchild1;
ClassDiagram.Class>> AttachA =>=>=> RelationalSchema.Table>> attacha;
ClassDiagram.Class>> CacheObjectAChild2 =>=>=> RelationalSchema.Table>> cacheobjectachild2;
ClassDiagram.Class>> CacheObjectA =>=>=> RelationalSchema.Table>> cacheobjecta;
ClassDiagram.Class>> AppIdCacheObject =>=>=> RelationalSchema.Table>> appidcacheobject;
ClassDiagram.Class>> CacheObjectE =>=>=> RelationalSchema.Table>> cacheobjecte;
ClassDiagram.Class>> FlushDataCacheObject =>=>=> RelationalSchema.Table>> flushdatacacheobject;
ClassDiagram.Class>> CacheObjectWithExternalizedFields =>=>=> RelationalSchema.Table>> cacheobjectwithexternalizedfields;
ClassDiagram.Class>> CacheObjectD =>=>=> RelationalSchema.Table>> cacheobjectd;
ClassDiagram.Class>> TransactionalClassPC =>=>=> RelationalSchema.Table>> transactionalclasspc;
ClassDiagram.Class>> M2MEntityF =>=>=> RelationalSchema.Table>> m2mentityf;
ClassDiagram.Class>> EmbeddedEntity =>=>=> RelationalSchema.Table>> embeddedentity;
ClassDiagram.Class>> AttachD =>=>=> RelationalSchema.Table>> attachd;
ClassDiagram.Class>> CacheObjectH =>=>=> RelationalSchema.Table>> cacheobjecth;
ClassDiagram.Class>> RuntimeTest2 =>=>=> RelationalSchema.Table>> runtimetest2;
ClassDiagram.Class>> CascadeParent =>=>=> RelationalSchema.Table>> cascadeparent;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> SimpleManagedInterface =>=>=> RelationalSchema.Table>> simplemanagedinterface;
ClassDiagram.Class>> MixedInterface =>=>=> RelationalSchema.Table>> mixedinterface;
ClassDiagram.Class>> ManagedInterfaceSup =>=>=> RelationalSchema.Table>> managedinterfacesup;
ClassDiagram.Class>> ManagedIface =>=>=> RelationalSchema.Table>> managediface;
ClassDiagram.Class>> MixedInterfaceImpl =>=>=> RelationalSchema.Table>> mixedinterfaceimpl;
ClassDiagram.Class>> ManagedInterfaceOwner =>=>=> RelationalSchema.Table>> managedinterfaceowner;
ClassDiagram.Class>> NonMappedInterfaceImpl =>=>=> RelationalSchema.Table>> nonmappedinterfaceimpl;
ClassDiagram.Class>> CascadesEntity =>=>=> RelationalSchema.Table>> cascadesentity;
ClassDiagram.Class>> AnnoExceptionEntity =>=>=> RelationalSchema.Table>> annoexceptionentity;
ClassDiagram.Class>> Node =>=>=> RelationalSchema.Table>> node;
ClassDiagram.Class>> XmlOverrideToOneEntity =>=>=> RelationalSchema.Table>> xmloverridetooneentity;
ClassDiagram.Class>> XmlOverrideEntity =>=>=> RelationalSchema.Table>> xmloverrideentity;
ClassDiagram.Class>> CascadePersistEntity =>=>=> RelationalSchema.Table>> cascadepersistentity;
ClassDiagram.Class>> Edge =>=>=> RelationalSchema.Table>> edge;
ClassDiagram.Class>> PUDEntityB =>=>=> RelationalSchema.Table>> pudentityb;
ClassDiagram.Class>> PUDEntityA02 =>=>=> RelationalSchema.Table>> pudentitya02;
ClassDiagram.Class>> PUDEntityAE01 =>=>=> RelationalSchema.Table>> pudentityae01;
ClassDiagram.Class>> PUDEntityA01 =>=>=> RelationalSchema.Table>> pudentitya01;
ClassDiagram.Class>> Vertex =>=>=> RelationalSchema.Table>> vertex;
ClassDiagram.Class>> VertexType =>=>=> RelationalSchema.Table>> vertextype;
ClassDiagram.Class>> IdClassEntity =>=>=> RelationalSchema.Table>> idclassentity;
ClassDiagram.Class>> DerivedEntityFromMappedSuperWithoutId =>=>=> RelationalSchema.Table>> derivedentityfrommappedsuperwithoutid;
ClassDiagram.Class>> SituationDA =>=>=> RelationalSchema.Table>> situationda;
ClassDiagram.Class>> ValuableItemDA =>=>=> RelationalSchema.Table>> valuableitemda;
ClassDiagram.Class>> PIdJTSDMSCLeafC =>=>=> RelationalSchema.Table>> pidjtsdmscleafc;
ClassDiagram.Class>> PIdJTSDMSCLeafD2 =>=>=> RelationalSchema.Table>> pidjtsdmscleafd2;
ClassDiagram.Class>> PIdJTSDMSCLeafB1 =>=>=> RelationalSchema.Table>> pidjtsdmscleafb1;
ClassDiagram.Class>> PIdJTSDMSCEntityD =>=>=> RelationalSchema.Table>> pidjtsdmscentityd;
ClassDiagram.Class>> PIdJTSDMSCLeafD1 =>=>=> RelationalSchema.Table>> pidjtsdmscleafd1;
ClassDiagram.Class>> PIdJTSDMSCEntityB =>=>=> RelationalSchema.Table>> pidjtsdmscentityb;
ClassDiagram.Class>> PIdJTSDMSCRootEntity =>=>=> RelationalSchema.Table>> pidjtsdmscrootentity;
ClassDiagram.Class>> PIdJTSDMSCLeafA =>=>=> RelationalSchema.Table>> pidjtsdmscleafa;
ClassDiagram.Class>> PIdJTSDMSCLeafB2 =>=>=> RelationalSchema.Table>> pidjtsdmscleafb2;
ClassDiagram.Class>> PIdJTCDMSCEntityD =>=>=> RelationalSchema.Table>> pidjtcdmscentityd;
ClassDiagram.Class>> PIdJTCDMSCLeafD1 =>=>=> RelationalSchema.Table>> pidjtcdmscleafd1;
ClassDiagram.Class>> PIdJTCDMSCRootEntity =>=>=> RelationalSchema.Table>> pidjtcdmscrootentity;
ClassDiagram.Class>> PIdJTCDMSCLeafB2 =>=>=> RelationalSchema.Table>> pidjtcdmscleafb2;
ClassDiagram.Class>> PIdJTCDMSCLeafC =>=>=> RelationalSchema.Table>> pidjtcdmscleafc;
ClassDiagram.Class>> PIdJTCDMSCLeafD2 =>=>=> RelationalSchema.Table>> pidjtcdmscleafd2;
ClassDiagram.Class>> PIdJTCDMSCLeafA =>=>=> RelationalSchema.Table>> pidjtcdmscleafa;
ClassDiagram.Class>> PIdJTCDMSCEntityB =>=>=> RelationalSchema.Table>> pidjtcdmscentityb;
ClassDiagram.Class>> PIdJTCDMSCLeafB1 =>=>=> RelationalSchema.Table>> pidjtcdmscleafb1;
ClassDiagram.Class>> PIdJTIDMSCLeafD1 =>=>=> RelationalSchema.Table>> pidjtidmscleafd1;
ClassDiagram.Class>> PIdJTIDMSCLeafC =>=>=> RelationalSchema.Table>> pidjtidmscleafc;
ClassDiagram.Class>> PIdJTIDMSCEntityB =>=>=> RelationalSchema.Table>> pidjtidmscentityb;
ClassDiagram.Class>> PIdJTIDMSCLeafB2 =>=>=> RelationalSchema.Table>> pidjtidmscleafb2;
ClassDiagram.Class>> PIdJTIDMSCLeafA =>=>=> RelationalSchema.Table>> pidjtidmscleafa;
ClassDiagram.Class>> PIdJTIDMSCRootEntity =>=>=> RelationalSchema.Table>> pidjtidmscrootentity;
ClassDiagram.Class>> PIdJTIDMSCLeafD2 =>=>=> RelationalSchema.Table>> pidjtidmscleafd2;
ClassDiagram.Class>> PIdJTIDMSCEntityD =>=>=> RelationalSchema.Table>> pidjtidmscentityd;
ClassDiagram.Class>> PIdJTIDMSCLeafB1 =>=>=> RelationalSchema.Table>> pidjtidmscleafb1;
ClassDiagram.Class>> PIdSTCDMSCLeafD2 =>=>=> RelationalSchema.Table>> pidstcdmscleafd2;
ClassDiagram.Class>> PIdSTCDMSCLeafC =>=>=> RelationalSchema.Table>> pidstcdmscleafc;
ClassDiagram.Class>> PIdSTCDMSCRootEntity =>=>=> RelationalSchema.Table>> pidstcdmscrootentity;
ClassDiagram.Class>> PIdSTCDMSCLeafB1 =>=>=> RelationalSchema.Table>> pidstcdmscleafb1;
ClassDiagram.Class>> PIdSTCDMSCEntityB =>=>=> RelationalSchema.Table>> pidstcdmscentityb;
ClassDiagram.Class>> PIdSTCDMSCLeafD1 =>=>=> RelationalSchema.Table>> pidstcdmscleafd1;
ClassDiagram.Class>> PIdSTCDMSCEntityD =>=>=> RelationalSchema.Table>> pidstcdmscentityd;
ClassDiagram.Class>> PIdSTCDMSCLeafB2 =>=>=> RelationalSchema.Table>> pidstcdmscleafb2;
ClassDiagram.Class>> PIdSTCDMSCLeafA =>=>=> RelationalSchema.Table>> pidstcdmscleafa;
ClassDiagram.Class>> PIdSTIDMSCLeafD2 =>=>=> RelationalSchema.Table>> pidstidmscleafd2;
ClassDiagram.Class>> PIdSTIDMSCRootEntity =>=>=> RelationalSchema.Table>> pidstidmscrootentity;
ClassDiagram.Class>> PIdSTIDMSCEntityD =>=>=> RelationalSchema.Table>> pidstidmscentityd;
ClassDiagram.Class>> PIdSTIDMSCLeafC =>=>=> RelationalSchema.Table>> pidstidmscleafc;
ClassDiagram.Class>> PIdSTIDMSCLeafB1 =>=>=> RelationalSchema.Table>> pidstidmscleafb1;
ClassDiagram.Class>> PIdSTIDMSCEntityB =>=>=> RelationalSchema.Table>> pidstidmscentityb;
ClassDiagram.Class>> PIdSTIDMSCLeafD1 =>=>=> RelationalSchema.Table>> pidstidmscleafd1;
ClassDiagram.Class>> PIdSTIDMSCLeafA =>=>=> RelationalSchema.Table>> pidstidmscleafa;
ClassDiagram.Class>> PIdSTIDMSCLeafB2 =>=>=> RelationalSchema.Table>> pidstidmscleafb2;
ClassDiagram.Class>> PIdSTSDMSCEntityD =>=>=> RelationalSchema.Table>> pidstsdmscentityd;
ClassDiagram.Class>> PIdSTSDMSCLeafD2 =>=>=> RelationalSchema.Table>> pidstsdmscleafd2;
ClassDiagram.Class>> PIdSTSDMSCLeafB1 =>=>=> RelationalSchema.Table>> pidstsdmscleafb1;
ClassDiagram.Class>> PIdSTSDMSCLeafC =>=>=> RelationalSchema.Table>> pidstsdmscleafc;
ClassDiagram.Class>> PIdSTSDMSCLeafD1 =>=>=> RelationalSchema.Table>> pidstsdmscleafd1;
ClassDiagram.Class>> PIdSTSDMSCLeafA =>=>=> RelationalSchema.Table>> pidstsdmscleafa;
ClassDiagram.Class>> PIdSTSDMSCRootEntity =>=>=> RelationalSchema.Table>> pidstsdmscrootentity;
ClassDiagram.Class>> PIdSTSDMSCEntityB =>=>=> RelationalSchema.Table>> pidstsdmscentityb;
ClassDiagram.Class>> PIdSTSDMSCLeafB2 =>=>=> RelationalSchema.Table>> pidstsdmscleafb2;
ClassDiagram.Class>> BaseClass6 =>=>=> RelationalSchema.Table>> baseclass6;
ClassDiagram.Class>> SubclassF =>=>=> RelationalSchema.Table>> subclassf;
ClassDiagram.Class>> BaseClass2 =>=>=> RelationalSchema.Table>> baseclass2;
ClassDiagram.Class>> PTEmployee =>=>=> RelationalSchema.Table>> ptemployee;
ClassDiagram.Class>> SubclassB =>=>=> RelationalSchema.Table>> subclassb;
ClassDiagram.Class>> ComputerUser =>=>=> RelationalSchema.Table>> computeruser;
ClassDiagram.Class>> SharedName2 =>=>=> RelationalSchema.Table>> sharedname2;
ClassDiagram.Class>> ManagedIface2 =>=>=> RelationalSchema.Table>> managediface2;
ClassDiagram.Class>> SubclassJ =>=>=> RelationalSchema.Table>> subclassj;
ClassDiagram.Class>> BaseCallback =>=>=> RelationalSchema.Table>> basecallback;
ClassDiagram.Class>> FTEmployee =>=>=> RelationalSchema.Table>> ftemployee;
ClassDiagram.Class>> SubclassK =>=>=> RelationalSchema.Table>> subclassk;
ClassDiagram.Class>> SubclassG =>=>=> RelationalSchema.Table>> subclassg;
ClassDiagram.Class>> BaseClass3 =>=>=> RelationalSchema.Table>> baseclass3;
ClassDiagram.Class>> SubclassC =>=>=> RelationalSchema.Table>> subclassc;
ClassDiagram.Class>> SharedName1 =>=>=> RelationalSchema.Table>> sharedname1;
ClassDiagram.Class>> SubclassI =>=>=> RelationalSchema.Table>> subclassi;
ClassDiagram.Class>> BaseClass =>=>=> RelationalSchema.Table>> baseclass;
ClassDiagram.Class>> BaseClass5 =>=>=> RelationalSchema.Table>> baseclass5;
ClassDiagram.Class>> Manager =>=>=> RelationalSchema.Table>> manager;
ClassDiagram.Class>> SubclassE =>=>=> RelationalSchema.Table>> subclasse;
ClassDiagram.Class>> ManagedIface =>=>=> RelationalSchema.Table>> managediface;
ClassDiagram.Class>> ImplClassA =>=>=> RelationalSchema.Table>> implclassa;
ClassDiagram.Class>> SubclassA =>=>=> RelationalSchema.Table>> subclassa;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> BaseClass4 =>=>=> RelationalSchema.Table>> baseclass4;
ClassDiagram.Class>> SubclassD =>=>=> RelationalSchema.Table>> subclassd;
ClassDiagram.Class>> MidClass =>=>=> RelationalSchema.Table>> midclass;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> RegularUser =>=>=> RelationalSchema.Table>> regularuser;
ClassDiagram.Class>> AbstractClass =>=>=> RelationalSchema.Table>> abstractclass;
ClassDiagram.Class>> Admin =>=>=> RelationalSchema.Table>> admin;
ClassDiagram.Class>> SubclassH =>=>=> RelationalSchema.Table>> subclassh;
ClassDiagram.Class>> MidClass2 =>=>=> RelationalSchema.Table>> midclass2;
ClassDiagram.Class>> Superclass =>=>=> RelationalSchema.Table>> superclass;
ClassDiagram.Class>> RelationOwner =>=>=> RelationalSchema.Table>> relationowner;
ClassDiagram.Class>> Subclass =>=>=> RelationalSchema.Table>> subclass;
ClassDiagram.Class>> NoGenEntityL3Sibling =>=>=> RelationalSchema.Table>> nogenentityl3sibling;
ClassDiagram.Class>> EnglishParagraph =>=>=> RelationalSchema.Table>> englishparagraph;
ClassDiagram.Class>> GermanParagraph =>=>=> RelationalSchema.Table>> germanparagraph;
ClassDiagram.Class>> Translation =>=>=> RelationalSchema.Table>> translation;
ClassDiagram.Class>> FrenchParagraph =>=>=> RelationalSchema.Table>> frenchparagraph;
ClassDiagram.Class>> Translatable =>=>=> RelationalSchema.Table>> translatable;
ClassDiagram.Class>> NoGenEntityL3 =>=>=> RelationalSchema.Table>> nogenentityl3;
ClassDiagram.Class>> ConcreteSubclass =>=>=> RelationalSchema.Table>> concretesubclass;
ClassDiagram.Class>> EntityL3Sibling =>=>=> RelationalSchema.Table>> entityl3sibling;
ClassDiagram.Class>> Contractor =>=>=> RelationalSchema.Table>> contractor;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> ParttimeEmployee =>=>=> RelationalSchema.Table>> parttimeemployee;
ClassDiagram.Class>> FulltimeEmployee =>=>=> RelationalSchema.Table>> fulltimeemployee;
ClassDiagram.Class>> UMLClass =>=>=> RelationalSchema.Table>> umlclass;
ClassDiagram.Class>> UMLType =>=>=> RelationalSchema.Table>> umltype;
ClassDiagram.Class>> UMLPackage =>=>=> RelationalSchema.Table>> umlpackage;
ClassDiagram.Class>> UMLPrimitiveType =>=>=> RelationalSchema.Table>> umlprimitivetype;
ClassDiagram.Class>> UMLNamed =>=>=> RelationalSchema.Table>> umlnamed;
ClassDiagram.Class>> AbstractBase =>=>=> RelationalSchema.Table>> abstractbase;
ClassDiagram.Class>> EntityL3 =>=>=> RelationalSchema.Table>> entityl3;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Issue428Entity =>=>=> RelationalSchema.Table>> issue428entity;
ClassDiagram.Class>> Subject =>=>=> RelationalSchema.Table>> subject;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Volunteer =>=>=> RelationalSchema.Table>> volunteer;
ClassDiagram.Class>> Borrower =>=>=> RelationalSchema.Table>> borrower;
ClassDiagram.Class>> FullTimeEmployee =>=>=> RelationalSchema.Table>> fulltimeemployee;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> LineItem =>=>=> RelationalSchema.Table>> lineitem;
ClassDiagram.Class>> ProductOrder =>=>=> RelationalSchema.Table>> productorder;
ClassDiagram.Class>> PartTimeEmployee =>=>=> RelationalSchema.Table>> parttimeemployee;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> FullTimeEmployee =>=>=> RelationalSchema.Table>> fulltimeemployee;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> LineItem =>=>=> RelationalSchema.Table>> lineitem;
ClassDiagram.Class>> PartTimeEmployee =>=>=> RelationalSchema.Table>> parttimeemployee;
ClassDiagram.Class>> ProductOrder =>=>=> RelationalSchema.Table>> productorder;
ClassDiagram.Class>> LineItem =>=>=> RelationalSchema.Table>> lineitem;
ClassDiagram.Class>> FullTimeEmployee =>=>=> RelationalSchema.Table>> fulltimeemployee;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> PartTimeEmployee =>=>=> RelationalSchema.Table>> parttimeemployee;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> ProductOrder =>=>=> RelationalSchema.Table>> productorder;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> FullTimeEmployee =>=>=> RelationalSchema.Table>> fulltimeemployee;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> PartTimeEmployee =>=>=> RelationalSchema.Table>> parttimeemployee;
ClassDiagram.Class>> ProductOrder =>=>=> RelationalSchema.Table>> productorder;
ClassDiagram.Class>> LineItem =>=>=> RelationalSchema.Table>> lineitem;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> DogTable2 =>=>=> RelationalSchema.Table>> dogtable2;
ClassDiagram.Class>> Dog4 =>=>=> RelationalSchema.Table>> dog4;
ClassDiagram.Class>> EntityE2 =>=>=> RelationalSchema.Table>> entitye2;
ClassDiagram.Class>> Dog =>=>=> RelationalSchema.Table>> dog;
ClassDiagram.Class>> Dog1 =>=>=> RelationalSchema.Table>> dog1;
ClassDiagram.Class>> DogTable =>=>=> RelationalSchema.Table>> dogtable;
ClassDiagram.Class>> DogTable3 =>=>=> RelationalSchema.Table>> dogtable3;
ClassDiagram.Class>> GeneratedValues =>=>=> RelationalSchema.Table>> generatedvalues;
ClassDiagram.Class>> Dog3 =>=>=> RelationalSchema.Table>> dog3;
ClassDiagram.Class>> DogTable4 =>=>=> RelationalSchema.Table>> dogtable4;
ClassDiagram.Class>> EntityWithGeneratedValueAndPostPersist =>=>=> RelationalSchema.Table>> entitywithgeneratedvalueandpostpersist;
ClassDiagram.Class>> Dog2 =>=>=> RelationalSchema.Table>> dog2;
ClassDiagram.Class>> AnEntity =>=>=> RelationalSchema.Table>> anentity;
ClassDiagram.Class>> RuntimeTest4 =>=>=> RelationalSchema.Table>> runtimetest4;
ClassDiagram.Class>> TransactionalClassPC =>=>=> RelationalSchema.Table>> transactionalclasspc;
ClassDiagram.Class>> RuntimeTest1 =>=>=> RelationalSchema.Table>> runtimetest1;
ClassDiagram.Class>> Duration =>=>=> RelationalSchema.Table>> duration;
ClassDiagram.Class>> RuntimeTest2 =>=>=> RelationalSchema.Table>> runtimetest2;
ClassDiagram.Class>> PostRemoveCallbackEntity =>=>=> RelationalSchema.Table>> postremovecallbackentity;
ClassDiagram.Class>> BlobEntity =>=>=> RelationalSchema.Table>> blobentity;
ClassDiagram.Class>> BlobColumnEntity =>=>=> RelationalSchema.Table>> blobcolumnentity;
ClassDiagram.Class>> ClobColumnEntity =>=>=> RelationalSchema.Table>> clobcolumnentity;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> UserIdentity =>=>=> RelationalSchema.Table>> useridentity;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> UserIdentity =>=>=> RelationalSchema.Table>> useridentity;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> UserIdentity =>=>=> RelationalSchema.Table>> useridentity;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> UserIdentity =>=>=> RelationalSchema.Table>> useridentity;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Location =>=>=> RelationalSchema.Table>> location;
ClassDiagram.Class>> UserIdentity =>=>=> RelationalSchema.Table>> useridentity;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> UserIdentity =>=>=> RelationalSchema.Table>> useridentity;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> UserIdentity =>=>=> RelationalSchema.Table>> useridentity;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> FixedAnnuity =>=>=> RelationalSchema.Table>> fixedannuity;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Payor =>=>=> RelationalSchema.Table>> payor;
ClassDiagram.Class>> Annuity =>=>=> RelationalSchema.Table>> annuity;
ClassDiagram.Class>> EquityAnnuity =>=>=> RelationalSchema.Table>> equityannuity;
ClassDiagram.Class>> Contact =>=>=> RelationalSchema.Table>> contact;
ClassDiagram.Class>> Payout =>=>=> RelationalSchema.Table>> payout;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> AnnuityHolder =>=>=> RelationalSchema.Table>> annuityholder;
ClassDiagram.Class>> Rider =>=>=> RelationalSchema.Table>> rider;
ClassDiagram.Class>> ConcreteEntity =>=>=> RelationalSchema.Table>> concreteentity;
ClassDiagram.Class>> TreeNode =>=>=> RelationalSchema.Table>> treenode;
ClassDiagram.Class>> AggEntity =>=>=> RelationalSchema.Table>> aggentity;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Parent =>=>=> RelationalSchema.Table>> parent;
ClassDiagram.Class>> PChild =>=>=> RelationalSchema.Table>> pchild;
ClassDiagram.Class>> A =>=>=> RelationalSchema.Table>> a;
ClassDiagram.Class>> B =>=>=> RelationalSchema.Table>> b;
ClassDiagram.Class>> Painter =>=>=> RelationalSchema.Table>> painter;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Artist =>=>=> RelationalSchema.Table>> artist;
ClassDiagram.Class>> PChildBi =>=>=> RelationalSchema.Table>> pchildbi;
ClassDiagram.Class>> C =>=>=> RelationalSchema.Table>> c;
ClassDiagram.Class>> User2018 =>=>=> RelationalSchema.Table>> user2018;
ClassDiagram.Attribut>> CacheableEntity.id:int =>=>=> RelationalSchema.Column>> cacheableentity.id PRIMARY KEY;
ClassDiagram.Attribut>> CacheableEntity.name:String =>=>=> RelationalSchema.Column>> cacheableentity.name;
ClassDiagram.Attribut>> Story.id:int =>=>=> RelationalSchema.Column>> story.id PRIMARY KEY;
ClassDiagram.Attribut>> Story.version:int =>=>=> RelationalSchema.Column>> story.version;
ClassDiagram.Attribut>> M21UniDepartment.deptid:String =>=>=> RelationalSchema.Column>> m21unidepartment.deptid PRIMARY KEY;
ClassDiagram.Attribut>> M21UniDepartment.name:String =>=>=> RelationalSchema.Column>> m21unidepartment.name;
ClassDiagram.Attribut>> M21UniDepartment.version:int =>=>=> RelationalSchema.Column>> m21unidepartment.version;
ClassDiagram.Attribut>> M21UniDepartment.costcode:String =>=>=> RelationalSchema.Column>> m21unidepartment.costcode;
ClassDiagram.Attribut>> M21UniEmployee.empid:String =>=>=> RelationalSchema.Column>> m21uniemployee.empid PRIMARY KEY;
ClassDiagram.Attribut>> M21UniEmployee.version:int =>=>=> RelationalSchema.Column>> m21uniemployee.version;
ClassDiagram.Attribut>> M21UniEmployee.name:String =>=>=> RelationalSchema.Column>> m21uniemployee.name;
ClassDiagram.Attribut>> M21UniEmployee.salary:float =>=>=> RelationalSchema.Column>> m21uniemployee.salary;
ClassDiagram.Attribut>> EntityB.id:Integer =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityB.name:String =>=>=> RelationalSchema.Column>> entityb.name;
ClassDiagram.Attribut>> EntityB.optlock:Integer =>=>=> RelationalSchema.Column>> entityb.optlock;
ClassDiagram.Attribut>> EntityF.id:int =>=>=> RelationalSchema.Column>> entityf.id PRIMARY KEY;
ClassDiagram.Attribut>> OptSelectEntity.id:int =>=>=> RelationalSchema.Column>> optselectentity.id PRIMARY KEY;
ClassDiagram.Attribut>> OptSelectEntity.version:int =>=>=> RelationalSchema.Column>> optselectentity.version;
ClassDiagram.Attribut>> EntityC.id:Integer =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.name:String =>=>=> RelationalSchema.Column>> entityc.name;
ClassDiagram.Attribut>> EntityC.optlock:Integer =>=>=> RelationalSchema.Column>> entityc.optlock;
ClassDiagram.Attribut>> EntityG.id:int =>=>=> RelationalSchema.Column>> entityg.id PRIMARY KEY;
ClassDiagram.Attribut>> M2MBiEmployee.empid:String =>=>=> RelationalSchema.Column>> m2mbiemployee.empid PRIMARY KEY;
ClassDiagram.Attribut>> M2MBiEmployee.version:int =>=>=> RelationalSchema.Column>> m2mbiemployee.version;
ClassDiagram.Attribut>> M2MBiEmployee.name:String =>=>=> RelationalSchema.Column>> m2mbiemployee.name;
ClassDiagram.Attribut>> M2MBiEmployee.salary:float =>=>=> RelationalSchema.Column>> m2mbiemployee.salary;
ClassDiagram.Attribut>> M2MBiDepartment.deptid:String =>=>=> RelationalSchema.Column>> m2mbidepartment.deptid PRIMARY KEY;
ClassDiagram.Attribut>> M2MBiDepartment.name:String =>=>=> RelationalSchema.Column>> m2mbidepartment.name;
ClassDiagram.Attribut>> M2MBiDepartment.version:int =>=>=> RelationalSchema.Column>> m2mbidepartment.version;
ClassDiagram.Attribut>> M2MBiDepartment.costcode:String =>=>=> RelationalSchema.Column>> m2mbidepartment.costcode;
ClassDiagram.Attribut>> EntityA.id:Integer =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA.name:String =>=>=> RelationalSchema.Column>> entitya.name;
ClassDiagram.Attribut>> EntityA.optlock:Integer =>=>=> RelationalSchema.Column>> entitya.optlock;
ClassDiagram.Attribut>> Task.id:int =>=>=> RelationalSchema.Column>> task.id PRIMARY KEY;
ClassDiagram.Attribut>> Task.version:int =>=>=> RelationalSchema.Column>> task.version;
ClassDiagram.Attribut>> EntityE.id:Integer =>=>=> RelationalSchema.Column>> entitye.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityE.name:String =>=>=> RelationalSchema.Column>> entitye.name;
ClassDiagram.Attribut>> EntityE.optlock:Integer =>=>=> RelationalSchema.Column>> entitye.optlock;
ClassDiagram.Attribut>> A.id:int =>=>=> RelationalSchema.Column>> a.id PRIMARY KEY;
ClassDiagram.Attribut>> A.name:String =>=>=> RelationalSchema.Column>> a.name;
ClassDiagram.Attribut>> A.age:int =>=>=> RelationalSchema.Column>> a.age;
ClassDiagram.Attribut>> A.map:Map<String,String> =>=>=> RelationalSchema.Column>> a.map;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.version:int =>=>=> RelationalSchema.Column>> employee.version;
ClassDiagram.Attribut>> Employee.firstname:String =>=>=> RelationalSchema.Column>> employee.firstname;
ClassDiagram.Attribut>> Employee.lastname:String =>=>=> RelationalSchema.Column>> employee.lastname;
ClassDiagram.Attribut>> EntityD.id:Integer =>=>=> RelationalSchema.Column>> entityd.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityD.name:String =>=>=> RelationalSchema.Column>> entityd.name;
ClassDiagram.Attribut>> EntityD.optlock:Integer =>=>=> RelationalSchema.Column>> entityd.optlock;
ClassDiagram.Attribut>> EntityBool.id:int =>=>=> RelationalSchema.Column>> entitybool.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityBool.dummy:boolean =>=>=> RelationalSchema.Column>> entitybool.dummy;
ClassDiagram.Attribut>> EntityBoolChar.id:int =>=>=> RelationalSchema.Column>> entityboolchar.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityBoolChar.dummy:boolean =>=>=> RelationalSchema.Column>> entityboolchar.dummy;
ClassDiagram.Attribut>> InputStreamLobEntity.id:int =>=>=> RelationalSchema.Column>> inputstreamlobentity.id PRIMARY KEY;
ClassDiagram.Attribut>> InputStreamLobEntity.stream:InputStream =>=>=> RelationalSchema.Column>> inputstreamlobentity.stream;
ClassDiagram.Attribut>> ReaderLobEntity.id:int =>=>=> RelationalSchema.Column>> readerlobentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ReaderLobEntity.stream:Reader =>=>=> RelationalSchema.Column>> readerlobentity.stream;
ClassDiagram.Attribut>> EntityWithStoredProcedure.id:long =>=>=> RelationalSchema.Column>> entitywithstoredprocedure.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityWithStoredProcedure.name:String =>=>=> RelationalSchema.Column>> entitywithstoredprocedure.name;
ClassDiagram.Attribut>> XmlColEntity.id:int =>=>=> RelationalSchema.Column>> xmlcolentity.id PRIMARY KEY;
ClassDiagram.Attribut>> XmlColEntity.version:int =>=>=> RelationalSchema.Column>> xmlcolentity.version;
ClassDiagram.Attribut>> XmlColEntity.xmlcolumn:String =>=>=> RelationalSchema.Column>> xmlcolentity.xmlcolumn;
ClassDiagram.Attribut>> Movie.serialversionuid:long =>=>=> RelationalSchema.Column>> movie.serialversionuid;
ClassDiagram.Attribut>> Movie.duration:Integer =>=>=> RelationalSchema.Column>> movie.duration;
ClassDiagram.Attribut>> Book.serialversionuid:long =>=>=> RelationalSchema.Column>> book.serialversionuid;
ClassDiagram.Attribut>> Book.pagecount:int =>=>=> RelationalSchema.Column>> book.pagecount;
ClassDiagram.Attribut>> Item.serialversionuid:long =>=>=> RelationalSchema.Column>> item.serialversionuid;
ClassDiagram.Attribut>> Item.id:int =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.title:String =>=>=> RelationalSchema.Column>> item.title;
ClassDiagram.Attribut>> Item.rating:float =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Artist.name:String =>=>=> RelationalSchema.Column>> artist.name PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedPropertyAccess.serialversionuid:long =>=>=> RelationalSchema.Column>> unenhancedpropertyaccess.serialversionuid;
ClassDiagram.Attribut>> UnenhancedPropertyAccess.id:int =>=>=> RelationalSchema.Column>> unenhancedpropertyaccess.id PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedPropertyAccess.version:int =>=>=> RelationalSchema.Column>> unenhancedpropertyaccess.version;
ClassDiagram.Attribut>> UnenhancedPropertyAccess.sf:String =>=>=> RelationalSchema.Column>> unenhancedpropertyaccess.sf;
ClassDiagram.Attribut>> UnenhancedPropertyAccess.lazyfield:String =>=>=> RelationalSchema.Column>> unenhancedpropertyaccess.lazyfield;
ClassDiagram.Attribut>> UnenhancedFieldAccess.serialversionuid:long =>=>=> RelationalSchema.Column>> unenhancedfieldaccess.serialversionuid;
ClassDiagram.Attribut>> UnenhancedFieldAccess.id:int =>=>=> RelationalSchema.Column>> unenhancedfieldaccess.id PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedFieldAccess.version:int =>=>=> RelationalSchema.Column>> unenhancedfieldaccess.version;
ClassDiagram.Attribut>> UnenhancedFieldAccess.field:String =>=>=> RelationalSchema.Column>> unenhancedfieldaccess.field;
ClassDiagram.Attribut>> UnenhancedFieldAccess.lazyfield:String =>=>=> RelationalSchema.Column>> unenhancedfieldaccess.lazyfield;
ClassDiagram.Attribut>> UnenhancedFieldAccessPrimitiveWrapper.serialversionuid:long =>=>=> RelationalSchema.Column>> unenhancedfieldaccessprimitivewrapper.serialversionuid;
ClassDiagram.Attribut>> UnenhancedFieldAccessPrimitiveWrapper.id:Integer =>=>=> RelationalSchema.Column>> unenhancedfieldaccessprimitivewrapper.id PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedFieldAccessPrimitiveWrapper.version:int =>=>=> RelationalSchema.Column>> unenhancedfieldaccessprimitivewrapper.version;
ClassDiagram.Attribut>> UnenhancedFieldAccessPrimitiveWrapper.field:String =>=>=> RelationalSchema.Column>> unenhancedfieldaccessprimitivewrapper.field;
ClassDiagram.Attribut>> UnenhancedFieldAccessPrimitiveWrapper.lazyfield:String =>=>=> RelationalSchema.Column>> unenhancedfieldaccessprimitivewrapper.lazyfield;
ClassDiagram.Attribut>> UnenhancedPropertyAccessSubclass.serialversionuid:long =>=>=> RelationalSchema.Column>> unenhancedpropertyaccesssubclass.serialversionuid;
ClassDiagram.Attribut>> UnenhancedPropertyAccessSubclass.field:int =>=>=> RelationalSchema.Column>> unenhancedpropertyaccesssubclass.field;
ClassDiagram.Attribut>> UnenhancedMany.serialversionuid:long =>=>=> RelationalSchema.Column>> unenhancedmany.serialversionuid;
ClassDiagram.Attribut>> UnenhancedMany.id:int =>=>=> RelationalSchema.Column>> unenhancedmany.id PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedUnlistedReferer.id:int =>=>=> RelationalSchema.Column>> unenhancedunlistedreferer.id PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedFieldAccessPrimitiveWrapperSubclass.serialversionuid:long =>=>=> RelationalSchema.Column>> unenhancedfieldaccessprimitivewrappersubclass.serialversionuid;
ClassDiagram.Attribut>> UnenhancedFieldAccessPrimitiveWrapperSubclass.field:int =>=>=> RelationalSchema.Column>> unenhancedfieldaccessprimitivewrappersubclass.field;
ClassDiagram.Attribut>> EnhancedSubClass.serialversionuid:long =>=>=> RelationalSchema.Column>> enhancedsubclass.serialversionuid;
ClassDiagram.Attribut>> EnhancedSubClass.valueinsubclass:String =>=>=> RelationalSchema.Column>> enhancedsubclass.valueinsubclass;
ClassDiagram.Attribut>> UnenhancedBootstrapInstance2.id:int =>=>=> RelationalSchema.Column>> unenhancedbootstrapinstance2.id PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedBootstrapInstance.id:int =>=>=> RelationalSchema.Column>> unenhancedbootstrapinstance.id PRIMARY KEY;
ClassDiagram.Attribut>> Software.id:Integer =>=>=> RelationalSchema.Column>> software.id PRIMARY KEY;
ClassDiagram.Attribut>> Software.id:int =>=>=> RelationalSchema.Column>> software.id PRIMARY KEY;
ClassDiagram.Attribut>> Software.id:String =>=>=> RelationalSchema.Column>> software.id PRIMARY KEY;
ClassDiagram.Attribut>> Hardware.serial:String =>=>=> RelationalSchema.Column>> hardware.serial PRIMARY KEY;
ClassDiagram.Attribut>> Hardware.model:String =>=>=> RelationalSchema.Column>> hardware.model PRIMARY KEY;
ClassDiagram.Attribut>> Hardware.description:String =>=>=> RelationalSchema.Column>> hardware.description;
ClassDiagram.Attribut>> Device.id:int =>=>=> RelationalSchema.Column>> device.id PRIMARY KEY;
ClassDiagram.Attribut>> Device.type:int =>=>=> RelationalSchema.Column>> device.type PRIMARY KEY;
ClassDiagram.Attribut>> Device.description:String =>=>=> RelationalSchema.Column>> device.description;
ClassDiagram.Attribut>> UnenhancedOne.serialversionuid:long =>=>=> RelationalSchema.Column>> unenhancedone.serialversionuid;
ClassDiagram.Attribut>> UnenhancedOne.id:int =>=>=> RelationalSchema.Column>> unenhancedone.id PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedCompoundPKFieldAccess.id0:int =>=>=> RelationalSchema.Column>> unenhancedcompoundpkfieldaccess.id0 PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedCompoundPKFieldAccess.id1:int =>=>=> RelationalSchema.Column>> unenhancedcompoundpkfieldaccess.id1 PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedCompoundPKPropertyAccess.id0:int =>=>=> RelationalSchema.Column>> unenhancedcompoundpkpropertyaccess.id0 PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedCompoundPKPropertyAccess.id1:int =>=>=> RelationalSchema.Column>> unenhancedcompoundpkpropertyaccess.id1 PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedIdentityIdPropertyAccess.id:int =>=>=> RelationalSchema.Column>> unenhancedidentityidpropertyaccess.id PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedIdentityIdPropertyAccess.field:String =>=>=> RelationalSchema.Column>> unenhancedidentityidpropertyaccess.field;
ClassDiagram.Attribut>> UnenhancedUnlistedClass.id:int =>=>=> RelationalSchema.Column>> unenhancedunlistedclass.id PRIMARY KEY;
ClassDiagram.Attribut>> UnenhancedFieldAccessSubclass.serialversionuid:long =>=>=> RelationalSchema.Column>> unenhancedfieldaccesssubclass.serialversionuid;
ClassDiagram.Attribut>> UnenhancedFieldAccessSubclass.field:int =>=>=> RelationalSchema.Column>> unenhancedfieldaccesssubclass.field;
ClassDiagram.Attribut>> EnhancedSuperClass.serialversionuid:long =>=>=> RelationalSchema.Column>> enhancedsuperclass.serialversionuid;
ClassDiagram.Attribut>> EnhancedSuperClass.id:Long =>=>=> RelationalSchema.Column>> enhancedsuperclass.id PRIMARY KEY;
ClassDiagram.Attribut>> EnhancedSuperClass.valueinsuperclass:String =>=>=> RelationalSchema.Column>> enhancedsuperclass.valueinsuperclass;
ClassDiagram.Attribut>> AuditedEntry.id:long =>=>=> RelationalSchema.Column>> auditedentry.id PRIMARY KEY;
ClassDiagram.Attribut>> AuditedEntry.operation:AuditableOperation =>=>=> RelationalSchema.Column>> auditedentry.operation;
ClassDiagram.Attribut>> AuditedEntry.ts:Timestamp =>=>=> RelationalSchema.Column>> auditedentry.ts;
ClassDiagram.Attribut>> AuditedEntry.updatedfields:List<String> =>=>=> RelationalSchema.Column>> auditedentry.updatedfields;
ClassDiagram.Attribut>> X.id:long =>=>=> RelationalSchema.Column>> x.id PRIMARY KEY;
ClassDiagram.Attribut>> X.name:String =>=>=> RelationalSchema.Column>> x.name;
ClassDiagram.Attribut>> X.price:int =>=>=> RelationalSchema.Column>> x.price;
ClassDiagram.Attribut>> X.id_generator:AtomicLong =>=>=> RelationalSchema.Column>> x.id_generator;
ClassDiagram.Attribut>> EntityE.id:long =>=>=> RelationalSchema.Column>> entitye.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityE.name:String =>=>=> RelationalSchema.Column>> entitye.name;
ClassDiagram.Attribut>> IntegerVersionEntity.id:int =>=>=> RelationalSchema.Column>> integerversionentity.id PRIMARY KEY;
ClassDiagram.Attribut>> IntegerVersionEntity.name:String =>=>=> RelationalSchema.Column>> integerversionentity.name;
ClassDiagram.Attribut>> IntegerVersionEntity.version:Integer =>=>=> RelationalSchema.Column>> integerversionentity.version;
ClassDiagram.Attribut>> Entity9.id:long =>=>=> RelationalSchema.Column>> entity9.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity9.name:String =>=>=> RelationalSchema.Column>> entity9.name;
ClassDiagram.Attribut>> EntityA.id:long =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA.name:String =>=>=> RelationalSchema.Column>> entitya.name;
ClassDiagram.Attribut>> EntityA.description:String =>=>=> RelationalSchema.Column>> entitya.description;
ClassDiagram.Attribut>> Entity5.id:long =>=>=> RelationalSchema.Column>> entity5.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity5.name:String =>=>=> RelationalSchema.Column>> entity5.name;
ClassDiagram.Attribut>> Entity14.id:long =>=>=> RelationalSchema.Column>> entity14.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity14.name:String =>=>=> RelationalSchema.Column>> entity14.name;
ClassDiagram.Attribut>> Entity1.id:long =>=>=> RelationalSchema.Column>> entity1.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity1.name:String =>=>=> RelationalSchema.Column>> entity1.name;
ClassDiagram.Attribut>> Entity10.id:long =>=>=> RelationalSchema.Column>> entity10.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity10.name:String =>=>=> RelationalSchema.Column>> entity10.name;
ClassDiagram.Attribut>> Entity10.intcollection:Collection<Integer> =>=>=> RelationalSchema.Column>> entity10.intcollection;
ClassDiagram.Attribut>> Entity10.stringcollection:Collection<String> =>=>=> RelationalSchema.Column>> entity10.stringcollection;
ClassDiagram.Attribut>> IntVersionEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> intversionentity.serialversionuid;
ClassDiagram.Attribut>> IntVersionEntity.id:int =>=>=> RelationalSchema.Column>> intversionentity.id PRIMARY KEY;
ClassDiagram.Attribut>> IntVersionEntity.name:String =>=>=> RelationalSchema.Column>> intversionentity.name;
ClassDiagram.Attribut>> IntVersionEntity.version:int =>=>=> RelationalSchema.Column>> intversionentity.version;
ClassDiagram.Attribut>> TimestampVersionEntity.id:int =>=>=> RelationalSchema.Column>> timestampversionentity.id PRIMARY KEY;
ClassDiagram.Attribut>> TimestampVersionEntity.name:String =>=>=> RelationalSchema.Column>> timestampversionentity.name;
ClassDiagram.Attribut>> TimestampVersionEntity.version:Timestamp =>=>=> RelationalSchema.Column>> timestampversionentity.version;
ClassDiagram.Attribut>> Entity4.id:long =>=>=> RelationalSchema.Column>> entity4.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity4.name:String =>=>=> RelationalSchema.Column>> entity4.name;
ClassDiagram.Attribut>> Entity11.id:long =>=>=> RelationalSchema.Column>> entity11.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity11.name:String =>=>=> RelationalSchema.Column>> entity11.name;
ClassDiagram.Attribut>> Entity20.serialversionuid:long =>=>=> RelationalSchema.Column>> entity20.serialversionuid;
ClassDiagram.Attribut>> Entity20.id:Integer =>=>=> RelationalSchema.Column>> entity20.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity20.sql:Date =>=>=> RelationalSchema.Column>> entity20.sql;
ClassDiagram.Attribut>> Entity20.sql:Time =>=>=> RelationalSchema.Column>> entity20.sql;
ClassDiagram.Attribut>> Entity20.sql:Timestamp =>=>=> RelationalSchema.Column>> entity20.sql;
ClassDiagram.Attribut>> Entity20.name:String =>=>=> RelationalSchema.Column>> entity20.name;
ClassDiagram.Attribut>> EntityD.id:long =>=>=> RelationalSchema.Column>> entityd.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityD.name:String =>=>=> RelationalSchema.Column>> entityd.name;
ClassDiagram.Attribut>> Entity8.id:long =>=>=> RelationalSchema.Column>> entity8.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity8.name:String =>=>=> RelationalSchema.Column>> entity8.name;
ClassDiagram.Attribut>> NoVersionEntity.id:int =>=>=> RelationalSchema.Column>> noversionentity.id PRIMARY KEY;
ClassDiagram.Attribut>> NoVersionEntity.name:String =>=>=> RelationalSchema.Column>> noversionentity.name;
ClassDiagram.Attribut>> Entity6.id:long =>=>=> RelationalSchema.Column>> entity6.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity6.name:String =>=>=> RelationalSchema.Column>> entity6.name;
ClassDiagram.Attribut>> Entity13.id:long =>=>=> RelationalSchema.Column>> entity13.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity13.name:String =>=>=> RelationalSchema.Column>> entity13.name;
ClassDiagram.Attribut>> EntityB.id:long =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityB.name:String =>=>=> RelationalSchema.Column>> entityb.name;
ClassDiagram.Attribut>> EntityC.id:long =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.name:String =>=>=> RelationalSchema.Column>> entityc.name;
ClassDiagram.Attribut>> Entity7.id:long =>=>=> RelationalSchema.Column>> entity7.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity7.name:String =>=>=> RelationalSchema.Column>> entity7.name;
ClassDiagram.Attribut>> SerializableDetachedStateManager.serialversionuid:long =>=>=> RelationalSchema.Column>> serializabledetachedstatemanager.serialversionuid;
ClassDiagram.Attribut>> SerializableDetachedStateManager.id:int =>=>=> RelationalSchema.Column>> serializabledetachedstatemanager.id PRIMARY KEY;
ClassDiagram.Attribut>> SerializableDetachedStateManager.version:int =>=>=> RelationalSchema.Column>> serializabledetachedstatemanager.version;
ClassDiagram.Attribut>> SerializableDetachedStateManager.z:Date =>=>=> RelationalSchema.Column>> serializabledetachedstatemanager.z;
ClassDiagram.Attribut>> Passenger.id:long =>=>=> RelationalSchema.Column>> passenger.id;
ClassDiagram.Attribut>> Passenger.name:String =>=>=> RelationalSchema.Column>> passenger.name;
ClassDiagram.Attribut>> Passenger.//manytomany(mappedby:Collection<Automobile> =>=>=> RelationalSchema.Column>> passenger.//manytomany(mappedby;
ClassDiagram.Attribut>> Owner.id:long =>=>=> RelationalSchema.Column>> owner.id;
ClassDiagram.Attribut>> Owner.name:String =>=>=> RelationalSchema.Column>> owner.name;
ClassDiagram.Attribut>> Owner.//one-2-manyautos:List<Automobile> =>=>=> RelationalSchema.Column>> owner.//one-2-manyautos;
ClassDiagram.Attribut>> Driver.id:long =>=>=> RelationalSchema.Column>> driver.id;
ClassDiagram.Attribut>> Driver.name:String =>=>=> RelationalSchema.Column>> driver.name;
ClassDiagram.Attribut>> Driver.//onetooneauto:Automobile =>=>=> RelationalSchema.Column>> driver.//onetooneauto;
ClassDiagram.Attribut>> Entity12.id:long =>=>=> RelationalSchema.Column>> entity12.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity12.name:String =>=>=> RelationalSchema.Column>> entity12.name;
ClassDiagram.Attribut>> Entity3.id:long =>=>=> RelationalSchema.Column>> entity3.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity3.name:String =>=>=> RelationalSchema.Column>> entity3.name;
ClassDiagram.Attribut>> GlobalListenerEntity.id:long =>=>=> RelationalSchema.Column>> globallistenerentity.id PRIMARY KEY;
ClassDiagram.Attribut>> GlobalListenerEntity.value:int =>=>=> RelationalSchema.Column>> globallistenerentity.value;
ClassDiagram.Attribut>> ListenerInEntity.id:long =>=>=> RelationalSchema.Column>> listenerinentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ListenerInEntity.value:int =>=>=> RelationalSchema.Column>> listenerinentity.value;
ClassDiagram.Attribut>> ListenerInEntity.transientprepersistcount:int =>=>=> RelationalSchema.Column>> listenerinentity.transientprepersistcount;
ClassDiagram.Attribut>> ListenerInEntity.transientpostpersistcount:int =>=>=> RelationalSchema.Column>> listenerinentity.transientpostpersistcount;
ClassDiagram.Attribut>> ListenerInEntity.transientpreupdatecount:int =>=>=> RelationalSchema.Column>> listenerinentity.transientpreupdatecount;
ClassDiagram.Attribut>> ListenerInEntity.transientpostupdatecount:int =>=>=> RelationalSchema.Column>> listenerinentity.transientpostupdatecount;
ClassDiagram.Attribut>> ListenerInEntity.transientpreremovecount:int =>=>=> RelationalSchema.Column>> listenerinentity.transientpreremovecount;
ClassDiagram.Attribut>> ListenerInEntity.transientpostremovecount:int =>=>=> RelationalSchema.Column>> listenerinentity.transientpostremovecount;
ClassDiagram.Attribut>> ListenerInEntity.transientpostloadcount:int =>=>=> RelationalSchema.Column>> listenerinentity.transientpostloadcount;
ClassDiagram.Attribut>> DuplicateListenerEntity.id:long =>=>=> RelationalSchema.Column>> duplicatelistenerentity.id PRIMARY KEY;
ClassDiagram.Attribut>> DuplicateListenerEntity.value:int =>=>=> RelationalSchema.Column>> duplicatelistenerentity.value;
ClassDiagram.Attribut>> PostPersistEntity.id:long =>=>=> RelationalSchema.Column>> postpersistentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PostPersistEntity.name:String =>=>=> RelationalSchema.Column>> postpersistentity.name;
ClassDiagram.Attribut>> PostPersistEntity.transientpostpersistcallbackcount:int =>=>=> RelationalSchema.Column>> postpersistentity.transientpostpersistcallbackcount;
ClassDiagram.Attribut>> PostPersistEntity.transientidoncallback:long =>=>=> RelationalSchema.Column>> postpersistentity.transientidoncallback;
ClassDiagram.Attribut>> PostLoadListenerEntity.id:long =>=>=> RelationalSchema.Column>> postloadlistenerentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PostLoadListenerEntity.value:String =>=>=> RelationalSchema.Column>> postloadlistenerentity.value;
ClassDiagram.Attribut>> PostLoadListenerEntity.//thosefieldsareimportantforthetestsince//openjpawillloadthefulltableatonceifyouremovethemvalue2:String =>=>=> RelationalSchema.Column>> postloadlistenerentity.//thosefieldsareimportantforthetestsince//openjpawillloadthefulltableatonceifyouremovethemvalue2;
ClassDiagram.Attribut>> Message.id:long =>=>=> RelationalSchema.Column>> message.id PRIMARY KEY;
ClassDiagram.Attribut>> Message.message:String =>=>=> RelationalSchema.Column>> message.message;
ClassDiagram.Attribut>> Message.created:Date =>=>=> RelationalSchema.Column>> message.created;
ClassDiagram.Attribut>> Message.upd:Date =>=>=> RelationalSchema.Column>> message.upd;
ClassDiagram.Attribut>> Message.version:Integer =>=>=> RelationalSchema.Column>> message.version;
ClassDiagram.Attribut>> MSCListenerEntity.id:long =>=>=> RelationalSchema.Column>> msclistenerentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MSCListenerEntity.value:int =>=>=> RelationalSchema.Column>> msclistenerentity.value;
ClassDiagram.Attribut>> ExceptionsFromCallbacksEntity.id:long =>=>=> RelationalSchema.Column>> exceptionsfromcallbacksentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ExceptionsFromCallbacksEntity.version:int =>=>=> RelationalSchema.Column>> exceptionsfromcallbacksentity.version;
ClassDiagram.Attribut>> ExceptionsFromCallbacksEntity.throwonprepersist:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ExceptionsFromCallbacksEntity.throwonpostpersist:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ExceptionsFromCallbacksEntity.throwonpreupdate:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ExceptionsFromCallbacksEntity.throwonpostupdate:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ExceptionsFromCallbacksEntity.throwonpostload:boolean =>=>=> RelationalSchema.Column>> exceptionsfromcallbacksentity.throwonpostload;
ClassDiagram.Attribut>> ExceptionsFromCallbacksEntity.throwonpreremove:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ExceptionsFromCallbacksEntity.throwonpostremove:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ExceptionsFromCallbacksEntity.field:String =>=>=> RelationalSchema.Column>> exceptionsfromcallbacksentity.field;
ClassDiagram.Attribut>> EntityListenerEntity.id:long =>=>=> RelationalSchema.Column>> entitylistenerentity.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityListenerEntity.value:int =>=>=> RelationalSchema.Column>> entitylistenerentity.value;
ClassDiagram.Attribut>> AddListenerEntity.id:long =>=>=> RelationalSchema.Column>> addlistenerentity.id PRIMARY KEY;
ClassDiagram.Attribut>> AddListenerEntity.value:int =>=>=> RelationalSchema.Column>> addlistenerentity.value;
ClassDiagram.Attribut>> Assignment.serialversionuid:long =>=>=> RelationalSchema.Column>> assignment.serialversionuid;
ClassDiagram.Attribut>> Assignment.assignid:Long =>=>=> RelationalSchema.Column>> assignment.assignid PRIMARY KEY;
ClassDiagram.Attribut>> Assignment.assigntext:String =>=>=> RelationalSchema.Column>> assignment.assigntext;
ClassDiagram.Attribut>> ClassPeriod.serialversionuid:long =>=>=> RelationalSchema.Column>> classperiod.serialversionuid;
ClassDiagram.Attribut>> ClassPeriod.clpid:Long =>=>=> RelationalSchema.Column>> classperiod.clpid PRIMARY KEY;
ClassDiagram.Attribut>> ClassPeriod.clptext:String =>=>=> RelationalSchema.Column>> classperiod.clptext;
ClassDiagram.Attribut>> Course.serialversionuid:long =>=>=> RelationalSchema.Column>> course.serialversionuid;
ClassDiagram.Attribut>> Course.courseid:Long =>=>=> RelationalSchema.Column>> course.courseid PRIMARY KEY;
ClassDiagram.Attribut>> Course.coursetext:String =>=>=> RelationalSchema.Column>> course.coursetext;
ClassDiagram.Attribut>> SubTopic.serialversionuid:long =>=>=> RelationalSchema.Column>> subtopic.serialversionuid;
ClassDiagram.Attribut>> SubTopic.subtopicid:Long =>=>=> RelationalSchema.Column>> subtopic.subtopicid PRIMARY KEY;
ClassDiagram.Attribut>> SubTopic.subtopictext:String =>=>=> RelationalSchema.Column>> subtopic.subtopictext;
ClassDiagram.Attribut>> Topic.serialversionuid:long =>=>=> RelationalSchema.Column>> topic.serialversionuid;
ClassDiagram.Attribut>> Topic.topicid:Long =>=>=> RelationalSchema.Column>> topic.topicid PRIMARY KEY;
ClassDiagram.Attribut>> Topic.topictext:String =>=>=> RelationalSchema.Column>> topic.topictext;
ClassDiagram.Attribut>> Security.id:long =>=>=> RelationalSchema.Column>> security.id PRIMARY KEY;
ClassDiagram.Attribut>> Security.symbol:Embed =>=>=> RelationalSchema.Column>> security.symbol;
ClassDiagram.Attribut>> AccessModsEntity.id:int =>=>=> RelationalSchema.Column>> accessmodsentity.id PRIMARY KEY;
ClassDiagram.Attribut>> AccessModsEntity.pub:String =>=>=> RelationalSchema.Column>> accessmodsentity.pub;
ClassDiagram.Attribut>> AccessModsEntity.prot:String =>=>=> RelationalSchema.Column>> accessmodsentity.prot;
ClassDiagram.Attribut>> AccessModsEntity.priv:String =>=>=> RelationalSchema.Column>> accessmodsentity.priv;
ClassDiagram.Attribut>> PrivAccessModsEntity.id:int =>=>=> RelationalSchema.Column>> privaccessmodsentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PrivAccessModsEntity.pub:String =>=>=> RelationalSchema.Column>> privaccessmodsentity.pub;
ClassDiagram.Attribut>> PrivAccessModsEntity.prot:String =>=>=> RelationalSchema.Column>> privaccessmodsentity.prot;
ClassDiagram.Attribut>> PrivAccessModsEntity.priv:String =>=>=> RelationalSchema.Column>> privaccessmodsentity.priv;
ClassDiagram.Attribut>> EntityContact.id:String =>=>=> RelationalSchema.Column>> entitycontact.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityContact.email:String =>=>=> RelationalSchema.Column>> entitycontact.email;
ClassDiagram.Attribut>> EntityContact.phone:String =>=>=> RelationalSchema.Column>> entitycontact.phone;
ClassDiagram.Attribut>> EntityContact.type:String =>=>=> RelationalSchema.Column>> entitycontact.type;
ClassDiagram.Attribut>> EntityContact.theaddress:EmbeddableAddress =>=>=> RelationalSchema.Column>> entitycontact.theaddress;
ClassDiagram.Attribut>> PessimisticLockEntity.id:int =>=>=> RelationalSchema.Column>> pessimisticlockentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PessimisticLockEntity.name:String =>=>=> RelationalSchema.Column>> pessimisticlockentity.name;
ClassDiagram.Attribut>> TestEJBNoPersistentFields.holder:Nholder =>=>=> RelationalSchema.Column>> testejbnopersistentfields.holder;
ClassDiagram.Attribut>> ByteArray.ids:int =>=>=> RelationalSchema.Column>> bytearray.ids PRIMARY KEY;
ClassDiagram.Attribut>> ByteArray.GeneratedName:String =>=>=> RelationalSchema.Column>> bytearray.GeneratedName;
ClassDiagram.Attribut>> ByteArray.s:byte =>=>=> RelationalSchema.Column>> bytearray.s;
ClassDiagram.Attribut>> MapElementPCChild.elementdatachild:String =>=>=> RelationalSchema.Column>> mapelementpcchild.elementdatachild;
ClassDiagram.Attribut>> DependentFieldsPC.pk:long =>=>=> RelationalSchema.Column>> dependentfieldspc.pk PRIMARY KEY;
ClassDiagram.Attribut>> DependentFieldsPC.map:Map<String,DependentFieldsPC> =>=>=> RelationalSchema.Column>> dependentfieldspc.map;
ClassDiagram.Attribut>> DependentFieldsPC.dependentmap:Map<String,DependentFieldsPC> =>=>=> RelationalSchema.Column>> dependentfieldspc.dependentmap;
ClassDiagram.Attribut>> DateVersion.GeneratedName:String =>=>=> RelationalSchema.Column>> dateversion.GeneratedName;
ClassDiagram.Attribut>> DateVersion.id:int =>=>=> RelationalSchema.Column>> dateversion.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity1.serialversionuid:long =>=>=> RelationalSchema.Column>> entity1.serialversionuid;
ClassDiagram.Attribut>> Entity1.pk:long =>=>=> RelationalSchema.Column>> entity1.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity1.field:String =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.field:int =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.versionfield:int =>=>=> RelationalSchema.Column>> entity1.versionfield;
ClassDiagram.Attribut>> SequenceAssigned3.pk:Long =>=>=> RelationalSchema.Column>> sequenceassigned3.pk PRIMARY KEY;
ClassDiagram.Attribut>> SingleIdLong.pk:long =>=>=> RelationalSchema.Column>> singleidlong.pk;
ClassDiagram.Attribut>> SingleIdLong.str:String =>=>=> RelationalSchema.Column>> singleidlong.str;
ClassDiagram.Attribut>> InstanceCallbacksTest.predeleteinvocations:long =>=>=> RelationalSchema.Column>> instancecallbackstest.predeleteinvocations;
ClassDiagram.Attribut>> InstanceCallbacksTest.postloadinvocations:long =>=>=> RelationalSchema.Column>> instancecallbackstest.postloadinvocations;
ClassDiagram.Attribut>> InstanceCallbacksTest.prestoreinvocations:long =>=>=> RelationalSchema.Column>> instancecallbackstest.prestoreinvocations;
ClassDiagram.Attribut>> InstanceCallbacksTest.preclearinvocations:long =>=>=> RelationalSchema.Column>> instancecallbackstest.preclearinvocations;
ClassDiagram.Attribut>> InstanceCallbacksTest.transientpostloadcalled:boolean =>=>=> RelationalSchema.Column>> instancecallbackstest.transientpostloadcalled;
ClassDiagram.Attribut>> InstanceCallbacksTest.transientprestorecalled:boolean =>=>=> RelationalSchema.Column>> instancecallbackstest.transientprestorecalled;
ClassDiagram.Attribut>> InstanceCallbacksTest.transientpredeletecalled:boolean =>=>=> RelationalSchema.Column>> instancecallbackstest.transientpredeletecalled;
ClassDiagram.Attribut>> InstanceCallbacksTest.transientpreclearcalled:boolean =>=>=> RelationalSchema.Column>> instancecallbackstest.transientpreclearcalled;
ClassDiagram.Attribut>> InstanceCallbacksTest.transientpredeletecycle:int =>=>=> RelationalSchema.Column>> instancecallbackstest.transientpredeletecycle;
ClassDiagram.Attribut>> InstanceCallbacksTest.transientflushinprestore:boolean =>=>=> RelationalSchema.Column>> instancecallbackstest.transientflushinprestore;
ClassDiagram.Attribut>> InstanceCallbacksTest.//thisshouldneverbenullinjdopostloadnonnull:String =>=>=> RelationalSchema.Column>> instancecallbackstest.//thisshouldneverbenullinjdopostloadnonnull;
ClassDiagram.Attribut>> InstanceCallbacksTest.field:String =>=>=> RelationalSchema.Column>> instancecallbackstest.field;
ClassDiagram.Attribut>> InstanceCallbacksTest.field:int =>=>=> RelationalSchema.Column>> instancecallbackstest.field;
ClassDiagram.Attribut>> InstanceCallbacksTest.nondfgfield:int =>=>=> RelationalSchema.Column>> instancecallbackstest.nondfgfield;
ClassDiagram.Attribut>> InstanceCallbacksTest.transientrelid:Object =>=>=> RelationalSchema.Column>> instancecallbackstest.transientrelid;
ClassDiagram.Attribut>> DetachSMPC.serialversionuid:long =>=>=> RelationalSchema.Column>> detachsmpc.serialversionuid;
ClassDiagram.Attribut>> DetachSMPC.field:int =>=>=> RelationalSchema.Column>> detachsmpc.field;
ClassDiagram.Attribut>> DetachSMPC.rel:Set =>=>=> RelationalSchema.Column>> detachsmpc.rel;
ClassDiagram.Attribut>> DetachSMPC.stringint:Map =>=>=> RelationalSchema.Column>> detachsmpc.stringint;
ClassDiagram.Attribut>> AppIdSubD.pkd:double =>=>=> RelationalSchema.Column>> appidsubd.pkd;
ClassDiagram.Attribut>> AppIdSubD.fieldd:String =>=>=> RelationalSchema.Column>> appidsubd.fieldd;
ClassDiagram.Attribut>> ModInstanceCallbackTests.predeleteinvocations:long =>=>=> RelationalSchema.Column>> modinstancecallbacktests.predeleteinvocations;
ClassDiagram.Attribut>> ModInstanceCallbackTests.postloadinvocations:long =>=>=> RelationalSchema.Column>> modinstancecallbacktests.postloadinvocations;
ClassDiagram.Attribut>> ModInstanceCallbackTests.prestoreinvocations:long =>=>=> RelationalSchema.Column>> modinstancecallbacktests.prestoreinvocations;
ClassDiagram.Attribut>> ModInstanceCallbackTests.preclearinvocations:long =>=>=> RelationalSchema.Column>> modinstancecallbacktests.preclearinvocations;
ClassDiagram.Attribut>> ModInstanceCallbackTests.transientpostloadcalled:boolean =>=>=> RelationalSchema.Column>> modinstancecallbacktests.transientpostloadcalled;
ClassDiagram.Attribut>> ModInstanceCallbackTests.transientprestorecalled:boolean =>=>=> RelationalSchema.Column>> modinstancecallbacktests.transientprestorecalled;
ClassDiagram.Attribut>> ModInstanceCallbackTests.transientpredeletecalled:boolean =>=>=> RelationalSchema.Column>> modinstancecallbacktests.transientpredeletecalled;
ClassDiagram.Attribut>> ModInstanceCallbackTests.transientpreclearcalled:boolean =>=>=> RelationalSchema.Column>> modinstancecallbacktests.transientpreclearcalled;
ClassDiagram.Attribut>> ModInstanceCallbackTests.transientpredeletecycle:int =>=>=> RelationalSchema.Column>> modinstancecallbacktests.transientpredeletecycle;
ClassDiagram.Attribut>> ModInstanceCallbackTests.transientflushinprestore:boolean =>=>=> RelationalSchema.Column>> modinstancecallbacktests.transientflushinprestore;
ClassDiagram.Attribut>> ModInstanceCallbackTests.//thisshouldneverbenullinjdopostloadnonnull:String =>=>=> RelationalSchema.Column>> modinstancecallbacktests.//thisshouldneverbenullinjdopostloadnonnull;
ClassDiagram.Attribut>> ModInstanceCallbackTests.field:String =>=>=> RelationalSchema.Column>> modinstancecallbacktests.field;
ClassDiagram.Attribut>> ModInstanceCallbackTests.field:int =>=>=> RelationalSchema.Column>> modinstancecallbacktests.field;
ClassDiagram.Attribut>> ModInstanceCallbackTests.nondfgfield:int =>=>=> RelationalSchema.Column>> modinstancecallbacktests.nondfgfield;
ClassDiagram.Attribut>> ModInstanceCallbackTests.transientrelid:Object =>=>=> RelationalSchema.Column>> modinstancecallbacktests.transientrelid;
ClassDiagram.Attribut>> RuntimeTest2.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest2.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest2.//@idfield2:int =>=>=> RelationalSchema.Column>> runtimetest2.//@idfield2;
ClassDiagram.Attribut>> ObjectCollectionHolder.id:int =>=>=> RelationalSchema.Column>> objectcollectionholder.id PRIMARY KEY;
ClassDiagram.Attribut>> ObjectCollectionHolder.GeneratedName:HashSet =>=>=> RelationalSchema.Column>> objectcollectionholder.GeneratedName;
ClassDiagram.Attribut>> AttachC.serialversionuid:long =>=>=> RelationalSchema.Column>> attachc.serialversionuid;
ClassDiagram.Attribut>> AttachC.cstr:String =>=>=> RelationalSchema.Column>> attachc.cstr;
ClassDiagram.Attribut>> AttachC.c:int =>=>=> RelationalSchema.Column>> attachc.c;
ClassDiagram.Attribut>> AttachC.cdbl:double =>=>=> RelationalSchema.Column>> attachc.cdbl;
ClassDiagram.Attribut>> PCPerson.name:String =>=>=> RelationalSchema.Column>> pcperson.name;
ClassDiagram.Attribut>> AppIdClassString.pk:int =>=>=> RelationalSchema.Column>> appidclassstring.pk PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedPC.field:int =>=>=> RelationalSchema.Column>> embeddedpc.field;
ClassDiagram.Attribut>> EmbeddedPC.field1:int =>=>=> RelationalSchema.Column>> embeddedpc.field1;
ClassDiagram.Attribut>> EmbeddedPC.field:String =>=>=> RelationalSchema.Column>> embeddedpc.field;
ClassDiagram.Attribut>> AppIdHolder.id:int =>=>=> RelationalSchema.Column>> appidholder.id;
ClassDiagram.Attribut>> AppIdHolder.somefield:String =>=>=> RelationalSchema.Column>> appidholder.somefield;
ClassDiagram.Attribut>> AppIdHolder.//one-to-onerelations:AppIdSuper =>=>=> RelationalSchema.Column>> appidholder.//one-to-onerelations;
ClassDiagram.Attribut>> AppIdHolder.GeneratedName:AppIdSubA =>=>=> RelationalSchema.Column>> appidholder.GeneratedName;
ClassDiagram.Attribut>> AppIdHolder.GeneratedName:AppIdSubB =>=>=> RelationalSchema.Column>> appidholder.GeneratedName;
ClassDiagram.Attribut>> AppIdHolder.GeneratedName:AppIdSubC =>=>=> RelationalSchema.Column>> appidholder.GeneratedName;
ClassDiagram.Attribut>> AppIdHolder.GeneratedName:AppIdSubD =>=>=> RelationalSchema.Column>> appidholder.GeneratedName;
ClassDiagram.Attribut>> AppIdHolder.GeneratedName:AppIdSubE =>=>=> RelationalSchema.Column>> appidholder.GeneratedName;
ClassDiagram.Attribut>> AppIdHolder.GeneratedName:AppIdSubF =>=>=> RelationalSchema.Column>> appidholder.GeneratedName;
ClassDiagram.Attribut>> AppIdHolder.//one-to-manyrelationsappidsupers:Set =>=>=> RelationalSchema.Column>> appidholder.//one-to-manyrelationsappidsupers;
ClassDiagram.Attribut>> AppIdHolder.appidsubas:Collection =>=>=> RelationalSchema.Column>> appidholder.appidsubas;
ClassDiagram.Attribut>> AppIdHolder.appidsubbs:List =>=>=> RelationalSchema.Column>> appidholder.appidsubbs;
ClassDiagram.Attribut>> AppIdHolder.appidsubcs:Set =>=>=> RelationalSchema.Column>> appidholder.appidsubcs;
ClassDiagram.Attribut>> AppIdHolder.appidsubds:LinkedList =>=>=> RelationalSchema.Column>> appidholder.appidsubds;
ClassDiagram.Attribut>> AppIdHolder.appidsubes:HashSet =>=>=> RelationalSchema.Column>> appidholder.appidsubes;
ClassDiagram.Attribut>> AppIdHolder.appidsubfs:ArrayList =>=>=> RelationalSchema.Column>> appidholder.appidsubfs;
ClassDiagram.Attribut>> ModRuntimeTest2.serialversionuid:long =>=>=> RelationalSchema.Column>> modruntimetest2.serialversionuid;
ClassDiagram.Attribut>> ModRuntimeTest2.field2:int =>=>=> RelationalSchema.Column>> modruntimetest2.field2;
ClassDiagram.Attribut>> AttachVersionB.field2:String =>=>=> RelationalSchema.Column>> attachversionb.field2;
ClassDiagram.Attribut>> InterfaceHolder.serialversionuid:long =>=>=> RelationalSchema.Column>> interfaceholder.serialversionuid;
ClassDiagram.Attribut>> InterfaceHolder.intfs:Set =>=>=> RelationalSchema.Column>> interfaceholder.intfs;
ClassDiagram.Attribut>> InterfaceHolder.field:String =>=>=> RelationalSchema.Column>> interfaceholder.field;
ClassDiagram.Attribut>> InterfaceHolder.id:int =>=>=> RelationalSchema.Column>> interfaceholder.id PRIMARY KEY;
ClassDiagram.Attribut>> AllFieldsTypeTest.id:int =>=>=> RelationalSchema.Column>> allfieldstypetest.id PRIMARY KEY;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:int =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:long =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:short =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:float =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:double =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:byte =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:boolean =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:char =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:String =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.testbig:String =>=>=> RelationalSchema.Column>> allfieldstypetest.testbig;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:Date =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:Calendar =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:Object =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:BigInteger =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> AllFieldsTypeTest.test:BigDecimal =>=>=> RelationalSchema.Column>> allfieldstypetest.test;
ClassDiagram.Attribut>> SecondaryTab.id:int =>=>=> RelationalSchema.Column>> secondarytab.id PRIMARY KEY;
ClassDiagram.Attribut>> SecondaryTab.field:String =>=>=> RelationalSchema.Column>> secondarytab.field;
ClassDiagram.Attribut>> InterfaceTestImpl4.field:String =>=>=> RelationalSchema.Column>> interfacetestimpl4.field;
ClassDiagram.Attribut>> InterfaceTestImpl4.field:int =>=>=> RelationalSchema.Column>> interfacetestimpl4.field;
ClassDiagram.Attribut>> SingleIdString.pk:String =>=>=> RelationalSchema.Column>> singleidstring.pk;
ClassDiagram.Attribut>> SingleIdString.str:String =>=>=> RelationalSchema.Column>> singleidstring.str;
ClassDiagram.Attribut>> SequenceAssigned.pk:long =>=>=> RelationalSchema.Column>> sequenceassigned.pk PRIMARY KEY;
ClassDiagram.Attribut>> ValueStrategyPC.id:int =>=>=> RelationalSchema.Column>> valuestrategypc.id PRIMARY KEY;
ClassDiagram.Attribut>> ValueStrategyPC.uuid:String =>=>=> RelationalSchema.Column>> valuestrategypc.uuid;
ClassDiagram.Attribut>> ValueStrategyPC.uuidhex:String =>=>=> RelationalSchema.Column>> valuestrategypc.uuidhex;
ClassDiagram.Attribut>> ValueStrategyPC.name:String =>=>=> RelationalSchema.Column>> valuestrategypc.name;
ClassDiagram.Attribut>> ValueStrategyPC.ignoreupdate:int =>=>=> RelationalSchema.Column>> valuestrategypc.ignoreupdate;
ClassDiagram.Attribut>> ValueStrategyPC.restrictupdate:int =>=>=> RelationalSchema.Column>> valuestrategypc.restrictupdate;
ClassDiagram.Attribut>> ValueStrategyPC.version:int =>=>=> RelationalSchema.Column>> valuestrategypc.version;
ClassDiagram.Attribut>> ValueStrategyPC.sequence:int =>=>=> RelationalSchema.Column>> valuestrategypc.sequence;
ClassDiagram.Attribut>> InterfaceTestImpl1.serialversionuid:long =>=>=> RelationalSchema.Column>> interfacetestimpl1.serialversionuid;
ClassDiagram.Attribut>> InterfaceTestImpl1.field:String =>=>=> RelationalSchema.Column>> interfacetestimpl1.field;
ClassDiagram.Attribut>> AttachVersionC.field:int =>=>=> RelationalSchema.Column>> attachversionc.field;
ClassDiagram.Attribut>> AttachVersionC.pc:AttachVersionA =>=>=> RelationalSchema.Column>> attachversionc.pc;
ClassDiagram.Attribut>> LockGroupPCKnownSubclass.serialversionuid:long =>=>=> RelationalSchema.Column>> lockgrouppcknownsubclass.serialversionuid;
ClassDiagram.Attribut>> LockGroupPCKnownSubclass.knownsubclassfield:String =>=>=> RelationalSchema.Column>> lockgrouppcknownsubclass.knownsubclassfield;
ClassDiagram.Attribut>> BlobTest.id:int =>=>=> RelationalSchema.Column>> blobtest.id PRIMARY KEY;
ClassDiagram.Attribut>> PCDirectory.id:int =>=>=> RelationalSchema.Column>> pcdirectory.id PRIMARY KEY;
ClassDiagram.Attribut>> PCDirectory._name:String =>=>=> RelationalSchema.Column>> pcdirectory._name;
ClassDiagram.Attribut>> SingleIdChar.pk:char =>=>=> RelationalSchema.Column>> singleidchar.pk;
ClassDiagram.Attribut>> SingleIdChar.str:String =>=>=> RelationalSchema.Column>> singleidchar.str;
ClassDiagram.Attribut>> OuterJoinValuePC.field:String =>=>=> RelationalSchema.Column>> outerjoinvaluepc.field;
ClassDiagram.Attribut>> OuterJoinValuePC.value1:int =>=>=> RelationalSchema.Column>> outerjoinvaluepc.value1;
ClassDiagram.Attribut>> OuterJoinValuePC.value2:int =>=>=> RelationalSchema.Column>> outerjoinvaluepc.value2;
ClassDiagram.Attribut>> OuterJoinValuePC.id:int =>=>=> RelationalSchema.Column>> outerjoinvaluepc.id PRIMARY KEY;
ClassDiagram.Attribut>> PCClassPC.serialversionuid:long =>=>=> RelationalSchema.Column>> pcclasspc.serialversionuid;
ClassDiagram.Attribut>> PCClassPC.specificpc:Object =>=>=> RelationalSchema.Column>> pcclasspc.specificpc;
ClassDiagram.Attribut>> PCClassPC.genericpc:Object =>=>=> RelationalSchema.Column>> pcclasspc.genericpc;
ClassDiagram.Attribut>> PCClassPC.generic:Object =>=>=> RelationalSchema.Column>> pcclasspc.generic;
ClassDiagram.Attribut>> PCClassPC.specificinterface:PCClassInterface =>=>=> RelationalSchema.Column>> pcclasspc.specificinterface;
ClassDiagram.Attribut>> PCClassPC.defaultinterface:PCClassInterface =>=>=> RelationalSchema.Column>> pcclasspc.defaultinterface;
ClassDiagram.Attribut>> PCClassPC.interface:Serializable =>=>=> RelationalSchema.Column>> pcclasspc.interface;
ClassDiagram.Attribut>> PCClassPC.genericinterface:PCClassInterface =>=>=> RelationalSchema.Column>> pcclasspc.genericinterface;
ClassDiagram.Attribut>> ProxiesPC.id:int =>=>=> RelationalSchema.Column>> proxiespc.id PRIMARY KEY;
ClassDiagram.Attribut>> ProxiesPC.name:String =>=>=> RelationalSchema.Column>> proxiespc.name;
ClassDiagram.Attribut>> ProxiesPC.stringset:Set<String> =>=>=> RelationalSchema.Column>> proxiespc.stringset;
ClassDiagram.Attribut>> ProxiesPC.stringmap:Map<String,String> =>=>=> RelationalSchema.Column>> proxiespc.stringmap;
ClassDiagram.Attribut>> ProxiesPC.list:List<String> =>=>=> RelationalSchema.Column>> proxiespc.list;
ClassDiagram.Attribut>> ProxiesPC.comp:Collection<String> =>=>=> RelationalSchema.Column>> proxiespc.comp;
ClassDiagram.Attribut>> ProxiesPC.GeneratedName:Date =>=>=> RelationalSchema.Column>> proxiespc.GeneratedName;
ClassDiagram.Attribut>> ProxiesPC.//sqltypessqldate:java.sql.Date =>=>=> RelationalSchema.Column>> proxiespc.//sqltypessqldate;
ClassDiagram.Attribut>> ProxiesPC.timestamp:java.sql.Timestamp =>=>=> RelationalSchema.Column>> proxiespc.timestamp;
ClassDiagram.Attribut>> EmbeddedOwnerPC.id1:int =>=>=> RelationalSchema.Column>> embeddedownerpc.id1 PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedOwnerPC.id2:int =>=>=> RelationalSchema.Column>> embeddedownerpc.id2 PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedOwnerPC.field:String =>=>=> RelationalSchema.Column>> embeddedownerpc.field;
ClassDiagram.Attribut>> EmbeddedOwnerPC.mapping(nullindicatorattributename:EmbeddedPC =>=>=> RelationalSchema.Column>> embeddedownerpc.mapping(nullindicatorattributename;
ClassDiagram.Attribut>> EmbeddedOwnerPC.complexembedded:ComplexEmbeddedPC =>=>=> RelationalSchema.Column>> embeddedownerpc.complexembedded;
ClassDiagram.Attribut>> SequenceAssigned2.foo:int =>=>=> RelationalSchema.Column>> sequenceassigned2.foo;
ClassDiagram.Attribut>> AttachF.serialversionuid:long =>=>=> RelationalSchema.Column>> attachf.serialversionuid;
ClassDiagram.Attribut>> AttachF.id1:int =>=>=> RelationalSchema.Column>> attachf.id1 PRIMARY KEY;
ClassDiagram.Attribut>> AttachF.id2:String =>=>=> RelationalSchema.Column>> attachf.id2 PRIMARY KEY;
ClassDiagram.Attribut>> AttachF.fstr:String =>=>=> RelationalSchema.Column>> attachf.fstr;
ClassDiagram.Attribut>> AttachF.f:int =>=>=> RelationalSchema.Column>> attachf.f;
ClassDiagram.Attribut>> AttachF.fdbl:double =>=>=> RelationalSchema.Column>> attachf.fdbl;
ClassDiagram.Attribut>> AttachF.strings:List<String> =>=>=> RelationalSchema.Column>> attachf.strings;
ClassDiagram.Attribut>> AttachF.embeddedc:AttachC =>=>=> RelationalSchema.Column>> attachf.embeddedc;
ClassDiagram.Attribut>> SingleIdWrapper.pk:Integer =>=>=> RelationalSchema.Column>> singleidwrapper.pk;
ClassDiagram.Attribut>> SingleIdWrapper.str:String =>=>=> RelationalSchema.Column>> singleidwrapper.str;
ClassDiagram.Attribut>> FetchGroupTestObject.id:int =>=>=> RelationalSchema.Column>> fetchgrouptestobject.id PRIMARY KEY;
ClassDiagram.Attribut>> FetchGroupTestObject.a:int =>=>=> RelationalSchema.Column>> fetchgrouptestobject.a;
ClassDiagram.Attribut>> FetchGroupTestObject.b:String =>=>=> RelationalSchema.Column>> fetchgrouptestobject.b;
ClassDiagram.Attribut>> FetchGroupTestObject.c:BigInteger =>=>=> RelationalSchema.Column>> fetchgrouptestobject.c;
ClassDiagram.Attribut>> FetchGroupTestObject.d:Date =>=>=> RelationalSchema.Column>> fetchgrouptestobject.d;
ClassDiagram.Attribut>> FetchGroupTestObject.e:String =>=>=> RelationalSchema.Column>> fetchgrouptestobject.e;
ClassDiagram.Attribut>> FetchGroupTestObject.f:String =>=>=> RelationalSchema.Column>> fetchgrouptestobject.f;
ClassDiagram.Attribut>> SingleIdInt.pk:int =>=>=> RelationalSchema.Column>> singleidint.pk;
ClassDiagram.Attribut>> SingleIdInt.str:String =>=>=> RelationalSchema.Column>> singleidint.str;
ClassDiagram.Attribut>> ConcreteMappedAppIdSub.name:String =>=>=> RelationalSchema.Column>> concretemappedappidsub.name;
ClassDiagram.Attribut>> InverseA.field:String =>=>=> RelationalSchema.Column>> inversea.field;
ClassDiagram.Attribut>> InverseA.field:int =>=>=> RelationalSchema.Column>> inversea.field PRIMARY KEY;
ClassDiagram.Attribut>> InverseA.oneone:InverseA =>=>=> RelationalSchema.Column>> inversea.oneone;
ClassDiagram.Attribut>> InverseA.oneoneowner:InverseA =>=>=> RelationalSchema.Column>> inversea.oneoneowner;
ClassDiagram.Attribut>> InverseA.onemany:InverseA =>=>=> RelationalSchema.Column>> inversea.onemany;
ClassDiagram.Attribut>> InverseA.manyone:Set =>=>=> RelationalSchema.Column>> inversea.manyone;
ClassDiagram.Attribut>> InverseA.manymany:Set =>=>=> RelationalSchema.Column>> inversea.manymany;
ClassDiagram.Attribut>> InverseA.manymanyowner:Set =>=>=> RelationalSchema.Column>> inversea.manymanyowner;
ClassDiagram.Attribut>> InverseA.null:Set =>=>=> RelationalSchema.Column>> inversea.null;
ClassDiagram.Attribut>> InverseA.nullowner:InverseA =>=>=> RelationalSchema.Column>> inversea.nullowner;
ClassDiagram.Attribut>> AppIdSubE.fielde:String =>=>=> RelationalSchema.Column>> appidsube.fielde;
ClassDiagram.Attribut>> PCAddress.street:String =>=>=> RelationalSchema.Column>> pcaddress.street;
ClassDiagram.Attribut>> PCAddress.city:String =>=>=> RelationalSchema.Column>> pcaddress.city;
ClassDiagram.Attribut>> RuntimeTest3.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest3.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest3.//@idfield3:int =>=>=> RelationalSchema.Column>> runtimetest3.//@idfield3;
ClassDiagram.Attribut>> AttachB.serialversionuid:long =>=>=> RelationalSchema.Column>> attachb.serialversionuid;
ClassDiagram.Attribut>> AttachB.bstr:String =>=>=> RelationalSchema.Column>> attachb.bstr;
ClassDiagram.Attribut>> AttachB.b:int =>=>=> RelationalSchema.Column>> attachb.b;
ClassDiagram.Attribut>> AttachB.bdbl:double =>=>=> RelationalSchema.Column>> attachb.bdbl;
ClassDiagram.Attribut>> AttachB.stringintmap:Map<String,Integer> =>=>=> RelationalSchema.Column>> attachb.stringintmap;
ClassDiagram.Attribut>> ComplexEmbeddedPC.field:String =>=>=> RelationalSchema.Column>> complexembeddedpc.field;
ClassDiagram.Attribut>> ComplexEmbeddedPC.stringset:Set<String> =>=>=> RelationalSchema.Column>> complexembeddedpc.stringset;
ClassDiagram.Attribut>> ManagedInterfaceOwner.field:int =>=>=> RelationalSchema.Column>> managedinterfaceowner.field;
ClassDiagram.Attribut>> ManagedInterfaceOwner.iface:ManagedInterfaceSup =>=>=> RelationalSchema.Column>> managedinterfaceowner.iface;
ClassDiagram.Attribut>> ManagedInterfaceOwner.embed:ManagedInterfaceEmbed =>=>=> RelationalSchema.Column>> managedinterfaceowner.embed;
ClassDiagram.Attribut>> ModRuntimeTest1.serialversionuid:long =>=>=> RelationalSchema.Column>> modruntimetest1.serialversionuid;
ClassDiagram.Attribut>> ModRuntimeTest1.id:int =>=>=> RelationalSchema.Column>> modruntimetest1.id PRIMARY KEY;
ClassDiagram.Attribut>> ModRuntimeTest1.somefield:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ModRuntimeTest1.field:Locale =>=>=> RelationalSchema.Column>> modruntimetest1.field;
ClassDiagram.Attribut>> ModRuntimeTest1.field:int =>=>=> RelationalSchema.Column>> modruntimetest1.field;
ClassDiagram.Attribut>> ModRuntimeTest1.field:String =>=>=> RelationalSchema.Column>> modruntimetest1.field;
ClassDiagram.Attribut>> ModRuntimeTest1.trans:String =>=>=> RelationalSchema.Column>> modruntimetest1.trans;
ClassDiagram.Attribut>> NonMappedInterfaceImpl.mismatch:int =>=>=> RelationalSchema.Column>> nonmappedinterfaceimpl.mismatch;
ClassDiagram.Attribut>> Inner.none:Integer =>=>=> RelationalSchema.Column>> inner.none;
ClassDiagram.Attribut>> Inner.exception:Integer =>=>=> RelationalSchema.Column>> inner.exception;
ClassDiagram.Attribut>> Inner.id:int =>=>=> RelationalSchema.Column>> inner.id PRIMARY KEY;
ClassDiagram.Attribut>> AttachVersionA.pk:int =>=>=> RelationalSchema.Column>> attachversiona.pk;
ClassDiagram.Attribut>> AttachVersionA.version:int =>=>=> RelationalSchema.Column>> attachversiona.version;
ClassDiagram.Attribut>> AttachVersionA.field:String =>=>=> RelationalSchema.Column>> attachversiona.field;
ClassDiagram.Attribut>> AttachVersionA.fetcha:String =>=>=> RelationalSchema.Column>> attachversiona.fetcha;
ClassDiagram.Attribut>> AttachVersionA.fetchb:String =>=>=> RelationalSchema.Column>> attachversiona.fetchb;
ClassDiagram.Attribut>> AttachVersionA.pc:AttachVersionA =>=>=> RelationalSchema.Column>> attachversiona.pc;
ClassDiagram.Attribut>> AttachVersionA.embedded:AttachVersionC =>=>=> RelationalSchema.Column>> attachversiona.embedded;
ClassDiagram.Attribut>> AttachVersionA.many:Set =>=>=> RelationalSchema.Column>> attachversiona.many;
ClassDiagram.Attribut>> PersistentMapHolder.testpckeystringvalue:Map<MapElementPC,String> =>=>=> RelationalSchema.Column>> persistentmapholder.testpckeystringvalue;
ClassDiagram.Attribut>> PersistentMapHolder.teststringkeypcvalue:Map<String,MapElementPC> =>=>=> RelationalSchema.Column>> persistentmapholder.teststringkeypcvalue;
ClassDiagram.Attribut>> PersistentMapHolder.testpckeypcvalue:Map<MapElementPC,MapElementPC> =>=>=> RelationalSchema.Column>> persistentmapholder.testpckeypcvalue;
ClassDiagram.Attribut>> PersistentMapHolder.testpcsubkeystringvalue:Map<MapElementPCChild,String> =>=>=> RelationalSchema.Column>> persistentmapholder.testpcsubkeystringvalue;
ClassDiagram.Attribut>> PersistentMapHolder.teststringkeypcsubvalue:Map<String,MapElementPCChild> =>=>=> RelationalSchema.Column>> persistentmapholder.teststringkeypcsubvalue;
ClassDiagram.Attribut>> PersistentMapHolder.testpcsubkeypcvalue:Map<MapElementPCChild,MapElementPC> =>=>=> RelationalSchema.Column>> persistentmapholder.testpcsubkeypcvalue;
ClassDiagram.Attribut>> PersistentMapHolder.testpcsubkeypcsubvalue:Map<MapElementPCChild,MapElementPCChild> =>=>=> RelationalSchema.Column>> persistentmapholder.testpcsubkeypcsubvalue;
ClassDiagram.Attribut>> PersistentMapHolder.testpckeypcsubvalue:Map<MapElementPC,MapElementPCChild> =>=>=> RelationalSchema.Column>> persistentmapholder.testpckeypcsubvalue;
ClassDiagram.Attribut>> PersistentMapHolder.testpcintfkeystringvalue:Map<MapElementIntf,String> =>=>=> RelationalSchema.Column>> persistentmapholder.testpcintfkeystringvalue;
ClassDiagram.Attribut>> PersistentMapHolder.teststringkeypcintfvalue:Map<String,MapElementIntf> =>=>=> RelationalSchema.Column>> persistentmapholder.teststringkeypcintfvalue;
ClassDiagram.Attribut>> PersistentMapHolder.testpcintfkeypcvalue:Map<MapElementIntf,MapElementPC> =>=>=> RelationalSchema.Column>> persistentmapholder.testpcintfkeypcvalue;
ClassDiagram.Attribut>> InterfaceTestImpl3.serialversionuid:long =>=>=> RelationalSchema.Column>> interfacetestimpl3.serialversionuid;
ClassDiagram.Attribut>> InterfaceTestImpl3.field:int =>=>=> RelationalSchema.Column>> interfacetestimpl3.field;
ClassDiagram.Attribut>> PCFile._name:String =>=>=> RelationalSchema.Column>> pcfile._name;
ClassDiagram.Attribut>> SingleIdByte.pk:byte =>=>=> RelationalSchema.Column>> singleidbyte.pk;
ClassDiagram.Attribut>> SingleIdByte.str:String =>=>=> RelationalSchema.Column>> singleidbyte.str;
ClassDiagram.Attribut>> Lobs.serialversionuid:long =>=>=> RelationalSchema.Column>> lobs.serialversionuid;
ClassDiagram.Attribut>> Lobs.lobnullable:String =>=>=> RelationalSchema.Column>> lobs.lobnullable;
ClassDiagram.Attribut>> Lobs.lobnotnullable:String =>=>=> RelationalSchema.Column>> lobs.lobnotnullable;
ClassDiagram.Attribut>> Lobs.id:int =>=>=> RelationalSchema.Column>> lobs.id PRIMARY KEY;
ClassDiagram.Attribut>> Entity2.serialversionuid:long =>=>=> RelationalSchema.Column>> entity2.serialversionuid;
ClassDiagram.Attribut>> Entity2.pk:long =>=>=> RelationalSchema.Column>> entity2.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity2.field:String =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> Entity2.field:int =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> FetchGroupTestObjectChild.childa:int =>=>=> RelationalSchema.Column>> merchandise.childa;
ClassDiagram.Attribut>> FetchGroupTestObjectChild.childb:int =>=>=> RelationalSchema.Column>> merchandise.childb;
ClassDiagram.Attribut>> FetchGroupTestObjectChild.childc:int =>=>=> RelationalSchema.Column>> merchandise.childc;
ClassDiagram.Attribut>> FetchGroupTestObjectChild.childd:int =>=>=> RelationalSchema.Column>> merchandise.childd;
ClassDiagram.Attribut>> AttachD.serialversionuid:long =>=>=> RelationalSchema.Column>> attachd.serialversionuid;
ClassDiagram.Attribut>> AttachD.id:int =>=>=> RelationalSchema.Column>> attachd.id PRIMARY KEY;
ClassDiagram.Attribut>> AttachD.version:Object =>=>=> RelationalSchema.Column>> attachd.version;
ClassDiagram.Attribut>> AttachD.dstr:String =>=>=> RelationalSchema.Column>> attachd.dstr;
ClassDiagram.Attribut>> AttachD.d:int =>=>=> RelationalSchema.Column>> attachd.d;
ClassDiagram.Attribut>> AttachD.ddbl:double =>=>=> RelationalSchema.Column>> attachd.ddbl;
ClassDiagram.Attribut>> AttachD.pcstringmap:Map<AttachA,String> =>=>=> RelationalSchema.Column>> attachd.pcstringmap;
ClassDiagram.Attribut>> AttachD.bigintegerpcmap:TreeMap<BigInteger,AttachF> =>=>=> RelationalSchema.Column>> attachd.bigintegerpcmap;
ClassDiagram.Attribut>> AttachD.embeddede:AttachE =>=>=> RelationalSchema.Column>> attachd.embeddede;
ClassDiagram.Attribut>> AttachD.embeddeda:AttachA =>=>=> RelationalSchema.Column>> attachd.embeddeda;
ClassDiagram.Attribut>> RuntimeTest5.name:String =>=>=> RelationalSchema.Column>> runtimetest5.name;
ClassDiagram.Attribut>> RuntimeTest5.GeneratedName:RuntimeTest4 =>=>=> RelationalSchema.Column>> runtimetest5.GeneratedName;
ClassDiagram.Attribut>> AppIdSubC.pk1c:long =>=>=> RelationalSchema.Column>> appidsubc.pk1c;
ClassDiagram.Attribut>> AppIdSubC.pk2c:String =>=>=> RelationalSchema.Column>> appidsubc.pk2c;
ClassDiagram.Attribut>> AppIdSubC.fieldc:String =>=>=> RelationalSchema.Column>> appidsubc.fieldc;
ClassDiagram.Attribut>> LockGroupPC2.name:String =>=>=> RelationalSchema.Column>> lockgrouppc2.name;
ClassDiagram.Attribut>> LockGroupPC2.GeneratedName:List =>=>=> RelationalSchema.Column>> lockgrouppc2.GeneratedName;
ClassDiagram.Attribut>> ArraysTest.counter:long =>=>=> RelationalSchema.Column>> arraystest.counter;
ClassDiagram.Attribut>> ArraysTest.id:int =>=>=> RelationalSchema.Column>> arraystest.id PRIMARY KEY;
ClassDiagram.Attribut>> ArraysTest.a:String =>=>=> RelationalSchema.Column>> arraystest.a;
ClassDiagram.Attribut>> ArraysTest.a:Date =>=>=> RelationalSchema.Column>> arraystest.a;
ClassDiagram.Attribut>> ArraysTest.aint:Integer =>=>=> RelationalSchema.Column>> arraystest.aint;
ClassDiagram.Attribut>> ArraysTest.a:Long =>=>=> RelationalSchema.Column>> arraystest.a;
ClassDiagram.Attribut>> ArraysTest.a:Float =>=>=> RelationalSchema.Column>> arraystest.a;
ClassDiagram.Attribut>> ArraysTest.a:Byte =>=>=> RelationalSchema.Column>> arraystest.a;
ClassDiagram.Attribut>> ArraysTest.a:Double =>=>=> RelationalSchema.Column>> arraystest.a;
ClassDiagram.Attribut>> ArraysTest.a:Boolean =>=>=> RelationalSchema.Column>> arraystest.a;
ClassDiagram.Attribut>> ArraysTest.a:Short =>=>=> RelationalSchema.Column>> arraystest.a;
ClassDiagram.Attribut>> ArraysTest.a:Character =>=>=> RelationalSchema.Column>> arraystest.a;
ClassDiagram.Attribut>> ArraysTest.ap:int =>=>=> RelationalSchema.Column>> arraystest.ap;
ClassDiagram.Attribut>> ArraysTest.ap:long =>=>=> RelationalSchema.Column>> arraystest.ap;
ClassDiagram.Attribut>> ArraysTest.ap:float =>=>=> RelationalSchema.Column>> arraystest.ap;
ClassDiagram.Attribut>> ArraysTest.ap:byte =>=>=> RelationalSchema.Column>> arraystest.ap;
ClassDiagram.Attribut>> ArraysTest.ap:double =>=>=> RelationalSchema.Column>> arraystest.ap;
ClassDiagram.Attribut>> ArraysTest.ap:boolean =>=>=> RelationalSchema.Column>> arraystest.ap;
ClassDiagram.Attribut>> ArraysTest.ap:short =>=>=> RelationalSchema.Column>> arraystest.ap;
ClassDiagram.Attribut>> ArraysTest.aacterp:char =>=>=> RelationalSchema.Column>> arraystest.aacterp;
ClassDiagram.Attribut>> ArraysTest.aacterpclob:char =>=>=> RelationalSchema.Column>> arraystest.aacterpclob;
ClassDiagram.Attribut>> ArraysTest.a:ArraysTest =>=>=> RelationalSchema.Column>> arraystest.a;
ClassDiagram.Attribut>> SCOTest.id:int =>=>=> RelationalSchema.Column>> scotest.id PRIMARY KEY;
ClassDiagram.Attribut>> SCOTest.strintmap:Map<String,Integer> =>=>=> RelationalSchema.Column>> scotest.strintmap;
ClassDiagram.Attribut>> SCOTest.intlongmap:Map<Integer,Long> =>=>=> RelationalSchema.Column>> scotest.intlongmap;
ClassDiagram.Attribut>> SCOTest.longfloatmap:Map<Long,Float> =>=>=> RelationalSchema.Column>> scotest.longfloatmap;
ClassDiagram.Attribut>> SCOTest.floatbytemap:Map<Float,Byte> =>=>=> RelationalSchema.Column>> scotest.floatbytemap;
ClassDiagram.Attribut>> SCOTest.bytedoublemap:Map<Byte,Double> =>=>=> RelationalSchema.Column>> scotest.bytedoublemap;
ClassDiagram.Attribut>> SCOTest.doublecharmap:Map<Double,Character> =>=>=> RelationalSchema.Column>> scotest.doublecharmap;
ClassDiagram.Attribut>> SCOTest.charbooleanmap:Map<Character,Boolean> =>=>=> RelationalSchema.Column>> scotest.charbooleanmap;
ClassDiagram.Attribut>> SCOTest.datestrmap:Map<Date,String> =>=>=> RelationalSchema.Column>> scotest.datestrmap;
ClassDiagram.Attribut>> SCOTest.bigdecimalbigintegermap:Map<BigDecimal,BigInteger> =>=>=> RelationalSchema.Column>> scotest.bigdecimalbigintegermap;
ClassDiagram.Attribut>> SCOTest.cstring:Collection<String> =>=>=> RelationalSchema.Column>> scotest.cstring;
ClassDiagram.Attribut>> SCOTest.cinteger:Collection<Integer> =>=>=> RelationalSchema.Column>> scotest.cinteger;
ClassDiagram.Attribut>> SCOTest.clong:Collection<Long> =>=>=> RelationalSchema.Column>> scotest.clong;
ClassDiagram.Attribut>> SCOTest.cfloat:Collection<Float> =>=>=> RelationalSchema.Column>> scotest.cfloat;
ClassDiagram.Attribut>> SCOTest.cbyte:Collection<Byte> =>=>=> RelationalSchema.Column>> scotest.cbyte;
ClassDiagram.Attribut>> SCOTest.cdouble:Collection<Double> =>=>=> RelationalSchema.Column>> scotest.cdouble;
ClassDiagram.Attribut>> SCOTest.cboolean:Collection<Boolean> =>=>=> RelationalSchema.Column>> scotest.cboolean;
ClassDiagram.Attribut>> SCOTest.cshort:Collection<Short> =>=>=> RelationalSchema.Column>> scotest.cshort;
ClassDiagram.Attribut>> SCOTest.cdate:Collection<Date> =>=>=> RelationalSchema.Column>> scotest.cdate;
ClassDiagram.Attribut>> SCOTest.ccharacter:Collection<Character> =>=>=> RelationalSchema.Column>> scotest.ccharacter;
ClassDiagram.Attribut>> SCOTest.cbiginteger:Collection<BigInteger> =>=>=> RelationalSchema.Column>> scotest.cbiginteger;
ClassDiagram.Attribut>> SCOTest.cbigdecimal:Collection<BigDecimal> =>=>=> RelationalSchema.Column>> scotest.cbigdecimal;
ClassDiagram.Attribut>> SingleIdShort.pk:short =>=>=> RelationalSchema.Column>> singleidshort.pk;
ClassDiagram.Attribut>> SingleIdShort.str:String =>=>=> RelationalSchema.Column>> singleidshort.str;
ClassDiagram.Attribut>> RuntimeTest1.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest1.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest1.field:Date =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.somefield:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> RuntimeTest1.field:Locale =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:int =>=>=> RelationalSchema.Column>> runtimetest1.field PRIMARY KEY;
ClassDiagram.Attribut>> RuntimeTest1.field1:int =>=>=> RelationalSchema.Column>> runtimetest1.field1;
ClassDiagram.Attribut>> RuntimeTest1.field:String =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.//transactionalonlytrans:String =>=>=> RelationalSchema.Column>> runtimetest1.//transactionalonlytrans;
ClassDiagram.Attribut>> RuntimeTest1.version:int =>=>=> RelationalSchema.Column>> runtimetest1.version;
ClassDiagram.Attribut>> PCDepartment.name:String =>=>=> RelationalSchema.Column>> pcdepartment.name;
ClassDiagram.Attribut>> PCCompany.id:int =>=>=> RelationalSchema.Column>> pccompany.id PRIMARY KEY;
ClassDiagram.Attribut>> PCCompany.name:String =>=>=> RelationalSchema.Column>> pccompany.name;
ClassDiagram.Attribut>> MixedInterfaceImpl.field:int =>=>=> RelationalSchema.Column>> mixedinterfaceimpl.field;
ClassDiagram.Attribut>> AttachE.serialversionuid:long =>=>=> RelationalSchema.Column>> attache.serialversionuid;
ClassDiagram.Attribut>> AttachE.id:int =>=>=> RelationalSchema.Column>> attache.id PRIMARY KEY;
ClassDiagram.Attribut>> AttachE.version:Object =>=>=> RelationalSchema.Column>> attache.version;
ClassDiagram.Attribut>> AttachE.estr:String =>=>=> RelationalSchema.Column>> attache.estr;
ClassDiagram.Attribut>> AttachE.e:int =>=>=> RelationalSchema.Column>> attache.e;
ClassDiagram.Attribut>> AttachE.edbl:double =>=>=> RelationalSchema.Column>> attache.edbl;
ClassDiagram.Attribut>> AttachE.field:Date =>=>=> RelationalSchema.Column>> attache.field;
ClassDiagram.Attribut>> RuntimeTest4.name:String =>=>=> RelationalSchema.Column>> runtimetest4.name;
ClassDiagram.Attribut>> Blobs.serialversionuid:long =>=>=> RelationalSchema.Column>> blobs.serialversionuid;
ClassDiagram.Attribut>> Blobs.lobnullable:byte =>=>=> RelationalSchema.Column>> blobs.lobnullable;
ClassDiagram.Attribut>> Blobs.lobnotnullable:byte =>=>=> RelationalSchema.Column>> blobs.lobnotnullable;
ClassDiagram.Attribut>> Blobs.id:int =>=>=> RelationalSchema.Column>> blobs.id PRIMARY KEY;
ClassDiagram.Attribut>> AppIdSubB.pkb:String =>=>=> RelationalSchema.Column>> appidsubb.pkb;
ClassDiagram.Attribut>> AppIdSubB.fieldb:String =>=>=> RelationalSchema.Column>> appidsubb.fieldb;
ClassDiagram.Attribut>> AImplB.name:String =>=>=> RelationalSchema.Column>> aimplb.name;
ClassDiagram.Attribut>> AImplB.pk1:int =>=>=> RelationalSchema.Column>> aimplb.pk1 PRIMARY KEY;
ClassDiagram.Attribut>> AImplB.pk2:String =>=>=> RelationalSchema.Column>> aimplb.pk2 PRIMARY KEY;
ClassDiagram.Attribut>> ExternalValues.toshort:boolean =>=>=> RelationalSchema.Column>> externalvalues.toshort;
ClassDiagram.Attribut>> ExternalValues.todouble:byte =>=>=> RelationalSchema.Column>> externalvalues.todouble;
ClassDiagram.Attribut>> ExternalValues.tofloat:int =>=>=> RelationalSchema.Column>> externalvalues.tofloat;
ClassDiagram.Attribut>> ExternalValues.tochar:long =>=>=> RelationalSchema.Column>> externalvalues.tochar;
ClassDiagram.Attribut>> ExternalValues.tostring:short =>=>=> RelationalSchema.Column>> externalvalues.tostring;
ClassDiagram.Attribut>> ExternalValues.toboolean:float =>=>=> RelationalSchema.Column>> externalvalues.toboolean;
ClassDiagram.Attribut>> ExternalValues.tobyte:double =>=>=> RelationalSchema.Column>> externalvalues.tobyte;
ClassDiagram.Attribut>> ExternalValues.toint:char =>=>=> RelationalSchema.Column>> externalvalues.toint;
ClassDiagram.Attribut>> ExternalValues.tolong:String =>=>=> RelationalSchema.Column>> externalvalues.tolong;
ClassDiagram.Attribut>> ExternalValues.id:int =>=>=> RelationalSchema.Column>> externalvalues.id PRIMARY KEY;
ClassDiagram.Attribut>> Transition.serialversionuid:long =>=>=> RelationalSchema.Column>> transition.serialversionuid;
ClassDiagram.Attribut>> Transition.id:Long =>=>=> RelationalSchema.Column>> transition.id PRIMARY KEY;
ClassDiagram.Attribut>> Transition.name:String =>=>=> RelationalSchema.Column>> transition.name;
ClassDiagram.Attribut>> PCCountry.code:String =>=>=> RelationalSchema.Column>> pccountry.code;
ClassDiagram.Attribut>> PCCountry.name:String =>=>=> RelationalSchema.Column>> pccountry.name;
ClassDiagram.Attribut>> AppIdSubF.fieldf:String =>=>=> RelationalSchema.Column>> appidsubf.fieldf;
ClassDiagram.Attribut>> InverseB.field:String =>=>=> RelationalSchema.Column>> inverseb.field;
ClassDiagram.Attribut>> InverseB.oneone:InverseB =>=>=> RelationalSchema.Column>> inverseb.oneone;
ClassDiagram.Attribut>> InverseB.manymany:Set =>=>=> RelationalSchema.Column>> inverseb.manymany;
ClassDiagram.Attribut>> AttachA.serialversionuid:long =>=>=> RelationalSchema.Column>> attacha.serialversionuid;
ClassDiagram.Attribut>> AttachA.id:int =>=>=> RelationalSchema.Column>> attacha.id PRIMARY KEY;
ClassDiagram.Attribut>> AttachA.version:int =>=>=> RelationalSchema.Column>> attacha.version;
ClassDiagram.Attribut>> AttachA.astr:String =>=>=> RelationalSchema.Column>> attacha.astr;
ClassDiagram.Attribut>> AttachA.a:int =>=>=> RelationalSchema.Column>> attacha.a;
ClassDiagram.Attribut>> AttachA.adbl:double =>=>=> RelationalSchema.Column>> attacha.adbl;
ClassDiagram.Attribut>> AttachA.array:String =>=>=> RelationalSchema.Column>> attacha.array;
ClassDiagram.Attribut>> AttachA.array:AttachE =>=>=> RelationalSchema.Column>> attacha.array;
ClassDiagram.Attribut>> ManagedInterfaceOwnerAppId.field:int =>=>=> RelationalSchema.Column>> managedinterfaceownerappid.field;
ClassDiagram.Attribut>> ManagedInterfaceOwnerAppId.iface:ManagedInterfaceSupAppId =>=>=> RelationalSchema.Column>> managedinterfaceownerappid.iface;
ClassDiagram.Attribut>> LockGroupPC.serialversionuid:long =>=>=> RelationalSchema.Column>> lockgrouppc.serialversionuid;
ClassDiagram.Attribut>> LockGroupPC.defaultlockgroupfield:String =>=>=> RelationalSchema.Column>> lockgrouppc.defaultlockgroupfield;
ClassDiagram.Attribut>> LockGroupPC.explicitdefaultlockgroupfield:int =>=>=> RelationalSchema.Column>> lockgrouppc.explicitdefaultlockgroupfield;
ClassDiagram.Attribut>> LockGroupPC.lockgroup0field:int =>=>=> RelationalSchema.Column>> lockgrouppc.lockgroup0field;
ClassDiagram.Attribut>> LockGroupPC.lockgroup0field:String =>=>=> RelationalSchema.Column>> lockgrouppc.lockgroup0field;
ClassDiagram.Attribut>> LockGroupPC.transientlockgroup1relationfield:RuntimeTest1 =>=>=> RelationalSchema.Column>> lockgrouppc.transientlockgroup1relationfield;
ClassDiagram.Attribut>> LockGroupPC.lockgroup1field:int =>=>=> RelationalSchema.Column>> lockgrouppc.lockgroup1field;
ClassDiagram.Attribut>> LockGroupPC.unlockedfield:String =>=>=> RelationalSchema.Column>> lockgrouppc.unlockedfield;
ClassDiagram.Attribut>> State.serialversionuid:long =>=>=> RelationalSchema.Column>> state.serialversionuid;
ClassDiagram.Attribut>> State.id:Long =>=>=> RelationalSchema.Column>> state.id PRIMARY KEY;
ClassDiagram.Attribut>> State.name:String =>=>=> RelationalSchema.Column>> state.name;
ClassDiagram.Attribut>> MapElementPC.elementdata:String =>=>=> RelationalSchema.Column>> mapelementpc.elementdata;
ClassDiagram.Attribut>> InterfaceTestImpl2.serialversionuid:long =>=>=> RelationalSchema.Column>> interfacetestimpl2.serialversionuid;
ClassDiagram.Attribut>> InterfaceTestImpl2.field:String =>=>=> RelationalSchema.Column>> interfacetestimpl2.field;
ClassDiagram.Attribut>> ColumnIOPC.name:String =>=>=> RelationalSchema.Column>> columniopc.name;
ClassDiagram.Attribut>> ColumnIOPC.ignoreinsert:int =>=>=> RelationalSchema.Column>> columniopc.ignoreinsert;
ClassDiagram.Attribut>> ColumnIOPC.ignoreupdate:int =>=>=> RelationalSchema.Column>> columniopc.ignoreupdate;
ClassDiagram.Attribut>> ColumnIOPC.ident:int =>=>=> RelationalSchema.Column>> columniopc.ident;
ClassDiagram.Attribut>> ColumnIOPC.id:int =>=>=> RelationalSchema.Column>> columniopc.id PRIMARY KEY;
ClassDiagram.Attribut>> CalendarFields.id:int =>=>=> RelationalSchema.Column>> calendarfields.id PRIMARY KEY;
ClassDiagram.Attribut>> CalendarFields.unassigned:Calendar =>=>=> RelationalSchema.Column>> calendarfields.unassigned;
ClassDiagram.Attribut>> CalendarFields.gmt:Calendar =>=>=> RelationalSchema.Column>> calendarfields.gmt;
ClassDiagram.Attribut>> CalendarFields.pacific:Calendar =>=>=> RelationalSchema.Column>> calendarfields.pacific;
ClassDiagram.Attribut>> CalendarFields.newyork:Calendar =>=>=> RelationalSchema.Column>> calendarfields.newyork;
ClassDiagram.Attribut>> CalendarFields.berlin:Calendar =>=>=> RelationalSchema.Column>> calendarfields.berlin;
ClassDiagram.Attribut>> CalendarFields.singapore:Calendar =>=>=> RelationalSchema.Column>> calendarfields.singapore;
ClassDiagram.Attribut>> AllFieldTypesTest.id:int =>=>=> RelationalSchema.Column>> allfieldtypestest.id PRIMARY KEY;
ClassDiagram.Attribut>> AllFieldTypesTest.test:int =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.test:long =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.test:short =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.test:float =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.test:double =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.test:byte =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.test:boolean =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.test:char =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.test:String =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.testbig:String =>=>=> RelationalSchema.Column>> allfieldtypestest.testbig;
ClassDiagram.Attribut>> AllFieldTypesTest.test:Date =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.test:Calendar =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.testtstscale0:Timestamp =>=>=> RelationalSchema.Column>> allfieldtypestest.testtstscale0;
ClassDiagram.Attribut>> AllFieldTypesTest.testtstscale3:Timestamp =>=>=> RelationalSchema.Column>> allfieldtypestest.testtstscale3;
ClassDiagram.Attribut>> AllFieldTypesTest.testtstscale6:Timestamp =>=>=> RelationalSchema.Column>> allfieldtypestest.testtstscale6;
ClassDiagram.Attribut>> AllFieldTypesTest.testtstmaxscale:Timestamp =>=>=> RelationalSchema.Column>> allfieldtypestest.testtstmaxscale;
ClassDiagram.Attribut>> AllFieldTypesTest.testscale0:Date =>=>=> RelationalSchema.Column>> allfieldtypestest.testscale0;
ClassDiagram.Attribut>> AllFieldTypesTest.testscale3:Date =>=>=> RelationalSchema.Column>> allfieldtypestest.testscale3;
ClassDiagram.Attribut>> AllFieldTypesTest.testmaxscale:Date =>=>=> RelationalSchema.Column>> allfieldtypestest.testmaxscale;
ClassDiagram.Attribut>> AllFieldTypesTest.test:Object =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.test:BigInteger =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> AllFieldTypesTest.test:BigDecimal =>=>=> RelationalSchema.Column>> allfieldtypestest.test;
ClassDiagram.Attribut>> TestStaticInnerClasses._oid:Object =>=>=> RelationalSchema.Column>> teststaticinnerclasses._oid;
ClassDiagram.Attribut>> TestEJBLobs._pm:EntityManager =>=>=> RelationalSchema.Column>> testejblobs._pm;
ClassDiagram.Attribut>> TestEJBLobs._:Inner =>=>=> RelationalSchema.Column>> testejblobs._;
ClassDiagram.Attribut>> Item.serialversionuid:long =>=>=> RelationalSchema.Column>> item.serialversionuid;
ClassDiagram.Attribut>> Item.itemid:int =>=>=> RelationalSchema.Column>> item.itemid PRIMARY KEY;
ClassDiagram.Attribut>> Item.itemname:String =>=>=> RelationalSchema.Column>> item.itemname;
ClassDiagram.Attribut>> Item.itemprice:java.math.BigDecimal =>=>=> RelationalSchema.Column>> item.itemprice;
ClassDiagram.Attribut>> Item.itemdata:String =>=>=> RelationalSchema.Column>> item.itemdata;
ClassDiagram.Attribut>> SubclassPerson.id:int =>=>=> RelationalSchema.Column>> subclassperson.id PRIMARY KEY;
ClassDiagram.Attribut>> SubclassPerson.forename:String =>=>=> RelationalSchema.Column>> subclassperson.forename;
ClassDiagram.Attribut>> SubclassPerson.surname:String =>=>=> RelationalSchema.Column>> subclassperson.surname;
ClassDiagram.Attribut>> NamedEntity.id:long =>=>=> RelationalSchema.Column>> namedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> NamedEntity.name:String =>=>=> RelationalSchema.Column>> namedentity.name;
ClassDiagram.Attribut>> NamedEntity.optlock:Integer =>=>=> RelationalSchema.Column>> namedentity.optlock;
ClassDiagram.Attribut>> Person.id:int =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.forename:String =>=>=> RelationalSchema.Column>> person.forename;
ClassDiagram.Attribut>> Person.surname:String =>=>=> RelationalSchema.Column>> person.surname;
ClassDiagram.Attribut>> Place.location:String =>=>=> RelationalSchema.Column>> place.location PRIMARY KEY;
ClassDiagram.Attribut>> EntityWithTimestampPK.idtsp:Timestamp =>=>=> RelationalSchema.Column>> entitywithtimestamppk.idtsp PRIMARY KEY;
ClassDiagram.Attribut>> EntityWithTimestampPK.description:String =>=>=> RelationalSchema.Column>> entitywithtimestamppk.description;
ClassDiagram.Attribut>> TemporalFieldTypes.//mapping-defaulttotimestampdefaultfield:Date =>=>=> RelationalSchema.Column>> temporalfieldtypes.//mapping-defaulttotimestampdefaultfield;
ClassDiagram.Attribut>> TemporalFieldTypes.field:Date =>=>=> RelationalSchema.Column>> temporalfieldtypes.field;
ClassDiagram.Attribut>> TemporalFieldTypes.timefield:Date =>=>=> RelationalSchema.Column>> temporalfieldtypes.timefield;
ClassDiagram.Attribut>> TemporalFieldTypes.timestampfield:Date =>=>=> RelationalSchema.Column>> temporalfieldtypes.timestampfield;
ClassDiagram.Attribut>> TemporalFieldTypes.//mapping-defaulttotimestampdefaultfield:Calendar =>=>=> RelationalSchema.Column>> temporalfieldtypes.//mapping-defaulttotimestampdefaultfield;
ClassDiagram.Attribut>> TemporalFieldTypes.datefield:Calendar =>=>=> RelationalSchema.Column>> temporalfieldtypes.datefield;
ClassDiagram.Attribut>> TemporalFieldTypes.timefield:Calendar =>=>=> RelationalSchema.Column>> temporalfieldtypes.timefield;
ClassDiagram.Attribut>> TemporalFieldTypes.timestampfield:Calendar =>=>=> RelationalSchema.Column>> temporalfieldtypes.timestampfield;
ClassDiagram.Attribut>> TemporalFieldTypes.timezonefield:Calendar =>=>=> RelationalSchema.Column>> temporalfieldtypes.timezonefield;
ClassDiagram.Attribut>> AllFieldTypes.//@basictypesfield:short =>=>=> RelationalSchema.Column>> allfieldtypes.//@basictypesfield;
ClassDiagram.Attribut>> AllFieldTypes.field:int =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:boolean =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:long =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:float =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:char =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:double =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:byte =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Short =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Integer =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Boolean =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Long =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Float =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Character =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Double =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Byte =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.field:BigInteger =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:BigDecimal =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:String =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:Date =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:Calendar =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.sqldatefield:java.sql.Date =>=>=> RelationalSchema.Column>> allfieldtypes.sqldatefield;
ClassDiagram.Attribut>> AllFieldTypes.sqltimefield:java.sql.Time =>=>=> RelationalSchema.Column>> allfieldtypes.sqltimefield;
ClassDiagram.Attribut>> AllFieldTypes.sqltimestampfield:java.sql.Timestamp =>=>=> RelationalSchema.Column>> allfieldtypes.sqltimestampfield;
ClassDiagram.Attribut>> AllFieldTypes.lob:byte =>=>=> RelationalSchema.Column>> allfieldtypes.lob;
ClassDiagram.Attribut>> AllFieldTypes.wlob:Byte =>=>=> RelationalSchema.Column>> allfieldtypes.wlob;
ClassDiagram.Attribut>> AllFieldTypes.lob:char =>=>=> RelationalSchema.Column>> allfieldtypes.lob;
ClassDiagram.Attribut>> AllFieldTypes.wlob:Character =>=>=> RelationalSchema.Column>> allfieldtypes.wlob;
ClassDiagram.Attribut>> AllFieldTypes.enumfield:EnumType =>=>=> RelationalSchema.Column>> allfieldtypes.enumfield;
ClassDiagram.Attribut>> AllFieldTypes.field:Serializable =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.//additionaltypessetofstrings:Set<String> =>=>=> RelationalSchema.Column>> allfieldtypes.//additionaltypessetofstrings;
ClassDiagram.Attribut>> AllFieldTypes.arrayofs:String =>=>=> RelationalSchema.Column>> allfieldtypes.arrayofs;
ClassDiagram.Attribut>> AllFieldTypes.arrayofs:int =>=>=> RelationalSchema.Column>> allfieldtypes.arrayofs;
ClassDiagram.Attribut>> AllFieldTypes.//java8datetimetypeswhicharerequiredbythejpa-2.2specfield:LocalDate =>=>=> RelationalSchema.Column>> allfieldtypes.//java8datetimetypeswhicharerequiredbythejpa-2.2specfield;
ClassDiagram.Attribut>> AllFieldTypes.field:LocalTime =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:LocalDateTime =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:OffsetTime =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:OffsetDateTime =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> Java8TimeTypes.id:int =>=>=> RelationalSchema.Column>> java8timetypes.id PRIMARY KEY;
ClassDiagram.Attribut>> Java8TimeTypes.olddatefield:java.util.Date =>=>=> RelationalSchema.Column>> java8timetypes.olddatefield;
ClassDiagram.Attribut>> Java8TimeTypes.field:LocalTime =>=>=> RelationalSchema.Column>> java8timetypes.field;
ClassDiagram.Attribut>> Java8TimeTypes.field:LocalDate =>=>=> RelationalSchema.Column>> java8timetypes.field;
ClassDiagram.Attribut>> Java8TimeTypes.field:LocalDateTime =>=>=> RelationalSchema.Column>> java8timetypes.field;
ClassDiagram.Attribut>> Java8TimeTypes.field:OffsetTime =>=>=> RelationalSchema.Column>> java8timetypes.field;
ClassDiagram.Attribut>> Java8TimeTypes.field:OffsetDateTime =>=>=> RelationalSchema.Column>> java8timetypes.field;
ClassDiagram.Attribut>> VersionTSEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> versiontsentity.serialversionuid;
ClassDiagram.Attribut>> VersionTSEntity.id:Long =>=>=> RelationalSchema.Column>> versiontsentity.id PRIMARY KEY;
ClassDiagram.Attribut>> VersionTSEntity.update:Timestamp =>=>=> RelationalSchema.Column>> versiontsentity.update;
ClassDiagram.Attribut>> VersionTSEntity.someint:Integer =>=>=> RelationalSchema.Column>> versiontsentity.someint;
ClassDiagram.Attribut>> ResultClsAnnotation.id:String =>=>=> RelationalSchema.Column>> resultclsannotation.id PRIMARY KEY;
ClassDiagram.Attribut>> ResultClsAnnotation.description:String =>=>=> RelationalSchema.Column>> resultclsannotation.description;
ClassDiagram.Attribut>> EntityPerson.serialversionuid:long =>=>=> RelationalSchema.Column>> entityperson.serialversionuid;
ClassDiagram.Attribut>> EntityPerson.id:int =>=>=> RelationalSchema.Column>> entityperson.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityPerson.firstname:String =>=>=> RelationalSchema.Column>> entityperson.firstname;
ClassDiagram.Attribut>> EntityPerson.lastname:String =>=>=> RelationalSchema.Column>> entityperson.lastname;
ClassDiagram.Attribut>> GeneratedIdObject.id:long =>=>=> RelationalSchema.Column>> generatedidobject.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityEmployee.serialversionuid:long =>=>=> RelationalSchema.Column>> entityemployee.serialversionuid;
ClassDiagram.Attribut>> EntityEmployee.id:int =>=>=> RelationalSchema.Column>> entityemployee.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityEmployee.firstname:String =>=>=> RelationalSchema.Column>> entityemployee.firstname;
ClassDiagram.Attribut>> EntityEmployee.lastname:String =>=>=> RelationalSchema.Column>> entityemployee.lastname;
ClassDiagram.Attribut>> EntityEmployee.salary:float =>=>=> RelationalSchema.Column>> entityemployee.salary;
ClassDiagram.Attribut>> SequencedEntity.id:int =>=>=> RelationalSchema.Column>> sequencedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SequencedEntity.gval1:int =>=>=> RelationalSchema.Column>> sequencedentity.gval1;
ClassDiagram.Attribut>> SequencedEntity.gval2:int =>=>=> RelationalSchema.Column>> sequencedentity.gval2;
ClassDiagram.Attribut>> SequencedEntity.gval3:int =>=>=> RelationalSchema.Column>> sequencedentity.gval3;
ClassDiagram.Attribut>> HSQLEmployee.id:int =>=>=> RelationalSchema.Column>> hsqlemployee.id PRIMARY KEY;
ClassDiagram.Attribut>> HSQLEmployee.firstname:String =>=>=> RelationalSchema.Column>> hsqlemployee.firstname;
ClassDiagram.Attribut>> HSQLEmployee.lastname:String =>=>=> RelationalSchema.Column>> hsqlemployee.lastname;
ClassDiagram.Attribut>> HSQLEmployee2.id:int =>=>=> RelationalSchema.Column>> hsqlemployee2.id PRIMARY KEY;
ClassDiagram.Attribut>> HSQLEmployee2.firstname:String =>=>=> RelationalSchema.Column>> hsqlemployee2.firstname;
ClassDiagram.Attribut>> HSQLEmployee2.lastname:String =>=>=> RelationalSchema.Column>> hsqlemployee2.lastname;
ClassDiagram.Attribut>> SuperPropertyEntity.id:int =>=>=> RelationalSchema.Column>> superpropertyentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SuperPropertyEntity.name:String =>=>=> RelationalSchema.Column>> superpropertyentity.name;
ClassDiagram.Attribut>> MixedNestedEmbedEntity.mid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> MixedNestedEmbedEntity.name:String =>=>=> RelationalSchema.Column>> mixednestedembedentity.name;
ClassDiagram.Attribut>> MixedNestedEmbedEntity.eip:EmbedInnerProp =>=>=> RelationalSchema.Column>> mixednestedembedentity.eip;
ClassDiagram.Attribut>> FieldSub2.crt:Date =>=>=> RelationalSchema.Column>> fieldsub2.crt;
ClassDiagram.Attribut>> PropEmbedEntity.id:int =>=>=> RelationalSchema.Column>> propembedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PropEmbedEntity.name:String =>=>=> RelationalSchema.Column>> propembedentity.name;
ClassDiagram.Attribut>> PropEmbedEntity.efa:EmbedFieldAccess =>=>=> RelationalSchema.Column>> propembedentity.efa;
ClassDiagram.Attribut>> PropertySub3.crt:Date =>=>=> RelationalSchema.Column>> propertysub3.crt;
ClassDiagram.Attribut>> FieldSub3.crt:Date =>=>=> RelationalSchema.Column>> fieldsub3.crt;
ClassDiagram.Attribut>> DefPropMixedFieldAccess.id:int =>=>=> RelationalSchema.Column>> defpropmixedfieldaccess.id PRIMARY KEY;
ClassDiagram.Attribut>> DefPropMixedFieldAccess.version:int =>=>=> RelationalSchema.Column>> defpropmixedfieldaccess.version;
ClassDiagram.Attribut>> DefPropMixedFieldAccess.strfield:String =>=>=> RelationalSchema.Column>> defpropmixedfieldaccess.strfield;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.id:long =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.id PRIMARY KEY;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.word:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.word;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.aword:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.aword;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.aaword:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.aaword;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.aaaword:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.aaaword;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.capital:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.capital;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.acapital:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.acapital;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.another:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.another;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.a1:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.a1;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.b1:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.b1;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.a:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.a;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.b:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.b;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.a:boolean =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.a;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.b:boolean =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.b;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.GeneratedName:boolean =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.GeneratedName;
ClassDiagram.Attribut>> PropertyAccessCapitalizationOldBehavior.bool:boolean =>=>=> RelationalSchema.Column>> propertyaccesscapitalizationoldbehavior.bool;
ClassDiagram.Attribut>> PropEntity.id:int =>=>=> RelationalSchema.Column>> propentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PropEntity.name:String =>=>=> RelationalSchema.Column>> propentity.name;
ClassDiagram.Attribut>> MenuItem.id:String =>=>=> RelationalSchema.Column>> menuitem.id PRIMARY KEY;
ClassDiagram.Attribut>> MenuItem.name:String =>=>=> RelationalSchema.Column>> menuitem.name;
ClassDiagram.Attribut>> MenuItem.ingredients:Map<String,Ingredient> =>=>=> RelationalSchema.Column>> menuitem.ingredients;
ClassDiagram.Attribut>> FieldSub.crt:Date =>=>=> RelationalSchema.Column>> fieldsub.crt;
ClassDiagram.Attribut>> PropertyAccessCapitalization.id:long =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.id PRIMARY KEY;
ClassDiagram.Attribut>> PropertyAccessCapitalization.word:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.word;
ClassDiagram.Attribut>> PropertyAccessCapitalization.aword:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.aword;
ClassDiagram.Attribut>> PropertyAccessCapitalization.aaword:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.aaword;
ClassDiagram.Attribut>> PropertyAccessCapitalization.aaaword:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.aaaword;
ClassDiagram.Attribut>> PropertyAccessCapitalization.capital:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.capital;
ClassDiagram.Attribut>> PropertyAccessCapitalization.acapital:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.acapital;
ClassDiagram.Attribut>> PropertyAccessCapitalization.another:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.another;
ClassDiagram.Attribut>> PropertyAccessCapitalization.a1:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.a1;
ClassDiagram.Attribut>> PropertyAccessCapitalization.b1:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.b1;
ClassDiagram.Attribut>> PropertyAccessCapitalization.a:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.a;
ClassDiagram.Attribut>> PropertyAccessCapitalization.b:int =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.b;
ClassDiagram.Attribut>> PropertyAccessCapitalization.a:boolean =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.a;
ClassDiagram.Attribut>> PropertyAccessCapitalization.b:boolean =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.b;
ClassDiagram.Attribut>> PropertyAccessCapitalization.GeneratedName:boolean =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.GeneratedName;
ClassDiagram.Attribut>> PropertyAccessCapitalization.bool:boolean =>=>=> RelationalSchema.Column>> propertyaccesscapitalization.bool;
ClassDiagram.Attribut>> PropAccessFieldStratsEntity.eid:EmbedId =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> PropAccessFieldStratsEntity.name:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> PropAccessFieldStratsEntity.ecoll:Collection<EmbedPropAccess> =>=>=> RelationalSchema.Column>> propaccessfieldstratsentity.ecoll;
ClassDiagram.Attribut>> PropAccessFieldStratsEntity.embed:EmbedFieldAccess =>=>=> RelationalSchema.Column>> propaccessfieldstratsentity.embed;
ClassDiagram.Attribut>> PropAccessFieldStratsEntity.ver:int =>=>=> RelationalSchema.Column>> propaccessfieldstratsentity.ver;
ClassDiagram.Attribut>> PropAccess.id:int =>=>=> RelationalSchema.Column>> propaccess.id PRIMARY KEY;
ClassDiagram.Attribut>> PropAccess.version:int =>=>=> RelationalSchema.Column>> propaccess.version;
ClassDiagram.Attribut>> PropAccess.strfield:String =>=>=> RelationalSchema.Column>> propaccess.strfield;
ClassDiagram.Attribut>> PropertySub.crt:Date =>=>=> RelationalSchema.Column>> propertysub.crt;
ClassDiagram.Attribut>> FieldEmbedEntity.id:int =>=>=> RelationalSchema.Column>> fieldembedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> FieldEmbedEntity.name:String =>=>=> RelationalSchema.Column>> fieldembedentity.name;
ClassDiagram.Attribut>> FieldEmbedEntity.epa:EmbedPropAccess =>=>=> RelationalSchema.Column>> fieldembedentity.epa;
ClassDiagram.Attribut>> DefFieldMixedPropAccess.id:int =>=>=> RelationalSchema.Column>> deffieldmixedpropaccess.id PRIMARY KEY;
ClassDiagram.Attribut>> DefFieldMixedPropAccess.version:int =>=>=> RelationalSchema.Column>> deffieldmixedpropaccess.version;
ClassDiagram.Attribut>> DefFieldMixedPropAccess.strfield:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> PropMixedEntity.idval:int =>=>=> RelationalSchema.Column>> propmixedentity.idval PRIMARY KEY;
ClassDiagram.Attribut>> PropMixedEntity.myname:String =>=>=> RelationalSchema.Column>> propmixedentity.myname;
ClassDiagram.Attribut>> PropMixedEntity.ema:EmbedMixedAccess =>=>=> RelationalSchema.Column>> propmixedentity.ema;
ClassDiagram.Attribut>> MixedMultEmbedEntity.mid:int =>=>=> RelationalSchema.Column>> mixedmultembedentity.mid PRIMARY KEY;
ClassDiagram.Attribut>> MixedMultEmbedEntity.name:String =>=>=> RelationalSchema.Column>> mixedmultembedentity.name;
ClassDiagram.Attribut>> MixedMultEmbedEntity.epa:EmbedPropAccess =>=>=> RelationalSchema.Column>> mixedmultembedentity.epa;
ClassDiagram.Attribut>> MixedMultEmbedEntity.efa:EmbedFieldAccess =>=>=> RelationalSchema.Column>> mixedmultembedentity.efa;
ClassDiagram.Attribut>> FieldAccessPropStratsEntity.eid:EmbedId =>=>=> RelationalSchema.Column>> fieldaccesspropstratsentity.eid;
ClassDiagram.Attribut>> FieldAccessPropStratsEntity.name:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> FieldAccessPropStratsEntity.m2one:PropAccess =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> FieldAccessPropStratsEntity.one2m:Collection<FieldAccess> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> FieldAccessPropStratsEntity.one2one:PropAccess =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> FieldAccessPropStratsEntity.ecoll:Collection<EmbedPropAccess> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> FieldAccessPropStratsEntity.embed:EmbedFieldAccess =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> FieldAccessPropStratsEntity.ver:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> FieldAccessPropStratsEntity.m2m:Collection<PropAccess> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> SuperFieldEntity.id:int =>=>=> RelationalSchema.Column>> superfieldentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SuperFieldEntity.name:String =>=>=> RelationalSchema.Column>> superfieldentity.name;
ClassDiagram.Attribut>> MixedFieldSub.myfield:String =>=>=> RelationalSchema.Column>> mixedfieldsub.myfield;
ClassDiagram.Attribut>> MixedFieldSub.crt:Date =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> FieldAccess.id:int =>=>=> RelationalSchema.Column>> fieldaccess.id PRIMARY KEY;
ClassDiagram.Attribut>> FieldAccess.version:int =>=>=> RelationalSchema.Column>> fieldaccess.version;
ClassDiagram.Attribut>> FieldAccess.strfield:String =>=>=> RelationalSchema.Column>> fieldaccess.strfield;
ClassDiagram.Attribut>> GrandChild.serialversionuid:long =>=>=> RelationalSchema.Column>> grandchild.serialversionuid;
ClassDiagram.Attribut>> GrandChild.GeneratedName:Child =>=>=> RelationalSchema.Column>> grandchild.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> GrandChild.grandchildkey:Integer =>=>=> RelationalSchema.Column>> grandchild.grandchildkey PRIMARY KEY;
ClassDiagram.Attribut>> Child.serialversionuid:long =>=>=> RelationalSchema.Column>> child.serialversionuid;
ClassDiagram.Attribut>> Child.GeneratedName:Parent =>=>=> RelationalSchema.Column>> child.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Child.childkey:Integer =>=>=> RelationalSchema.Column>> child.childkey PRIMARY KEY;
ClassDiagram.Attribut>> Order.id:Long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.orderentry:Date =>=>=> RelationalSchema.Column>> order.orderentry;
ClassDiagram.Attribut>> LineItem.orderid:Long =>=>=> RelationalSchema.Column>> lineitem.orderid PRIMARY KEY;
ClassDiagram.Attribut>> LineItem.itemid:Long =>=>=> RelationalSchema.Column>> lineitem.itemid PRIMARY KEY;
ClassDiagram.Attribut>> LineItem.productname:String =>=>=> RelationalSchema.Column>> lineitem.productname;
ClassDiagram.Attribut>> LineItem.quantity:int =>=>=> RelationalSchema.Column>> lineitem.quantity;
ClassDiagram.Attribut>> LineItem.price:float =>=>=> RelationalSchema.Column>> lineitem.price;
ClassDiagram.Attribut>> Parent.serialversionuid:long =>=>=> RelationalSchema.Column>> parent.serialversionuid;
ClassDiagram.Attribut>> Parent.key1:String =>=>=> RelationalSchema.Column>> parent.key1 PRIMARY KEY;
ClassDiagram.Attribut>> Parent.key2:Integer =>=>=> RelationalSchema.Column>> parent.key2 PRIMARY KEY;
ClassDiagram.Attribut>> Car.id:long =>=>=> RelationalSchema.Column>> car.id PRIMARY KEY;
ClassDiagram.Attribut>> Car.version:int =>=>=> RelationalSchema.Column>> car.version;
ClassDiagram.Attribut>> Outer.id:Long =>=>=> RelationalSchema.Column>> outer.id PRIMARY KEY;
ClassDiagram.Attribut>> Outer.name:String =>=>=> RelationalSchema.Column>> outer.name;
ClassDiagram.Attribut>> Model.id:long =>=>=> RelationalSchema.Column>> model.id PRIMARY KEY;
ClassDiagram.Attribut>> Model.version:int =>=>=> RelationalSchema.Column>> model.version;
ClassDiagram.Attribut>> ShipPackage.id:long =>=>=> RelationalSchema.Column>> shippackage.id PRIMARY KEY;
ClassDiagram.Attribut>> ShipPackage.version:int =>=>=> RelationalSchema.Column>> shippackage.version;
ClassDiagram.Attribut>> Label.id:long =>=>=> RelationalSchema.Column>> label.id PRIMARY KEY;
ClassDiagram.Attribut>> Label.version:int =>=>=> RelationalSchema.Column>> label.version;
ClassDiagram.Attribut>> Label.state:Object =>=>=> RelationalSchema.Column>> label.state;
ClassDiagram.Attribut>> Make.id:long =>=>=> RelationalSchema.Column>> make.id PRIMARY KEY;
ClassDiagram.Attribut>> Make.version:int =>=>=> RelationalSchema.Column>> make.version;
ClassDiagram.Attribut>> Make.state:Object =>=>=> RelationalSchema.Column>> make.state;
ClassDiagram.Attribut>> Toy.id:int =>=>=> RelationalSchema.Column>> toy.id PRIMARY KEY;
ClassDiagram.Attribut>> Toy.toyname:String =>=>=> RelationalSchema.Column>> toy.toyname;
ClassDiagram.Attribut>> Toy.version:long =>=>=> RelationalSchema.Column>> toy.version;
ClassDiagram.Attribut>> ShipPackage2.id:long =>=>=> RelationalSchema.Column>> shippackage2.id PRIMARY KEY;
ClassDiagram.Attribut>> ShipPackage2.version:int =>=>=> RelationalSchema.Column>> shippackage2.version;
ClassDiagram.Attribut>> ToyBox.id:int =>=>=> RelationalSchema.Column>> toybox.id PRIMARY KEY;
ClassDiagram.Attribut>> ToyBox.ownername:String =>=>=> RelationalSchema.Column>> toybox.ownername;
ClassDiagram.Attribut>> ToyBox.version:long =>=>=> RelationalSchema.Column>> toybox.version;
ClassDiagram.Attribut>> Label2.id:long =>=>=> RelationalSchema.Column>> label2.id PRIMARY KEY;
ClassDiagram.Attribut>> Label2.version:int =>=>=> RelationalSchema.Column>> label2.version;
ClassDiagram.Attribut>> Label2.state:Object =>=>=> RelationalSchema.Column>> label2.state;
ClassDiagram.Attribut>> Inner.id:Long =>=>=> RelationalSchema.Column>> inner.id PRIMARY KEY;
ClassDiagram.Attribut>> Inner.name:String =>=>=> RelationalSchema.Column>> inner.name;
ClassDiagram.Attribut>> PUSchemaInSequenceAnnotationEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> puschemainsequenceannotationentity.serialversionuid;
ClassDiagram.Attribut>> PUSchemaInSequenceAnnotationEntity.id:long =>=>=> RelationalSchema.Column>> puschemainsequenceannotationentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PUSchemaInSequenceMappingEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> puschemainsequencemappingentity.serialversionuid;
ClassDiagram.Attribut>> PUSchemaInSequenceMappingEntity.id:long =>=>=> RelationalSchema.Column>> puschemainsequencemappingentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PUDefaultSchemaEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> pudefaultschemaentity.serialversionuid;
ClassDiagram.Attribut>> PUDefaultSchemaEntity.id:long =>=>=> RelationalSchema.Column>> pudefaultschemaentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PUSchemaInTableMappingEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> puschemaintablemappingentity.serialversionuid;
ClassDiagram.Attribut>> PUSchemaInTableMappingEntity.id:long =>=>=> RelationalSchema.Column>> puschemaintablemappingentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PUSchemaInTableAnnotationEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> puschemaintableannotationentity.serialversionuid;
ClassDiagram.Attribut>> PUSchemaInTableAnnotationEntity.id:long =>=>=> RelationalSchema.Column>> puschemaintableannotationentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ESQLDateID.id:Date =>=>=> RelationalSchema.Column>> esqldateid.id PRIMARY KEY;
ClassDiagram.Attribut>> ESQLDateID.name:String =>=>=> RelationalSchema.Column>> esqldateid.name;
ClassDiagram.Attribut>> EDBigIntegerID.rid:EBigIntegerID =>=>=> RelationalSchema.Column>> edbigintegerid.rid PRIMARY KEY;
ClassDiagram.Attribut>> EDBigIntegerID.name:String =>=>=> RelationalSchema.Column>> edbigintegerid.name;
ClassDiagram.Attribut>> EBigDecimalID.id:BigDecimal =>=>=> RelationalSchema.Column>> ebigdecimalid.id PRIMARY KEY;
ClassDiagram.Attribut>> EBigDecimalID.name:String =>=>=> RelationalSchema.Column>> ebigdecimalid.name;
ClassDiagram.Attribut>> EBigIntegerID.id:BigInteger =>=>=> RelationalSchema.Column>> ebigintegerid.id PRIMARY KEY;
ClassDiagram.Attribut>> EBigIntegerID.name:String =>=>=> RelationalSchema.Column>> ebigintegerid.name;
ClassDiagram.Attribut>> EDBigDecimalID.rid:EBigDecimalID =>=>=> RelationalSchema.Column>> edbigdecimalid.rid PRIMARY KEY;
ClassDiagram.Attribut>> EDBigDecimalID.name:String =>=>=> RelationalSchema.Column>> edbigdecimalid.name;
ClassDiagram.Attribut>> EDateID.id:Date =>=>=> RelationalSchema.Column>> edateid.id PRIMARY KEY;
ClassDiagram.Attribut>> EDateID.name:String =>=>=> RelationalSchema.Column>> edateid.name;
ClassDiagram.Attribut>> EDSQLDateID.rid:ESQLDateID =>=>=> RelationalSchema.Column>> edsqldateid.rid PRIMARY KEY;
ClassDiagram.Attribut>> EDSQLDateID.name:String =>=>=> RelationalSchema.Column>> edsqldateid.name;
ClassDiagram.Attribut>> EDDateID.rid:EDateID =>=>=> RelationalSchema.Column>> eddateid.rid PRIMARY KEY;
ClassDiagram.Attribut>> EDDateID.name:String =>=>=> RelationalSchema.Column>> eddateid.name;
ClassDiagram.Attribut>> CharAbstractEntity.id:long =>=>=> RelationalSchema.Column>> charabstractentity.id PRIMARY KEY;
ClassDiagram.Attribut>> CharAbstractEntity.name:String =>=>=> RelationalSchema.Column>> charabstractentity.name;
ClassDiagram.Attribut>> StringLeafEntity.sub:int =>=>=> RelationalSchema.Column>> stringleafentity.sub;
ClassDiagram.Attribut>> CharLeafEntity.sub:int =>=>=> RelationalSchema.Column>> charleafentity.sub;
ClassDiagram.Attribut>> IntegerLeafEntity.sub:int =>=>=> RelationalSchema.Column>> integerleafentity.sub;
ClassDiagram.Attribut>> StringAbstractEntity.id:long =>=>=> RelationalSchema.Column>> stringabstractentity.id PRIMARY KEY;
ClassDiagram.Attribut>> StringAbstractEntity.name:String =>=>=> RelationalSchema.Column>> stringabstractentity.name;
ClassDiagram.Attribut>> Person.id:int =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> IntegerAbstractEntity.id:long =>=>=> RelationalSchema.Column>> integerabstractentity.id PRIMARY KEY;
ClassDiagram.Attribut>> IntegerAbstractEntity.name:String =>=>=> RelationalSchema.Column>> integerabstractentity.name;
ClassDiagram.Attribut>> Part.serialversionuid:long =>=>=> RelationalSchema.Column>> part.serialversionuid;
ClassDiagram.Attribut>> Part.partname:String =>=>=> RelationalSchema.Column>> part.partname;
ClassDiagram.Attribut>> Part.id:PartPK =>=>=> RelationalSchema.Column>> part.id;
ClassDiagram.Attribut>> EmbeddedOwnerPC.id1:int =>=>=> RelationalSchema.Column>> embeddedownerpc.id1 PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedOwnerPC.id2:int =>=>=> RelationalSchema.Column>> embeddedownerpc.id2 PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedOwnerPC.field:String =>=>=> RelationalSchema.Column>> embeddedownerpc.field;
ClassDiagram.Attribut>> ArtCourse.serialversionuid:long =>=>=> RelationalSchema.Column>> artcourse.serialversionuid;
ClassDiagram.Attribut>> ArtCourse.relcourse:String =>=>=> RelationalSchema.Column>> artcourse.relcourse;
ClassDiagram.Attribut>> Student.serialversionuid:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedPC.field:int =>=>=> RelationalSchema.Column>> embeddedpc.field PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedPC.field:String =>=>=> RelationalSchema.Column>> embeddedpc.field;
ClassDiagram.Attribut>> Entity1.serialversionuid:long =>=>=> RelationalSchema.Column>> entity1.serialversionuid;
ClassDiagram.Attribut>> Entity1.pk:long =>=>=> RelationalSchema.Column>> entity1.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity1.field:String =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.field:int =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.versionfield:int =>=>=> RelationalSchema.Column>> entity1.versionfield;
ClassDiagram.Attribut>> RuntimeTest2.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest2.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest2.field2:int =>=>=> RelationalSchema.Column>> runtimetest2.field2;
ClassDiagram.Attribut>> CompUser.name:String =>=>=> RelationalSchema.Column>> compuser.name;
ClassDiagram.Attribut>> CompUser.age:int =>=>=> RelationalSchema.Column>> compuser.age;
ClassDiagram.Attribut>> CompUser.computername:String =>=>=> RelationalSchema.Column>> compuser.computername;
ClassDiagram.Attribut>> CompUser.nameaslob:String =>=>=> RelationalSchema.Column>> compuser.nameaslob;
ClassDiagram.Attribut>> CompUser.nicknames:String =>=>=> RelationalSchema.Column>> compuser.nicknames;
ClassDiagram.Attribut>> CompUser.userid:int =>=>=> RelationalSchema.Column>> compuser.userid PRIMARY KEY;
ClassDiagram.Attribut>> CompUser.GeneratedName:CreditRating =>=>=> RelationalSchema.Column>> compuser.GeneratedName;
ClassDiagram.Attribut>> ComplexEmbeddedPC.field:String =>=>=> RelationalSchema.Column>> complexembeddedpc.field;
ClassDiagram.Attribut>> ComplexEmbeddedPC.string:Set =>=>=> RelationalSchema.Column>> complexembeddedpc.string;
ClassDiagram.Attribut>> ScienceCourse.serialversionuid:long =>=>=> RelationalSchema.Column>> sciencecourse.serialversionuid;
ClassDiagram.Attribut>> ScienceCourse.relcourse:String =>=>=> RelationalSchema.Column>> sciencecourse.relcourse;
ClassDiagram.Attribut>> Trousers.serialversionuid:long =>=>=> RelationalSchema.Column>> trousers.serialversionuid;
ClassDiagram.Attribut>> Trousers.lnhnumber:Integer =>=>=> RelationalSchema.Column>> trousers.lnhnumber;
ClassDiagram.Attribut>> Textile.serialversionuid:long =>=>=> RelationalSchema.Column>> textile.serialversionuid;
ClassDiagram.Attribut>> Textile.textileid:Integer =>=>=> RelationalSchema.Column>> textile.textileid PRIMARY KEY;
ClassDiagram.Attribut>> Textile.txename:String =>=>=> RelationalSchema.Column>> textile.txename;
ClassDiagram.Attribut>> Shirt.serialversionuid:long =>=>=> RelationalSchema.Column>> shirt.serialversionuid;
ClassDiagram.Attribut>> Shirt.szeid:String =>=>=> RelationalSchema.Column>> shirt.szeid;
ClassDiagram.Attribut>> Address.streetad:String =>=>=> RelationalSchema.Column>> address.streetad;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.country:String =>=>=> RelationalSchema.Column>> address.country;
ClassDiagram.Attribut>> Address.zipcode:String =>=>=> RelationalSchema.Column>> address.zipcode;
ClassDiagram.Attribut>> Address.id:int =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Course.serialversionuid:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Course.name:String =>=>=> RelationalSchema.Column>> course.name;
ClassDiagram.Attribut>> Course.units:int =>=>=> RelationalSchema.Column>> course.units;
ClassDiagram.Attribut>> Course.courseid:int =>=>=> RelationalSchema.Column>> course.courseid PRIMARY KEY;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> Entity2.serialversionuid:long =>=>=> RelationalSchema.Column>> entity2.serialversionuid;
ClassDiagram.Attribut>> Entity2.pk:long =>=>=> RelationalSchema.Column>> entity2.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity2.field:String =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> Entity2.field:int =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> RuntimeTest1.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest1.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest1.somefield:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> RuntimeTest1.field:Locale =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:int =>=>=> RelationalSchema.Column>> runtimetest1.field PRIMARY KEY;
ClassDiagram.Attribut>> RuntimeTest1.field:String =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.//transactionalonlytrans:String =>=>=> RelationalSchema.Column>> runtimetest1.//transactionalonlytrans;
ClassDiagram.Attribut>> RuntimeTest1.selfonemany:Set =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> TemporalEntity.id:Integer =>=>=> RelationalSchema.Column>> temporalentity.id PRIMARY KEY;
ClassDiagram.Attribut>> TemporalEntity.test:Date =>=>=> RelationalSchema.Column>> temporalentity.test;
ClassDiagram.Attribut>> ImplicitValueStrategyEntity.id:String =>=>=> RelationalSchema.Column>> implicitvaluestrategyentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ImplicitValueStrategyEntity./***thisfieldgetsautomaticallyconvertedbyopenjpabecauseweregistered*the{@linkprincipalvaluestrategyhandler}inpersistence.xml.*currentlythisneedseithertobeserializable,sowecannotstoreprincipalbutonlytheimpl:(*/user:PrincipalValueStrategyHandler.TestPrincipal =>=>=> RelationalSchema.Column>> implicitvaluestrategyentity./***thisfieldgetsautomaticallyconvertedbyopenjpabecauseweregistered*the{@linkprincipalvaluestrategyhandler}inpersistence.xml.*currentlythisneedseithertobeserializable,sowecannotstoreprincipalbutonlytheimpl:(*/user;
ClassDiagram.Attribut>> ValueStrategyEntity.id:String =>=>=> RelationalSchema.Column>> valuestrategyentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ValueStrategyEntity.name:String =>=>=> RelationalSchema.Column>> valuestrategyentity.name;
ClassDiagram.Attribut>> ValueStrategyEntity./***thisfieldgetsautomaticallyconvertedbyopenjpabecauseweregistered*the{@linkprincipalvaluestrategyhandler}inpersistence.xml.*currentlythisneedseithertobeserializable,sowecannotstoreprincipalbutonlytheimpl:(*/user:PrincipalValueStrategyHandler.TestPrincipal =>=>=> RelationalSchema.Column>> valuestrategyentity./***thisfieldgetsautomaticallyconvertedbyopenjpabecauseweregistered*the{@linkprincipalvaluestrategyhandler}inpersistence.xml.*currentlythisneedseithertobeserializable,sowecannotstoreprincipalbutonlytheimpl:(*/user;
ClassDiagram.Attribut>> QCEntity.pk:String =>=>=> RelationalSchema.Column>> qcentity.pk PRIMARY KEY;
ClassDiagram.Attribut>> QCEntity.description:String =>=>=> RelationalSchema.Column>> qcentity.description;
ClassDiagram.Attribut>> QCEntity.amount:Long =>=>=> RelationalSchema.Column>> qcentity.amount;
ClassDiagram.Attribut>> UnidirectionalOne2OneOwner.id:long =>=>=> RelationalSchema.Column>> unidirectionalone2oneowner.id PRIMARY KEY;
ClassDiagram.Attribut>> UnidirectionalOne2OneOwner.name:String =>=>=> RelationalSchema.Column>> unidirectionalone2oneowner.name;
ClassDiagram.Attribut>> UnidirectionalOne2OneOwner.version:int =>=>=> RelationalSchema.Column>> unidirectionalone2oneowner.version;
ClassDiagram.Attribut>> Entity2.serialversionuid:long =>=>=> RelationalSchema.Column>> entity2.serialversionuid;
ClassDiagram.Attribut>> Entity2.pk:long =>=>=> RelationalSchema.Column>> entity2.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity2.field:String =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> Entity2.field:int =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> BidirectionalOne2OneOwner.id:long =>=>=> RelationalSchema.Column>> bidirectionalone2oneowner.id PRIMARY KEY;
ClassDiagram.Attribut>> BidirectionalOne2OneOwner.name:String =>=>=> RelationalSchema.Column>> bidirectionalone2oneowner.name;
ClassDiagram.Attribut>> BidirectionalOne2OneOwner.version:int =>=>=> RelationalSchema.Column>> bidirectionalone2oneowner.version;
ClassDiagram.Attribut>> UnidirectionalOne2OneOwned.id:long =>=>=> RelationalSchema.Column>> unidirectionalone2oneowned.id PRIMARY KEY;
ClassDiagram.Attribut>> UnidirectionalOne2OneOwned.name:String =>=>=> RelationalSchema.Column>> unidirectionalone2oneowned.name;
ClassDiagram.Attribut>> UnidirectionalOne2OneOwned.version:int =>=>=> RelationalSchema.Column>> unidirectionalone2oneowned.version;
ClassDiagram.Attribut>> Entity1.serialversionuid:long =>=>=> RelationalSchema.Column>> entity1.serialversionuid;
ClassDiagram.Attribut>> Entity1.pk:long =>=>=> RelationalSchema.Column>> entity1.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity1.field:String =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.field:int =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.versionfield:int =>=>=> RelationalSchema.Column>> entity1.versionfield;
ClassDiagram.Attribut>> BidirectionalOne2OneOwned.id:long =>=>=> RelationalSchema.Column>> bidirectionalone2oneowned.id PRIMARY KEY;
ClassDiagram.Attribut>> BidirectionalOne2OneOwned.name:String =>=>=> RelationalSchema.Column>> bidirectionalone2oneowned.name;
ClassDiagram.Attribut>> BidirectionalOne2OneOwned.version:int =>=>=> RelationalSchema.Column>> bidirectionalone2oneowned.version;
ClassDiagram.Attribut>> QCEntityM2O.pk:String =>=>=> RelationalSchema.Column>> qcentitym2o.pk PRIMARY KEY;
ClassDiagram.Attribut>> MapValEntity.id:int =>=>=> RelationalSchema.Column>> mapvalentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MapValEntity.val:int =>=>=> RelationalSchema.Column>> mapvalentity.val;
ClassDiagram.Attribut>> OneToEntity.id:int =>=>=> RelationalSchema.Column>> onetoentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ToManyLazy.id:int =>=>=> RelationalSchema.Column>> tomanylazy.id PRIMARY KEY;
ClassDiagram.Attribut>> ToManyLazy.name:String =>=>=> RelationalSchema.Column>> tomanylazy.name;
ClassDiagram.Attribut>> RelEntity.id:int =>=>=> RelationalSchema.Column>> relentity.id PRIMARY KEY;
ClassDiagram.Attribut>> RelEntity.name:String =>=>=> RelationalSchema.Column>> relentity.name;
ClassDiagram.Attribut>> MapEntity.id:int =>=>=> RelationalSchema.Column>> mapentity.id PRIMARY KEY;
ClassDiagram.Attribut>> EagerEntity.id:int =>=>=> RelationalSchema.Column>> eagerentity.id PRIMARY KEY;
ClassDiagram.Attribut>> EagerEntity.name:String =>=>=> RelationalSchema.Column>> eagerentity.name;
ClassDiagram.Attribut>> EagerEntity.GeneratedName:EagerEmbed =>=>=> RelationalSchema.Column>> eagerentity.GeneratedName;
ClassDiagram.Attribut>> EagerEntity.GeneratedName:EagerEmbedRel =>=>=> RelationalSchema.Column>> eagerentity.GeneratedName;
ClassDiagram.Attribut>> EagerEntity.eagerembedcoll:List<EagerEmbed> =>=>=> RelationalSchema.Column>> eagerentity.eagerembedcoll;
ClassDiagram.Attribut>> EagerEntity.transfield:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> LazyEntity.id:int =>=>=> RelationalSchema.Column>> lazyentity.id PRIMARY KEY;
ClassDiagram.Attribut>> LazyEntity.name:String =>=>=> RelationalSchema.Column>> lazyentity.name;
ClassDiagram.Attribut>> LazyEntity.GeneratedName:LazyEmbed =>=>=> RelationalSchema.Column>> lazyentity.GeneratedName;
ClassDiagram.Attribut>> LazyEntity.lazyembedcoll:List<LazyEmbed> =>=>=> RelationalSchema.Column>> lazyentity.lazyembedcoll;
ClassDiagram.Attribut>> LazyEntity.transfield:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ToManyEager.id:int =>=>=> RelationalSchema.Column>> tomanyeager.id PRIMARY KEY;
ClassDiagram.Attribut>> ToManyEager.name:String =>=>=> RelationalSchema.Column>> tomanyeager.name;
ClassDiagram.Attribut>> FloatIdEntity.id:float =>=>=> RelationalSchema.Column>> floatidentity.id PRIMARY KEY;
ClassDiagram.Attribut>> FloatIdEntity.data:int =>=>=> RelationalSchema.Column>> floatidentity.data;
ClassDiagram.Attribut>> SQLBigDecimalIdEntity.id:BigDecimal =>=>=> RelationalSchema.Column>> sqlbigdecimalidentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SQLBigDecimalIdEntity.data:int =>=>=> RelationalSchema.Column>> sqlbigdecimalidentity.data;
ClassDiagram.Attribut>> DoubleObjIdEntity.id:Double =>=>=> RelationalSchema.Column>> doubleobjidentity.id PRIMARY KEY;
ClassDiagram.Attribut>> DoubleObjIdEntity.data:int =>=>=> RelationalSchema.Column>> doubleobjidentity.data;
ClassDiagram.Attribut>> StringIdEntity.id:String =>=>=> RelationalSchema.Column>> stringidentity.id PRIMARY KEY;
ClassDiagram.Attribut>> StringIdEntity.data:int =>=>=> RelationalSchema.Column>> stringidentity.data;
ClassDiagram.Attribut>> ComplexCompoundIdTestEntity.id:Long =>=>=> RelationalSchema.Column>> complexcompoundidtestentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ComplexCompoundIdTestEntity.type:TypeEntity =>=>=> RelationalSchema.Column>> complexcompoundidtestentity.type PRIMARY KEY;
ClassDiagram.Attribut>> BooleanIdEntity.id:boolean =>=>=> RelationalSchema.Column>> booleanidentity.id PRIMARY KEY;
ClassDiagram.Attribut>> BooleanIdEntity.name:String =>=>=> RelationalSchema.Column>> booleanidentity.name;
ClassDiagram.Attribut>> BooleanIdEntity.other:boolean =>=>=> RelationalSchema.Column>> booleanidentity.other;
ClassDiagram.Attribut>> Account.accountid:Integer =>=>=> RelationalSchema.Column>> account.accountid PRIMARY KEY;
ClassDiagram.Attribut>> Account.groupid:Integer =>=>=> RelationalSchema.Column>> account.groupid PRIMARY KEY;
ClassDiagram.Attribut>> Account.accountholder:Person =>=>=> RelationalSchema.Column>> account.accountholder PRIMARY KEY;
ClassDiagram.Attribut>> Account.balanceindollars:long =>=>=> RelationalSchema.Column>> account.balanceindollars;
ClassDiagram.Attribut>> Account.balanceincents:int =>=>=> RelationalSchema.Column>> account.balanceincents;
ClassDiagram.Attribut>> Account.accountlocked:boolean =>=>=> RelationalSchema.Column>> account.accountlocked;
ClassDiagram.Attribut>> AccountGroup.id:Integer =>=>=> RelationalSchema.Column>> accountgroup.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.id:Integer =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> TypeEntity.id:Long =>=>=> RelationalSchema.Column>> typeentity.id PRIMARY KEY;
ClassDiagram.Attribut>> TypeEntity.code:String =>=>=> RelationalSchema.Column>> typeentity.code;
ClassDiagram.Attribut>> SimpleCompoundIdTestEntity.firstid:Long =>=>=> RelationalSchema.Column>> simplecompoundidtestentity.firstid PRIMARY KEY;
ClassDiagram.Attribut>> SimpleCompoundIdTestEntity.secondid:Long =>=>=> RelationalSchema.Column>> simplecompoundidtestentity.secondid PRIMARY KEY;
ClassDiagram.Attribut>> SQLDateIdEntity.id:Date =>=>=> RelationalSchema.Column>> sqldateidentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SQLDateIdEntity.data:int =>=>=> RelationalSchema.Column>> sqldateidentity.data;
ClassDiagram.Attribut>> SQLBigIntegerIdEntity.id:BigInteger =>=>=> RelationalSchema.Column>> sqlbigintegeridentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SQLBigIntegerIdEntity.data:int =>=>=> RelationalSchema.Column>> sqlbigintegeridentity.data;
ClassDiagram.Attribut>> Person.id:int =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Course.id:int =>=>=> RelationalSchema.Column>> course.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.GeneratedName:Person =>=>=> RelationalSchema.Column>> student.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Attendance.GeneratedName:Student =>=>=> RelationalSchema.Column>> attendance.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Attendance.GeneratedName:Course =>=>=> RelationalSchema.Column>> attendance.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> CompoundBooleanIdEntity.id:String =>=>=> RelationalSchema.Column>> compoundbooleanidentity.id PRIMARY KEY;
ClassDiagram.Attribut>> CompoundBooleanIdEntity.id:boolean =>=>=> RelationalSchema.Column>> compoundbooleanidentity.id PRIMARY KEY;
ClassDiagram.Attribut>> IdentityGenerationType.orderid:Long =>=>=> RelationalSchema.Column>> identitygenerationtype.orderid PRIMARY KEY;
ClassDiagram.Attribut>> IdentityGenerationType.somedata:String =>=>=> RelationalSchema.Column>> identitygenerationtype.somedata;
ClassDiagram.Attribut>> TimestampVersion.id:int =>=>=> RelationalSchema.Column>> timestampversion.id PRIMARY KEY;
ClassDiagram.Attribut>> TimestampVersion.version:Timestamp =>=>=> RelationalSchema.Column>> timestampversion.version;
ClassDiagram.Attribut>> ShortVersion.id:int =>=>=> RelationalSchema.Column>> shortversion.id PRIMARY KEY;
ClassDiagram.Attribut>> ShortVersion.version:short =>=>=> RelationalSchema.Column>> shortversion.version;
ClassDiagram.Attribut>> IntVersion.id:int =>=>=> RelationalSchema.Column>> intversion.id PRIMARY KEY;
ClassDiagram.Attribut>> IntVersion.version:int =>=>=> RelationalSchema.Column>> intversion.version;
ClassDiagram.Attribut>> PObject.id:long =>=>=> RelationalSchema.Column>> pobject.id PRIMARY KEY;
ClassDiagram.Attribut>> PObject.name:String =>=>=> RelationalSchema.Column>> pobject.name;
ClassDiagram.Attribut>> PObjectNative.id:long =>=>=> RelationalSchema.Column>> pobjectnative.id PRIMARY KEY;
ClassDiagram.Attribut>> PObjectNative.name:String =>=>=> RelationalSchema.Column>> pobjectnative.name;
ClassDiagram.Attribut>> NumericVersionedEntity.id:long =>=>=> RelationalSchema.Column>> numericversionedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> NumericVersionedEntity.name:String =>=>=> RelationalSchema.Column>> numericversionedentity.name;
ClassDiagram.Attribut>> NumericVersionedEntity.version:int =>=>=> RelationalSchema.Column>> numericversionedentity.version;
ClassDiagram.Attribut>> Parent.id:long =>=>=> RelationalSchema.Column>> parent.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent.name:String =>=>=> RelationalSchema.Column>> parent.name;
ClassDiagram.Attribut>> Child.id:String =>=>=> RelationalSchema.Column>> child.id PRIMARY KEY;
ClassDiagram.Attribut>> Child.name:String =>=>=> RelationalSchema.Column>> child.name;
ClassDiagram.Attribut>> AutoIncrementEntity.id:Integer =>=>=> RelationalSchema.Column>> autoincremententity.id PRIMARY KEY;
ClassDiagram.Attribut>> AutoIncrementEntity.version:int =>=>=> RelationalSchema.Column>> autoincremententity.version;
ClassDiagram.Attribut>> AutoIncrementEntity.somethingelse:String =>=>=> RelationalSchema.Column>> autoincremententity.somethingelse;
ClassDiagram.Attribut>> HorizL.serialversionuid:long =>=>=> RelationalSchema.Column>> horizl.serialversionuid;
ClassDiagram.Attribut>> HorizL.l:String =>=>=> RelationalSchema.Column>> horizl.l;
ClassDiagram.Attribut>> HorizL.l:int =>=>=> RelationalSchema.Column>> horizl.l;
ClassDiagram.Attribut>> HorizAppInterVerticalD.d:String =>=>=> RelationalSchema.Column>> horizappinterverticald.d;
ClassDiagram.Attribut>> HorizAppInterVerticalD.d:int =>=>=> RelationalSchema.Column>> horizappinterverticald.d;
ClassDiagram.Attribut>> ConstantJoinPC3.pc3field:int =>=>=> RelationalSchema.Column>> constantjoinpc3.pc3field;
ClassDiagram.Attribut>> HorizH.serialversionuid:long =>=>=> RelationalSchema.Column>> horizh.serialversionuid;
ClassDiagram.Attribut>> HorizH.h:String =>=>=> RelationalSchema.Column>> horizh.h;
ClassDiagram.Attribut>> HorizH.h:int =>=>=> RelationalSchema.Column>> horizh.h;
ClassDiagram.Attribut>> LRSCompoundPC.idgen:int =>=>=> RelationalSchema.Column>> lrscompoundpc.idgen;
ClassDiagram.Attribut>> LRSCompoundPC.id1:int =>=>=> RelationalSchema.Column>> lrscompoundpc.id1;
ClassDiagram.Attribut>> LRSCompoundPC.id2:int =>=>=> RelationalSchema.Column>> lrscompoundpc.id2;
ClassDiagram.Attribut>> LRSCompoundPC.field:String =>=>=> RelationalSchema.Column>> lrscompoundpc.field;
ClassDiagram.Attribut>> LRSCompoundPC.string:Set =>=>=> RelationalSchema.Column>> lrscompoundpc.string;
ClassDiagram.Attribut>> LRSCompoundPC.rel:Set =>=>=> RelationalSchema.Column>> lrscompoundpc.rel;
ClassDiagram.Attribut>> LRSCompoundPC.string:Collection =>=>=> RelationalSchema.Column>> lrscompoundpc.string;
ClassDiagram.Attribut>> LRSCompoundPC.rel:Collection =>=>=> RelationalSchema.Column>> lrscompoundpc.rel;
ClassDiagram.Attribut>> LRSCompoundPC.string:Map =>=>=> RelationalSchema.Column>> lrscompoundpc.string;
ClassDiagram.Attribut>> LRSCompoundPC.rel:Map =>=>=> RelationalSchema.Column>> lrscompoundpc.rel;
ClassDiagram.Attribut>> RuntimeTest2.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest2.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest2.field2:int =>=>=> RelationalSchema.Column>> runtimetest2.field2;
ClassDiagram.Attribut>> Base.basefield:int =>=>=> RelationalSchema.Column>> base.basefield;
ClassDiagram.Attribut>> OpOrderPCSub.sub:String =>=>=> RelationalSchema.Column>> oporderpcsub.sub PRIMARY KEY;
ClassDiagram.Attribut>> HorizAppSingleA.//initializepkvaluestorandomvalues//fixme/*pk1:String =>=>=> RelationalSchema.Column>> horizappsinglea.//initializepkvaluestorandomvalues//fixme/*pk1;
ClassDiagram.Attribut>> HorizAppSingleA.pk2:int =>=>=> RelationalSchema.Column>> horizappsinglea.pk2;
ClassDiagram.Attribut>> HorizAppSingleA.a:String =>=>=> RelationalSchema.Column>> horizappsinglea.a;
ClassDiagram.Attribut>> HorizAppSingleA.a:int =>=>=> RelationalSchema.Column>> horizappsinglea.a;
ClassDiagram.Attribut>> HorizAppSingleA.relations:List =>=>=> RelationalSchema.Column>> horizappsinglea.relations;
ClassDiagram.Attribut>> HorizInterFlatB.b:String =>=>=> RelationalSchema.Column>> horizinterflatb.b;
ClassDiagram.Attribut>> HorizInterFlatB.b:int =>=>=> RelationalSchema.Column>> horizinterflatb.b;
ClassDiagram.Attribut>> HorizD.serialversionuid:long =>=>=> RelationalSchema.Column>> horizd.serialversionuid;
ClassDiagram.Attribut>> HorizD.d:String =>=>=> RelationalSchema.Column>> horizd.d;
ClassDiagram.Attribut>> HorizD.d:int =>=>=> RelationalSchema.Column>> horizd.d;
ClassDiagram.Attribut>> PagingPC.field:int =>=>=> RelationalSchema.Column>> pagingpc.field;
ClassDiagram.Attribut>> PagingPC.rel:PagingHelperPC =>=>=> RelationalSchema.Column>> pagingpc.rel;
ClassDiagram.Attribut>> PagingPC.rels:List =>=>=> RelationalSchema.Column>> pagingpc.rels;
ClassDiagram.Attribut>> HelperPC.serialversionuid:long =>=>=> RelationalSchema.Column>> helperpc.serialversionuid;
ClassDiagram.Attribut>> HelperPC.field:String =>=>=> RelationalSchema.Column>> helperpc.field;
ClassDiagram.Attribut>> HelperPC.helper:HelperPC =>=>=> RelationalSchema.Column>> helperpc.helper;
ClassDiagram.Attribut>> HelperPC.id:int =>=>=> RelationalSchema.Column>> helperpc.id PRIMARY KEY;
ClassDiagram.Attribut>> HorizAppMultiB.b:String =>=>=> RelationalSchema.Column>> horizappmultib.b;
ClassDiagram.Attribut>> HorizAppMultiB.b:int =>=>=> RelationalSchema.Column>> horizappmultib.b;
ClassDiagram.Attribut>> LRSPC.field:String =>=>=> RelationalSchema.Column>> lrspc.field;
ClassDiagram.Attribut>> LRSPC.string:Set =>=>=> RelationalSchema.Column>> lrspc.string;
ClassDiagram.Attribut>> LRSPC.rel:Set =>=>=> RelationalSchema.Column>> lrspc.rel;
ClassDiagram.Attribut>> LRSPC.string:Collection =>=>=> RelationalSchema.Column>> lrspc.string;
ClassDiagram.Attribut>> LRSPC.rel:Collection =>=>=> RelationalSchema.Column>> lrspc.rel;
ClassDiagram.Attribut>> LRSPC.string:Map =>=>=> RelationalSchema.Column>> lrspc.string;
ClassDiagram.Attribut>> LRSPC.rel:Map =>=>=> RelationalSchema.Column>> lrspc.rel;
ClassDiagram.Attribut>> AttachC.serialversionuid:long =>=>=> RelationalSchema.Column>> attachc.serialversionuid;
ClassDiagram.Attribut>> AttachC.cstr:String =>=>=> RelationalSchema.Column>> attachc.cstr;
ClassDiagram.Attribut>> AttachC.c:int =>=>=> RelationalSchema.Column>> attachc.c;
ClassDiagram.Attribut>> AttachC.cdbl:double =>=>=> RelationalSchema.Column>> attachc.cdbl;
ClassDiagram.Attribut>> AttachC.//non-dfges:List =>=>=> RelationalSchema.Column>> attachc.//non-dfges;
ClassDiagram.Attribut>> AutoIncrementPC1.field:Set =>=>=> RelationalSchema.Column>> autoincrementpc1.field;
ClassDiagram.Attribut>> AutoIncrementPC1.id:int =>=>=> RelationalSchema.Column>> autoincrementpc1.id PRIMARY KEY;
ClassDiagram.Attribut>> AutoIncrementPC1.field:String =>=>=> RelationalSchema.Column>> autoincrementpc1.field;
ClassDiagram.Attribut>> MappingTest2.pk1:int =>=>=> RelationalSchema.Column>> mappingtest2.pk1;
ClassDiagram.Attribut>> MappingTest2.pk2:int =>=>=> RelationalSchema.Column>> mappingtest2.pk2;
ClassDiagram.Attribut>> MappingTest2.oneoneowner:MappingTest1 =>=>=> RelationalSchema.Column>> mappingtest2.oneoneowner;
ClassDiagram.Attribut>> MappingTest2.onemanyowner:MappingTest1 =>=>=> RelationalSchema.Column>> mappingtest2.onemanyowner;
ClassDiagram.Attribut>> MappingTest2.manymanyowner:Set =>=>=> RelationalSchema.Column>> mappingtest2.manymanyowner;
ClassDiagram.Attribut>> HorizInterVerticalA.a:String =>=>=> RelationalSchema.Column>> horizinterverticala.a;
ClassDiagram.Attribut>> HorizInterVerticalA.a:int =>=>=> RelationalSchema.Column>> horizinterverticala.a;
ClassDiagram.Attribut>> AttachF.serialversionuid:long =>=>=> RelationalSchema.Column>> attachf.serialversionuid;
ClassDiagram.Attribut>> AttachF.id1:int =>=>=> RelationalSchema.Column>> attachf.id1;
ClassDiagram.Attribut>> AttachF.id2:String =>=>=> RelationalSchema.Column>> attachf.id2;
ClassDiagram.Attribut>> AttachF.fstr:String =>=>=> RelationalSchema.Column>> attachf.fstr;
ClassDiagram.Attribut>> AttachF.f:int =>=>=> RelationalSchema.Column>> attachf.f;
ClassDiagram.Attribut>> AttachF.fdbl:double =>=>=> RelationalSchema.Column>> attachf.fdbl;
ClassDiagram.Attribut>> AttachF.e:AttachE =>=>=> RelationalSchema.Column>> attachf.e;
ClassDiagram.Attribut>> AttachF.strings:List =>=>=> RelationalSchema.Column>> attachf.strings;
ClassDiagram.Attribut>> AttachF.embeddedc:AttachC =>=>=> RelationalSchema.Column>> attachf.embeddedc;
ClassDiagram.Attribut>> HorizInterFlatC.c:String =>=>=> RelationalSchema.Column>> horizinterflatc.c;
ClassDiagram.Attribut>> HorizInterFlatC.c:int =>=>=> RelationalSchema.Column>> horizinterflatc.c;
ClassDiagram.Attribut>> BaseSub2.basesub2field:int =>=>=> RelationalSchema.Column>> basesub2.basesub2field;
ClassDiagram.Attribut>> DFGTest.dfgfield:int =>=>=> RelationalSchema.Column>> dfgtest.dfgfield;
ClassDiagram.Attribut>> DFGTest.nondfgfield:int =>=>=> RelationalSchema.Column>> dfgtest.nondfgfield;
ClassDiagram.Attribut>> HorizInterVerticalD.d:String =>=>=> RelationalSchema.Column>> horizinterverticald.d;
ClassDiagram.Attribut>> HorizInterVerticalD.d:int =>=>=> RelationalSchema.Column>> horizinterverticald.d;
ClassDiagram.Attribut>> ByteArrayPKPC2.subfield:String =>=>=> RelationalSchema.Column>> bytearraypkpc2.subfield;
ClassDiagram.Attribut>> HorizE.serialversionuid:long =>=>=> RelationalSchema.Column>> horize.serialversionuid;
ClassDiagram.Attribut>> HorizE.e:String =>=>=> RelationalSchema.Column>> horize.e;
ClassDiagram.Attribut>> HorizE.e:int =>=>=> RelationalSchema.Column>> horize.e;
ClassDiagram.Attribut>> HelperPC4.field:int =>=>=> RelationalSchema.Column>> helperpc4.field;
ClassDiagram.Attribut>> HorizAppMultiC.c:String =>=>=> RelationalSchema.Column>> horizappmultic.c;
ClassDiagram.Attribut>> HorizAppMultiC.c:int =>=>=> RelationalSchema.Column>> horizappmultic.c;
ClassDiagram.Attribut>> AttachB.serialversionuid:long =>=>=> RelationalSchema.Column>> attachb.serialversionuid;
ClassDiagram.Attribut>> AttachB.bstr:String =>=>=> RelationalSchema.Column>> attachb.bstr;
ClassDiagram.Attribut>> AttachB.b:int =>=>=> RelationalSchema.Column>> attachb.b;
ClassDiagram.Attribut>> AttachB.bdbl:double =>=>=> RelationalSchema.Column>> attachb.bdbl;
ClassDiagram.Attribut>> AttachB.ds:Set =>=>=> RelationalSchema.Column>> attachb.ds;
ClassDiagram.Attribut>> AttachB.stringint:Map =>=>=> RelationalSchema.Column>> attachb.stringint;
ClassDiagram.Attribut>> HorizAppSingleD.d:String =>=>=> RelationalSchema.Column>> horizappsingled.d;
ClassDiagram.Attribut>> HorizAppSingleD.d:int =>=>=> RelationalSchema.Column>> horizappsingled.d;
ClassDiagram.Attribut>> EagerPCSub.field:int =>=>=> RelationalSchema.Column>> eagerpcsub.field;
ClassDiagram.Attribut>> EagerPCSub.eagercollection2:List =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> MappingTest3.verticalvalue:int =>=>=> RelationalSchema.Column>> mappingtest3.verticalvalue;
ClassDiagram.Attribut>> HorizA.serialversionuid:long =>=>=> RelationalSchema.Column>> horiza.serialversionuid;
ClassDiagram.Attribut>> HorizA.a:String =>=>=> RelationalSchema.Column>> horiza.a;
ClassDiagram.Attribut>> HorizA.a:int =>=>=> RelationalSchema.Column>> horiza.a;
ClassDiagram.Attribut>> HorizA.relations:Set =>=>=> RelationalSchema.Column>> horiza.relations;
ClassDiagram.Attribut>> JoinSubclassBaseSubVert.basesubvertfield:int =>=>=> RelationalSchema.Column>> joinsubclassbasesubvert.basesubvertfield;
ClassDiagram.Attribut>> UnidirectionalOneToOneOwned.id:long =>=>=> RelationalSchema.Column>> unidirectionalonetooneowned.id PRIMARY KEY;
ClassDiagram.Attribut>> UnidirectionalOneToOneOwned.marker:String =>=>=> RelationalSchema.Column>> unidirectionalonetooneowned.marker;
ClassDiagram.Attribut>> UnidirectionalOneToOneOwned.version:int =>=>=> RelationalSchema.Column>> unidirectionalonetooneowned.version;
ClassDiagram.Attribut>> HorizM.serialversionuid:long =>=>=> RelationalSchema.Column>> horizm.serialversionuid;
ClassDiagram.Attribut>> HorizM.m:String =>=>=> RelationalSchema.Column>> horizm.m;
ClassDiagram.Attribut>> HorizM.m:int =>=>=> RelationalSchema.Column>> horizm.m;
ClassDiagram.Attribut>> EagerOuterJoinPC2.name:String =>=>=> RelationalSchema.Column>> eagerouterjoinpc2.name;
ClassDiagram.Attribut>> EagerOuterJoinPC2.ref:EagerOuterJoinPC =>=>=> RelationalSchema.Column>> eagerouterjoinpc2.ref;
ClassDiagram.Attribut>> EagerOuterJoinPC2.helper:HelperPC =>=>=> RelationalSchema.Column>> eagerouterjoinpc2.helper;
ClassDiagram.Attribut>> EagerOuterJoinPC2.string:Collection =>=>=> RelationalSchema.Column>> eagerouterjoinpc2.string;
ClassDiagram.Attribut>> RawSQL.field:String =>=>=> RelationalSchema.Column>> rawsql.field PRIMARY KEY;
ClassDiagram.Attribut>> RawSQL.field:int =>=>=> RelationalSchema.Column>> rawsql.field;
ClassDiagram.Attribut>> ConstantJoinPC2.pc2field:int =>=>=> RelationalSchema.Column>> constantjoinpc2.pc2field;
ClassDiagram.Attribut>> InvertB.serialversionuid:long =>=>=> RelationalSchema.Column>> invertb.serialversionuid;
ClassDiagram.Attribut>> InvertB.id:int =>=>=> RelationalSchema.Column>> invertb.id PRIMARY KEY;
ClassDiagram.Attribut>> InvertB.test:String =>=>=> RelationalSchema.Column>> invertb.test;
ClassDiagram.Attribut>> HorizAppInterVerticalA.pk:int =>=>=> RelationalSchema.Column>> horizappinterverticala.pk;
ClassDiagram.Attribut>> HorizAppInterVerticalA.a:String =>=>=> RelationalSchema.Column>> horizappinterverticala.a;
ClassDiagram.Attribut>> HorizAppInterVerticalA.a:int =>=>=> RelationalSchema.Column>> horizappinterverticala.a;
ClassDiagram.Attribut>> HorizI.serialversionuid:long =>=>=> RelationalSchema.Column>> horizi.serialversionuid;
ClassDiagram.Attribut>> HorizI.i:String =>=>=> RelationalSchema.Column>> horizi.i;
ClassDiagram.Attribut>> HorizI.i:int =>=>=> RelationalSchema.Column>> horizi.i;
ClassDiagram.Attribut>> BaseSub1Sub1.basesub1sub1field:int =>=>=> RelationalSchema.Column>> basesub1sub1.basesub1sub1field;
ClassDiagram.Attribut>> RuntimeTest3.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest3.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest3.field3:int =>=>=> RelationalSchema.Column>> runtimetest3.field3;
ClassDiagram.Attribut>> InverseKeyMapPC.name:String =>=>=> RelationalSchema.Column>> inversekeymappc.name;
ClassDiagram.Attribut>> InverseKeyMapPC.helpers:Map =>=>=> RelationalSchema.Column>> inversekeymappc.helpers;
ClassDiagram.Attribut>> EagerPC.id:int =>=>=> RelationalSchema.Column>> eagerpc.id PRIMARY KEY;
ClassDiagram.Attribut>> EagerPC.field:String =>=>=> RelationalSchema.Column>> eagerpc.field;
ClassDiagram.Attribut>> EagerPC.eagercollection:List =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> EagerPC.recursecollection:List =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> EagerPC.helpercollection:List =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> HorizInterFlatA.a:String =>=>=> RelationalSchema.Column>> horizinterflata.a;
ClassDiagram.Attribut>> HorizInterFlatA.a:int =>=>=> RelationalSchema.Column>> horizinterflata.a;
ClassDiagram.Attribut>> HorizAppSingleB.b:String =>=>=> RelationalSchema.Column>> horizappsingleb.b;
ClassDiagram.Attribut>> HorizAppSingleB.b:int =>=>=> RelationalSchema.Column>> horizappsingleb.b;
ClassDiagram.Attribut>> AttachD.serialversionuid:long =>=>=> RelationalSchema.Column>> attachd.serialversionuid;
ClassDiagram.Attribut>> AttachD.version:Object =>=>=> RelationalSchema.Column>> attachd.version;
ClassDiagram.Attribut>> AttachD.dstr:String =>=>=> RelationalSchema.Column>> attachd.dstr;
ClassDiagram.Attribut>> AttachD.d:int =>=>=> RelationalSchema.Column>> attachd.d;
ClassDiagram.Attribut>> AttachD.ddbl:double =>=>=> RelationalSchema.Column>> attachd.ddbl;
ClassDiagram.Attribut>> AttachD.a:AttachA =>=>=> RelationalSchema.Column>> attachd.a;
ClassDiagram.Attribut>> AttachD.//dfgbs:Set =>=>=> RelationalSchema.Column>> attachd.//dfgbs;
ClassDiagram.Attribut>> AttachD.pcstring:Map =>=>=> RelationalSchema.Column>> attachd.pcstring;
ClassDiagram.Attribut>> AttachD.bigintegerpcmap:TreeMap =>=>=> RelationalSchema.Column>> attachd.bigintegerpcmap;
ClassDiagram.Attribut>> AttachD.embeddede:AttachE =>=>=> RelationalSchema.Column>> attachd.embeddede;
ClassDiagram.Attribut>> AttachD.embeddeda:AttachA =>=>=> RelationalSchema.Column>> attachd.embeddeda;
ClassDiagram.Attribut>> EntityWithFailedExternalizer.serialversionuid:long =>=>=> RelationalSchema.Column>> entitywithfailedexternalizer.serialversionuid;
ClassDiagram.Attribut>> EntityWithFailedExternalizer.iref:int =>=>=> RelationalSchema.Column>> entitywithfailedexternalizer.iref PRIMARY KEY;
ClassDiagram.Attribut>> EntityWithFailedExternalizer.name:String =>=>=> RelationalSchema.Column>> entitywithfailedexternalizer.name;
ClassDiagram.Attribut>> EntityWithFailedExternalizer.data:String =>=>=> RelationalSchema.Column>> entitywithfailedexternalizer.data;
ClassDiagram.Attribut>> EntityWithFailedExternalizer.ext:TestExternal =>=>=> RelationalSchema.Column>> entitywithfailedexternalizer.ext;
ClassDiagram.Attribut>> AutoIncrementOpOrderPCSub.sub:String =>=>=> RelationalSchema.Column>> autoincrementoporderpcsub.sub PRIMARY KEY;
ClassDiagram.Attribut>> HorizG.serialversionuid:long =>=>=> RelationalSchema.Column>> horizg.serialversionuid;
ClassDiagram.Attribut>> HorizG.g:String =>=>=> RelationalSchema.Column>> horizg.g;
ClassDiagram.Attribut>> HorizG.g:int =>=>=> RelationalSchema.Column>> horizg.g;
ClassDiagram.Attribut>> MappingTest5.vertvalue:int =>=>=> RelationalSchema.Column>> mappingtest5.vertvalue;
ClassDiagram.Attribut>> MappingTest5.vertrel:MappingTest5 =>=>=> RelationalSchema.Column>> mappingtest5.vertrel;
ClassDiagram.Attribut>> HorizAppMultiA.//initializepkvaluestorandomvalues//fixme/*pk1:String =>=>=> RelationalSchema.Column>> horizappmultia.//initializepkvaluestorandomvalues//fixme/*pk1;
ClassDiagram.Attribut>> HorizAppMultiA.pk2:int =>=>=> RelationalSchema.Column>> horizappmultia.pk2;
ClassDiagram.Attribut>> HorizAppMultiA.a:String =>=>=> RelationalSchema.Column>> horizappmultia.a;
ClassDiagram.Attribut>> HorizAppMultiA.a:int =>=>=> RelationalSchema.Column>> horizappmultia.a;
ClassDiagram.Attribut>> HorizAppMultiA.relations:List =>=>=> RelationalSchema.Column>> horizappmultia.relations;
ClassDiagram.Attribut>> RecursivelyEmbeddedPC.embedded:EmbeddedPC =>=>=> RelationalSchema.Column>> recursivelyembeddedpc.embedded;
ClassDiagram.Attribut>> AutoIncrementPC2.field:int =>=>=> RelationalSchema.Column>> autoincrementpc2.field;
ClassDiagram.Attribut>> HelperPC2.field:String =>=>=> RelationalSchema.Column>> helperpc2.field;
ClassDiagram.Attribut>> HelperPC2.id:int =>=>=> RelationalSchema.Column>> helperpc2.id PRIMARY KEY;
ClassDiagram.Attribut>> HelperPC2.helpercollection:List =>=>=> RelationalSchema.Column>> helperpc2.helpercollection;
ClassDiagram.Attribut>> HorizC.serialversionuid:long =>=>=> RelationalSchema.Column>> horizc.serialversionuid;
ClassDiagram.Attribut>> HorizC.c:String =>=>=> RelationalSchema.Column>> horizc.c;
ClassDiagram.Attribut>> HorizC.c:int =>=>=> RelationalSchema.Column>> horizc.c;
ClassDiagram.Attribut>> JoinTableMapPC.name:String =>=>=> RelationalSchema.Column>> jointablemappc.name;
ClassDiagram.Attribut>> JoinTableMapPC.helpers:Map =>=>=> RelationalSchema.Column>> jointablemappc.helpers;
ClassDiagram.Attribut>> MappingTest1.value:int =>=>=> RelationalSchema.Column>> mappingtest1.value;
ClassDiagram.Attribut>> MappingTest1.othertablevalue:int =>=>=> RelationalSchema.Column>> mappingtest1.othertablevalue;
ClassDiagram.Attribut>> MappingTest1.blob:Object =>=>=> RelationalSchema.Column>> mappingtest1.blob;
ClassDiagram.Attribut>> MappingTest1.oneone:MappingTest2 =>=>=> RelationalSchema.Column>> mappingtest1.oneone;
ClassDiagram.Attribut>> MappingTest1.selfoneone:MappingTest1 =>=>=> RelationalSchema.Column>> mappingtest1.selfoneone;
ClassDiagram.Attribut>> MappingTest1.othertableoneone:MappingTest2 =>=>=> RelationalSchema.Column>> mappingtest1.othertableoneone;
ClassDiagram.Attribut>> MappingTest1.inverseowneroneone:MappingTest2 =>=>=> RelationalSchema.Column>> mappingtest1.inverseowneroneone;
ClassDiagram.Attribut>> MappingTest1.inverseoneone:MappingTest2 =>=>=> RelationalSchema.Column>> mappingtest1.inverseoneone;
ClassDiagram.Attribut>> MappingTest1.collection:Set =>=>=> RelationalSchema.Column>> mappingtest1.collection;
ClassDiagram.Attribut>> MappingTest1.inverseowneronemany:Set =>=>=> RelationalSchema.Column>> mappingtest1.inverseowneronemany;
ClassDiagram.Attribut>> MappingTest1.onemany:Set =>=>=> RelationalSchema.Column>> mappingtest1.onemany;
ClassDiagram.Attribut>> MappingTest1.manymany:List =>=>=> RelationalSchema.Column>> mappingtest1.manymany;
ClassDiagram.Attribut>> MappingTest1.inverseownermanymany:Set =>=>=> RelationalSchema.Column>> mappingtest1.inverseownermanymany;
ClassDiagram.Attribut>> MappingTest1.GeneratedName:Map =>=>=> RelationalSchema.Column>> mappingtest1.GeneratedName;
ClassDiagram.Attribut>> MappingTest1.nmany:Map =>=>=> RelationalSchema.Column>> mappingtest1.nmany;
ClassDiagram.Attribut>> MappingTest1.manymany:Map =>=>=> RelationalSchema.Column>> mappingtest1.manymany;
ClassDiagram.Attribut>> MappingTest1.transactionalvalue:int =>=>=> RelationalSchema.Column>> mappingtest1.transactionalvalue;
ClassDiagram.Attribut>> HorizInterVerticalB.b:String =>=>=> RelationalSchema.Column>> horizinterverticalb.b;
ClassDiagram.Attribut>> HorizInterVerticalB.b:int =>=>=> RelationalSchema.Column>> horizinterverticalb.b;
ClassDiagram.Attribut>> HorizRelation./////////////////////////onetoonemappings///////////////////////serialversionuid:long =>=>=> RelationalSchema.Column>> horizrelation./////////////////////////onetoonemappings///////////////////////serialversionuid;
ClassDiagram.Attribut>> HorizRelation.ob:HorizA =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizB =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizC =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizD =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizE =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizF =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizG =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizH =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizI =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizJ =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizK =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizL =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizM =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizN =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizO =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizAppSingleA =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizAppSingleB =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizAppSingleC =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizAppSingleD =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizAppMultiA =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizAppMultiB =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizAppMultiC =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizAppMultiD =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizInterFlatA =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizInterFlatB =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizInterFlatC =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizInterFlatD =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizInterVerticalA =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizInterVerticalB =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizInterVerticalC =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.ob:HorizInterVerticalD =>=>=> RelationalSchema.Column>> horizrelation.ob;
ClassDiagram.Attribut>> HorizRelation.//////////////////////////onetomanymappings////////////////////////choriza:HashSet =>=>=> RelationalSchema.Column>> horizrelation.//////////////////////////onetomanymappings////////////////////////choriza;
ClassDiagram.Attribut>> HorizRelation.chorizb:LinkedList =>=>=> RelationalSchema.Column>> horizrelation.chorizb;
ClassDiagram.Attribut>> HorizRelation.chorizc:ArrayList =>=>=> RelationalSchema.Column>> horizrelation.chorizc;
ClassDiagram.Attribut>> HorizRelation.chorizd:Vector =>=>=> RelationalSchema.Column>> horizrelation.chorizd;
ClassDiagram.Attribut>> HorizRelation.chorize:HashSet =>=>=> RelationalSchema.Column>> horizrelation.chorize;
ClassDiagram.Attribut>> HorizRelation.chorizf:LinkedList =>=>=> RelationalSchema.Column>> horizrelation.chorizf;
ClassDiagram.Attribut>> HorizRelation.chorizg:ArrayList =>=>=> RelationalSchema.Column>> horizrelation.chorizg;
ClassDiagram.Attribut>> HorizRelation.chorizh:Vector =>=>=> RelationalSchema.Column>> horizrelation.chorizh;
ClassDiagram.Attribut>> HorizRelation.chorizi:HashSet =>=>=> RelationalSchema.Column>> horizrelation.chorizi;
ClassDiagram.Attribut>> HorizRelation.chorizj:LinkedList =>=>=> RelationalSchema.Column>> horizrelation.chorizj;
ClassDiagram.Attribut>> HorizRelation.chorizk:ArrayList =>=>=> RelationalSchema.Column>> horizrelation.chorizk;
ClassDiagram.Attribut>> HorizRelation.chorizl:Vector =>=>=> RelationalSchema.Column>> horizrelation.chorizl;
ClassDiagram.Attribut>> HorizRelation.chorizm:HashSet =>=>=> RelationalSchema.Column>> horizrelation.chorizm;
ClassDiagram.Attribut>> HorizRelation.chorizn:LinkedList =>=>=> RelationalSchema.Column>> horizrelation.chorizn;
ClassDiagram.Attribut>> HorizRelation.chorizo:ArrayList =>=>=> RelationalSchema.Column>> horizrelation.chorizo;
ClassDiagram.Attribut>> HorizRelation.chorizappsinglea:Vector =>=>=> RelationalSchema.Column>> horizrelation.chorizappsinglea;
ClassDiagram.Attribut>> HorizRelation.chorizappsingleb:HashSet =>=>=> RelationalSchema.Column>> horizrelation.chorizappsingleb;
ClassDiagram.Attribut>> HorizRelation.chorizappsinglec:LinkedList =>=>=> RelationalSchema.Column>> horizrelation.chorizappsinglec;
ClassDiagram.Attribut>> HorizRelation.chorizappsingled:ArrayList =>=>=> RelationalSchema.Column>> horizrelation.chorizappsingled;
ClassDiagram.Attribut>> HorizRelation.chorizappmultia:Vector =>=>=> RelationalSchema.Column>> horizrelation.chorizappmultia;
ClassDiagram.Attribut>> HorizRelation.chorizappmultib:HashSet =>=>=> RelationalSchema.Column>> horizrelation.chorizappmultib;
ClassDiagram.Attribut>> HorizRelation.chorizappmultic:LinkedList =>=>=> RelationalSchema.Column>> horizrelation.chorizappmultic;
ClassDiagram.Attribut>> HorizRelation.chorizappmultid:ArrayList =>=>=> RelationalSchema.Column>> horizrelation.chorizappmultid;
ClassDiagram.Attribut>> HorizRelation.chorizinterflata:Vector =>=>=> RelationalSchema.Column>> horizrelation.chorizinterflata;
ClassDiagram.Attribut>> HorizRelation.chorizinterflatb:HashSet =>=>=> RelationalSchema.Column>> horizrelation.chorizinterflatb;
ClassDiagram.Attribut>> HorizRelation.chorizinterflatc:LinkedList =>=>=> RelationalSchema.Column>> horizrelation.chorizinterflatc;
ClassDiagram.Attribut>> HorizRelation.chorizinterflatd:ArrayList =>=>=> RelationalSchema.Column>> horizrelation.chorizinterflatd;
ClassDiagram.Attribut>> HorizRelation.chorizinterverticala:Vector =>=>=> RelationalSchema.Column>> horizrelation.chorizinterverticala;
ClassDiagram.Attribut>> HorizRelation.chorizinterverticalb:HashSet =>=>=> RelationalSchema.Column>> horizrelation.chorizinterverticalb;
ClassDiagram.Attribut>> HorizRelation.chorizinterverticalc:LinkedList =>=>=> RelationalSchema.Column>> horizrelation.chorizinterverticalc;
ClassDiagram.Attribut>> HorizRelation.chorizinterverticald:ArrayList =>=>=> RelationalSchema.Column>> horizrelation.chorizinterverticald;
ClassDiagram.Attribut>> AutoIncrementOpOrderPC.id:long =>=>=> RelationalSchema.Column>> autoincrementoporderpc.id PRIMARY KEY;
ClassDiagram.Attribut>> AutoIncrementOpOrderPC.rel:AutoIncrementOpOrderPC =>=>=> RelationalSchema.Column>> autoincrementoporderpc.rel;
ClassDiagram.Attribut>> AutoIncrementOpOrderPC.owner:AutoIncrementOpOrderPC =>=>=> RelationalSchema.Column>> autoincrementoporderpc.owner;
ClassDiagram.Attribut>> AutoIncrementOpOrderPC.secondary:String =>=>=> RelationalSchema.Column>> autoincrementoporderpc.secondary;
ClassDiagram.Attribut>> AutoIncrementOpOrderPC.rel:List =>=>=> RelationalSchema.Column>> autoincrementoporderpc.rel;
ClassDiagram.Attribut>> AutoIncrementOpOrderPC.mappedrel:List =>=>=> RelationalSchema.Column>> autoincrementoporderpc.mappedrel;
ClassDiagram.Attribut>> AutoIncrementOpOrderPC.inversekeyrel:List =>=>=> RelationalSchema.Column>> autoincrementoporderpc.inversekeyrel;
ClassDiagram.Attribut>> LocatorTestObject.s:byte =>=>=> RelationalSchema.Column>> locatortestobject.s;
ClassDiagram.Attribut>> LocatorTestObject.clob:String =>=>=> RelationalSchema.Column>> locatortestobject.clob;
ClassDiagram.Attribut>> EagerOuterJoinPC.name:String =>=>=> RelationalSchema.Column>> eagerouterjoinpc.name;
ClassDiagram.Attribut>> EagerOuterJoinPC.string:Collection =>=>=> RelationalSchema.Column>> eagerouterjoinpc.string;
ClassDiagram.Attribut>> EagerOuterJoinPC.string:List =>=>=> RelationalSchema.Column>> eagerouterjoinpc.string;
ClassDiagram.Attribut>> EagerOuterJoinPC.onemany:Collection =>=>=> RelationalSchema.Column>> eagerouterjoinpc.onemany;
ClassDiagram.Attribut>> EagerOuterJoinPC.manymany:Collection =>=>=> RelationalSchema.Column>> eagerouterjoinpc.manymany;
ClassDiagram.Attribut>> EagerOuterJoinPC.manymany:List =>=>=> RelationalSchema.Column>> eagerouterjoinpc.manymany;
ClassDiagram.Attribut>> EagerOuterJoinPC.helper:HelperPC =>=>=> RelationalSchema.Column>> eagerouterjoinpc.helper;
ClassDiagram.Attribut>> HorizO.serialversionuid:long =>=>=> RelationalSchema.Column>> horizo.serialversionuid;
ClassDiagram.Attribut>> HorizO.o:String =>=>=> RelationalSchema.Column>> horizo.o;
ClassDiagram.Attribut>> HorizO.o:int =>=>=> RelationalSchema.Column>> horizo.o;
ClassDiagram.Attribut>> OpOrderPC.id:long =>=>=> RelationalSchema.Column>> oporderpc.id PRIMARY KEY;
ClassDiagram.Attribut>> OpOrderPC.rel:OpOrderPC =>=>=> RelationalSchema.Column>> oporderpc.rel;
ClassDiagram.Attribut>> OpOrderPC.owner:OpOrderPC =>=>=> RelationalSchema.Column>> oporderpc.owner;
ClassDiagram.Attribut>> OpOrderPC.secondary:String =>=>=> RelationalSchema.Column>> oporderpc.secondary;
ClassDiagram.Attribut>> OpOrderPC.rel:List =>=>=> RelationalSchema.Column>> oporderpc.rel;
ClassDiagram.Attribut>> OpOrderPC.mappedrel:List =>=>=> RelationalSchema.Column>> oporderpc.mappedrel;
ClassDiagram.Attribut>> OpOrderPC.inversekeyrel:List =>=>=> RelationalSchema.Column>> oporderpc.inversekeyrel;
ClassDiagram.Attribut>> PagingHelperPC.field:int =>=>=> RelationalSchema.Column>> paginghelperpc.field;
ClassDiagram.Attribut>> EmbeddedOwnerPC.id1:int =>=>=> RelationalSchema.Column>> embeddedownerpc.id1;
ClassDiagram.Attribut>> EmbeddedOwnerPC.id2:int =>=>=> RelationalSchema.Column>> embeddedownerpc.id2;
ClassDiagram.Attribut>> EmbeddedOwnerPC.field:String =>=>=> RelationalSchema.Column>> embeddedownerpc.field;
ClassDiagram.Attribut>> EmbeddedOwnerPC.embedded:EmbeddedPC =>=>=> RelationalSchema.Column>> embeddedownerpc.embedded;
ClassDiagram.Attribut>> EmbeddedOwnerPC.complexembedded:ComplexEmbeddedPC =>=>=> RelationalSchema.Column>> embeddedownerpc.complexembedded;
ClassDiagram.Attribut>> ConstantJoinPC.pk1:int =>=>=> RelationalSchema.Column>> constantjoinpc.pk1;
ClassDiagram.Attribut>> ConstantJoinPC.pk2:int =>=>=> RelationalSchema.Column>> constantjoinpc.pk2;
ClassDiagram.Attribut>> ConstantJoinPC.nonpk:NonPKJoinPC =>=>=> RelationalSchema.Column>> constantjoinpc.nonpk;
ClassDiagram.Attribut>> ConstantJoinPC.nonpk2:NonPKJoinPC =>=>=> RelationalSchema.Column>> constantjoinpc.nonpk2;
ClassDiagram.Attribut>> ConstantJoinPC.nonpks:Collection =>=>=> RelationalSchema.Column>> constantjoinpc.nonpks;
ClassDiagram.Attribut>> HorizK.serialversionuid:long =>=>=> RelationalSchema.Column>> horizk.serialversionuid;
ClassDiagram.Attribut>> HorizK.k:String =>=>=> RelationalSchema.Column>> horizk.k;
ClassDiagram.Attribut>> HorizK.k:int =>=>=> RelationalSchema.Column>> horizk.k;
ClassDiagram.Attribut>> HorizAppInterVerticalC.c:String =>=>=> RelationalSchema.Column>> horizappinterverticalc.c;
ClassDiagram.Attribut>> HorizAppInterVerticalC.c:int =>=>=> RelationalSchema.Column>> horizappinterverticalc.c;
ClassDiagram.Attribut>> BuildSchemaPC.field:String =>=>=> RelationalSchema.Column>> buildschemapc.field;
ClassDiagram.Attribut>> BuildSchemaPC.field:int =>=>=> RelationalSchema.Column>> buildschemapc.field;
ClassDiagram.Attribut>> TransactionalClassPC.field:int =>=>=> RelationalSchema.Column>> transactionalclasspc.field PRIMARY KEY;
ClassDiagram.Attribut>> CustomMappingPC.female:boolean =>=>=> RelationalSchema.Column>> custommappingpc.female;
ClassDiagram.Attribut>> CustomMappingPC.name:String =>=>=> RelationalSchema.Column>> custommappingpc.name;
ClassDiagram.Attribut>> CustomMappingPC.id:int =>=>=> RelationalSchema.Column>> custommappingpc.id PRIMARY KEY;
ClassDiagram.Attribut>> LockGroupSubclass.serialversionuid:long =>=>=> RelationalSchema.Column>> lockgroupsubclass.serialversionuid;
ClassDiagram.Attribut>> LockGroupSubclass.nondefaultlockgroupfield:String =>=>=> RelationalSchema.Column>> lockgroupsubclass.nondefaultlockgroupfield;
ClassDiagram.Attribut>> LockGroupSubclass.defaultlockgroupfield:String =>=>=> RelationalSchema.Column>> lockgroupsubclass.defaultlockgroupfield;
ClassDiagram.Attribut>> DataStoreTripsPC.field:int =>=>=> RelationalSchema.Column>> datastoretripspc.field;
ClassDiagram.Attribut>> DataStoreTripsPC.field:String =>=>=> RelationalSchema.Column>> datastoretripspc.field;
ClassDiagram.Attribut>> RuntimeTest1.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest1.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest1.somefield:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> RuntimeTest1.field:Locale =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:int =>=>=> RelationalSchema.Column>> runtimetest1.field PRIMARY KEY;
ClassDiagram.Attribut>> RuntimeTest1.field:String =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.//transactionalonlytrans:String =>=>=> RelationalSchema.Column>> runtimetest1.//transactionalonlytrans;
ClassDiagram.Attribut>> RuntimeTest1.selfonemany:Set =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ConstantJoinPC4.name:String =>=>=> RelationalSchema.Column>> constantjoinpc4.name;
ClassDiagram.Attribut>> ConstantJoinPC4.id:int =>=>=> RelationalSchema.Column>> constantjoinpc4.id PRIMARY KEY;
ClassDiagram.Attribut>> RecursiveEntityWithCompositeId.//thismustmatchthefieldincompositeidid:Integer =>=>=> RelationalSchema.Column>> recursiveentitywithcompositeid.//thismustmatchthefieldincompositeidid;
ClassDiagram.Attribut>> RecursiveEntityWithCompositeId.//thismustmatchthefieldincompositeidname:String =>=>=> RelationalSchema.Column>> recursiveentitywithcompositeid.//thismustmatchthefieldincompositeidname;
ClassDiagram.Attribut>> RecursiveEntityWithCompositeId.//anon-primarykeyfieldvalue:int =>=>=> RelationalSchema.Column>> recursiveentitywithcompositeid.//anon-primarykeyfieldvalue;
ClassDiagram.Attribut>> RecursiveEntityWithCompositeId.//self-relatedrelation:RecursiveEntityWithCompositeId =>=>=> RelationalSchema.Column>> recursiveentitywithcompositeid.//self-relatedrelation;
ClassDiagram.Attribut>> SQLMapItem.serialversionuid:long =>=>=> RelationalSchema.Column>> sqlmapitem.serialversionuid;
ClassDiagram.Attribut>> SQLMapItem.id:int =>=>=> RelationalSchema.Column>> sqlmapitem.id PRIMARY KEY;
ClassDiagram.Attribut>> SQLMapItem.name:String =>=>=> RelationalSchema.Column>> sqlmapitem.name;
ClassDiagram.Attribut>> SQLMapItem.price:float =>=>=> RelationalSchema.Column>> sqlmapitem.price;
ClassDiagram.Attribut>> Entity1.serialversionuid:long =>=>=> RelationalSchema.Column>> entity1.serialversionuid;
ClassDiagram.Attribut>> Entity1.pk:long =>=>=> RelationalSchema.Column>> entity1.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity1.field:String =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.field:int =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.versionfield:int =>=>=> RelationalSchema.Column>> entity1.versionfield;
ClassDiagram.Attribut>> SQLMapPerson.serialversionuid:long =>=>=> RelationalSchema.Column>> sqlmapperson.serialversionuid;
ClassDiagram.Attribut>> SQLMapPerson.name:String =>=>=> RelationalSchema.Column>> sqlmapperson.name PRIMARY KEY;
ClassDiagram.Attribut>> OwnerOfEntityWithCompositeId.name:String =>=>=> RelationalSchema.Column>> ownerofentitywithcompositeid.name PRIMARY KEY;
ClassDiagram.Attribut>> SQLMapOrder.serialversionuid:long =>=>=> RelationalSchema.Column>> sqlmaporder.serialversionuid;
ClassDiagram.Attribut>> SQLMapOrder.id:int =>=>=> RelationalSchema.Column>> sqlmaporder.id PRIMARY KEY;
ClassDiagram.Attribut>> SQLMapOrder.quantity:int =>=>=> RelationalSchema.Column>> sqlmaporder.quantity;
ClassDiagram.Attribut>> SQLMapAddress.serialversionuid:long =>=>=> RelationalSchema.Column>> sqlmapaddress.serialversionuid;
ClassDiagram.Attribut>> SQLMapAddress.id:int =>=>=> RelationalSchema.Column>> sqlmapaddress.id PRIMARY KEY;
ClassDiagram.Attribut>> SQLMapAddress.street:String =>=>=> RelationalSchema.Column>> sqlmapaddress.street;
ClassDiagram.Attribut>> SQLMapAddress.state:String =>=>=> RelationalSchema.Column>> sqlmapaddress.state;
ClassDiagram.Attribut>> SQLMapAddress.zip:int =>=>=> RelationalSchema.Column>> sqlmapaddress.zip;
ClassDiagram.Attribut>> EntityWithCompositeId.//thismustmatchthefieldincompositeidid:Integer =>=>=> RelationalSchema.Column>> entitywithcompositeid.//thismustmatchthefieldincompositeidid;
ClassDiagram.Attribut>> EntityWithCompositeId.//thismustmatchthefieldincompositeidname:String =>=>=> RelationalSchema.Column>> entitywithcompositeid.//thismustmatchthefieldincompositeidname;
ClassDiagram.Attribut>> EntityWithCompositeId.value:String =>=>=> RelationalSchema.Column>> entitywithcompositeid.value;
ClassDiagram.Attribut>> Entity2.serialversionuid:long =>=>=> RelationalSchema.Column>> entity2.serialversionuid;
ClassDiagram.Attribut>> Entity2.pk:long =>=>=> RelationalSchema.Column>> entity2.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity2.field:String =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> Entity2.field:int =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> ComplexEmbeddedPC.field:String =>=>=> RelationalSchema.Column>> complexembeddedpc.field;
ClassDiagram.Attribut>> ComplexEmbeddedPC.ownerfield:EmbeddedOwnerPC =>=>=> RelationalSchema.Column>> complexembeddedpc.ownerfield;
ClassDiagram.Attribut>> ComplexEmbeddedPC.string:Set =>=>=> RelationalSchema.Column>> complexembeddedpc.string;
ClassDiagram.Attribut>> HorizN.serialversionuid:long =>=>=> RelationalSchema.Column>> horizn.serialversionuid;
ClassDiagram.Attribut>> HorizN.n:String =>=>=> RelationalSchema.Column>> horizn.n;
ClassDiagram.Attribut>> HorizN.n:int =>=>=> RelationalSchema.Column>> horizn.n;
ClassDiagram.Attribut>> EmbeddedPC.field:int =>=>=> RelationalSchema.Column>> embeddedpc.field;
ClassDiagram.Attribut>> EmbeddedPC.field:String =>=>=> RelationalSchema.Column>> embeddedpc.field;
ClassDiagram.Attribut>> InvertA.serialversionuid:long =>=>=> RelationalSchema.Column>> inverta.serialversionuid;
ClassDiagram.Attribut>> InvertA.id:int =>=>=> RelationalSchema.Column>> inverta.id PRIMARY KEY;
ClassDiagram.Attribut>> InvertA.test:String =>=>=> RelationalSchema.Column>> inverta.test;
ClassDiagram.Attribut>> HorizAppInterVerticalB.b:String =>=>=> RelationalSchema.Column>> horizappinterverticalb.b;
ClassDiagram.Attribut>> HorizAppInterVerticalB.b:int =>=>=> RelationalSchema.Column>> horizappinterverticalb.b;
ClassDiagram.Attribut>> BaseSub1Sub2.basesub1sub2field:int =>=>=> RelationalSchema.Column>> basesub1sub2.basesub1sub2field;
ClassDiagram.Attribut>> HorizJ.serialversionuid:long =>=>=> RelationalSchema.Column>> horizj.serialversionuid;
ClassDiagram.Attribut>> HorizJ.j:String =>=>=> RelationalSchema.Column>> horizj.j;
ClassDiagram.Attribut>> HorizJ.j:int =>=>=> RelationalSchema.Column>> horizj.j;
ClassDiagram.Attribut>> CircularFKPC2.field:String =>=>=> RelationalSchema.Column>> circularfkpc2.field PRIMARY KEY;
ClassDiagram.Attribut>> CircularFKPC2.fkfield:CircularFKPC =>=>=> RelationalSchema.Column>> circularfkpc2.fkfield;
ClassDiagram.Attribut>> ConstantJoinPC5.id:int =>=>=> RelationalSchema.Column>> constantjoinpc5.id PRIMARY KEY;
ClassDiagram.Attribut>> ConstantJoinPC5.name:String =>=>=> RelationalSchema.Column>> constantjoinpc5.name;
ClassDiagram.Attribut>> UnidirectionalOneToOneOwner.id:long =>=>=> RelationalSchema.Column>> unidirectionalonetooneowner.id PRIMARY KEY;
ClassDiagram.Attribut>> UnidirectionalOneToOneOwner.marker:String =>=>=> RelationalSchema.Column>> unidirectionalonetooneowner.marker;
ClassDiagram.Attribut>> UnidirectionalOneToOneOwner.version:int =>=>=> RelationalSchema.Column>> unidirectionalonetooneowner.version;
ClassDiagram.Attribut>> JoinSubclassBase.basefield:int =>=>=> RelationalSchema.Column>> joinsubclassbase.basefield;
ClassDiagram.Attribut>> HorizAppSingleC.c:String =>=>=> RelationalSchema.Column>> horizappsinglec.c;
ClassDiagram.Attribut>> HorizAppSingleC.c:int =>=>=> RelationalSchema.Column>> horizappsinglec.c;
ClassDiagram.Attribut>> AttachE.serialversionuid:long =>=>=> RelationalSchema.Column>> attache.serialversionuid;
ClassDiagram.Attribut>> AttachE.version:Object =>=>=> RelationalSchema.Column>> attache.version;
ClassDiagram.Attribut>> AttachE.estr:String =>=>=> RelationalSchema.Column>> attache.estr;
ClassDiagram.Attribut>> AttachE.e:int =>=>=> RelationalSchema.Column>> attache.e;
ClassDiagram.Attribut>> AttachE.edbl:double =>=>=> RelationalSchema.Column>> attache.edbl;
ClassDiagram.Attribut>> AttachE.b:AttachB =>=>=> RelationalSchema.Column>> attache.b;
ClassDiagram.Attribut>> AttachE.f:AttachF =>=>=> RelationalSchema.Column>> attache.f;
ClassDiagram.Attribut>> AttachE.GeneratedName:Date =>=>=> RelationalSchema.Column>> attache.GeneratedName;
ClassDiagram.Attribut>> BaseSub1.basesub1field:int =>=>=> RelationalSchema.Column>> basesub1.basesub1field;
ClassDiagram.Attribut>> HorizAppMultiD.d:String =>=>=> RelationalSchema.Column>> horizappmultid.d;
ClassDiagram.Attribut>> HorizAppMultiD.d:int =>=>=> RelationalSchema.Column>> horizappmultid.d;
ClassDiagram.Attribut>> ByteArrayPKPC.pk:byte =>=>=> RelationalSchema.Column>> bytearraypkpc.pk;
ClassDiagram.Attribut>> ByteArrayPKPC.field:String =>=>=> RelationalSchema.Column>> bytearraypkpc.field;
ClassDiagram.Attribut>> ByteArrayPKPC.rels:List =>=>=> RelationalSchema.Column>> bytearraypkpc.rels;
ClassDiagram.Attribut>> ByteArrayPKPC.parent:ByteArrayPKPC =>=>=> RelationalSchema.Column>> bytearraypkpc.parent;
ClassDiagram.Attribut>> HorizF.serialversionuid:long =>=>=> RelationalSchema.Column>> horizf.serialversionuid;
ClassDiagram.Attribut>> HorizF.f:String =>=>=> RelationalSchema.Column>> horizf.f;
ClassDiagram.Attribut>> HorizF.f:int =>=>=> RelationalSchema.Column>> horizf.f;
ClassDiagram.Attribut>> JoinSubclassBaseSubFlat.basesubflatfield:int =>=>=> RelationalSchema.Column>> joinsubclassbasesubflat.basesubflatfield;
ClassDiagram.Attribut>> MappingTest4.flatvalue:int =>=>=> RelationalSchema.Column>> mappingtest4.flatvalue;
ClassDiagram.Attribut>> CircularFKPC.field:String =>=>=> RelationalSchema.Column>> circularfkpc.field PRIMARY KEY;
ClassDiagram.Attribut>> CircularFKPC.fkfield:CircularFKPC2 =>=>=> RelationalSchema.Column>> circularfkpc.fkfield;
ClassDiagram.Attribut>> HorizInterFlatD.d:String =>=>=> RelationalSchema.Column>> horizinterflatd.d;
ClassDiagram.Attribut>> HorizInterFlatD.d:int =>=>=> RelationalSchema.Column>> horizinterflatd.d;
ClassDiagram.Attribut>> AutoIncrementPC3.id:long =>=>=> RelationalSchema.Column>> autoincrementpc3.id PRIMARY KEY;
ClassDiagram.Attribut>> AutoIncrementPC3.field:Set =>=>=> RelationalSchema.Column>> autoincrementpc3.field;
ClassDiagram.Attribut>> AutoIncrementPC3.field:String =>=>=> RelationalSchema.Column>> autoincrementpc3.field;
ClassDiagram.Attribut>> AttachA.serialversionuid:long =>=>=> RelationalSchema.Column>> attacha.serialversionuid;
ClassDiagram.Attribut>> AttachA.//transientmethodfortestingcallbackstransientdetachsource:Object =>=>=> RelationalSchema.Column>> attacha.//transientmethodfortestingcallbackstransientdetachsource;
ClassDiagram.Attribut>> AttachA.transientattachsource:Object =>=>=> RelationalSchema.Column>> attacha.transientattachsource;
ClassDiagram.Attribut>> AttachA.transientpreattachcalls:int =>=>=> RelationalSchema.Column>> attacha.transientpreattachcalls;
ClassDiagram.Attribut>> AttachA.transientpostattachcalls:int =>=>=> RelationalSchema.Column>> attacha.transientpostattachcalls;
ClassDiagram.Attribut>> AttachA.transientpredetachcalls:int =>=>=> RelationalSchema.Column>> attacha.transientpredetachcalls;
ClassDiagram.Attribut>> AttachA.transientpostdetachcalls:int =>=>=> RelationalSchema.Column>> attacha.transientpostdetachcalls;
ClassDiagram.Attribut>> AttachA.astr:String =>=>=> RelationalSchema.Column>> attacha.astr;
ClassDiagram.Attribut>> AttachA.a:int =>=>=> RelationalSchema.Column>> attacha.a;
ClassDiagram.Attribut>> AttachA.adbl:double =>=>=> RelationalSchema.Column>> attacha.adbl;
ClassDiagram.Attribut>> AttachA.array:String =>=>=> RelationalSchema.Column>> attacha.array;
ClassDiagram.Attribut>> AttachA.array:AttachE =>=>=> RelationalSchema.Column>> attacha.array;
ClassDiagram.Attribut>> HorizB.serialversionuid:long =>=>=> RelationalSchema.Column>> horizb.serialversionuid;
ClassDiagram.Attribut>> HorizB.b:String =>=>=> RelationalSchema.Column>> horizb.b;
ClassDiagram.Attribut>> HorizB.b:int =>=>=> RelationalSchema.Column>> horizb.b;
ClassDiagram.Attribut>> HelperPC3.field:String =>=>=> RelationalSchema.Column>> helperpc3.field;
ClassDiagram.Attribut>> HelperPC3.id:int =>=>=> RelationalSchema.Column>> helperpc3.id PRIMARY KEY;
ClassDiagram.Attribut>> PagingAppIdPC.field:int =>=>=> RelationalSchema.Column>> pagingappidpc.field;
ClassDiagram.Attribut>> PagingAppIdPC.field:long =>=>=> RelationalSchema.Column>> pagingappidpc.field;
ClassDiagram.Attribut>> PagingAppIdPC.rel:PagingHelperPC =>=>=> RelationalSchema.Column>> pagingappidpc.rel;
ClassDiagram.Attribut>> PagingAppIdPC.rels:List =>=>=> RelationalSchema.Column>> pagingappidpc.rels;
ClassDiagram.Attribut>> HorizInterVerticalC.c:String =>=>=> RelationalSchema.Column>> horizinterverticalc.c;
ClassDiagram.Attribut>> HorizInterVerticalC.c:int =>=>=> RelationalSchema.Column>> horizinterverticalc.c;
ClassDiagram.Attribut>> Address.idaddress:long =>=>=> RelationalSchema.Column>> address.idaddress PRIMARY KEY;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Person.idperson:long =>=>=> RelationalSchema.Column>> person.idperson PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.age:int =>=>=> RelationalSchema.Column>> person.age;
ClassDiagram.Attribut>> Person.GeneratedName:Address =>=>=> RelationalSchema.Column>> person.GeneratedName;
ClassDiagram.Attribut>> MappedEntity.id:int =>=>=> RelationalSchema.Column>> mappedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MappedEntity.value:long =>=>=> RelationalSchema.Column>> mappedentity.value;
ClassDiagram.Attribut>> NamedUniqueB.bid:int =>=>=> RelationalSchema.Column>> nameduniqueb.bid PRIMARY KEY;
ClassDiagram.Attribut>> NamedUniqueB.//samenamedfieldinuniqueaalsoisdefinedasuniquef1:int =>=>=> RelationalSchema.Column>> nameduniqueb.//samenamedfieldinuniqueaalsoisdefinedasuniquef1;
ClassDiagram.Attribut>> NamedUniqueB.f2:int =>=>=> RelationalSchema.Column>> nameduniqueb.f2;
ClassDiagram.Attribut>> NamedUniqueB.f3:Set<String> =>=>=> RelationalSchema.Column>> nameduniqueb.f3;
ClassDiagram.Attribut>> UniqueA.aid:int =>=>=> RelationalSchema.Column>> uniquea.aid PRIMARY KEY;
ClassDiagram.Attribut>> UniqueA.//samenamedfieldinuniquebalsoisdefinedasuniquef1:int =>=>=> RelationalSchema.Column>> uniquea.//samenamedfieldinuniquebalsoisdefinedasuniquef1;
ClassDiagram.Attribut>> UniqueA.f2:int =>=>=> RelationalSchema.Column>> uniquea.f2;
ClassDiagram.Attribut>> UniqueA.f3:int =>=>=> RelationalSchema.Column>> uniquea.f3;
ClassDiagram.Attribut>> UniqueA.f4:int =>=>=> RelationalSchema.Column>> uniquea.f4;
ClassDiagram.Attribut>> UniqueA.f5:int =>=>=> RelationalSchema.Column>> uniquea.f5;
ClassDiagram.Attribut>> UniqueA.f6:int =>=>=> RelationalSchema.Column>> uniquea.f6;
ClassDiagram.Attribut>> UniqueA.sf1:short =>=>=> RelationalSchema.Column>> uniquea.sf1;
ClassDiagram.Attribut>> UniqueA.sf2:short =>=>=> RelationalSchema.Column>> uniquea.sf2;
ClassDiagram.Attribut>> NamedUniqueA.aid:int =>=>=> RelationalSchema.Column>> nameduniquea.aid PRIMARY KEY;
ClassDiagram.Attribut>> NamedUniqueA.//samenamedfieldinuniquebalsoisdefinedasuniquef1:int =>=>=> RelationalSchema.Column>> nameduniquea.//samenamedfieldinuniquebalsoisdefinedasuniquef1;
ClassDiagram.Attribut>> NamedUniqueA.f2:int =>=>=> RelationalSchema.Column>> nameduniquea.f2;
ClassDiagram.Attribut>> NamedUniqueA.f3:int =>=>=> RelationalSchema.Column>> nameduniquea.f3;
ClassDiagram.Attribut>> NamedUniqueA.f4:int =>=>=> RelationalSchema.Column>> nameduniquea.f4;
ClassDiagram.Attribut>> NamedUniqueA.f5:int =>=>=> RelationalSchema.Column>> nameduniquea.f5;
ClassDiagram.Attribut>> NamedUniqueA.f6:int =>=>=> RelationalSchema.Column>> nameduniquea.f6;
ClassDiagram.Attribut>> NamedUniqueA.sf1:short =>=>=> RelationalSchema.Column>> nameduniquea.sf1;
ClassDiagram.Attribut>> NamedUniqueA.sf2:short =>=>=> RelationalSchema.Column>> nameduniquea.sf2;
ClassDiagram.Attribut>> UniqueB.bid:int =>=>=> RelationalSchema.Column>> uniqueb.bid PRIMARY KEY;
ClassDiagram.Attribut>> UniqueB.//samenamedfieldinuniqueaalsoisdefinedasuniquef1:int =>=>=> RelationalSchema.Column>> uniqueb.//samenamedfieldinuniqueaalsoisdefinedasuniquef1;
ClassDiagram.Attribut>> UniqueB.f2:int =>=>=> RelationalSchema.Column>> uniqueb.f2;
ClassDiagram.Attribut>> MyDBCSEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> mydbcsentity.serialversionuid;
ClassDiagram.Attribut>> CD.label:String =>=>=> RelationalSchema.Column>> cd.label;
ClassDiagram.Attribut>> CD.status:int =>=>=> RelationalSchema.Column>> cd.status;
ClassDiagram.Attribut>> ExtValue1.serialversionuid:long =>=>=> RelationalSchema.Column>> extvalue1.serialversionuid;
ClassDiagram.Attribut>> AbstractExtValue.serialversionuid:long =>=>=> RelationalSchema.Column>> abstractextvalue.serialversionuid;
ClassDiagram.Attribut>> AbstractExtValue.code:String =>=>=> RelationalSchema.Column>> abstractextvalue.code PRIMARY KEY;
ClassDiagram.Attribut>> UserData.serialversionuid:long =>=>=> RelationalSchema.Column>> userdata.serialversionuid;
ClassDiagram.Attribut>> UserData.pk:ComposedPK =>=>=> RelationalSchema.Column>> userdata.pk;
ClassDiagram.Attribut>> OrderJPA.orderid:long =>=>=> RelationalSchema.Column>> orderjpa.orderid PRIMARY KEY;
ClassDiagram.Attribut>> OrderJPA.customerid:int =>=>=> RelationalSchema.Column>> orderjpa.customerid;
ClassDiagram.Attribut>> OrderJPA.districtid:int =>=>=> RelationalSchema.Column>> orderjpa.districtid;
ClassDiagram.Attribut>> OrderJPA.warehouseid:int =>=>=> RelationalSchema.Column>> orderjpa.warehouseid;
ClassDiagram.Attribut>> Merchandise.id:long =>=>=> RelationalSchema.Column>> merchandise.id PRIMARY KEY;
ClassDiagram.Attribut>> Company.id:long =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Company.name:String =>=>=> RelationalSchema.Column>> company.name;
ClassDiagram.Attribut>> Company.startyear:int =>=>=> RelationalSchema.Column>> company.startyear;
ClassDiagram.Attribut>> CombinedPKTestEntity.pk:CombinedPKEmbeddedEntity =>=>=> RelationalSchema.Column>> combinedpktestentity.pk;
ClassDiagram.Attribut>> CombinedPKTestEntity.data1:String =>=>=> RelationalSchema.Column>> combinedpktestentity.data1;
ClassDiagram.Attribut>> CombinedPKTestEntity.data2:String =>=>=> RelationalSchema.Column>> combinedpktestentity.data2;
ClassDiagram.Attribut>> Child.id:String =>=>=> RelationalSchema.Column>> child.id PRIMARY KEY;
ClassDiagram.Attribut>> Child.name:String =>=>=> RelationalSchema.Column>> child.name;
ClassDiagram.Attribut>> Parent.id:long =>=>=> RelationalSchema.Column>> parent.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent.name:String =>=>=> RelationalSchema.Column>> parent.name PRIMARY KEY;
ClassDiagram.Attribut>> Parent.addrid:Address =>=>=> RelationalSchema.Column>> parent.addrid PRIMARY KEY;
ClassDiagram.Attribut>> Author.name:String =>=>=> RelationalSchema.Column>> author.name;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> Book.token:String =>=>=> RelationalSchema.Column>> book.token;
ClassDiagram.Attribut>> Department.id:long =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> Person.id:long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.age:short =>=>=> RelationalSchema.Column>> person.age;
ClassDiagram.Attribut>> Person.yob:int =>=>=> RelationalSchema.Column>> person.yob;
ClassDiagram.Attribut>> Person.idcounter:AtomicLong =>=>=> RelationalSchema.Column>> person.idcounter;
ClassDiagram.Attribut>> Employee.id:long =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.ismanager:boolean =>=>=> RelationalSchema.Column>> employee.ismanager;
ClassDiagram.Attribut>> Employee.status:Category =>=>=> RelationalSchema.Column>> employee.status;
ClassDiagram.Attribut>> Employee.hirestatus:Category =>=>=> RelationalSchema.Column>> employee.hirestatus;
ClassDiagram.Attribut>> Employee.start:Date =>=>=> RelationalSchema.Column>> employee.start;
ClassDiagram.Attribut>> Employee.end:Date =>=>=> RelationalSchema.Column>> employee.end;
ClassDiagram.Attribut>> Address.id:long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.street:String =>=>=> RelationalSchema.Column>> address.street;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.zip:int =>=>=> RelationalSchema.Column>> address.zip;
ClassDiagram.Attribut>> CombinedPKListEntity.id:int =>=>=> RelationalSchema.Column>> combinedpklistentity.id PRIMARY KEY;
ClassDiagram.Attribut>> CombinedPKListEntity.keya:int =>=>=> RelationalSchema.Column>> combinedpklistentity.keya;
ClassDiagram.Attribut>> CombinedPKListEntity.keyb:int =>=>=> RelationalSchema.Column>> combinedpklistentity.keyb;
ClassDiagram.Attribut>> CombinedPKListEntity.keyc:int =>=>=> RelationalSchema.Column>> combinedpklistentity.keyc;
ClassDiagram.Attribut>> BattingOrder.id:int =>=>=> RelationalSchema.Column>> battingorder.id PRIMARY KEY;
ClassDiagram.Attribut>> BattingOrder.titles:List<String> =>=>=> RelationalSchema.Column>> battingorder.titles;
ClassDiagram.Attribut>> ObOcEntity.id:int =>=>=> RelationalSchema.Column>> obocentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ObOcEntity.intlist:List<Integer> =>=>=> RelationalSchema.Column>> obocentity.intlist;
ClassDiagram.Attribut>> Home.id:int =>=>=> RelationalSchema.Column>> home.id PRIMARY KEY;
ClassDiagram.Attribut>> Home.buildyear:int =>=>=> RelationalSchema.Column>> home.buildyear;
ClassDiagram.Attribut>> ColDefTestEntity.id:int =>=>=> RelationalSchema.Column>> coldeftestentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ColDefTestEntity.collcoldef:Set<ColDefTestElement> =>=>=> RelationalSchema.Column>> coldeftestentity.collcoldef;
ClassDiagram.Attribut>> Course.id:int =>=>=> RelationalSchema.Column>> course.id PRIMARY KEY;
ClassDiagram.Attribut>> Course.name:String =>=>=> RelationalSchema.Column>> course.name;
ClassDiagram.Attribut>> Game.id:String =>=>=> RelationalSchema.Column>> game.id PRIMARY KEY;
ClassDiagram.Attribut>> Game.raindates:List<java.sql.Date> =>=>=> RelationalSchema.Column>> game.raindates;
ClassDiagram.Attribut>> Game.innings:Collection<Inning> =>=>=> RelationalSchema.Column>> game.innings;
ClassDiagram.Attribut>> BiOrderEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> biorderentity.serialversionuid;
ClassDiagram.Attribut>> BiOrderEntity.id:int =>=>=> RelationalSchema.Column>> biorderentity.id PRIMARY KEY;
ClassDiagram.Attribut>> BiOrderEntity.name:String =>=>=> RelationalSchema.Column>> biorderentity.name;
ClassDiagram.Attribut>> BiOrderMappedByEntity.id:int =>=>=> RelationalSchema.Column>> biordermappedbyentity.id PRIMARY KEY;
ClassDiagram.Attribut>> Owner.//elementcollectionbikecoll:Collection<Bicycle> =>=>=> RelationalSchema.Column>> owner.//elementcollectionbikecoll;
ClassDiagram.Attribut>> Widget.id:String =>=>=> RelationalSchema.Column>> widget.id PRIMARY KEY;
ClassDiagram.Attribut>> Widget.name:String =>=>=> RelationalSchema.Column>> widget.name;
ClassDiagram.Attribut>> Student.id:int =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> ColDefTestElement.id:int =>=>=> RelationalSchema.Column>> coldeftestelement.id PRIMARY KEY;
ClassDiagram.Attribut>> ColDefTestElement.name:String =>=>=> RelationalSchema.Column>> coldeftestelement.name;
ClassDiagram.Attribut>> Car.id:int =>=>=> RelationalSchema.Column>> car.id PRIMARY KEY;
ClassDiagram.Attribut>> Car.modelyear:int =>=>=> RelationalSchema.Column>> car.modelyear;
ClassDiagram.Attribut>> Car.make:String =>=>=> RelationalSchema.Column>> car.make;
ClassDiagram.Attribut>> Car.model:String =>=>=> RelationalSchema.Column>> car.model;
ClassDiagram.Attribut>> Player.playernumber:int =>=>=> RelationalSchema.Column>> player.playernumber;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> PhoneNumber.number:int =>=>=> RelationalSchema.Column>> phonenumber.number PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> PhoneNumber.number:int =>=>=> RelationalSchema.Column>> phonenumber.number PRIMARY KEY;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.name:String =>=>=> RelationalSchema.Column>> division.name;
ClassDiagram.Attribut>> Division.branches:Set<String> =>=>=> RelationalSchema.Column>> division.branches;
ClassDiagram.Attribut>> Company.id:int =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.id:int =>=>=> RelationalSchema.Column>> vicepresident.id PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.name:String =>=>=> RelationalSchema.Column>> vicepresident.name;
ClassDiagram.Attribut>> Employee.emppk:EmployeePK =>=>=> RelationalSchema.Column>> employee.emppk;
ClassDiagram.Attribut>> Employee.GeneratedName:Department =>=>=> RelationalSchema.Column>> employee.GeneratedName;
ClassDiagram.Attribut>> Department.deptid:int =>=>=> RelationalSchema.Column>> department.deptid PRIMARY KEY;
ClassDiagram.Attribut>> Office.id:int =>=>=> RelationalSchema.Column>> office.id PRIMARY KEY;
ClassDiagram.Attribut>> Office.name:String =>=>=> RelationalSchema.Column>> office.name;
ClassDiagram.Attribut>> Office.GeneratedName:Address =>=>=> RelationalSchema.Column>> office.GeneratedName;
ClassDiagram.Attribut>> PhoneNumber.number:int =>=>=> RelationalSchema.Column>> phonenumber.number PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.name:String =>=>=> RelationalSchema.Column>> division.name;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.name:String =>=>=> RelationalSchema.Column>> division.name;
ClassDiagram.Attribut>> VicePresident.id:int =>=>=> RelationalSchema.Column>> vicepresident.id PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.name:String =>=>=> RelationalSchema.Column>> vicepresident.name;
ClassDiagram.Attribut>> Company.id:int =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.name:String =>=>=> RelationalSchema.Column>> division.name;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> PhoneNumber.number:int =>=>=> RelationalSchema.Column>> phonenumber.number PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.id:int =>=>=> RelationalSchema.Column>> vicepresident.id PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.name:String =>=>=> RelationalSchema.Column>> vicepresident.name;
ClassDiagram.Attribut>> Company.id:int =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.deptid:int =>=>=> RelationalSchema.Column>> department.deptid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Company.id:int =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.name:String =>=>=> RelationalSchema.Column>> division.name;
ClassDiagram.Attribut>> VicePresident.id:int =>=>=> RelationalSchema.Column>> vicepresident.id PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.name:String =>=>=> RelationalSchema.Column>> vicepresident.name;
ClassDiagram.Attribut>> PhoneNumber.number:int =>=>=> RelationalSchema.Column>> phonenumber.number PRIMARY KEY;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.name:String =>=>=> RelationalSchema.Column>> division.name;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Company.id:int =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.id:int =>=>=> RelationalSchema.Column>> vicepresident.id PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.name:String =>=>=> RelationalSchema.Column>> vicepresident.name;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.name:String =>=>=> RelationalSchema.Column>> division.name;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> PhoneNumber.number:int =>=>=> RelationalSchema.Column>> phonenumber.number PRIMARY KEY;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.GeneratedName:PersonalInfo =>=>=> RelationalSchema.Column>> employee.GeneratedName;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.employees:Map<Employee,String> =>=>=> RelationalSchema.Column>> division.employees;
ClassDiagram.Attribut>> Phone.home:String =>=>=> RelationalSchema.Column>> phone.home;
ClassDiagram.Attribut>> Phone.office:String =>=>=> RelationalSchema.Column>> phone.office;
ClassDiagram.Attribut>> Phone.mobile:String =>=>=> RelationalSchema.Column>> phone.mobile;
ClassDiagram.Attribut>> Phone.id:int =>=>=> RelationalSchema.Column>> phone.id PRIMARY KEY;
ClassDiagram.Attribut>> Phone.type:String =>=>=> RelationalSchema.Column>> phone.type;
ClassDiagram.Attribut>> Phone.number:int =>=>=> RelationalSchema.Column>> phone.number;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:EmployeeName =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Department.deptid:int =>=>=> RelationalSchema.Column>> department.deptid PRIMARY KEY;
ClassDiagram.Attribut>> Item1.id:int =>=>=> RelationalSchema.Column>> item1.id PRIMARY KEY;
ClassDiagram.Attribut>> Item1.images:Map =>=>=> RelationalSchema.Column>> item1.images;
ClassDiagram.Attribut>> Compny2.id:int =>=>=> RelationalSchema.Column>> compny2.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.name:String =>=>=> RelationalSchema.Column>> division.name;
ClassDiagram.Attribut>> VicePresident.id:int =>=>=> RelationalSchema.Column>> vicepresident.id PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.name:String =>=>=> RelationalSchema.Column>> vicepresident.name;
ClassDiagram.Attribut>> Item2.id:int =>=>=> RelationalSchema.Column>> item2.id PRIMARY KEY;
ClassDiagram.Attribut>> Item2.images:Map<String,String> =>=>=> RelationalSchema.Column>> item2.images;
ClassDiagram.Attribut>> Compny1.id:int =>=>=> RelationalSchema.Column>> compny1.id PRIMARY KEY;
ClassDiagram.Attribut>> PhoneNumber.number:int =>=>=> RelationalSchema.Column>> phonenumber.number PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> PhoneNumber.number:int =>=>=> RelationalSchema.Column>> phonenumber.number PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> PhoneNumber.number:int =>=>=> RelationalSchema.Column>> phonenumber.number PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.id:int =>=>=> RelationalSchema.Column>> vicepresident.id PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.name:String =>=>=> RelationalSchema.Column>> vicepresident.name;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.name:String =>=>=> RelationalSchema.Column>> division.name;
ClassDiagram.Attribut>> Company.id:int =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee3.empid:int =>=>=> RelationalSchema.Column>> employee3.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee3.name:EmployeeName3 =>=>=> RelationalSchema.Column>> employee3.name;
ClassDiagram.Attribut>> Department2.deptid:int =>=>=> RelationalSchema.Column>> department2.deptid PRIMARY KEY;
ClassDiagram.Attribut>> Employee2.emppk:EmployeePK2 =>=>=> RelationalSchema.Column>> employee2.emppk;
ClassDiagram.Attribut>> Department3.deptid:int =>=>=> RelationalSchema.Column>> department3.deptid PRIMARY KEY;
ClassDiagram.Attribut>> Department1.//@iddeptid:int =>=>=> RelationalSchema.Column>> department1.//@iddeptid;
ClassDiagram.Attribut>> Department1.//@onetomany(mappedby:Map<Integer,Employee1> =>=>=> RelationalSchema.Column>> department1.//@onetomany(mappedby;
ClassDiagram.Attribut>> Employee1.empid:int =>=>=> RelationalSchema.Column>> employee1.empid PRIMARY KEY;
ClassDiagram.Attribut>> PhoneNumber.GeneratedName:PhonePK =>=>=> RelationalSchema.Column>> phonenumber.GeneratedName;
ClassDiagram.Attribut>> PhoneNumber.room:int =>=>=> RelationalSchema.Column>> phonenumber.room;
ClassDiagram.Attribut>> Employee.emppk:EmployeePK =>=>=> RelationalSchema.Column>> employee.emppk;
ClassDiagram.Attribut>> Employee.salary:int =>=>=> RelationalSchema.Column>> employee.salary;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> PhoneNumber.number:int =>=>=> RelationalSchema.Column>> phonenumber.number PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.name:String =>=>=> RelationalSchema.Column>> division.name;
ClassDiagram.Attribut>> Company.id:int =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.name:String =>=>=> RelationalSchema.Column>> division.name;
ClassDiagram.Attribut>> VicePresident.id:int =>=>=> RelationalSchema.Column>> vicepresident.id PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.name:String =>=>=> RelationalSchema.Column>> vicepresident.name;
ClassDiagram.Attribut>> MultilingualString.serialversionuid:long =>=>=> RelationalSchema.Column>> multilingualstring.serialversionuid;
ClassDiagram.Attribut>> MultilingualString.id:long =>=>=> RelationalSchema.Column>> multilingualstring.id PRIMARY KEY;
ClassDiagram.Attribut>> MultilingualString.map:Map<String,LocalizedString> =>=>=> RelationalSchema.Column>> multilingualstring.map;
ClassDiagram.Attribut>> Student.id:int =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Course.id:int =>=>=> RelationalSchema.Column>> course.id PRIMARY KEY;
ClassDiagram.Attribut>> Course.name:String =>=>=> RelationalSchema.Column>> course.name;
ClassDiagram.Attribut>> Semester.id:int =>=>=> RelationalSchema.Column>> semester.id PRIMARY KEY;
ClassDiagram.Attribut>> Semester.name:String =>=>=> RelationalSchema.Column>> semester.name;
ClassDiagram.Attribut>> TimeKeeper.id:long =>=>=> RelationalSchema.Column>> timekeeper.id PRIMARY KEY;
ClassDiagram.Attribut>> TimeKeeper.GeneratedName:Date =>=>=> RelationalSchema.Column>> timekeeper.GeneratedName;
ClassDiagram.Attribut>> TimeKeeper.GeneratedName:Time =>=>=> RelationalSchema.Column>> timekeeper.GeneratedName;
ClassDiagram.Attribut>> TimeKeeper.tstamp:Timestamp =>=>=> RelationalSchema.Column>> timekeeper.tstamp;
ClassDiagram.Attribut>> TimeEntity.id:long =>=>=> RelationalSchema.Column>> timeentity.id PRIMARY KEY;
ClassDiagram.Attribut>> TimeEntity.name:String =>=>=> RelationalSchema.Column>> timeentity.name;
ClassDiagram.Attribut>> TimeEntity.value:int =>=>=> RelationalSchema.Column>> timeentity.value;
ClassDiagram.Attribut>> TimeEntity.cal2timestamp:java.util.Calendar =>=>=> RelationalSchema.Column>> timeentity.cal2timestamp;
ClassDiagram.Attribut>> TimeEntity.cal2time:java.util.Calendar =>=>=> RelationalSchema.Column>> timeentity.cal2time;
ClassDiagram.Attribut>> TimeEntity.cal2date:java.util.Calendar =>=>=> RelationalSchema.Column>> timeentity.cal2date;
ClassDiagram.Attribut>> TimeEntity.udate2timestamp:java.util.Date =>=>=> RelationalSchema.Column>> timeentity.udate2timestamp;
ClassDiagram.Attribut>> TimeEntity.udate2time:java.util.Date =>=>=> RelationalSchema.Column>> timeentity.udate2time;
ClassDiagram.Attribut>> TimeEntity.udate2sdate:java.util.Date =>=>=> RelationalSchema.Column>> timeentity.udate2sdate;
ClassDiagram.Attribut>> Game.id:long =>=>=> RelationalSchema.Column>> game.id PRIMARY KEY;
ClassDiagram.Attribut>> Game.name:String =>=>=> RelationalSchema.Column>> game.name;
ClassDiagram.Attribut>> Application.id:long =>=>=> RelationalSchema.Column>> application.id PRIMARY KEY;
ClassDiagram.Attribut>> Chess.npiece:int =>=>=> RelationalSchema.Column>> pidstidmscrootentity.npiece;
ClassDiagram.Attribut>> Applicant.id:long =>=>=> RelationalSchema.Column>> applicant.id PRIMARY KEY;
ClassDiagram.Attribut>> Applicant.name:String =>=>=> RelationalSchema.Column>> applicant.name;
ClassDiagram.Attribut>> Magazine.id:long =>=>=> RelationalSchema.Column>> magazine.id PRIMARY KEY;
ClassDiagram.Attribut>> Magazine.name:String =>=>=> RelationalSchema.Column>> magazine.name;
ClassDiagram.Attribut>> Magazine.published:Date =>=>=> RelationalSchema.Column>> magazine.published;
ClassDiagram.Attribut>> Magazine.tspublished:Timestamp =>=>=> RelationalSchema.Column>> magazine.tspublished;
ClassDiagram.Attribut>> DtaSrc.serialversionuid:long =>=>=> RelationalSchema.Column>> dtasrc.serialversionuid;
ClassDiagram.Attribut>> DtaSrc.id:String =>=>=> RelationalSchema.Column>> dtasrc.id PRIMARY KEY;
ClassDiagram.Attribut>> DtaSrc.name:String =>=>=> RelationalSchema.Column>> dtasrc.name;
ClassDiagram.Attribut>> IndoorGame.nplayer:int =>=>=> RelationalSchema.Column>> pidstidmscrootentity.nplayer;
ClassDiagram.Attribut>> Binder.id:long =>=>=> RelationalSchema.Column>> binder.id PRIMARY KEY;
ClassDiagram.Attribut>> Binder.p1:int =>=>=> RelationalSchema.Column>> binder.p1;
ClassDiagram.Attribut>> Binder.p2:String =>=>=> RelationalSchema.Column>> binder.p2;
ClassDiagram.Attribut>> Binder.p3:double =>=>=> RelationalSchema.Column>> binder.p3;
ClassDiagram.Attribut>> Scrabble.ntile:int =>=>=> RelationalSchema.Column>> pidstidmscrootentity.ntile;
ClassDiagram.Attribut>> Customer.id:long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Publisher.id:long =>=>=> RelationalSchema.Column>> publisher.id PRIMARY KEY;
ClassDiagram.Attribut>> Publisher.name:String =>=>=> RelationalSchema.Column>> publisher.name;
ClassDiagram.Attribut>> Order.id:long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.amount:int =>=>=> RelationalSchema.Column>> order.amount;
ClassDiagram.Attribut>> DtaSrcField.serialversionuid:long =>=>=> RelationalSchema.Column>> dtasrcfield.serialversionuid;
ClassDiagram.Attribut>> DtaSrcField.id:String =>=>=> RelationalSchema.Column>> dtasrcfield.id PRIMARY KEY;
ClassDiagram.Attribut>> DtaSrcField.name:String =>=>=> RelationalSchema.Column>> dtasrcfield.name;
ClassDiagram.Attribut>> PartTimeEmployee.hourlywage:double =>=>=> RelationalSchema.Column>> parttimeemployee.hourlywage;
ClassDiagram.Attribut>> Supplier.sid:int =>=>=> RelationalSchema.Column>> supplier.sid PRIMARY KEY;
ClassDiagram.Attribut>> Supplier.name:String =>=>=> RelationalSchema.Column>> supplier.name;
ClassDiagram.Attribut>> Supplier.version:long =>=>=> RelationalSchema.Column>> supplier.version;
ClassDiagram.Attribut>> PartComposite.assemblycost:double =>=>=> RelationalSchema.Column>> partcomposite.assemblycost;
ClassDiagram.Attribut>> PartComposite.assemblytime:double =>=>=> RelationalSchema.Column>> partcomposite.assemblytime;
ClassDiagram.Attribut>> PartComposite.massincrement:double =>=>=> RelationalSchema.Column>> partcomposite.massincrement;
ClassDiagram.Attribut>> LineItem.id:String =>=>=> RelationalSchema.Column>> lineitem.id PRIMARY KEY;
ClassDiagram.Attribut>> LineItem.quantity:int =>=>=> RelationalSchema.Column>> lineitem.quantity;
ClassDiagram.Attribut>> Invoice.id:int =>=>=> RelationalSchema.Column>> invoice.id PRIMARY KEY;
ClassDiagram.Attribut>> Invoice.brandname:String =>=>=> RelationalSchema.Column>> invoice.brandname PRIMARY KEY;
ClassDiagram.Attribut>> Invoice.price:double =>=>=> RelationalSchema.Column>> invoice.price;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name PRIMARY KEY;
ClassDiagram.Attribut>> Usage.id:int =>=>=> RelationalSchema.Column>> usage.id PRIMARY KEY;
ClassDiagram.Attribut>> Usage.quantity:int =>=>=> RelationalSchema.Column>> usage.quantity;
ClassDiagram.Attribut>> Usage.version:long =>=>=> RelationalSchema.Column>> usage.version;
ClassDiagram.Attribut>> FullTimeEmployee.salary:double =>=>=> RelationalSchema.Column>> fulltimeemployee.salary;
ClassDiagram.Attribut>> Part.partno:int =>=>=> RelationalSchema.Column>> part.partno PRIMARY KEY;
ClassDiagram.Attribut>> Part.name:String =>=>=> RelationalSchema.Column>> part.name;
ClassDiagram.Attribut>> Part.inventory:int =>=>=> RelationalSchema.Column>> part.inventory;
ClassDiagram.Attribut>> Part.version:long =>=>=> RelationalSchema.Column>> part.version;
ClassDiagram.Attribut>> Employee.ssn:String =>=>=> RelationalSchema.Column>> employee.ssn PRIMARY KEY;
ClassDiagram.Attribut>> PartBase.cost:double =>=>=> RelationalSchema.Column>> partbase.cost;
ClassDiagram.Attribut>> PartBase.mass:double =>=>=> RelationalSchema.Column>> partbase.mass;
ClassDiagram.Attribut>> PartBase.backorder:int =>=>=> RelationalSchema.Column>> partbase.backorder;
ClassDiagram.Attribut>> MaxQueryMapEntity.id:int =>=>=> RelationalSchema.Column>> maxquerymapentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MaxQueryMapEntity.revision:int =>=>=> RelationalSchema.Column>> maxquerymapentity.revision;
ClassDiagram.Attribut>> MaxQueryMapEntity.selectcriteria:String =>=>=> RelationalSchema.Column>> maxquerymapentity.selectcriteria;
ClassDiagram.Attribut>> MaxQueryEntity.id:int =>=>=> RelationalSchema.Column>> maxqueryentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MaxQueryEntity.domainid:int =>=>=> RelationalSchema.Column>> maxqueryentity.domainid;
ClassDiagram.Attribut>> MaxQueryEntity.revision:int =>=>=> RelationalSchema.Column>> maxqueryentity.revision;
ClassDiagram.Attribut>> TableNameInXmlEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> tablenameinxmlentity.serialversionuid;
ClassDiagram.Attribut>> TableNameInXmlEntity.myid:int =>=>=> RelationalSchema.Column>> tablenameinxmlentity.myid PRIMARY KEY;
ClassDiagram.Attribut>> TableNameInXmlEntity.a,b,c:String =>=>=> RelationalSchema.Column>> tablenameinxmlentity.a,b,c;
ClassDiagram.Attribut>> PrecisionTestEntity.id:int =>=>=> RelationalSchema.Column>> precisiontestentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PrecisionTestEntity.version:int =>=>=> RelationalSchema.Column>> precisiontestentity.version;
ClassDiagram.Attribut>> PrecisionTestEntity.primdbl:double =>=>=> RelationalSchema.Column>> precisiontestentity.primdbl;
ClassDiagram.Attribut>> PrecisionTestEntity.dbl:Double =>=>=> RelationalSchema.Column>> precisiontestentity.dbl;
ClassDiagram.Attribut>> PrecisionTestEntity.GeneratedName:BigDecimal =>=>=> RelationalSchema.Column>> precisiontestentity.GeneratedName;
ClassDiagram.Attribut>> PrecisionTestEntity.primdblprecis:double =>=>=> RelationalSchema.Column>> precisiontestentity.primdblprecis;
ClassDiagram.Attribut>> PrecisionTestEntity.dblprecis:Double =>=>=> RelationalSchema.Column>> precisiontestentity.dblprecis;
ClassDiagram.Attribut>> PrecisionTestEntity.precis:BigDecimal =>=>=> RelationalSchema.Column>> precisiontestentity.precis;
ClassDiagram.Attribut>> PrecisionTestEntity.primdblscale:double =>=>=> RelationalSchema.Column>> precisiontestentity.primdblscale;
ClassDiagram.Attribut>> PrecisionTestEntity.dblscale:Double =>=>=> RelationalSchema.Column>> precisiontestentity.dblscale;
ClassDiagram.Attribut>> PrecisionTestEntity.scale:BigDecimal =>=>=> RelationalSchema.Column>> precisiontestentity.scale;
ClassDiagram.Attribut>> PrecisionTestEntity.primdblprecisscale:double =>=>=> RelationalSchema.Column>> precisiontestentity.primdblprecisscale;
ClassDiagram.Attribut>> PrecisionTestEntity.dblprecisscale:Double =>=>=> RelationalSchema.Column>> precisiontestentity.dblprecisscale;
ClassDiagram.Attribut>> PrecisionTestEntity.precisscale:BigDecimal =>=>=> RelationalSchema.Column>> precisiontestentity.precisscale;
ClassDiagram.Attribut>> Authority.id:Integer =>=>=> RelationalSchema.Column>> authority.id PRIMARY KEY;
ClassDiagram.Attribut>> Authority.authorityname:AuthorityValues =>=>=> RelationalSchema.Column>> authority.authorityname;
ClassDiagram.Attribut>> Child.id:long =>=>=> RelationalSchema.Column>> child.id PRIMARY KEY;
ClassDiagram.Attribut>> Child.name:String =>=>=> RelationalSchema.Column>> child.name;
ClassDiagram.Attribut>> Child.seqparentid:long =>=>=> RelationalSchema.Column>> child.seqparentid;
ClassDiagram.Attribut>> Child.autoparentid:long =>=>=> RelationalSchema.Column>> child.autoparentid;
ClassDiagram.Attribut>> Child.appparentid:long =>=>=> RelationalSchema.Column>> child.appparentid;
ClassDiagram.Attribut>> Address.phone:String =>=>=> RelationalSchema.Column>> address.phone PRIMARY KEY;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.zip:int =>=>=> RelationalSchema.Column>> address.zip;
ClassDiagram.Attribut>> ParentWithAppIdentity.id:long =>=>=> RelationalSchema.Column>> parentwithappidentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ParentWithAppIdentity.name:String =>=>=> RelationalSchema.Column>> parentwithappidentity.name;
ClassDiagram.Attribut>> ParentWithAutoIdentity.id:long =>=>=> RelationalSchema.Column>> parentwithautoidentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ParentWithAutoIdentity.name:String =>=>=> RelationalSchema.Column>> parentwithautoidentity.name;
ClassDiagram.Attribut>> Person.ssn:long =>=>=> RelationalSchema.Column>> person.ssn PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> ParentWithSequenceIdentity.id:long =>=>=> RelationalSchema.Column>> parentwithsequenceidentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ParentWithSequenceIdentity.name:String =>=>=> RelationalSchema.Column>> parentwithsequenceidentity.name;
ClassDiagram.Attribut>> EmbeddedIdEntity.id:EmbeddedIdClass =>=>=> RelationalSchema.Column>> embeddedidentity.id;
ClassDiagram.Attribut>> EmbeddedIdEntity.value:String =>=>=> RelationalSchema.Column>> embeddedidentity.value;
ClassDiagram.Attribut>> Flat2.basic2:String =>=>=> RelationalSchema.Column>> flat2.basic2;
ClassDiagram.Attribut>> TablePerClass1.pk:int =>=>=> RelationalSchema.Column>> tableperclass1.pk PRIMARY KEY;
ClassDiagram.Attribut>> TablePerClass1.basic:int =>=>=> RelationalSchema.Column>> tableperclass1.basic;
ClassDiagram.Attribut>> TablePerClass1.embed:EmbedValue =>=>=> RelationalSchema.Column>> tableperclass1.embed;
ClassDiagram.Attribut>> AnnoTest1.pk:Long =>=>=> RelationalSchema.Column>> annotest1.pk PRIMARY KEY;
ClassDiagram.Attribut>> AnnoTest1.version:Integer =>=>=> RelationalSchema.Column>> annotest1.version;
ClassDiagram.Attribut>> AnnoTest1.basic:int =>=>=> RelationalSchema.Column>> annotest1.basic;
ClassDiagram.Attribut>> AnnoTest1.trans:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> AnnoTest1.othertablebasic:int =>=>=> RelationalSchema.Column>> annotest1.othertablebasic;
ClassDiagram.Attribut>> AnnoTest1.blob:byte =>=>=> RelationalSchema.Column>> annotest1.blob;
ClassDiagram.Attribut>> AnnoTest1.serial:Object =>=>=> RelationalSchema.Column>> annotest1.serial;
ClassDiagram.Attribut>> AnnoTest1.clob:String =>=>=> RelationalSchema.Column>> annotest1.clob;
ClassDiagram.Attribut>> AnnoTest1.//un-annotatedenumshouldbepersistedbydefaultenumeration:InheritanceType =>=>=> RelationalSchema.Column>> annotest1.//un-annotatedenumshouldbepersistedbydefaultenumeration;
ClassDiagram.Attribut>> AnnoTest1.ordinalenumeration:InheritanceType =>=>=> RelationalSchema.Column>> annotest1.ordinalenumeration;
ClassDiagram.Attribut>> AnnoTest1.stringenumeration:InheritanceType =>=>=> RelationalSchema.Column>> annotest1.stringenumeration;
ClassDiagram.Attribut>> MultiColumnSecondaryVersionPC.id:long =>=>=> RelationalSchema.Column>> multicolumnsecondaryversionpc.id PRIMARY KEY;
ClassDiagram.Attribut>> MultiColumnSecondaryVersionPC.name:String =>=>=> RelationalSchema.Column>> multicolumnsecondaryversionpc.name;
ClassDiagram.Attribut>> MultiColumnSecondaryVersionPC.s1:String =>=>=> RelationalSchema.Column>> multicolumnsecondaryversionpc.s1;
ClassDiagram.Attribut>> MultiColumnSecondaryVersionPC.s2:String =>=>=> RelationalSchema.Column>> multicolumnsecondaryversionpc.s2;
ClassDiagram.Attribut>> MultiColumnVersionPC.id:long =>=>=> RelationalSchema.Column>> multicolumnversionpc.id PRIMARY KEY;
ClassDiagram.Attribut>> MultiColumnVersionPC.name:String =>=>=> RelationalSchema.Column>> multicolumnversionpc.name;
ClassDiagram.Attribut>> EmbedOwner.embed:EmbedValue =>=>=> RelationalSchema.Column>> embedowner.embed;
ClassDiagram.Attribut>> EmbedOwner.embedcollection:Set<EmbedValue> =>=>=> RelationalSchema.Column>> embedowner.embedcollection;
ClassDiagram.Attribut>> EmbedOwner.basic:String =>=>=> RelationalSchema.Column>> embedowner.basic;
ClassDiagram.Attribut>> EmbedOwner.pk:int =>=>=> RelationalSchema.Column>> embedowner.pk PRIMARY KEY;
ClassDiagram.Attribut>> NonstandardMappingEntity4.id:long =>=>=> RelationalSchema.Column>> nonstandardmappingentity4.id PRIMARY KEY;
ClassDiagram.Attribut>> NonstandardMappingEntity4.name:String =>=>=> RelationalSchema.Column>> nonstandardmappingentity4.name;
ClassDiagram.Attribut>> Generator.pk:int =>=>=> RelationalSchema.Column>> generator.pk PRIMARY KEY;
ClassDiagram.Attribut>> Generator.pk2:Integer =>=>=> RelationalSchema.Column>> generator.pk2 PRIMARY KEY;
ClassDiagram.Attribut>> Generator.pk3:long =>=>=> RelationalSchema.Column>> generator.pk3 PRIMARY KEY;
ClassDiagram.Attribut>> Generator.field:String =>=>=> RelationalSchema.Column>> generator.field;
ClassDiagram.Attribut>> UnenhancedMixedAccess.id:int =>=>=> RelationalSchema.Column>> unenhancedmixedaccess.id PRIMARY KEY;
ClassDiagram.Attribut>> NativeSequenceEntity.seq_name:String =>=>=> RelationalSchema.Column>> nativesequenceentity.seq_name;
ClassDiagram.Attribut>> NativeSequenceEntity.schema_name:String =>=>=> RelationalSchema.Column>> nativesequenceentity.schema_name;
ClassDiagram.Attribut>> NativeSequenceEntity.id:int =>=>=> RelationalSchema.Column>> nativesequenceentity.id PRIMARY KEY;
ClassDiagram.Attribut>> NativeSequenceEntity.name:String =>=>=> RelationalSchema.Column>> nativesequenceentity.name;
ClassDiagram.Attribut>> UnenhancedInappropriateTransient.id:int =>=>=> RelationalSchema.Column>> unenhancedinappropriatetransient.id PRIMARY KEY;
ClassDiagram.Attribut>> AnnoTest2.pk1:long =>=>=> RelationalSchema.Column>> annotest2.pk1 PRIMARY KEY;
ClassDiagram.Attribut>> AnnoTest2.pk2:String =>=>=> RelationalSchema.Column>> annotest2.pk2 PRIMARY KEY;
ClassDiagram.Attribut>> AnnoTest2.version:Date =>=>=> RelationalSchema.Column>> annotest2.version;
ClassDiagram.Attribut>> AnnoTest2.basic:String =>=>=> RelationalSchema.Column>> annotest2.basic;
ClassDiagram.Attribut>> EntityWithIndices.pk:Long =>=>=> RelationalSchema.Column>> entitywithindices.pk PRIMARY KEY;
ClassDiagram.Attribut>> EntityWithIndices.index1:String =>=>=> RelationalSchema.Column>> entitywithindices.index1;
ClassDiagram.Attribut>> EntityWithIndices.longname:String =>=>=> RelationalSchema.Column>> entitywithindices.longname;
ClassDiagram.Attribut>> EntityWithIndices.name:String =>=>=> RelationalSchema.Column>> entitywithindices.name;
ClassDiagram.Attribut>> EntityWithIndices.col2:String =>=>=> RelationalSchema.Column>> entitywithindices.col2;
ClassDiagram.Attribut>> EntityWithIndices.col3:String =>=>=> RelationalSchema.Column>> entitywithindices.col3;
ClassDiagram.Attribut>> NonstandardMappingEntity.custom:Point =>=>=> RelationalSchema.Column>> nonstandardmappingentity.custom;
ClassDiagram.Attribut>> NonstandardMappingEntity.stringcollection:List =>=>=> RelationalSchema.Column>> nonstandardmappingentity.stringcollection;
ClassDiagram.Attribut>> NonstandardMappingEntity.joincollection:List<NonstandardMappingEntity> =>=>=> RelationalSchema.Column>> nonstandardmappingentity.joincollection;
ClassDiagram.Attribut>> NonstandardMappingEntity.string:Map =>=>=> RelationalSchema.Column>> nonstandardmappingentity.string;
ClassDiagram.Attribut>> NonstandardMappingEntity.joinmap:Map<NonstandardMappingEntity,NonstandardMappingEntity> =>=>=> RelationalSchema.Column>> nonstandardmappingentity.joinmap;
ClassDiagram.Attribut>> NonstandardMappingEntity.mapping(nullindicatorattributename:ExtensionsEntity =>=>=> RelationalSchema.Column>> nonstandardmappingentity.mapping(nullindicatorattributename;
ClassDiagram.Attribut>> NonstandardMappingEntity.embedcollection:List<EmbedValue2> =>=>=> RelationalSchema.Column>> nonstandardmappingentity.embedcollection;
ClassDiagram.Attribut>> Flat1.pk:int =>=>=> RelationalSchema.Column>> flat1.pk PRIMARY KEY;
ClassDiagram.Attribut>> Flat1.version:int =>=>=> RelationalSchema.Column>> flat1.version;
ClassDiagram.Attribut>> Flat1.basic:int =>=>=> RelationalSchema.Column>> flat1.basic;
ClassDiagram.Attribut>> TablePerClass2.basic2:String =>=>=> RelationalSchema.Column>> tableperclass2.basic2;
ClassDiagram.Attribut>> ExtensionsEntity.uuid:String =>=>=> RelationalSchema.Column>> extensionsentity.uuid;
ClassDiagram.Attribut>> ExtensionsEntity.uuid:String =>=>=> RelationalSchema.Column>> extensionsentity.uuid;
ClassDiagram.Attribut>> ExtensionsEntity.uuidt4hex:String =>=>=> RelationalSchema.Column>> extensionsentity.uuidt4hex;
ClassDiagram.Attribut>> ExtensionsEntity.uuidt4:String =>=>=> RelationalSchema.Column>> extensionsentity.uuidt4;
ClassDiagram.Attribut>> ExtensionsEntity.seq:int =>=>=> RelationalSchema.Column>> extensionsentity.seq;
ClassDiagram.Attribut>> ExtensionsEntity.externalvalues:char =>=>=> RelationalSchema.Column>> extensionsentity.externalvalues;
ClassDiagram.Attribut>> ExtensionsEntity.externalizer:Class =>=>=> RelationalSchema.Column>> extensionsentity.externalizer;
ClassDiagram.Attribut>> AnnoTest3.basic2:int =>=>=> RelationalSchema.Column>> annotest3.basic2;
ClassDiagram.Attribut>> NonstandardMappingEntity3.id:long =>=>=> RelationalSchema.Column>> nonstandardmappingentity3.id PRIMARY KEY;
ClassDiagram.Attribut>> NonstandardMappingEntity3.embedval3s:List<EmbedValue3> =>=>=> RelationalSchema.Column>> nonstandardmappingentity3.embedval3s;
ClassDiagram.Attribut>> NonstandardMappingEntity3.embedval3:EmbedValue3 =>=>=> RelationalSchema.Column>> nonstandardmappingentity3.embedval3;
ClassDiagram.Attribut>> PropertyAccess1.id:int =>=>=> RelationalSchema.Column>> propertyaccess1.id PRIMARY KEY;
ClassDiagram.Attribut>> PropertyAccess1.name:String =>=>=> RelationalSchema.Column>> propertyaccess1.name;
ClassDiagram.Attribut>> PropertyAccess1.//thisentionallydoesnotmatchthegetternameval:int =>=>=> RelationalSchema.Column>> propertyaccess1.//thisentionallydoesnotmatchthegetternameval;
ClassDiagram.Attribut>> Department3.deptid:int =>=>=> RelationalSchema.Column>> department3.deptid PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Coll_Embed_Embed.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_coll_embed_embed.serialversionuid;
ClassDiagram.Attribut>> EntityA_Coll_Embed_Embed.id:Integer =>=>=> RelationalSchema.Column>> entitya_coll_embed_embed.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Coll_Embed_Embed.name:String =>=>=> RelationalSchema.Column>> entitya_coll_embed_embed.name;
ClassDiagram.Attribut>> EntityA_Coll_Embed_Embed.age:int =>=>=> RelationalSchema.Column>> entitya_coll_embed_embed.age;
ClassDiagram.Attribut>> EntityA_Coll_Embed_Embed.embeds:List<Embed_Embed> =>=>=> RelationalSchema.Column>> entitya_coll_embed_embed.embeds;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.GeneratedName:ContactInfo =>=>=> RelationalSchema.Column>> employee.GeneratedName;
ClassDiagram.Attribut>> Employee.GeneratedName:JobInfo =>=>=> RelationalSchema.Column>> employee.GeneratedName;
ClassDiagram.Attribut>> Employee.location:LocationDetails =>=>=> RelationalSchema.Column>> employee.location;
ClassDiagram.Attribut>> Employee.nicknames:Set<String> =>=>=> RelationalSchema.Column>> employee.nicknames;
ClassDiagram.Attribut>> EntityA_Embed_Complex.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_embed_complex.serialversionuid;
ClassDiagram.Attribut>> EntityA_Embed_Complex.id:Integer =>=>=> RelationalSchema.Column>> entitya_embed_complex.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed_Complex.name:String =>=>=> RelationalSchema.Column>> entitya_embed_complex.name;
ClassDiagram.Attribut>> EntityA_Embed_Complex.age:int =>=>=> RelationalSchema.Column>> entitya_embed_complex.age;
ClassDiagram.Attribut>> EntityA_Embed_Complex.nicknames:Set<String> =>=>=> RelationalSchema.Column>> entitya_embed_complex.nicknames;
ClassDiagram.Attribut>> EntityA_Embed_Complex.cr:List<CreditRating> =>=>=> RelationalSchema.Column>> entitya_embed_complex.cr;
ClassDiagram.Attribut>> EntityA_Embed_Complex.ts:List<Timestamp> =>=>=> RelationalSchema.Column>> entitya_embed_complex.ts;
ClassDiagram.Attribut>> EntityA_Embed_Complex.lobs:List<String> =>=>=> RelationalSchema.Column>> entitya_embed_complex.lobs;
ClassDiagram.Attribut>> EntityA_Embed_Complex.embed:Embed_Embed =>=>=> RelationalSchema.Column>> entitya_embed_complex.embed;
ClassDiagram.Attribut>> EntityA_Embed_Complex.embeds:List<Embed_Embed> =>=>=> RelationalSchema.Column>> entitya_embed_complex.embeds;
ClassDiagram.Attribut>> EntityA_Embed_Complex.embed1s:Set<Embed_ToOne> =>=>=> RelationalSchema.Column>> entitya_embed_complex.embed1s;
ClassDiagram.Attribut>> EntityA_Embed_Complex.transienttransientjavavalue:Integer =>=>=> RelationalSchema.Column>> entitya_embed_complex.transienttransientjavavalue;
ClassDiagram.Attribut>> EntityA_Embed_Complex.transientvalue:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Employee3.empid:int =>=>=> RelationalSchema.Column>> employee3.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee3.name:EmployeeName3 =>=>=> RelationalSchema.Column>> employee3.name;
ClassDiagram.Attribut>> Company2.id:int =>=>=> RelationalSchema.Column>> company2.id PRIMARY KEY;
ClassDiagram.Attribut>> Seller.id:int =>=>=> RelationalSchema.Column>> seller.id PRIMARY KEY;
ClassDiagram.Attribut>> Seller.name:String =>=>=> RelationalSchema.Column>> seller.name;
ClassDiagram.Attribut>> Division.id:int =>=>=> RelationalSchema.Column>> division.id PRIMARY KEY;
ClassDiagram.Attribut>> Division.name:String =>=>=> RelationalSchema.Column>> division.name;
ClassDiagram.Attribut>> Item3.id:int =>=>=> RelationalSchema.Column>> item3.id PRIMARY KEY;
ClassDiagram.Attribut>> Item3.images:Map<String,String> =>=>=> RelationalSchema.Column>> item3.images;
ClassDiagram.Attribut>> EntityA_Embed_ToOne.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_embed_toone.serialversionuid;
ClassDiagram.Attribut>> EntityA_Embed_ToOne.id:Integer =>=>=> RelationalSchema.Column>> entitya_embed_toone.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed_ToOne.name:String =>=>=> RelationalSchema.Column>> entitya_embed_toone.name;
ClassDiagram.Attribut>> EntityA_Embed_ToOne.age:int =>=>=> RelationalSchema.Column>> entitya_embed_toone.age;
ClassDiagram.Attribut>> EntityA_Embed_ToOne.embed:Embed_ToOne =>=>=> RelationalSchema.Column>> entitya_embed_toone.embed;
ClassDiagram.Attribut>> EntityA_Embed_Embed_ToMany.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_embed_embed_tomany.serialversionuid;
ClassDiagram.Attribut>> EntityA_Embed_Embed_ToMany.id:Integer =>=>=> RelationalSchema.Column>> entitya_embed_embed_tomany.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed_Embed_ToMany.name:String =>=>=> RelationalSchema.Column>> entitya_embed_embed_tomany.name;
ClassDiagram.Attribut>> EntityA_Embed_Embed_ToMany.age:int =>=>=> RelationalSchema.Column>> entitya_embed_embed_tomany.age;
ClassDiagram.Attribut>> EntityA_Embed_Embed_ToMany.embed:Embed_Embed_ToMany =>=>=> RelationalSchema.Column>> entitya_embed_embed_tomany.embed;
ClassDiagram.Attribut>> PhoneNumber.number:int =>=>=> RelationalSchema.Column>> phonenumber.number PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Integer.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_embed_coll_integer.serialversionuid;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Integer.id:Integer =>=>=> RelationalSchema.Column>> entitya_embed_coll_integer.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Integer.name:String =>=>=> RelationalSchema.Column>> entitya_embed_coll_integer.name;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Integer.age:int =>=>=> RelationalSchema.Column>> entitya_embed_coll_integer.age;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Integer.embed:Embed_Coll_Integer =>=>=> RelationalSchema.Column>> entitya_embed_coll_integer.embed;
ClassDiagram.Attribut>> Item2.id:int =>=>=> RelationalSchema.Column>> item2.id PRIMARY KEY;
ClassDiagram.Attribut>> Item2.images:Map<String,String> =>=>=> RelationalSchema.Column>> item2.images;
ClassDiagram.Attribut>> Department2.deptid:int =>=>=> RelationalSchema.Column>> department2.deptid PRIMARY KEY;
ClassDiagram.Attribut>> Topic.id:Integer =>=>=> RelationalSchema.Column>> topic.id PRIMARY KEY;
ClassDiagram.Attribut>> SubjectWithIdClass.serialversionuid:long =>=>=> RelationalSchema.Column>> subjectwithidclass.serialversionuid;
ClassDiagram.Attribut>> SubjectWithIdClass.subjectnummer:Integer =>=>=> RelationalSchema.Column>> subjectwithidclass.subjectnummer PRIMARY KEY;
ClassDiagram.Attribut>> SubjectWithIdClass.subjecttypecode:String =>=>=> RelationalSchema.Column>> subjectwithidclass.subjecttypecode PRIMARY KEY;
ClassDiagram.Attribut>> Subject.serialversionuid:long =>=>=> RelationalSchema.Column>> subject.serialversionuid;
ClassDiagram.Attribut>> Subject.key:SubjectKey =>=>=> RelationalSchema.Column>> subject.key;
ClassDiagram.Attribut>> EntityA_Embed_MappedToOne.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_embed_mappedtoone.serialversionuid;
ClassDiagram.Attribut>> EntityA_Embed_MappedToOne.id:Integer =>=>=> RelationalSchema.Column>> entitya_embed_mappedtoone.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed_MappedToOne.name:String =>=>=> RelationalSchema.Column>> entitya_embed_mappedtoone.name;
ClassDiagram.Attribut>> EntityA_Embed_MappedToOne.age:int =>=>=> RelationalSchema.Column>> entitya_embed_mappedtoone.age;
ClassDiagram.Attribut>> EntityA_Embed_MappedToOne.embed:Embed_MappedToOne =>=>=> RelationalSchema.Column>> entitya_embed_mappedtoone.embed;
ClassDiagram.Attribut>> EntityA_Embed.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_embed.serialversionuid;
ClassDiagram.Attribut>> EntityA_Embed.id:Integer =>=>=> RelationalSchema.Column>> entitya_embed.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed.name:String =>=>=> RelationalSchema.Column>> entitya_embed.name;
ClassDiagram.Attribut>> EntityA_Embed.age:int =>=>=> RelationalSchema.Column>> entitya_embed.age;
ClassDiagram.Attribut>> EntityA_Embed.GeneratedName:Embed =>=>=> RelationalSchema.Column>> entitya_embed.GeneratedName;
ClassDiagram.Attribut>> Employee2.emppk:EmployeePK2 =>=>=> RelationalSchema.Column>> employee2.emppk;
ClassDiagram.Attribut>> EntityB1.serialversionuid:long =>=>=> RelationalSchema.Column>> entityb1.serialversionuid;
ClassDiagram.Attribut>> EntityB1.id:int =>=>=> RelationalSchema.Column>> entityb1.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityB1.name:String =>=>=> RelationalSchema.Column>> entityb1.name;
ClassDiagram.Attribut>> Recliner.id:ReclinerId =>=>=> RelationalSchema.Column>> recliner.id;
ClassDiagram.Attribut>> Recliner.GeneratedName:Style =>=>=> RelationalSchema.Column>> recliner.GeneratedName;
ClassDiagram.Attribut>> Recliner.GeneratedName:Guy =>=>=> RelationalSchema.Column>> recliner.GeneratedName;
ClassDiagram.Attribut>> Recliner.holder:BeverageHolder =>=>=> RelationalSchema.Column>> recliner.holder;
ClassDiagram.Attribut>> EntityA_Embed_MappedToOneCascadeDelete.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_embed_mappedtoonecascadedelete.serialversionuid;
ClassDiagram.Attribut>> EntityA_Embed_MappedToOneCascadeDelete.id:Integer =>=>=> RelationalSchema.Column>> entitya_embed_mappedtoonecascadedelete.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed_MappedToOneCascadeDelete.name:String =>=>=> RelationalSchema.Column>> entitya_embed_mappedtoonecascadedelete.name;
ClassDiagram.Attribut>> EntityA_Embed_MappedToOneCascadeDelete.age:int =>=>=> RelationalSchema.Column>> entitya_embed_mappedtoonecascadedelete.age;
ClassDiagram.Attribut>> EntityA_Embed_MappedToOneCascadeDelete.embed:Embed_MappedToOneCascadeDelete =>=>=> RelationalSchema.Column>> entitya_embed_mappedtoonecascadedelete.embed;
ClassDiagram.Attribut>> EntityA_Embed_Single_Coll.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_embed_single_coll.serialversionuid;
ClassDiagram.Attribut>> EntityA_Embed_Single_Coll.embed:Embed_Single_Coll =>=>=> RelationalSchema.Column>> entitya_embed_single_coll.embed;
ClassDiagram.Attribut>> EntityA_Embed_Single_Coll.name:String =>=>=> RelationalSchema.Column>> entitya_embed_single_coll.name;
ClassDiagram.Attribut>> EntityA_Coll_Embed_ToOne.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_coll_embed_toone.serialversionuid;
ClassDiagram.Attribut>> EntityA_Coll_Embed_ToOne.//containsacollectionofembed1toone//embed1toonedoesnothaveanelementcollectionorto-manyrelationshipsid:Integer =>=>=> RelationalSchema.Column>> entitya_coll_embed_toone.//containsacollectionofembed1toone//embed1toonedoesnothaveanelementcollectionorto-manyrelationshipsid PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Coll_Embed_ToOne.name:String =>=>=> RelationalSchema.Column>> entitya_coll_embed_toone.name;
ClassDiagram.Attribut>> EntityA_Coll_Embed_ToOne.age:int =>=>=> RelationalSchema.Column>> entitya_coll_embed_toone.age;
ClassDiagram.Attribut>> EntityA_Coll_Embed_ToOne.//@persistentcollection(elementembedded:Set<Embed_ToOne> =>=>=> RelationalSchema.Column>> entitya_coll_embed_toone.//@persistentcollection(elementembedded;
ClassDiagram.Attribut>> Address.id:int =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.street:String =>=>=> RelationalSchema.Column>> address.street;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.GeneratedName:Zipcode =>=>=> RelationalSchema.Column>> address.GeneratedName;
ClassDiagram.Attribut>> ProgramManager.id:int =>=>=> RelationalSchema.Column>> programmanager.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.GeneratedName:ContactInfo =>=>=> RelationalSchema.Column>> employee.GeneratedName;
ClassDiagram.Attribut>> Employee.jobinfos:Map<String,JobInfo> =>=>=> RelationalSchema.Column>> employee.jobinfos;
ClassDiagram.Attribut>> PhoneNumber.phnumber:int =>=>=> RelationalSchema.Column>> phonenumber.phnumber PRIMARY KEY;
ClassDiagram.Attribut>> Person.ssn:String =>=>=> RelationalSchema.Column>> person.ssn PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.residences:List<Address> =>=>=> RelationalSchema.Column>> person.residences;
ClassDiagram.Attribut>> Person.nicknames:List<String> =>=>=> RelationalSchema.Column>> person.nicknames;
ClassDiagram.Attribut>> Customer.id:Integer =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.GeneratedName:Address =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> Project.id:int =>=>=> RelationalSchema.Column>> project.id PRIMARY KEY;
ClassDiagram.Attribut>> Project.description:String =>=>=> RelationalSchema.Column>> project.description;
ClassDiagram.Attribut>> PartTimeEmployee.wage:Float =>=>=> RelationalSchema.Column>> parttimeemployee.wage;
ClassDiagram.Attribut>> PropertyRecord.owner:PropertyOwner =>=>=> RelationalSchema.Column>> propertyrecord.owner;
ClassDiagram.Attribut>> PropertyRecord.parcels:Map<Address,PropertyInfo> =>=>=> RelationalSchema.Column>> propertyrecord.parcels;
ClassDiagram.Attribut>> PropertyRecord.description:String =>=>=> RelationalSchema.Column>> propertyrecord.description;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Embed.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_embed_coll_embed.serialversionuid;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Embed.id:Integer =>=>=> RelationalSchema.Column>> entitya_embed_coll_embed.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Embed.name:String =>=>=> RelationalSchema.Column>> entitya_embed_coll_embed.name;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Embed.age:int =>=>=> RelationalSchema.Column>> entitya_embed_coll_embed.age;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Embed.embed:Embed_Coll_Embed =>=>=> RelationalSchema.Column>> entitya_embed_coll_embed.embed;
ClassDiagram.Attribut>> Item4.id:int =>=>=> RelationalSchema.Column>> item4.id PRIMARY KEY;
ClassDiagram.Attribut>> Item4.images:Map<Catagory,FileName4> =>=>=> RelationalSchema.Column>> item4.images;
ClassDiagram.Attribut>> VicePresident.id:int =>=>=> RelationalSchema.Column>> vicepresident.id PRIMARY KEY;
ClassDiagram.Attribut>> VicePresident.name:String =>=>=> RelationalSchema.Column>> vicepresident.name;
ClassDiagram.Attribut>> EntityA_Embed_Embed.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_embed_embed.serialversionuid;
ClassDiagram.Attribut>> EntityA_Embed_Embed.id:Integer =>=>=> RelationalSchema.Column>> entitya_embed_embed.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed_Embed.name:String =>=>=> RelationalSchema.Column>> entitya_embed_embed.name;
ClassDiagram.Attribut>> EntityA_Embed_Embed.age:int =>=>=> RelationalSchema.Column>> entitya_embed_embed.age;
ClassDiagram.Attribut>> EntityA_Embed_Embed.embed:Embed_Embed =>=>=> RelationalSchema.Column>> entitya_embed_embed.embed;
ClassDiagram.Attribut>> Company1.id:int =>=>=> RelationalSchema.Column>> company1.id PRIMARY KEY;
ClassDiagram.Attribut>> EParent.idparent:Integer =>=>=> RelationalSchema.Column>> eparent.idparent PRIMARY KEY;
ClassDiagram.Attribut>> EParent.childto:EChild =>=>=> RelationalSchema.Column>> eparent.childto;
ClassDiagram.Attribut>> EGeneric.id:Integer =>=>=> RelationalSchema.Column>> egeneric.id PRIMARY KEY;
ClassDiagram.Attribut>> EGeneric.val:Long =>=>=> RelationalSchema.Column>> egeneric.val;
ClassDiagram.Attribut>> EGeneric.strval:String =>=>=> RelationalSchema.Column>> egeneric.strval;
ClassDiagram.Attribut>> Department1.deptid:int =>=>=> RelationalSchema.Column>> department1.deptid PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Map.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_embed_coll_map.serialversionuid;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Map.id:Integer =>=>=> RelationalSchema.Column>> entitya_embed_coll_map.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Map.name:String =>=>=> RelationalSchema.Column>> entitya_embed_coll_map.name;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Map.age:int =>=>=> RelationalSchema.Column>> entitya_embed_coll_map.age;
ClassDiagram.Attribut>> EntityA_Embed_Coll_Map.embed:Embed_Coll_Map =>=>=> RelationalSchema.Column>> entitya_embed_coll_map.embed;
ClassDiagram.Attribut>> Address.streetaddress,city,state:String =>=>=> RelationalSchema.Column>> address.streetaddress,city,state;
ClassDiagram.Attribut>> Address.GeneratedName:Geocode =>=>=> RelationalSchema.Column>> address.GeneratedName;
ClassDiagram.Attribut>> Address.zip:Integer =>=>=> RelationalSchema.Column>> address.zip;
ClassDiagram.Attribut>> A.serialversionuid:long =>=>=> RelationalSchema.Column>> a.serialversionuid;
ClassDiagram.Attribut>> A.id:String =>=>=> RelationalSchema.Column>> a.id PRIMARY KEY;
ClassDiagram.Attribut>> A.name:String =>=>=> RelationalSchema.Column>> a.name;
ClassDiagram.Attribut>> A.value:int =>=>=> RelationalSchema.Column>> a.value;
ClassDiagram.Attribut>> A.embeds:Set<Embed> =>=>=> RelationalSchema.Column>> a.embeds;
ClassDiagram.Attribut>> A.collectiondate:Collection<Date> =>=>=> RelationalSchema.Column>> a.collectiondate;
ClassDiagram.Attribut>> EntityA_Embed_ToMany.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_embed_tomany.serialversionuid;
ClassDiagram.Attribut>> EntityA_Embed_ToMany.id:Integer =>=>=> RelationalSchema.Column>> entitya_embed_tomany.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Embed_ToMany.name:String =>=>=> RelationalSchema.Column>> entitya_embed_tomany.name;
ClassDiagram.Attribut>> EntityA_Embed_ToMany.age:int =>=>=> RelationalSchema.Column>> entitya_embed_tomany.age;
ClassDiagram.Attribut>> EntityA_Embed_ToMany.embed:Embed_ToMany =>=>=> RelationalSchema.Column>> entitya_embed_tomany.embed;
ClassDiagram.Attribut>> ParkingSpot.id:int =>=>=> RelationalSchema.Column>> parkingspot.id PRIMARY KEY;
ClassDiagram.Attribut>> ParkingSpot.garage:String =>=>=> RelationalSchema.Column>> parkingspot.garage;
ClassDiagram.Attribut>> Employee1.empid:int =>=>=> RelationalSchema.Column>> employee1.empid PRIMARY KEY;
ClassDiagram.Attribut>> Book.id:int =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.isbn:long =>=>=> RelationalSchema.Column>> book.isbn;
ClassDiagram.Attribut>> Book.listings:Set<Listing> =>=>=> RelationalSchema.Column>> book.listings;
ClassDiagram.Attribut>> EChild.idchild:Long =>=>=> RelationalSchema.Column>> echild.idchild PRIMARY KEY;
ClassDiagram.Attribut>> EChild.missing:String =>=>=> RelationalSchema.Column>> echild.missing;
ClassDiagram.Attribut>> ProgramManager.id:int =>=>=> RelationalSchema.Column>> programmanager.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityB2.serialversionuid:long =>=>=> RelationalSchema.Column>> entityb2.serialversionuid;
ClassDiagram.Attribut>> EntityB2.id:int =>=>=> RelationalSchema.Column>> entityb2.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityB2.name:String =>=>=> RelationalSchema.Column>> entityb2.name;
ClassDiagram.Attribut>> Item1.id:int =>=>=> RelationalSchema.Column>> item1.id PRIMARY KEY;
ClassDiagram.Attribut>> Item1.images:Map =>=>=> RelationalSchema.Column>> item1.images;
ClassDiagram.Attribut>> Item5.id:int =>=>=> RelationalSchema.Column>> item5.id PRIMARY KEY;
ClassDiagram.Attribut>> Item5.images:Map<Timestamp,FileName4> =>=>=> RelationalSchema.Column>> item5.images;
ClassDiagram.Attribut>> EntityA_Coll_String.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya_coll_string.serialversionuid;
ClassDiagram.Attribut>> EntityA_Coll_String.id:Integer =>=>=> RelationalSchema.Column>> entitya_coll_string.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA_Coll_String.name:String =>=>=> RelationalSchema.Column>> entitya_coll_string.name;
ClassDiagram.Attribut>> EntityA_Coll_String.age:int =>=>=> RelationalSchema.Column>> entitya_coll_string.age;
ClassDiagram.Attribut>> EntityA_Coll_String.nicknames:Set<String> =>=>=> RelationalSchema.Column>> entitya_coll_string.nicknames;
ClassDiagram.Attribut>> EntityA_Coll_String.cr:List<CreditRating> =>=>=> RelationalSchema.Column>> entitya_coll_string.cr;
ClassDiagram.Attribut>> EntityA_Coll_String.ts:List<Timestamp> =>=>=> RelationalSchema.Column>> entitya_coll_string.ts;
ClassDiagram.Attribut>> EntityA_Coll_String.lobs:List<String> =>=>=> RelationalSchema.Column>> entitya_coll_string.lobs;
ClassDiagram.Attribut>> Dependent4.serialversionuid:long =>=>=> RelationalSchema.Column>> dependent4.serialversionuid;
ClassDiagram.Attribut>> Dependent4.id:long =>=>=> RelationalSchema.Column>> dependent4.id PRIMARY KEY;
ClassDiagram.Attribut>> Dependent4.parent:Employee4 =>=>=> RelationalSchema.Column>> dependent4.parent PRIMARY KEY;
ClassDiagram.Attribut>> MedicalHistory1.name:String =>=>=> RelationalSchema.Column>> medicalhistory1.name;
ClassDiagram.Attribut>> MedicalHistory1.id:PersonId1 =>=>=> RelationalSchema.Column>> medicalhistory1.id;
ClassDiagram.Attribut>> Employee5.serialversionuid:long =>=>=> RelationalSchema.Column>> employee5.serialversionuid;
ClassDiagram.Attribut>> Employee5.empid:EmployeeId5 =>=>=> RelationalSchema.Column>> employee5.empid;
ClassDiagram.Attribut>> Book1.serialversionuid:long =>=>=> RelationalSchema.Column>> book1.serialversionuid;
ClassDiagram.Attribut>> Book1.bid:BookId1 =>=>=> RelationalSchema.Column>> book1.bid;
ClassDiagram.Attribut>> Book1.author:String =>=>=> RelationalSchema.Column>> book1.author;
ClassDiagram.Attribut>> Employee1.empid:int =>=>=> RelationalSchema.Column>> employee1.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee1.name:String =>=>=> RelationalSchema.Column>> employee1.name;
ClassDiagram.Attribut>> Line1.serialversionuid:long =>=>=> RelationalSchema.Column>> line1.serialversionuid;
ClassDiagram.Attribut>> Line1.lid:LineId1 =>=>=> RelationalSchema.Column>> line1.lid;
ClassDiagram.Attribut>> Library1.serialversionuid:long =>=>=> RelationalSchema.Column>> library1.serialversionuid;
ClassDiagram.Attribut>> Library1.name:String =>=>=> RelationalSchema.Column>> library1.name PRIMARY KEY;
ClassDiagram.Attribut>> Library1.location:String =>=>=> RelationalSchema.Column>> library1.location;
ClassDiagram.Attribut>> Book.serialversionuid:long =>=>=> RelationalSchema.Column>> book.serialversionuid;
ClassDiagram.Attribut>> Book.name:String =>=>=> RelationalSchema.Column>> book.name PRIMARY KEY;
ClassDiagram.Attribut>> Book.GeneratedName:Library =>=>=> RelationalSchema.Column>> book.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Book.author:String =>=>=> RelationalSchema.Column>> book.author;
ClassDiagram.Attribut>> Person2.ssn:long =>=>=> RelationalSchema.Column>> person2.ssn PRIMARY KEY;
ClassDiagram.Attribut>> Person2.name:String =>=>=> RelationalSchema.Column>> person2.name;
ClassDiagram.Attribut>> Parent3.pid:int =>=>=> RelationalSchema.Column>> parent3.pid PRIMARY KEY;
ClassDiagram.Attribut>> Parent3.name:String =>=>=> RelationalSchema.Column>> parent3.name;
ClassDiagram.Attribut>> Person3.firstname:String =>=>=> RelationalSchema.Column>> person3.firstname PRIMARY KEY;
ClassDiagram.Attribut>> Person3.lastname:String =>=>=> RelationalSchema.Column>> person3.lastname PRIMARY KEY;
ClassDiagram.Attribut>> Dependent5.serialversionuid:long =>=>=> RelationalSchema.Column>> dependent5.serialversionuid;
ClassDiagram.Attribut>> Dependent5.name:String =>=>=> RelationalSchema.Column>> dependent5.name PRIMARY KEY;
ClassDiagram.Attribut>> Dependent5.emp:Employee5 =>=>=> RelationalSchema.Column>> dependent5.emp PRIMARY KEY;
ClassDiagram.Attribut>> Employee4.id:long =>=>=> RelationalSchema.Column>> employee4.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee4.age:int =>=>=> RelationalSchema.Column>> employee4.age;
ClassDiagram.Attribut>> Page.serialversionuid:long =>=>=> RelationalSchema.Column>> page.serialversionuid;
ClassDiagram.Attribut>> Page.number:int =>=>=> RelationalSchema.Column>> page.number PRIMARY KEY;
ClassDiagram.Attribut>> Page.GeneratedName:Book =>=>=> RelationalSchema.Column>> page.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> MedicalHistory4.name:String =>=>=> RelationalSchema.Column>> medicalhistory4.name;
ClassDiagram.Attribut>> MedicalHistory4.patient:Person4 =>=>=> RelationalSchema.Column>> medicalhistory4.patient PRIMARY KEY;
ClassDiagram.Attribut>> Dependent1.id:DependentId1 =>=>=> RelationalSchema.Column>> dependent1.id;
ClassDiagram.Attribut>> Beneficiary.serialversionuid:long =>=>=> RelationalSchema.Column>> beneficiary.serialversionuid;
ClassDiagram.Attribut>> Beneficiary.annuityholderid:String =>=>=> RelationalSchema.Column>> beneficiary.annuityholderid;
ClassDiagram.Attribut>> Beneficiary.firstname:String =>=>=> RelationalSchema.Column>> beneficiary.firstname;
ClassDiagram.Attribut>> Beneficiary.lastname:String =>=>=> RelationalSchema.Column>> beneficiary.lastname;
ClassDiagram.Attribut>> Beneficiary.relationship:String =>=>=> RelationalSchema.Column>> beneficiary.relationship;
ClassDiagram.Attribut>> Beneficiary.id:String =>=>=> RelationalSchema.Column>> beneficiary.id;
ClassDiagram.Attribut>> Person1.id:PersonId1 =>=>=> RelationalSchema.Column>> person1.id;
ClassDiagram.Attribut>> Library.serialversionuid:long =>=>=> RelationalSchema.Column>> library.serialversionuid;
ClassDiagram.Attribut>> Library.name:String =>=>=> RelationalSchema.Column>> library.name PRIMARY KEY;
ClassDiagram.Attribut>> Library.location:String =>=>=> RelationalSchema.Column>> library.location;
ClassDiagram.Attribut>> Dependent5a.serialversionuid:long =>=>=> RelationalSchema.Column>> dependent5a.serialversionuid;
ClassDiagram.Attribut>> Dependent5a.name:String =>=>=> RelationalSchema.Column>> dependent5a.name PRIMARY KEY;
ClassDiagram.Attribut>> Dependent5a.emp:Employee5 =>=>=> RelationalSchema.Column>> dependent5a.emp PRIMARY KEY;
ClassDiagram.Attribut>> MedicalHistory2.id:long =>=>=> RelationalSchema.Column>> medicalhistory2.id PRIMARY KEY;
ClassDiagram.Attribut>> MedicalHistory2.name:String =>=>=> RelationalSchema.Column>> medicalhistory2.name;
ClassDiagram.Attribut>> Employee2.empid:EmployeeId2 =>=>=> RelationalSchema.Column>> employee2.empid;
ClassDiagram.Attribut>> BeneContact.serialversionuid:long =>=>=> RelationalSchema.Column>> benecontact.serialversionuid;
ClassDiagram.Attribut>> BeneContact.id:BeneContactId =>=>=> RelationalSchema.Column>> benecontact.id;
ClassDiagram.Attribut>> BeneContact.GeneratedName:Beneficiary =>=>=> RelationalSchema.Column>> benecontact.GeneratedName;
ClassDiagram.Attribut>> BeneContact.email:String =>=>=> RelationalSchema.Column>> benecontact.email;
ClassDiagram.Attribut>> BeneContact.phone:String =>=>=> RelationalSchema.Column>> benecontact.phone;
ClassDiagram.Attribut>> BeneContact.lastup:Date =>=>=> RelationalSchema.Column>> benecontact.lastup;
ClassDiagram.Attribut>> BeneContact.version:int =>=>=> RelationalSchema.Column>> benecontact.version;
ClassDiagram.Attribut>> Dependent3.id:DependentId3 =>=>=> RelationalSchema.Column>> dependent3.id;
ClassDiagram.Attribut>> MedicalHistory3.name:String =>=>=> RelationalSchema.Column>> medicalhistory3.name;
ClassDiagram.Attribut>> MedicalHistory3.patient:Person3 =>=>=> RelationalSchema.Column>> medicalhistory3.patient PRIMARY KEY;
ClassDiagram.Attribut>> Employee3.empid:int =>=>=> RelationalSchema.Column>> employee3.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee3.name:String =>=>=> RelationalSchema.Column>> employee3.name;
ClassDiagram.Attribut>> Dependent2.id:DependentId2 =>=>=> RelationalSchema.Column>> dependent2.id;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.GeneratedName:EmpType =>=>=> RelationalSchema.Column>> employee.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> PhoneNumber.phnumber:int =>=>=> RelationalSchema.Column>> phonenumber.phnumber PRIMARY KEY;
ClassDiagram.Attribut>> Page1.serialversionuid:long =>=>=> RelationalSchema.Column>> page1.serialversionuid;
ClassDiagram.Attribut>> Page1.pid:PageId1 =>=>=> RelationalSchema.Column>> page1.pid;
ClassDiagram.Attribut>> Person4.id:PersonId4 =>=>=> RelationalSchema.Column>> person4.id;
ClassDiagram.Attribut>> EntityWithEnum.myenum:SampleEnum =>=>=> RelationalSchema.Column>> entitywithenum.myenum;
ClassDiagram.Attribut>> NoNoArgs.name:String =>=>=> RelationalSchema.Column>> nonoargs.name;
ClassDiagram.Attribut>> ManagedInverseTestInstance.id:long =>=>=> RelationalSchema.Column>> managedinversetestinstance.id PRIMARY KEY;
ClassDiagram.Attribut>> ManagedInverseTestInstance.version:int =>=>=> RelationalSchema.Column>> managedinversetestinstance.version;
ClassDiagram.Attribut>> ManagedInverseTestInstance.field:String =>=>=> RelationalSchema.Column>> managedinversetestinstance.field;
ClassDiagram.Attribut>> BasicSubclassInstance.id:long =>=>=> RelationalSchema.Column>> basicsubclassinstance.id PRIMARY KEY;
ClassDiagram.Attribut>> BasicSubclassInstance.version:int =>=>=> RelationalSchema.Column>> basicsubclassinstance.version;
ClassDiagram.Attribut>> BasicSubclassInstance.field:String =>=>=> RelationalSchema.Column>> basicsubclassinstance.field;
ClassDiagram.Attribut>> DetachablePC.serialversionuid:long =>=>=> RelationalSchema.Column>> detachablepc.serialversionuid;
ClassDiagram.Attribut>> DetachablePC.id:long =>=>=> RelationalSchema.Column>> detachablepc.id;
ClassDiagram.Attribut>> DetachablePC.val:String =>=>=> RelationalSchema.Column>> detachablepc.val;
ClassDiagram.Attribut>> Entity1.serialversionuid:long =>=>=> RelationalSchema.Column>> entity1.serialversionuid;
ClassDiagram.Attribut>> Entity1.pk:long =>=>=> RelationalSchema.Column>> entity1.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity1.field:String =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.field:int =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.versionfield:int =>=>=> RelationalSchema.Column>> entity1.versionfield;
ClassDiagram.Attribut>> No2NoArgs.name:String =>=>=> RelationalSchema.Column>> no2noargs.name;
ClassDiagram.Attribut>> IDOwningClassTestEntity.pk:EmbeddableEntityWithIDAnnotation =>=>=> RelationalSchema.Column>> idowningclasstestentity.pk;
ClassDiagram.Attribut>> IDOwningClassTestEntity.name:String =>=>=> RelationalSchema.Column>> idowningclasstestentity.name;
ClassDiagram.Attribut>> BaseEntity._id:long =>=>=> RelationalSchema.Column>> baseentity._id;
ClassDiagram.Attribut>> BaseEntity._version:int =>=>=> RelationalSchema.Column>> baseentity._version;
ClassDiagram.Attribut>> BaseEntity._s:String =>=>=> RelationalSchema.Column>> baseentity._s;
ClassDiagram.Attribut>> BaseEntity._:short =>=>=> RelationalSchema.Column>> baseentity._;
ClassDiagram.Attribut>> SubclassClone.GeneratedName:String =>=>=> RelationalSchema.Column>> subclassclone.GeneratedName;
ClassDiagram.Attribut>> PCClone.GeneratedName:String =>=>=> RelationalSchema.Column>> pcclone.GeneratedName;
ClassDiagram.Attribut>> No3NoArgs.name:String =>=>=> RelationalSchema.Column>> no3noargs.name;
ClassDiagram.Attribut>> BackingFieldNameMismatchInstance.//sincewedon'thaveasetter_id:long =>=>=> RelationalSchema.Column>> backingfieldnamemismatchinstance.//sincewedon'thaveasetter_id;
ClassDiagram.Attribut>> BackingFieldNameMismatchInstance._version:int =>=>=> RelationalSchema.Column>> backingfieldnamemismatchinstance._version;
ClassDiagram.Attribut>> BackingFieldNameMismatchInstance._s:String =>=>=> RelationalSchema.Column>> backingfieldnamemismatchinstance._s;
ClassDiagram.Attribut>> DerivedEntity._i:int =>=>=> RelationalSchema.Column>> derivedentity._i;
ClassDiagram.Attribut>> DerivedEntity._basic:BasicSubclassInstance =>=>=> RelationalSchema.Column>> derivedentity._basic;
ClassDiagram.Attribut>> DetachableVersionedPC.serialversionuid:long =>=>=> RelationalSchema.Column>> detachableversionedpc.serialversionuid;
ClassDiagram.Attribut>> DetachableVersionedPC.id:long =>=>=> RelationalSchema.Column>> detachableversionedpc.id;
ClassDiagram.Attribut>> DetachableVersionedPC.val:String =>=>=> RelationalSchema.Column>> detachableversionedpc.val;
ClassDiagram.Attribut>> DetachableVersionedPC.version:int =>=>=> RelationalSchema.Column>> detachableversionedpc.version;
ClassDiagram.Attribut>> NoClone.GeneratedName:String =>=>=> RelationalSchema.Column>> noclone.GeneratedName;
ClassDiagram.Attribut>> ManagedInverseTestInstance2.id:long =>=>=> RelationalSchema.Column>> managedinversetestinstance2.id PRIMARY KEY;
ClassDiagram.Attribut>> ManagedInverseTestInstance2.version:int =>=>=> RelationalSchema.Column>> managedinversetestinstance2.version;
ClassDiagram.Attribut>> ManagedInverseTestInstance2.field:String =>=>=> RelationalSchema.Column>> managedinversetestinstance2.field;
ClassDiagram.Attribut>> Entity2.serialversionuid:long =>=>=> RelationalSchema.Column>> entity2.serialversionuid;
ClassDiagram.Attribut>> Entity2.pk:long =>=>=> RelationalSchema.Column>> entity2.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity2.field:String =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> Entity2.field:int =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> Invoice.id:int =>=>=> RelationalSchema.Column>> invoice.id PRIMARY KEY;
ClassDiagram.Attribut>> Invoice.brandname:String =>=>=> RelationalSchema.Column>> invoice.brandname PRIMARY KEY;
ClassDiagram.Attribut>> Invoice.price:double =>=>=> RelationalSchema.Column>> invoice.price;
ClassDiagram.Attribut>> EntityC_B1M_Map_JT.id:long =>=>=> RelationalSchema.Column>> entityc_b1m_map_jt.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC_B1M_Map_JT.name:String =>=>=> RelationalSchema.Column>> entityc_b1m_map_jt.name;
ClassDiagram.Attribut>> EntityA.name:String =>=>=> RelationalSchema.Column>> entitya.name;
ClassDiagram.Attribut>> Bi_1ToM_JT.bid:long =>=>=> RelationalSchema.Column>> bi_1tom_jt.bid PRIMARY KEY;
ClassDiagram.Attribut>> Bi_1ToM_JT.name:String =>=>=> RelationalSchema.Column>> bi_1tom_jt.name;
ClassDiagram.Attribut>> EntityC_U1M_Map_FK.id:long =>=>=> RelationalSchema.Column>> entityc_u1m_map_fk.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC_U1M_Map_FK.name:String =>=>=> RelationalSchema.Column>> entityc_u1m_map_fk.name;
ClassDiagram.Attribut>> EntityC_B11JT.id:long =>=>=> RelationalSchema.Column>> entityc_b11jt.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC_B11JT.name:String =>=>=> RelationalSchema.Column>> entityc_b11jt.name;
ClassDiagram.Attribut>> EntityC_U1MFK.id:long =>=>=> RelationalSchema.Column>> entityc_u1mfk.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC_U1MFK.name:String =>=>=> RelationalSchema.Column>> entityc_u1mfk.name;
ClassDiagram.Attribut>> EntityC_U1M_Map_RelKey_FK.id:long =>=>=> RelationalSchema.Column>> entityc_u1m_map_relkey_fk.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC_U1M_Map_RelKey_FK.name:String =>=>=> RelationalSchema.Column>> entityc_u1m_map_relkey_fk.name;
ClassDiagram.Attribut>> Uni_1ToM_Map_FK.id:long =>=>=> RelationalSchema.Column>> uni_1tom_map_fk.id PRIMARY KEY;
ClassDiagram.Attribut>> Uni_1ToM_Map_FK.name:String =>=>=> RelationalSchema.Column>> uni_1tom_map_fk.name;
ClassDiagram.Attribut>> Bi_1To1_JT.id:long =>=>=> RelationalSchema.Column>> bi_1to1_jt.id PRIMARY KEY;
ClassDiagram.Attribut>> Bi_1To1_JT.name:String =>=>=> RelationalSchema.Column>> bi_1to1_jt.name;
ClassDiagram.Attribut>> SimpleEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> simpleentity.serialversionuid;
ClassDiagram.Attribut>> SimpleEntity.named_query_with_positional_params:String =>=>=> RelationalSchema.Column>> simpleentity.named_query_with_positional_params;
ClassDiagram.Attribut>> SimpleEntity.named_query_with_named_params:String =>=>=> RelationalSchema.Column>> simpleentity.named_query_with_named_params;
ClassDiagram.Attribut>> SimpleEntity.id:long =>=>=> RelationalSchema.Column>> simpleentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleEntity.name:String =>=>=> RelationalSchema.Column>> simpleentity.name;
ClassDiagram.Attribut>> SimpleEntity.value:String =>=>=> RelationalSchema.Column>> simpleentity.value;
ClassDiagram.Attribut>> FullTimeEmployee.salary:double =>=>=> RelationalSchema.Column>> fulltimeemployee.salary;
ClassDiagram.Attribut>> Uni_1ToM_Map_RelKey_FK.id:long =>=>=> RelationalSchema.Column>> uni_1tom_map_relkey_fk.id PRIMARY KEY;
ClassDiagram.Attribut>> Uni_1ToM_Map_RelKey_FK.name:String =>=>=> RelationalSchema.Column>> uni_1tom_map_relkey_fk.name;
ClassDiagram.Attribut>> EntityC_B1MFK.id:long =>=>=> RelationalSchema.Column>> entityc_b1mfk.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC_B1MFK.name:String =>=>=> RelationalSchema.Column>> entityc_b1mfk.name;
ClassDiagram.Attribut>> EntityC_U11JT.id:long =>=>=> RelationalSchema.Column>> entityc_u11jt.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC_U11JT.name:String =>=>=> RelationalSchema.Column>> entityc_u11jt.name;
ClassDiagram.Attribut>> LineItem.id:String =>=>=> RelationalSchema.Column>> lineitem.id PRIMARY KEY;
ClassDiagram.Attribut>> LineItem.quantity:int =>=>=> RelationalSchema.Column>> lineitem.quantity;
ClassDiagram.Attribut>> Uni_1ToM_FK.id:long =>=>=> RelationalSchema.Column>> uni_1tom_fk.id PRIMARY KEY;
ClassDiagram.Attribut>> Uni_1ToM_FK.name:String =>=>=> RelationalSchema.Column>> uni_1tom_fk.name;
ClassDiagram.Attribut>> Uni_1To1_JT.id:long =>=>=> RelationalSchema.Column>> uni_1to1_jt.id PRIMARY KEY;
ClassDiagram.Attribut>> Uni_1To1_JT.name:String =>=>=> RelationalSchema.Column>> uni_1to1_jt.name;
ClassDiagram.Attribut>> Bi_1ToM_Map_RelKey_JT.id:long =>=>=> RelationalSchema.Column>> bi_1tom_map_relkey_jt.id PRIMARY KEY;
ClassDiagram.Attribut>> Bi_1ToM_Map_RelKey_JT.name:String =>=>=> RelationalSchema.Column>> bi_1tom_map_relkey_jt.name;
ClassDiagram.Attribut>> EntityC_B1MJT.cid:long =>=>=> RelationalSchema.Column>> entityc_b1mjt.cid PRIMARY KEY;
ClassDiagram.Attribut>> EntityC_B1MJT.name:String =>=>=> RelationalSchema.Column>> entityc_b1mjt.name;
ClassDiagram.Attribut>> EntityC_B1M_Map_RelKey_JT.id:long =>=>=> RelationalSchema.Column>> entityc_b1m_map_relkey_jt.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC_B1M_Map_RelKey_JT.name:String =>=>=> RelationalSchema.Column>> entityc_b1m_map_relkey_jt.name;
ClassDiagram.Attribut>> EntityB.id:int =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityB.name:String =>=>=> RelationalSchema.Column>> entityb.name;
ClassDiagram.Attribut>> Uni_1ToM_JT.id:long =>=>=> RelationalSchema.Column>> uni_1tom_jt.id PRIMARY KEY;
ClassDiagram.Attribut>> Uni_1ToM_JT.name:String =>=>=> RelationalSchema.Column>> uni_1tom_jt.name;
ClassDiagram.Attribut>> PartTimeEmployee.hourlywage:double =>=>=> RelationalSchema.Column>> parttimeemployee.hourlywage;
ClassDiagram.Attribut>> Uni_MTo1_JT.id:long =>=>=> RelationalSchema.Column>> uni_mto1_jt.id PRIMARY KEY;
ClassDiagram.Attribut>> Uni_MTo1_JT.name:String =>=>=> RelationalSchema.Column>> uni_mto1_jt.name;
ClassDiagram.Attribut>> EntityC.id:long =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.name:String =>=>=> RelationalSchema.Column>> entityc.name;
ClassDiagram.Attribut>> Bi_1ToM_FK.id:long =>=>=> RelationalSchema.Column>> bi_1tom_fk.id PRIMARY KEY;
ClassDiagram.Attribut>> Bi_1ToM_FK.name:String =>=>=> RelationalSchema.Column>> bi_1tom_fk.name;
ClassDiagram.Attribut>> Employee.ssn:String =>=>=> RelationalSchema.Column>> employee.ssn PRIMARY KEY;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name PRIMARY KEY;
ClassDiagram.Attribut>> Bi_1ToM_Map_JT.id:long =>=>=> RelationalSchema.Column>> bi_1tom_map_jt.id PRIMARY KEY;
ClassDiagram.Attribut>> Bi_1ToM_Map_JT.name:String =>=>=> RelationalSchema.Column>> bi_1tom_map_jt.name;
ClassDiagram.Attribut>> SimpleEntity2.id:long =>=>=> RelationalSchema.Column>> simpleentity2.id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleEntity2.name:String =>=>=> RelationalSchema.Column>> simpleentity2.name;
ClassDiagram.Attribut>> SimpleEntity2.value:String =>=>=> RelationalSchema.Column>> simpleentity2.value;
ClassDiagram.Attribut>> TimestampedEntity.id:int =>=>=> RelationalSchema.Column>> timestampedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> TimestampedEntity.version:int =>=>=> RelationalSchema.Column>> timestampedentity.version;
ClassDiagram.Attribut>> TimestampedEntity.noninsertablenonnullable:Date =>=>=> RelationalSchema.Column>> timestampedentity.noninsertablenonnullable;
ClassDiagram.Attribut>> TimestampedEntity.nonupdatablenonnullable:Date =>=>=> RelationalSchema.Column>> timestampedentity.nonupdatablenonnullable;
ClassDiagram.Attribut>> NullValues.id:long =>=>=> RelationalSchema.Column>> nullvalues.id PRIMARY KEY;
ClassDiagram.Attribut>> NullValues.nullable:Integer =>=>=> RelationalSchema.Column>> nullvalues.nullable;
ClassDiagram.Attribut>> NullValues.notnullable:Integer =>=>=> RelationalSchema.Column>> nullvalues.notnullable;
ClassDiagram.Attribut>> NullValues.optional:Integer =>=>=> RelationalSchema.Column>> nullvalues.optional;
ClassDiagram.Attribut>> NullValues.notoptional:Integer =>=>=> RelationalSchema.Column>> nullvalues.notoptional;
ClassDiagram.Attribut>> NullValues.nullableblob:BlobValue =>=>=> RelationalSchema.Column>> nullvalues.nullableblob;
ClassDiagram.Attribut>> NullValues.notnullableblob:BlobValue =>=>=> RelationalSchema.Column>> nullvalues.notnullableblob;
ClassDiagram.Attribut>> NullValues.optionalblob:BlobValue =>=>=> RelationalSchema.Column>> nullvalues.optionalblob;
ClassDiagram.Attribut>> NullValues.notoptionalblob:BlobValue =>=>=> RelationalSchema.Column>> nullvalues.notoptionalblob;
ClassDiagram.Attribut>> NullValues.uniquenullable:String =>=>=> RelationalSchema.Column>> nullvalues.uniquenullable;
ClassDiagram.Attribut>> NullValues.version:int =>=>=> RelationalSchema.Column>> nullvalues.version;
ClassDiagram.Attribut>> DimDay.key:Long =>=>=> RelationalSchema.Column>> dimday.key PRIMARY KEY;
ClassDiagram.Attribut>> DimDay.GeneratedName:Date =>=>=> RelationalSchema.Column>> dimday.GeneratedName;
ClassDiagram.Attribut>> DimDay.dayfullname:String =>=>=> RelationalSchema.Column>> dimday.dayfullname;
ClassDiagram.Attribut>> DimDay.qtrfullname:String =>=>=> RelationalSchema.Column>> dimday.qtrfullname;
ClassDiagram.Attribut>> DimDay.monthfullname:String =>=>=> RelationalSchema.Column>> dimday.monthfullname;
ClassDiagram.Attribut>> DimDay.monthname:String =>=>=> RelationalSchema.Column>> dimday.monthname;
ClassDiagram.Attribut>> DimDay.year:String =>=>=> RelationalSchema.Column>> dimday.year;
ClassDiagram.Attribut>> DimDay.quarterinyearnumber:int =>=>=> RelationalSchema.Column>> dimday.quarterinyearnumber;
ClassDiagram.Attribut>> DimDay.yearcode:String =>=>=> RelationalSchema.Column>> dimday.yearcode;
ClassDiagram.Attribut>> DimDay.quartercode:String =>=>=> RelationalSchema.Column>> dimday.quartercode;
ClassDiagram.Attribut>> DimDay.monthcode:String =>=>=> RelationalSchema.Column>> dimday.monthcode;
ClassDiagram.Attribut>> DimDay.monthinyearnumber:Long =>=>=> RelationalSchema.Column>> dimday.monthinyearnumber;
ClassDiagram.Attribut>> DimDay.currentmonthind:Long =>=>=> RelationalSchema.Column>> dimday.currentmonthind;
ClassDiagram.Attribut>> DimDay.currentqtrind:Long =>=>=> RelationalSchema.Column>> dimday.currentqtrind;
ClassDiagram.Attribut>> DimDay.currentyearind:Long =>=>=> RelationalSchema.Column>> dimday.currentyearind;
ClassDiagram.Attribut>> DimDay.prevmonthind:Long =>=>=> RelationalSchema.Column>> dimday.prevmonthind;
ClassDiagram.Attribut>> DimDay.prevqtrind:Long =>=>=> RelationalSchema.Column>> dimday.prevqtrind;
ClassDiagram.Attribut>> DimDay.prevyearind:Long =>=>=> RelationalSchema.Column>> dimday.prevyearind;
ClassDiagram.Attribut>> DimDay.currentmonthvsprevyearind:Long =>=>=> RelationalSchema.Column>> dimday.currentmonthvsprevyearind;
ClassDiagram.Attribut>> DimDay.currentqtrvsprevyearind:Long =>=>=> RelationalSchema.Column>> dimday.currentqtrvsprevyearind;
ClassDiagram.Attribut>> DimDay.weekinyear:Long =>=>=> RelationalSchema.Column>> dimday.weekinyear;
ClassDiagram.Attribut>> DimDay.weekinyearfullnm:String =>=>=> RelationalSchema.Column>> dimday.weekinyearfullnm;
ClassDiagram.Attribut>> DimDay.dayinweek:Long =>=>=> RelationalSchema.Column>> dimday.dayinweek;
ClassDiagram.Attribut>> DimDay.dayinmonth:Long =>=>=> RelationalSchema.Column>> dimday.dayinmonth;
ClassDiagram.Attribut>> DimDay.dayinquarter:Long =>=>=> RelationalSchema.Column>> dimday.dayinquarter;
ClassDiagram.Attribut>> DimDay.dayinyear:Long =>=>=> RelationalSchema.Column>> dimday.dayinyear;
ClassDiagram.Attribut>> DimDay.eomind:Long =>=>=> RelationalSchema.Column>> dimday.eomind;
ClassDiagram.Attribut>> DimDay.eoqind:Long =>=>=> RelationalSchema.Column>> dimday.eoqind;
ClassDiagram.Attribut>> DimDay.eoyind:Long =>=>=> RelationalSchema.Column>> dimday.eoyind;
ClassDiagram.Attribut>> DimDay.roll13monthind:Long =>=>=> RelationalSchema.Column>> dimday.roll13monthind;
ClassDiagram.Attribut>> DimDay.roll4yearsind:Long =>=>=> RelationalSchema.Column>> dimday.roll4yearsind;
ClassDiagram.Attribut>> DimDay.roll5quartersind:Long =>=>=> RelationalSchema.Column>> dimday.roll5quartersind;
ClassDiagram.Attribut>> DimDay.monthstrtdate:Long =>=>=> RelationalSchema.Column>> dimday.monthstrtdate;
ClassDiagram.Attribut>> DimDay.monthenddate:Long =>=>=> RelationalSchema.Column>> dimday.monthenddate;
ClassDiagram.Attribut>> DimDay.quarterstrtdate:Long =>=>=> RelationalSchema.Column>> dimday.quarterstrtdate;
ClassDiagram.Attribut>> DimDay.quarterenddate:Long =>=>=> RelationalSchema.Column>> dimday.quarterenddate;
ClassDiagram.Attribut>> DimDay.yearstrtdate:Long =>=>=> RelationalSchema.Column>> dimday.yearstrtdate;
ClassDiagram.Attribut>> DimDay.yearenddate:Long =>=>=> RelationalSchema.Column>> dimday.yearenddate;
ClassDiagram.Attribut>> FactWorkAssignment.orgoid:String =>=>=> RelationalSchema.Column>> factworkassignment.orgoid PRIMARY KEY;
ClassDiagram.Attribut>> FactWorkAssignment.effstartdt:Date =>=>=> RelationalSchema.Column>> factworkassignment.effstartdt;
ClassDiagram.Attribut>> FactWorkAssignment.effenddt:Date =>=>=> RelationalSchema.Column>> factworkassignment.effenddt;
ClassDiagram.Attribut>> FactWorkAssignment.effectivestartdate:Long =>=>=> RelationalSchema.Column>> factworkassignment.effectivestartdate;
ClassDiagram.Attribut>> FactWorkAssignment.effectiveenddate:Long =>=>=> RelationalSchema.Column>> factworkassignment.effectiveenddate;
ClassDiagram.Attribut>> FactWorkAssignment.personkey:Long =>=>=> RelationalSchema.Column>> factworkassignment.personkey;
ClassDiagram.Attribut>> FactWorkAssignment.personobjid:String =>=>=> RelationalSchema.Column>> factworkassignment.personobjid;
ClassDiagram.Attribut>> FactWorkAssignment.primary:int =>=>=> RelationalSchema.Column>> factworkassignment.primary;
ClassDiagram.Attribut>> FactWorkAssignment.employeecount:int =>=>=> RelationalSchema.Column>> factworkassignment.employeecount;
ClassDiagram.Attribut>> FactWorkAssignment.statuscode:String =>=>=> RelationalSchema.Column>> factworkassignment.statuscode;
ClassDiagram.Attribut>> FactWorkAssignment.statusdesc:String =>=>=> RelationalSchema.Column>> factworkassignment.statusdesc;
ClassDiagram.Attribut>> FactWorkAssignment.workassgnmntnbr:String =>=>=> RelationalSchema.Column>> factworkassignment.workassgnmntnbr;
ClassDiagram.Attribut>> FactWorkAssignment.worklocationkey:Long =>=>=> RelationalSchema.Column>> factworkassignment.worklocationkey;
ClassDiagram.Attribut>> FactWorkAssignment.hrorgkey:Long =>=>=> RelationalSchema.Column>> factworkassignment.hrorgkey;
ClassDiagram.Attribut>> FactWorkAssignment.payrollorgkey:Long =>=>=> RelationalSchema.Column>> factworkassignment.payrollorgkey;
ClassDiagram.Attribut>> FactWorkAssignment.jobkey:Long =>=>=> RelationalSchema.Column>> factworkassignment.jobkey;
ClassDiagram.Attribut>> FactWorkAssignment.personprofilekey:Long =>=>=> RelationalSchema.Column>> factworkassignment.personprofilekey;
ClassDiagram.Attribut>> FactWorkAssignment.managerkey:Long =>=>=> RelationalSchema.Column>> factworkassignment.managerkey;
ClassDiagram.Attribut>> FactWorkAssignment.paygroupkey:Long =>=>=> RelationalSchema.Column>> factworkassignment.paygroupkey;
ClassDiagram.Attribut>> FactWorkAssignment.salplankey:Long =>=>=> RelationalSchema.Column>> factworkassignment.salplankey;
ClassDiagram.Attribut>> FactWorkAssignment.compart:Double =>=>=> RelationalSchema.Column>> factworkassignment.compart;
ClassDiagram.Attribut>> FactWorkAssignment.clocknumber:String =>=>=> RelationalSchema.Column>> factworkassignment.clocknumber;
ClassDiagram.Attribut>> FactWorkAssignment.datacntrlnumber:String =>=>=> RelationalSchema.Column>> factworkassignment.datacntrlnumber;
ClassDiagram.Attribut>> FactWorkAssignment.secclrcd:String =>=>=> RelationalSchema.Column>> factworkassignment.secclrcd;
ClassDiagram.Attribut>> FactWorkAssignment.currentrecord:boolean =>=>=> RelationalSchema.Column>> factworkassignment.currentrecord;
ClassDiagram.Attribut>> Photo.id:int =>=>=> RelationalSchema.Column>> photo.id PRIMARY KEY;
ClassDiagram.Attribut>> Photo.label:String =>=>=> RelationalSchema.Column>> photo.label;
ClassDiagram.Attribut>> Address.id:long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.street:String =>=>=> RelationalSchema.Column>> address.street;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.county:String =>=>=> RelationalSchema.Column>> address.county;
ClassDiagram.Attribut>> Address.country:String =>=>=> RelationalSchema.Column>> address.country;
ClassDiagram.Attribut>> Address.zipcode:String =>=>=> RelationalSchema.Column>> address.zipcode;
ClassDiagram.Attribut>> Product.pid:int =>=>=> RelationalSchema.Column>> product.pid PRIMARY KEY;
ClassDiagram.Attribut>> Product.producttype:String =>=>=> RelationalSchema.Column>> product.producttype;
ClassDiagram.Attribut>> Product.version:long =>=>=> RelationalSchema.Column>> product.version;
ClassDiagram.Attribut>> CompUser.name:String =>=>=> RelationalSchema.Column>> compuser.name;
ClassDiagram.Attribut>> CompUser.age:int =>=>=> RelationalSchema.Column>> compuser.age;
ClassDiagram.Attribut>> CompUser.computername:String =>=>=> RelationalSchema.Column>> compuser.computername;
ClassDiagram.Attribut>> CompUser.nicknames:String =>=>=> RelationalSchema.Column>> compuser.nicknames;
ClassDiagram.Attribut>> CompUser.userid:int =>=>=> RelationalSchema.Column>> compuser.userid PRIMARY KEY;
ClassDiagram.Attribut>> CompUser.GeneratedName:CreditRating =>=>=> RelationalSchema.Column>> compuser.GeneratedName;
ClassDiagram.Attribut>> Manager.id:int =>=>=> RelationalSchema.Column>> manager.id PRIMARY KEY;
ClassDiagram.Attribut>> Manager.name:String =>=>=> RelationalSchema.Column>> manager.name;
ClassDiagram.Attribut>> Manager.salary:BigDecimal =>=>=> RelationalSchema.Column>> manager.salary;
ClassDiagram.Attribut>> VideoStore.id:int =>=>=> RelationalSchema.Column>> videostore.id PRIMARY KEY;
ClassDiagram.Attribut>> VideoStore.name:String =>=>=> RelationalSchema.Column>> videostore.name;
ClassDiagram.Attribut>> VideoStore.location:Address =>=>=> RelationalSchema.Column>> videostore.location;
ClassDiagram.Attribut>> VideoStore.videoinventory:Map<Movie,Integer> =>=>=> RelationalSchema.Column>> videostore.videoinventory;
ClassDiagram.Attribut>> A.id:long =>=>=> RelationalSchema.Column>> a.id PRIMARY KEY;
ClassDiagram.Attribut>> A.name:String =>=>=> RelationalSchema.Column>> a.name;
ClassDiagram.Attribut>> BlogUser.id:int =>=>=> RelationalSchema.Column>> bloguser.id PRIMARY KEY;
ClassDiagram.Attribut>> BlogUser.version:int =>=>=> RelationalSchema.Column>> bloguser.version;
ClassDiagram.Attribut>> BlogUser.username:String =>=>=> RelationalSchema.Column>> bloguser.username;
ClassDiagram.Attribut>> BlogUser.pic:byte =>=>=> RelationalSchema.Column>> bloguser.pic;
ClassDiagram.Attribut>> BlogUser.s:Character =>=>=> RelationalSchema.Column>> bloguser.s;
ClassDiagram.Attribut>> BlogUser.s:char =>=>=> RelationalSchema.Column>> bloguser.s;
ClassDiagram.Attribut>> Publisher.id:int =>=>=> RelationalSchema.Column>> publisher.id PRIMARY KEY;
ClassDiagram.Attribut>> Publisher.name:String =>=>=> RelationalSchema.Column>> publisher.name;
ClassDiagram.Attribut>> Publisher.serialversionuid:long =>=>=> RelationalSchema.Column>> publisher.serialversionuid;
ClassDiagram.Attribut>> D.id:long =>=>=> RelationalSchema.Column>> d.id PRIMARY KEY;
ClassDiagram.Attribut>> D.name:String =>=>=> RelationalSchema.Column>> d.name;
ClassDiagram.Attribut>> Order.id:int =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.quantity:int =>=>=> RelationalSchema.Column>> order.quantity;
ClassDiagram.Attribut>> Order.totalcost:double =>=>=> RelationalSchema.Column>> order.totalcost;
ClassDiagram.Attribut>> Order.count:int =>=>=> RelationalSchema.Column>> order.count;
ClassDiagram.Attribut>> Order.name:String =>=>=> RelationalSchema.Column>> order.name;
ClassDiagram.Attribut>> Order.delivered:boolean =>=>=> RelationalSchema.Column>> order.delivered;
ClassDiagram.Attribut>> Order.orderts:Timestamp =>=>=> RelationalSchema.Column>> order.orderts;
ClassDiagram.Attribut>> LineItem.id:int =>=>=> RelationalSchema.Column>> lineitem.id PRIMARY KEY;
ClassDiagram.Attribut>> LineItem.price:double =>=>=> RelationalSchema.Column>> lineitem.price;
ClassDiagram.Attribut>> LineItem.quantity:int =>=>=> RelationalSchema.Column>> lineitem.quantity;
ClassDiagram.Attribut>> LineItem.cost:double =>=>=> RelationalSchema.Column>> lineitem.cost;
ClassDiagram.Attribut>> Exempt.hire:Date =>=>=> RelationalSchema.Column>> exempt.hire;
ClassDiagram.Attribut>> Dependent.id:DependentId =>=>=> RelationalSchema.Column>> dependent.id;
ClassDiagram.Attribut>> Dependent.end:Date =>=>=> RelationalSchema.Column>> dependent.end;
ClassDiagram.Attribut>> Dependent.curstatusid:int =>=>=> RelationalSchema.Column>> dependent.curstatusid;
ClassDiagram.Attribut>> Magazine.id:int =>=>=> RelationalSchema.Column>> magazine.id PRIMARY KEY;
ClassDiagram.Attribut>> Magazine.name:String =>=>=> RelationalSchema.Column>> magazine.name;
ClassDiagram.Attribut>> Magazine.published:Date =>=>=> RelationalSchema.Column>> magazine.published;
ClassDiagram.Attribut>> Magazine.serialversionuid:long =>=>=> RelationalSchema.Column>> magazine.serialversionuid;
ClassDiagram.Attribut>> CreditCard.id:long =>=>=> RelationalSchema.Column>> creditcard.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.id:long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.firstname:String =>=>=> RelationalSchema.Column>> customer.firstname;
ClassDiagram.Attribut>> Customer.lastname:String =>=>=> RelationalSchema.Column>> customer.lastname;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.status:int =>=>=> RelationalSchema.Column>> customer.status;
ClassDiagram.Attribut>> Customer.balanceowed:int =>=>=> RelationalSchema.Column>> customer.balanceowed;
ClassDiagram.Attribut>> Customer.filledordercount:int =>=>=> RelationalSchema.Column>> customer.filledordercount;
ClassDiagram.Attribut>> Customer.accountnum:long =>=>=> RelationalSchema.Column>> customer.accountnum;
ClassDiagram.Attribut>> Customer.GeneratedName:CreditRating =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> Request.id:int =>=>=> RelationalSchema.Column>> request.id PRIMARY KEY;
ClassDiagram.Attribut>> Request.status:short =>=>=> RelationalSchema.Column>> request.status;
ClassDiagram.Attribut>> Request.requesttime:Date =>=>=> RelationalSchema.Column>> request.requesttime;
ClassDiagram.Attribut>> FrequentFlierPlan.id:String =>=>=> RelationalSchema.Column>> frequentflierplan.id PRIMARY KEY;
ClassDiagram.Attribut>> FrequentFlierPlan.name:String =>=>=> RelationalSchema.Column>> frequentflierplan.name;
ClassDiagram.Attribut>> FrequentFlierPlan.annualmiles:int =>=>=> RelationalSchema.Column>> frequentflierplan.annualmiles;
ClassDiagram.Attribut>> B.id:long =>=>=> RelationalSchema.Column>> b.id PRIMARY KEY;
ClassDiagram.Attribut>> B.age:int =>=>=> RelationalSchema.Column>> b.age;
ClassDiagram.Attribut>> TransactionHistory.id:int =>=>=> RelationalSchema.Column>> transactionhistory.id PRIMARY KEY;
ClassDiagram.Attribut>> TransactionHistory.transdate:Timestamp =>=>=> RelationalSchema.Column>> transactionhistory.transdate;
ClassDiagram.Attribut>> TransactionHistory.details:String =>=>=> RelationalSchema.Column>> transactionhistory.details;
ClassDiagram.Attribut>> Item.id:int =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.id:long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.filled:boolean =>=>=> RelationalSchema.Column>> order.filled;
ClassDiagram.Attribut>> Order.GeneratedName:Date =>=>=> RelationalSchema.Column>> order.GeneratedName;
ClassDiagram.Attribut>> ShipRate.shiprateid:long =>=>=> RelationalSchema.Column>> shiprate.shiprateid PRIMARY KEY;
ClassDiagram.Attribut>> ShipRate.billedasweight:BigDecimal =>=>=> RelationalSchema.Column>> shiprate.billedasweight;
ClassDiagram.Attribut>> Shop.id:long =>=>=> RelationalSchema.Column>> shop.id PRIMARY KEY;
ClassDiagram.Attribut>> Shop.name:String =>=>=> RelationalSchema.Column>> shop.name;
ClassDiagram.Attribut>> Bar.bid:long =>=>=> RelationalSchema.Column>> bar.bid PRIMARY KEY;
ClassDiagram.Attribut>> Bar.b:short =>=>=> RelationalSchema.Column>> bar.b;
ClassDiagram.Attribut>> Bar.b:String =>=>=> RelationalSchema.Column>> bar.b;
ClassDiagram.Attribut>> Bar.b:int =>=>=> RelationalSchema.Column>> bar.b;
ClassDiagram.Attribut>> Foo.fid:long =>=>=> RelationalSchema.Column>> foo.fid PRIMARY KEY;
ClassDiagram.Attribut>> Foo.f:String =>=>=> RelationalSchema.Column>> foo.f;
ClassDiagram.Attribut>> Foo.f:long =>=>=> RelationalSchema.Column>> foo.f;
ClassDiagram.Attribut>> Foo.f:int =>=>=> RelationalSchema.Column>> foo.f;
ClassDiagram.Attribut>> Producer.id:int =>=>=> RelationalSchema.Column>> producer.id PRIMARY KEY;
ClassDiagram.Attribut>> Producer.name:String =>=>=> RelationalSchema.Column>> producer.name;
ClassDiagram.Attribut>> Department.deptno:int =>=>=> RelationalSchema.Column>> department.deptno PRIMARY KEY;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> MyUserEntity.id:Long =>=>=> RelationalSchema.Column>> myuserentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MyUserEntity.username:String =>=>=> RelationalSchema.Column>> myuserentity.username;
ClassDiagram.Attribut>> AddressEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> addressentity.serialversionuid;
ClassDiagram.Attribut>> AddressEntity.id:AddressPk =>=>=> RelationalSchema.Column>> addressentity.id;
ClassDiagram.Attribut>> Semester.id:int =>=>=> RelationalSchema.Column>> semester.id PRIMARY KEY;
ClassDiagram.Attribut>> Semester.name:String =>=>=> RelationalSchema.Column>> semester.name;
ClassDiagram.Attribut>> Phone.id:int =>=>=> RelationalSchema.Column>> phone.id PRIMARY KEY;
ClassDiagram.Attribut>> Phone.vendor:String =>=>=> RelationalSchema.Column>> phone.vendor;
ClassDiagram.Attribut>> Person.id:int =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.nicknames:Set<String> =>=>=> RelationalSchema.Column>> person.nicknames;
ClassDiagram.Attribut>> Item.id:int =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.name:String =>=>=> RelationalSchema.Column>> item.name;
ClassDiagram.Attribut>> EntityWithIdClass.name:String =>=>=> RelationalSchema.Column>> entitywithidclass.name PRIMARY KEY;
ClassDiagram.Attribut>> EntityWithIdClass.ssn:long =>=>=> RelationalSchema.Column>> entitywithidclass.ssn PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empid:int =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.info:Contact =>=>=> RelationalSchema.Column>> employee.info;
ClassDiagram.Attribut>> Employee.salary:long =>=>=> RelationalSchema.Column>> employee.salary;
ClassDiagram.Attribut>> Employee.rating:int =>=>=> RelationalSchema.Column>> employee.rating;
ClassDiagram.Attribut>> Account.id:long =>=>=> RelationalSchema.Column>> account.id PRIMARY KEY;
ClassDiagram.Attribut>> Account.balance:int =>=>=> RelationalSchema.Column>> account.balance;
ClassDiagram.Attribut>> Account.loan:Integer =>=>=> RelationalSchema.Column>> account.loan;
ClassDiagram.Attribut>> Account.name:String =>=>=> RelationalSchema.Column>> account.name;
ClassDiagram.Attribut>> Course.id:long =>=>=> RelationalSchema.Column>> course.id PRIMARY KEY;
ClassDiagram.Attribut>> Course.name:String =>=>=> RelationalSchema.Column>> course.name;
ClassDiagram.Attribut>> Movie.id:int =>=>=> RelationalSchema.Column>> movie.id PRIMARY KEY;
ClassDiagram.Attribut>> Movie.title:String =>=>=> RelationalSchema.Column>> movie.title;
ClassDiagram.Attribut>> Student.id:int =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> C.id:long =>=>=> RelationalSchema.Column>> c.id PRIMARY KEY;
ClassDiagram.Attribut>> C.name:String =>=>=> RelationalSchema.Column>> c.name;
ClassDiagram.Attribut>> ScheduledAssignment.id:Integer =>=>=> RelationalSchema.Column>> scheduledassignment.id PRIMARY KEY;
ClassDiagram.Attribut>> ScheduledAssignment.//somehow,removingthishasaneffectbrokencustomruleexplanation:String =>=>=> RelationalSchema.Column>> scheduledassignment.//somehow,removingthishasaneffectbrokencustomruleexplanation;
ClassDiagram.Attribut>> ManyOneEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> manyoneentity.serialversionuid;
ClassDiagram.Attribut>> ManyOneEntity.id:long =>=>=> RelationalSchema.Column>> manyoneentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ManyOneEntity.name:String =>=>=> RelationalSchema.Column>> manyoneentity.name;
ClassDiagram.Attribut>> ManyOneEntity.optlock:Integer =>=>=> RelationalSchema.Column>> manyoneentity.optlock;
ClassDiagram.Attribut>> Lookup.id:Integer =>=>=> RelationalSchema.Column>> lookup.id PRIMARY KEY;
ClassDiagram.Attribut>> Lookup.name:String =>=>=> RelationalSchema.Column>> lookup.name;
ClassDiagram.Attribut>> SimpleEntity2.id:long =>=>=> RelationalSchema.Column>> simpleentity2.id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleEntity2.name:String =>=>=> RelationalSchema.Column>> simpleentity2.name;
ClassDiagram.Attribut>> SimpleEntity2.value:String =>=>=> RelationalSchema.Column>> simpleentity2.value;
ClassDiagram.Attribut>> Order.oid:int =>=>=> RelationalSchema.Column>> order.oid PRIMARY KEY;
ClassDiagram.Attribut>> Order.amount:double =>=>=> RelationalSchema.Column>> order.amount;
ClassDiagram.Attribut>> Order.delivered:boolean =>=>=> RelationalSchema.Column>> order.delivered;
ClassDiagram.Attribut>> Order.version:long =>=>=> RelationalSchema.Column>> order.version;
ClassDiagram.Attribut>> Order.orderts:Timestamp =>=>=> RelationalSchema.Column>> order.orderts;
ClassDiagram.Attribut>> Magazine.id:int =>=>=> RelationalSchema.Column>> magazine.id PRIMARY KEY;
ClassDiagram.Attribut>> Magazine.name:String =>=>=> RelationalSchema.Column>> magazine.name;
ClassDiagram.Attribut>> Magazine.published:Date =>=>=> RelationalSchema.Column>> magazine.published;
ClassDiagram.Attribut>> Magazine.serialversionuid:long =>=>=> RelationalSchema.Column>> magazine.serialversionuid;
ClassDiagram.Attribut>> SimpleEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> simpleentity.serialversionuid;
ClassDiagram.Attribut>> SimpleEntity.named_query_with_positional_params:String =>=>=> RelationalSchema.Column>> simpleentity.named_query_with_positional_params;
ClassDiagram.Attribut>> SimpleEntity.named_query_with_named_params:String =>=>=> RelationalSchema.Column>> simpleentity.named_query_with_named_params;
ClassDiagram.Attribut>> SimpleEntity.id:long =>=>=> RelationalSchema.Column>> simpleentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleEntity.name:String =>=>=> RelationalSchema.Column>> simpleentity.name;
ClassDiagram.Attribut>> SimpleEntity.value:String =>=>=> RelationalSchema.Column>> simpleentity.value;
ClassDiagram.Attribut>> ScheduleDay.id:Integer =>=>=> RelationalSchema.Column>> scheduleday.id PRIMARY KEY;
ClassDiagram.Attribut>> ScheduleDay.GeneratedName:Date =>=>=> RelationalSchema.Column>> scheduleday.GeneratedName;
ClassDiagram.Attribut>> ManyOneEntitySub.serialversionuid:long =>=>=> RelationalSchema.Column>> manyoneentitysub.serialversionuid;
ClassDiagram.Attribut>> ManyOneEntitySub.sub:int =>=>=> RelationalSchema.Column>> manyoneentitysub.sub;
ClassDiagram.Attribut>> Hardware.serialversionuid:long =>=>=> RelationalSchema.Column>> hardware.serialversionuid;
ClassDiagram.Attribut>> Hardware.id:int =>=>=> RelationalSchema.Column>> hardware.id PRIMARY KEY;
ClassDiagram.Attribut>> Hardware.empno:String =>=>=> RelationalSchema.Column>> hardware.empno;
ClassDiagram.Attribut>> Customer.cid:CustomerKey =>=>=> RelationalSchema.Column>> customer.cid;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.GeneratedName:CreditRating =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> Customer.version:long =>=>=> RelationalSchema.Column>> customer.version;
ClassDiagram.Attribut>> Publisher.id:int =>=>=> RelationalSchema.Column>> publisher.id PRIMARY KEY;
ClassDiagram.Attribut>> Publisher.name:String =>=>=> RelationalSchema.Column>> publisher.name;
ClassDiagram.Attribut>> Publisher.serialversionuid:long =>=>=> RelationalSchema.Column>> publisher.serialversionuid;
ClassDiagram.Attribut>> Case.id:Integer =>=>=> RelationalSchema.Column>> case.id PRIMARY KEY;
ClassDiagram.Attribut>> Account.aid:long =>=>=> RelationalSchema.Column>> account.aid PRIMARY KEY;
ClassDiagram.Attribut>> Account.balance:int =>=>=> RelationalSchema.Column>> account.balance;
ClassDiagram.Attribut>> Account.loan:Integer =>=>=> RelationalSchema.Column>> account.loan;
ClassDiagram.Attribut>> Account.name:String =>=>=> RelationalSchema.Column>> account.name;
ClassDiagram.Attribut>> ComplexF.f:String =>=>=> RelationalSchema.Column>> complexf.f;
ClassDiagram.Attribut>> ComplexF.f:int =>=>=> RelationalSchema.Column>> complexf.f;
ClassDiagram.Attribut>> ComplexF.f:Date =>=>=> RelationalSchema.Column>> complexf.f;
ClassDiagram.Attribut>> ComplexF.gs:Collection =>=>=> RelationalSchema.Column>> complexf.gs;
ClassDiagram.Attribut>> ComplexB.b:String =>=>=> RelationalSchema.Column>> complexb.b;
ClassDiagram.Attribut>> ComplexB.b:int =>=>=> RelationalSchema.Column>> complexb.b;
ClassDiagram.Attribut>> ComplexB.b:Date =>=>=> RelationalSchema.Column>> complexb.b;
ClassDiagram.Attribut>> ComplexB.cs:Collection =>=>=> RelationalSchema.Column>> complexb.cs;
ClassDiagram.Attribut>> Osoba.id:long =>=>=> RelationalSchema.Column>> osoba.id PRIMARY KEY;
ClassDiagram.Attribut>> Osoba.name:String =>=>=> RelationalSchema.Column>> osoba.name;
ClassDiagram.Attribut>> Osoba.age:int =>=>=> RelationalSchema.Column>> osoba.age;
ClassDiagram.Attribut>> RuntimeTest3.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest3.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest3.field3:int =>=>=> RelationalSchema.Column>> runtimetest3.field3;
ClassDiagram.Attribut>> ModRuntimeTest2.serialversionuid:long =>=>=> RelationalSchema.Column>> modruntimetest2.serialversionuid;
ClassDiagram.Attribut>> ModRuntimeTest2.field2:int =>=>=> RelationalSchema.Column>> modruntimetest2.field2;
ClassDiagram.Attribut>> QueryTest3.num2:int =>=>=> RelationalSchema.Column>> querytest3.num2;
ClassDiagram.Attribut>> CircularFKPC2.field:String =>=>=> RelationalSchema.Column>> circularfkpc2.field;
ClassDiagram.Attribut>> CircularFKPC2.fkfield:CircularFKPC =>=>=> RelationalSchema.Column>> circularfkpc2.fkfield;
ClassDiagram.Attribut>> QTimeout.serialversionuid:long =>=>=> RelationalSchema.Column>> qtimeout.serialversionuid;
ClassDiagram.Attribut>> QTimeout.id:int =>=>=> RelationalSchema.Column>> qtimeout.id PRIMARY KEY;
ClassDiagram.Attribut>> QTimeout.field:String =>=>=> RelationalSchema.Column>> qtimeout.field;
ClassDiagram.Attribut>> QTimeout.versionfield:int =>=>=> RelationalSchema.Column>> qtimeout.versionfield;
ClassDiagram.Attribut>> QueryTest2.stringcollection:List<String> =>=>=> RelationalSchema.Column>> querytest2.stringcollection;
ClassDiagram.Attribut>> QueryTest2.stringmap:Map<String,String> =>=>=> RelationalSchema.Column>> querytest2.stringmap;
ClassDiagram.Attribut>> Entity2.serialversionuid:long =>=>=> RelationalSchema.Column>> entity2.serialversionuid;
ClassDiagram.Attribut>> Entity2.pk:long =>=>=> RelationalSchema.Column>> entity2.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity2.field:String =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> Entity2.field:int =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> ComplexG.g:String =>=>=> RelationalSchema.Column>> complexg.g;
ClassDiagram.Attribut>> ComplexG.g:int =>=>=> RelationalSchema.Column>> complexg.g;
ClassDiagram.Attribut>> ComplexG.g:Date =>=>=> RelationalSchema.Column>> complexg.g;
ClassDiagram.Attribut>> ComplexC.c:String =>=>=> RelationalSchema.Column>> complexc.c;
ClassDiagram.Attribut>> ComplexC.c:int =>=>=> RelationalSchema.Column>> complexc.c;
ClassDiagram.Attribut>> ComplexC.c:Date =>=>=> RelationalSchema.Column>> complexc.c;
ClassDiagram.Attribut>> ComplexC.ds:Set =>=>=> RelationalSchema.Column>> complexc.ds;
ClassDiagram.Attribut>> SimpleAppIdPC.pk:String =>=>=> RelationalSchema.Column>> simpleappidpc.pk PRIMARY KEY;
ClassDiagram.Attribut>> SimpleAppIdPC.field:int =>=>=> RelationalSchema.Column>> simpleappidpc.field;
ClassDiagram.Attribut>> RuntimeTest2.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest2.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest2.field2:int =>=>=> RelationalSchema.Column>> runtimetest2.field2;
ClassDiagram.Attribut>> CircularFKPC.field:String =>=>=> RelationalSchema.Column>> circularfkpc.field;
ClassDiagram.Attribut>> CircularFKPC.fkfield:CircularFKPC2 =>=>=> RelationalSchema.Column>> circularfkpc.fkfield;
ClassDiagram.Attribut>> QueryTest4.num3:int =>=>=> RelationalSchema.Column>> querytest4.num3;
ClassDiagram.Attribut>> ModRuntimeTest1.serialversionuid:long =>=>=> RelationalSchema.Column>> modruntimetest1.serialversionuid;
ClassDiagram.Attribut>> ModRuntimeTest1.somefield:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ModRuntimeTest1.field:Locale =>=>=> RelationalSchema.Column>> modruntimetest1.field;
ClassDiagram.Attribut>> ModRuntimeTest1.field:int =>=>=> RelationalSchema.Column>> modruntimetest1.field PRIMARY KEY;
ClassDiagram.Attribut>> ModRuntimeTest1.field:String =>=>=> RelationalSchema.Column>> modruntimetest1.field;
ClassDiagram.Attribut>> ModRuntimeTest1.trans:String =>=>=> RelationalSchema.Column>> modruntimetest1.trans;
ClassDiagram.Attribut>> ModRuntimeTest1.selfonemany:Set =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Projekt.name:String =>=>=> RelationalSchema.Column>> projekt.name PRIMARY KEY;
ClassDiagram.Attribut>> TransactionalClassPC.field:int =>=>=> RelationalSchema.Column>> transactionalclasspc.field;
ClassDiagram.Attribut>> ComplexE.e:String =>=>=> RelationalSchema.Column>> complexe.e;
ClassDiagram.Attribut>> ComplexE.e:int =>=>=> RelationalSchema.Column>> complexe.e;
ClassDiagram.Attribut>> ComplexE.e:Date =>=>=> RelationalSchema.Column>> complexe.e;
ClassDiagram.Attribut>> ComplexE.fs:Collection =>=>=> RelationalSchema.Column>> complexe.fs;
ClassDiagram.Attribut>> RuntimeTest4.name:String =>=>=> RelationalSchema.Column>> runtimetest4.name;
ClassDiagram.Attribut>> RuntimeTest4.runtimetest5s:Collection =>=>=> RelationalSchema.Column>> runtimetest4.runtimetest5s;
ClassDiagram.Attribut>> ComplexA.a:String =>=>=> RelationalSchema.Column>> complexa.a;
ClassDiagram.Attribut>> ComplexA.a:int =>=>=> RelationalSchema.Column>> complexa.a;
ClassDiagram.Attribut>> ComplexA.a:Date =>=>=> RelationalSchema.Column>> complexa.a;
ClassDiagram.Attribut>> ComplexA.bs:Collection =>=>=> RelationalSchema.Column>> complexa.bs;
ClassDiagram.Attribut>> Entity1.serialversionuid:long =>=>=> RelationalSchema.Column>> entity1.serialversionuid;
ClassDiagram.Attribut>> Entity1.pk:long =>=>=> RelationalSchema.Column>> entity1.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity1.field:String =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.field:int =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.versionfield:int =>=>=> RelationalSchema.Column>> entity1.versionfield;
ClassDiagram.Attribut>> ComplexD.d:String =>=>=> RelationalSchema.Column>> complexd.d;
ClassDiagram.Attribut>> ComplexD.d:int =>=>=> RelationalSchema.Column>> complexd.d;
ClassDiagram.Attribut>> ComplexD.d:Date =>=>=> RelationalSchema.Column>> complexd.d;
ClassDiagram.Attribut>> ComplexD.es:Set =>=>=> RelationalSchema.Column>> complexd.es;
ClassDiagram.Attribut>> RuntimeTest5.name:String =>=>=> RelationalSchema.Column>> runtimetest5.name;
ClassDiagram.Attribut>> CompoundAppIdPC.pk1:String =>=>=> RelationalSchema.Column>> compoundappidpc.pk1 PRIMARY KEY;
ClassDiagram.Attribut>> CompoundAppIdPC.pk2:int =>=>=> RelationalSchema.Column>> compoundappidpc.pk2 PRIMARY KEY;
ClassDiagram.Attribut>> CompoundAppIdPC.field:int =>=>=> RelationalSchema.Column>> compoundappidpc.field;
ClassDiagram.Attribut>> RuntimeTest1.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest1.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest1.somefield:String =>=>=> RelationalSchema.Column>> runtimetest1.somefield;
ClassDiagram.Attribut>> RuntimeTest1.field:byte =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:boolean =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:char =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:double =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:float =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:int =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:long =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:short =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:String =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:BigInteger =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:BigDecimal =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:Date =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:Locale =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Byte =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Boolean =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.charobjfield:Character =>=>=> RelationalSchema.Column>> runtimetest1.charobjfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Double =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Float =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.intobjfield:Integer =>=>=> RelationalSchema.Column>> runtimetest1.intobjfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Long =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Short =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.//transactionalonlytransfield:TransactionalClassPC =>=>=> RelationalSchema.Column>> runtimetest1.//transactionalonlytransfield;
ClassDiagram.Attribut>> RuntimeTest1.trans:String =>=>=> RelationalSchema.Column>> runtimetest1.trans;
ClassDiagram.Attribut>> RuntimeTest1.selfonemany:Set =>=>=> RelationalSchema.Column>> runtimetest1.selfonemany;
ClassDiagram.Attribut>> QueryTest1./**changedvariablenames:afamokeke*reason:theoldvarnamesarereservedmysomedb'snamelymysql.*/id:int =>=>=> RelationalSchema.Column>> querytest1./**changedvariablenames:afamokeke*reason:theoldvarnamesarereservedmysomedb'snamelymysql.*/id PRIMARY KEY;
ClassDiagram.Attribut>> QueryTest1.five:long =>=>=> RelationalSchema.Column>> querytest1.five;
ClassDiagram.Attribut>> QueryTest1.numb:long =>=>=> RelationalSchema.Column>> querytest1.numb;
ClassDiagram.Attribut>> QueryTest1.strong:String =>=>=> RelationalSchema.Column>> querytest1.strong;
ClassDiagram.Attribut>> QueryTest1.cfield:String =>=>=> RelationalSchema.Column>> querytest1.cfield;
ClassDiagram.Attribut>> QueryTest1.boolt:boolean =>=>=> RelationalSchema.Column>> querytest1.boolt;
ClassDiagram.Attribut>> QueryTest1.decar:float =>=>=> RelationalSchema.Column>> querytest1.decar;
ClassDiagram.Attribut>> QueryTest1.t:char =>=>=> RelationalSchema.Column>> querytest1.t;
ClassDiagram.Attribut>> QueryTest1.datum:Date =>=>=> RelationalSchema.Column>> querytest1.datum;
ClassDiagram.Attribut>> CrtRequisicaoEntity.id:long =>=>=> RelationalSchema.Column>> crtrequisicaoentity.id PRIMARY KEY;
ClassDiagram.Attribut>> CrtOperacaoEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> crtoperacaoentity.serialversionuid;
ClassDiagram.Attribut>> CrtOperacaoEntity.id:long =>=>=> RelationalSchema.Column>> crtoperacaoentity.id PRIMARY KEY;
ClassDiagram.Attribut>> CrtOperacaoEntity.datahora:Timestamp =>=>=> RelationalSchema.Column>> crtoperacaoentity.datahora;
ClassDiagram.Attribut>> Role.id:Integer =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Dependent.id:DependentId =>=>=> RelationalSchema.Column>> dependent.id;
ClassDiagram.Attribut>> Dependent.end:Date =>=>=> RelationalSchema.Column>> dependent.end;
ClassDiagram.Attribut>> Dependent.curstatusid:int =>=>=> RelationalSchema.Column>> dependent.curstatusid;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.empno:String =>=>=> RelationalSchema.Column>> person.empno PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Employee.empid:long =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.some:long =>=>=> RelationalSchema.Column>> employee.some;
ClassDiagram.Attribut>> Employee.statusid:int =>=>=> RelationalSchema.Column>> employee.statusid;
ClassDiagram.Attribut>> Employee.hire:Date =>=>=> RelationalSchema.Column>> employee.hire;
ClassDiagram.Attribut>> Employee.hiretime:Date =>=>=> RelationalSchema.Column>> employee.hiretime;
ClassDiagram.Attribut>> Employee.hiretimestamp:Date =>=>=> RelationalSchema.Column>> employee.hiretimestamp;
ClassDiagram.Attribut>> NamedQueryEntity.id:Integer =>=>=> RelationalSchema.Column>> namedqueryentity.id PRIMARY KEY;
ClassDiagram.Attribut>> NamedQueryEntity.field:String =>=>=> RelationalSchema.Column>> namedqueryentity.field;
ClassDiagram.Attribut>> OrderItem.lid:int =>=>=> RelationalSchema.Column>> orderitem.lid PRIMARY KEY;
ClassDiagram.Attribut>> OrderItem.quantity:int =>=>=> RelationalSchema.Column>> orderitem.quantity;
ClassDiagram.Attribut>> OrderItem.cost:double =>=>=> RelationalSchema.Column>> orderitem.cost;
ClassDiagram.Attribut>> OrderItem.version:long =>=>=> RelationalSchema.Column>> orderitem.version;
ClassDiagram.Attribut>> HungarianNotationFieldDuplicates.strfoobar:String =>=>=> RelationalSchema.Column>> hungariannotationfieldduplicates.strfoobar;
ClassDiagram.Attribut>> HungarianNotationFieldDuplicates.intfoobar:Integer =>=>=> RelationalSchema.Column>> hungariannotationfieldduplicates.intfoobar;
ClassDiagram.Attribut>> HungarianNotationFields.mfoobar7:Long =>=>=> RelationalSchema.Column>> hungariannotationfields.mfoobar7 PRIMARY KEY;
ClassDiagram.Attribut>> HungarianNotationFields.mfoobar1:String =>=>=> RelationalSchema.Column>> hungariannotationfields.mfoobar1;
ClassDiagram.Attribut>> HungarianNotationFields.strfoobar2:String =>=>=> RelationalSchema.Column>> hungariannotationfields.strfoobar2;
ClassDiagram.Attribut>> HungarianNotationFields.intfoobar3:Integer =>=>=> RelationalSchema.Column>> hungariannotationfields.intfoobar3;
ClassDiagram.Attribut>> HungarianNotationFields.lgfoobar4:Long =>=>=> RelationalSchema.Column>> hungariannotationfields.lgfoobar4;
ClassDiagram.Attribut>> HungarianNotationFields.m_foobar5:int =>=>=> RelationalSchema.Column>> hungariannotationfields.m_foobar5;
ClassDiagram.Attribut>> HungarianNotationFields.m_foobar7:int =>=>=> RelationalSchema.Column>> hungariannotationfields.m_foobar7;
ClassDiagram.Attribut>> OtherClass.m_intbarfoo1:Integer =>=>=> RelationalSchema.Column>> otherclass.m_intbarfoo1 PRIMARY KEY;
ClassDiagram.Attribut>> Country.id:long =>=>=> RelationalSchema.Column>> country.id PRIMARY KEY;
ClassDiagram.Attribut>> Country.name:String =>=>=> RelationalSchema.Column>> country.name;
ClassDiagram.Attribut>> People.serialversionuid:long =>=>=> RelationalSchema.Column>> people.serialversionuid;
ClassDiagram.Attribut>> People.ssn:long =>=>=> RelationalSchema.Column>> people.ssn PRIMARY KEY;
ClassDiagram.Attribut>> People.name:String =>=>=> RelationalSchema.Column>> people.name;
ClassDiagram.Attribut>> PersistentRelation.serialversionuid:long =>=>=> RelationalSchema.Column>> persistentrelation.serialversionuid;
ClassDiagram.Attribut>> PersistentRelation./***relationisafirstclassobjectwithitsownidentifier.*/id:long =>=>=> RelationalSchema.Column>> persistentrelation./***relationisafirstclassobjectwithitsownidentifier.*/id PRIMARY KEY;
ClassDiagram.Attribut>> City.serialversionuid:long =>=>=> RelationalSchema.Column>> city.serialversionuid;
ClassDiagram.Attribut>> City.name:String =>=>=> RelationalSchema.Column>> city.name PRIMARY KEY;
ClassDiagram.Attribut>> RelationGraph.serialversionuid:long =>=>=> RelationalSchema.Column>> relationgraph.serialversionuid;
ClassDiagram.Attribut>> UnidirectionalManyToOne.id:int =>=>=> RelationalSchema.Column>> unidirectionalmanytoone.id PRIMARY KEY;
ClassDiagram.Attribut>> ChildClass.name:String =>=>=> RelationalSchema.Column>> childclass.name;
ClassDiagram.Attribut>> ChainEntityA.aid:long =>=>=> RelationalSchema.Column>> chainentitya.aid PRIMARY KEY;
ClassDiagram.Attribut>> ChainEntityA.optlock:Integer =>=>=> RelationalSchema.Column>> chainentitya.optlock;
ClassDiagram.Attribut>> ChainEntityA.name:String =>=>=> RelationalSchema.Column>> chainentitya.name;
ClassDiagram.Attribut>> EntityBInverseEager.id:int =>=>=> RelationalSchema.Column>> entitybinverseeager.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityBInverseEager.name:String =>=>=> RelationalSchema.Column>> entitybinverseeager.name;
ClassDiagram.Attribut>> TargetedIFaceRelationParent.id:long =>=>=> RelationalSchema.Column>> targetedifacerelationparent.id PRIMARY KEY;
ClassDiagram.Attribut>> TargetedIFaceRelationParent.name:String =>=>=> RelationalSchema.Column>> targetedifacerelationparent.name;
ClassDiagram.Attribut>> TargetedIFaceRelationParent.optlock:Integer =>=>=> RelationalSchema.Column>> targetedifacerelationparent.optlock;
ClassDiagram.Attribut>> EntityCInverseEager.id:int =>=>=> RelationalSchema.Column>> entitycinverseeager.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityCInverseEager.name:String =>=>=> RelationalSchema.Column>> entitycinverseeager.name;
ClassDiagram.Attribut>> EntityCInverseEager.age:int =>=>=> RelationalSchema.Column>> entitycinverseeager.age;
ClassDiagram.Attribut>> EntityCInverseEager.balance:int =>=>=> RelationalSchema.Column>> entitycinverseeager.balance;
ClassDiagram.Attribut>> LRSEntity.id:long =>=>=> RelationalSchema.Column>> lrsentity.id PRIMARY KEY;
ClassDiagram.Attribut>> LRSEntity.name:String =>=>=> RelationalSchema.Column>> lrsentity.name;
ClassDiagram.Attribut>> Customer.cid:CustomerKey =>=>=> RelationalSchema.Column>> customer.cid;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.GeneratedName:CreditRating =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> Customer.version:long =>=>=> RelationalSchema.Column>> customer.version;
ClassDiagram.Attribut>> OneManyEagerChild.id:long =>=>=> RelationalSchema.Column>> onemanyeagerchild.id PRIMARY KEY;
ClassDiagram.Attribut>> OneManyEagerChild.name:String =>=>=> RelationalSchema.Column>> onemanyeagerchild.name;
ClassDiagram.Attribut>> OneManyEagerChild.optlock:Integer =>=>=> RelationalSchema.Column>> onemanyeagerchild.optlock;
ClassDiagram.Attribut>> ConcurrentEntityLeft.id:int =>=>=> RelationalSchema.Column>> concurrententityleft.id PRIMARY KEY;
ClassDiagram.Attribut>> ConcurrentEntityLeft.strdata:String =>=>=> RelationalSchema.Column>> concurrententityleft.strdata;
ClassDiagram.Attribut>> CascadingOneManyParent.id:long =>=>=> RelationalSchema.Column>> cascadingonemanyparent.id PRIMARY KEY;
ClassDiagram.Attribut>> CascadingOneManyParent.name:String =>=>=> RelationalSchema.Column>> cascadingonemanyparent.name;
ClassDiagram.Attribut>> CascadingOneManyParent.optlock:Integer =>=>=> RelationalSchema.Column>> cascadingonemanyparent.optlock;
ClassDiagram.Attribut>> GrandChild.serialversionuid:long =>=>=> RelationalSchema.Column>> grandchild.serialversionuid;
ClassDiagram.Attribut>> GrandChild.id:int =>=>=> RelationalSchema.Column>> grandchild.id PRIMARY KEY;
ClassDiagram.Attribut>> PPhone.id:int =>=>=> RelationalSchema.Column>> pphone.id PRIMARY KEY;
ClassDiagram.Attribut>> PPhone.number:String =>=>=> RelationalSchema.Column>> pphone.number;
ClassDiagram.Attribut>> BasicEntity.id:long =>=>=> RelationalSchema.Column>> basicentity.id PRIMARY KEY;
ClassDiagram.Attribut>> BasicEntity.name:String =>=>=> RelationalSchema.Column>> basicentity.name;
ClassDiagram.Attribut>> BasicEntity.optlock:Integer =>=>=> RelationalSchema.Column>> basicentity.optlock;
ClassDiagram.Attribut>> VCS.vcsid:String =>=>=> RelationalSchema.Column>> vcs.vcsid PRIMARY KEY;
ClassDiagram.Attribut>> VCS.GeneratedName:E =>=>=> RelationalSchema.Column>> vcs.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> VCS.name:String =>=>=> RelationalSchema.Column>> vcs.name;
ClassDiagram.Attribut>> MapKeyParent.serialversionuid:long =>=>=> RelationalSchema.Column>> mapkeyparent.serialversionuid;
ClassDiagram.Attribut>> MapKeyParent.id:long =>=>=> RelationalSchema.Column>> mapkeyparent.id PRIMARY KEY;
ClassDiagram.Attribut>> C.cid:String =>=>=> RelationalSchema.Column>> c.cid PRIMARY KEY;
ClassDiagram.Attribut>> C.GeneratedName:CM =>=>=> RelationalSchema.Column>> c.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> HandlerToHandlerMapInstance.id:int =>=>=> RelationalSchema.Column>> handlertohandlermapinstance.id PRIMARY KEY;
ClassDiagram.Attribut>> HandlerToHandlerMapInstance.map:Map<String,String> =>=>=> RelationalSchema.Column>> handlertohandlermapinstance.map;
ClassDiagram.Attribut>> IdOrderedOneManyParent.id:long =>=>=> RelationalSchema.Column>> idorderedonemanyparent.id PRIMARY KEY;
ClassDiagram.Attribut>> IdOrderedOneManyParent.name:String =>=>=> RelationalSchema.Column>> idorderedonemanyparent.name;
ClassDiagram.Attribut>> IdOrderedOneManyParent.optlock:int =>=>=> RelationalSchema.Column>> idorderedonemanyparent.optlock;
ClassDiagram.Attribut>> EntityAInverseEager.id:int =>=>=> RelationalSchema.Column>> entityainverseeager.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityAInverseEager.name:String =>=>=> RelationalSchema.Column>> entityainverseeager.name;
ClassDiagram.Attribut>> BidiParent.serialversionuid:long =>=>=> RelationalSchema.Column>> bidiparent.serialversionuid;
ClassDiagram.Attribut>> BidiParent.id:long =>=>=> RelationalSchema.Column>> bidiparent.id PRIMARY KEY;
ClassDiagram.Attribut>> BidiParent.name:String =>=>=> RelationalSchema.Column>> bidiparent.name;
ClassDiagram.Attribut>> CascadingOneManyChild.id:long =>=>=> RelationalSchema.Column>> cascadingonemanychild.id PRIMARY KEY;
ClassDiagram.Attribut>> CascadingOneManyChild.name:String =>=>=> RelationalSchema.Column>> cascadingonemanychild.name;
ClassDiagram.Attribut>> CascadingOneManyChild.optlock:Integer =>=>=> RelationalSchema.Column>> cascadingonemanychild.optlock;
ClassDiagram.Attribut>> TblChild.childid:Integer =>=>=> RelationalSchema.Column>> tblchild.childid PRIMARY KEY;
ClassDiagram.Attribut>> TblChild.vrsnbr:Integer =>=>=> RelationalSchema.Column>> tblchild.vrsnbr;
ClassDiagram.Attribut>> AText.id:int =>=>=> RelationalSchema.Column>> atext.id PRIMARY KEY;
ClassDiagram.Attribut>> AText.name:String =>=>=> RelationalSchema.Column>> atext.name;
ClassDiagram.Attribut>> AText.GeneratedName:ACase =>=>=> RelationalSchema.Column>> atext.GeneratedName;
ClassDiagram.Attribut>> AText.acaseid:int =>=>=> RelationalSchema.Column>> atext.acaseid;
ClassDiagram.Attribut>> OneOneChild.id:long =>=>=> RelationalSchema.Column>> oneonechild.id PRIMARY KEY;
ClassDiagram.Attribut>> OneOneChild.name:String =>=>=> RelationalSchema.Column>> oneonechild.name;
ClassDiagram.Attribut>> OneOneChild.optlock:Integer =>=>=> RelationalSchema.Column>> oneonechild.optlock;
ClassDiagram.Attribut>> VC.vcid:String =>=>=> RelationalSchema.Column>> vc.vcid PRIMARY KEY;
ClassDiagram.Attribut>> VC.//////ii:VCS =>=>=> RelationalSchema.Column>> vc.//////ii PRIMARY KEY;
ClassDiagram.Attribut>> AEvident.id:int =>=>=> RelationalSchema.Column>> aevident.id PRIMARY KEY;
ClassDiagram.Attribut>> AEvident.name:String =>=>=> RelationalSchema.Column>> aevident.name;
ClassDiagram.Attribut>> AEvident.GeneratedName:AText =>=>=> RelationalSchema.Column>> aevident.GeneratedName;
ClassDiagram.Attribut>> ACase.id:int =>=>=> RelationalSchema.Column>> acase.id PRIMARY KEY;
ClassDiagram.Attribut>> ACase.name:String =>=>=> RelationalSchema.Column>> acase.name;
ClassDiagram.Attribut>> ACase.GeneratedName:AText =>=>=> RelationalSchema.Column>> acase.GeneratedName;
ClassDiagram.Attribut>> MapKeyChild.serialversionuid:long =>=>=> RelationalSchema.Column>> mapkeychild.serialversionuid;
ClassDiagram.Attribut>> MapKeyChild.id:long =>=>=> RelationalSchema.Column>> mapkeychild.id PRIMARY KEY;
ClassDiagram.Attribut>> MapKeyChild.mapkey:String =>=>=> RelationalSchema.Column>> mapkeychild.mapkey;
ClassDiagram.Attribut>> Order.oid:int =>=>=> RelationalSchema.Column>> order.oid PRIMARY KEY;
ClassDiagram.Attribut>> Order.amount:double =>=>=> RelationalSchema.Column>> order.amount;
ClassDiagram.Attribut>> Order.delivered:boolean =>=>=> RelationalSchema.Column>> order.delivered;
ClassDiagram.Attribut>> Order.version:long =>=>=> RelationalSchema.Column>> order.version;
ClassDiagram.Attribut>> EntityDInverseEager.id:int =>=>=> RelationalSchema.Column>> entitydinverseeager.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityDInverseEager.name:String =>=>=> RelationalSchema.Column>> entitydinverseeager.name;
ClassDiagram.Attribut>> EntityDInverseEager.logincount:int =>=>=> RelationalSchema.Column>> entitydinverseeager.logincount;
ClassDiagram.Attribut>> EntityDInverseEager.logoutcount:int =>=>=> RelationalSchema.Column>> entitydinverseeager.logoutcount;
ClassDiagram.Attribut>> EntityDInverseEager.email:String =>=>=> RelationalSchema.Column>> entitydinverseeager.email;
ClassDiagram.Attribut>> Child.serialversionuid:long =>=>=> RelationalSchema.Column>> child.serialversionuid;
ClassDiagram.Attribut>> Child.id:int =>=>=> RelationalSchema.Column>> child.id PRIMARY KEY;
ClassDiagram.Attribut>> Child.name:String =>=>=> RelationalSchema.Column>> child.name;
ClassDiagram.Attribut>> IdOrderedOneManyChild.id:long =>=>=> RelationalSchema.Column>> idorderedonemanychild.id PRIMARY KEY;
ClassDiagram.Attribut>> IdOrderedOneManyChild.name:String =>=>=> RelationalSchema.Column>> idorderedonemanychild.name;
ClassDiagram.Attribut>> IdOrderedOneManyChild.optlock:int =>=>=> RelationalSchema.Column>> idorderedonemanychild.optlock;
ClassDiagram.Attribut>> RelationToHandlerMapInstance.id:int =>=>=> RelationalSchema.Column>> relationtohandlermapinstance.id PRIMARY KEY;
ClassDiagram.Attribut>> RelationToHandlerMapInstance.aftmap:Map<AllFieldTypes,String> =>=>=> RelationalSchema.Column>> relationtohandlermapinstance.aftmap;
ClassDiagram.Attribut>> InheritanceHierarchyConcrete.serialversionuid:long =>=>=> RelationalSchema.Column>> inheritancehierarchyconcrete.serialversionuid;
ClassDiagram.Attribut>> InheritanceHierarchyConcrete.value:int =>=>=> RelationalSchema.Column>> inheritancehierarchyconcrete.value;
ClassDiagram.Attribut>> OneManyLazyChild.id:long =>=>=> RelationalSchema.Column>> onemanylazychild.id PRIMARY KEY;
ClassDiagram.Attribut>> OneManyLazyChild.name:String =>=>=> RelationalSchema.Column>> onemanylazychild.name;
ClassDiagram.Attribut>> OneManyLazyChild.optlock:Integer =>=>=> RelationalSchema.Column>> onemanylazychild.optlock;
ClassDiagram.Attribut>> EntityA2InverseEager.name2:String =>=>=> RelationalSchema.Column>> entitya2inverseeager.name2;
ClassDiagram.Attribut>> HandlerToRelationMapInstance.id:int =>=>=> RelationalSchema.Column>> handlertorelationmapinstance.id PRIMARY KEY;
ClassDiagram.Attribut>> HandlerToRelationMapInstance.map:Map<String,AllFieldTypes> =>=>=> RelationalSchema.Column>> handlertorelationmapinstance.map;
ClassDiagram.Attribut>> CM.cmid:String =>=>=> RelationalSchema.Column>> cm.cmid PRIMARY KEY;
ClassDiagram.Attribut>> CM.GeneratedName:E =>=>=> RelationalSchema.Column>> cm.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> D.id:String =>=>=> RelationalSchema.Column>> d.id PRIMARY KEY;
ClassDiagram.Attribut>> D.a:String =>=>=> RelationalSchema.Column>> d.a;
ClassDiagram.Attribut>> D.GeneratedName:VC =>=>=> RelationalSchema.Column>> d.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> EntityA1InverseEager.name1:String =>=>=> RelationalSchema.Column>> entitya1inverseeager.name1;
ClassDiagram.Attribut>> Util1xmRt.id:int =>=>=> RelationalSchema.Column>> util1xmrt.id PRIMARY KEY;
ClassDiagram.Attribut>> Util1xmRt.version:int =>=>=> RelationalSchema.Column>> util1xmrt.version;
ClassDiagram.Attribut>> Util1xmRt.lastname:String =>=>=> RelationalSchema.Column>> util1xmrt.lastname;
ClassDiagram.Attribut>> BidiChild.serialversionuid:long =>=>=> RelationalSchema.Column>> bidichild.serialversionuid;
ClassDiagram.Attribut>> BidiChild.id:long =>=>=> RelationalSchema.Column>> bidichild.id PRIMARY KEY;
ClassDiagram.Attribut>> BidiChild.name:String =>=>=> RelationalSchema.Column>> bidichild.name;
ClassDiagram.Attribut>> ChildChildClass.name2:String =>=>=> RelationalSchema.Column>> childchildclass.name2;
ClassDiagram.Attribut>> OneManyEagerParent.id:long =>=>=> RelationalSchema.Column>> onemanyeagerparent.id PRIMARY KEY;
ClassDiagram.Attribut>> OneManyEagerParent.name:String =>=>=> RelationalSchema.Column>> onemanyeagerparent.name;
ClassDiagram.Attribut>> OneManyEagerParent.optlock:Integer =>=>=> RelationalSchema.Column>> onemanyeagerparent.optlock;
ClassDiagram.Attribut>> ChainEntityB.bid:long =>=>=> RelationalSchema.Column>> chainentityb.bid PRIMARY KEY;
ClassDiagram.Attribut>> ChainEntityB.optlock:Integer =>=>=> RelationalSchema.Column>> chainentityb.optlock;
ClassDiagram.Attribut>> ChainEntityB.name:String =>=>=> RelationalSchema.Column>> chainentityb.name;
ClassDiagram.Attribut>> GrandChildClass.someunloadedfield:String =>=>=> RelationalSchema.Column>> grandchildclass.someunloadedfield;
ClassDiagram.Attribut>> ConcurrentEntityRight.id:int =>=>=> RelationalSchema.Column>> concurrententityright.id PRIMARY KEY;
ClassDiagram.Attribut>> ConcurrentEntityRight.strdata:String =>=>=> RelationalSchema.Column>> concurrententityright.strdata;
ClassDiagram.Attribut>> PPerson.id:int =>=>=> RelationalSchema.Column>> pperson.id PRIMARY KEY;
ClassDiagram.Attribut>> PPerson.name:String =>=>=> RelationalSchema.Column>> pperson.name;
ClassDiagram.Attribut>> OneOneParent.id:long =>=>=> RelationalSchema.Column>> oneoneparent.id PRIMARY KEY;
ClassDiagram.Attribut>> OneOneParent.name:String =>=>=> RelationalSchema.Column>> oneoneparent.name;
ClassDiagram.Attribut>> OneOneParent.optlock:Integer =>=>=> RelationalSchema.Column>> oneoneparent.optlock;
ClassDiagram.Attribut>> HandlerCollectionInstance.id:int =>=>=> RelationalSchema.Column>> handlercollectioninstance.id PRIMARY KEY;
ClassDiagram.Attribut>> HandlerCollectionInstance.collection:Collection<String> =>=>=> RelationalSchema.Column>> handlercollectioninstance.collection;
ClassDiagram.Attribut>> DataStoreManyOneIdOwner.id:DataStoreBasicEntity =>=>=> RelationalSchema.Column>> datastoremanyoneidowner.id PRIMARY KEY;
ClassDiagram.Attribut>> DataStoreManyOneIdOwner.name:String =>=>=> RelationalSchema.Column>> datastoremanyoneidowner.name;
ClassDiagram.Attribut>> DataStoreManyOneIdOwner.optlock:Integer =>=>=> RelationalSchema.Column>> datastoremanyoneidowner.optlock;
ClassDiagram.Attribut>> RelationToRelationMapInstance.id:int =>=>=> RelationalSchema.Column>> relationtorelationmapinstance.id PRIMARY KEY;
ClassDiagram.Attribut>> RelationToRelationMapInstance.map:Map<AllFieldTypes,AllFieldTypes> =>=>=> RelationalSchema.Column>> relationtorelationmapinstance.map;
ClassDiagram.Attribut>> TblGrandChild.grandchildid:Integer =>=>=> RelationalSchema.Column>> tblgrandchild.grandchildid PRIMARY KEY;
ClassDiagram.Attribut>> TblGrandChild.vrsnbr:Integer =>=>=> RelationalSchema.Column>> tblgrandchild.vrsnbr;
ClassDiagram.Attribut>> Parent.serialversionuid:long =>=>=> RelationalSchema.Column>> parent.serialversionuid;
ClassDiagram.Attribut>> Parent.id:int =>=>=> RelationalSchema.Column>> parent.id PRIMARY KEY;
ClassDiagram.Attribut>> ParentClass.items:Set<String> =>=>=> RelationalSchema.Column>> parentclass.items;
ClassDiagram.Attribut>> TblParent.parentid:Integer =>=>=> RelationalSchema.Column>> tblparent.parentid PRIMARY KEY;
ClassDiagram.Attribut>> ChainEntityC.cid:long =>=>=> RelationalSchema.Column>> chainentityc.cid PRIMARY KEY;
ClassDiagram.Attribut>> ChainEntityC.optlock:Integer =>=>=> RelationalSchema.Column>> chainentityc.optlock;
ClassDiagram.Attribut>> ChainEntityC.chainentitybid:long =>=>=> RelationalSchema.Column>> chainentityc.chainentitybid;
ClassDiagram.Attribut>> ChainEntityC.name:String =>=>=> RelationalSchema.Column>> chainentityc.name;
ClassDiagram.Attribut>> MultipleSameTypedEmbedded.id:long =>=>=> RelationalSchema.Column>> multiplesametypedembedded.id PRIMARY KEY;
ClassDiagram.Attribut>> MultipleSameTypedEmbedded.name:String =>=>=> RelationalSchema.Column>> multiplesametypedembedded.name;
ClassDiagram.Attribut>> MultipleSameTypedEmbedded.embed1:EmbeddableWithRelation =>=>=> RelationalSchema.Column>> multiplesametypedembedded.embed1;
ClassDiagram.Attribut>> MultipleSameTypedEmbedded.embed2:EmbeddableWithRelation =>=>=> RelationalSchema.Column>> multiplesametypedembedded.embed2;
ClassDiagram.Attribut>> MultipleSameTypedEmbedded.optlock:Integer =>=>=> RelationalSchema.Column>> multiplesametypedembedded.optlock;
ClassDiagram.Attribut>> ManyOneCompoundIdOwner.id:long =>=>=> RelationalSchema.Column>> manyonecompoundidowner.id PRIMARY KEY;
ClassDiagram.Attribut>> ManyOneCompoundIdOwner.entityid:BasicEntity =>=>=> RelationalSchema.Column>> manyonecompoundidowner.entityid PRIMARY KEY;
ClassDiagram.Attribut>> ManyOneCompoundIdOwner.name:String =>=>=> RelationalSchema.Column>> manyonecompoundidowner.name;
ClassDiagram.Attribut>> ManyOneCompoundIdOwner.optlock:Integer =>=>=> RelationalSchema.Column>> manyonecompoundidowner.optlock;
ClassDiagram.Attribut>> InheritanceHierarchyAbstract.serialversionuid:long =>=>=> RelationalSchema.Column>> inheritancehierarchyabstract.serialversionuid;
ClassDiagram.Attribut>> InheritanceHierarchyAbstract.id:long =>=>=> RelationalSchema.Column>> inheritancehierarchyabstract.id PRIMARY KEY;
ClassDiagram.Attribut>> ManyOneIdOwner.id:BasicEntity =>=>=> RelationalSchema.Column>> manyoneidowner.id PRIMARY KEY;
ClassDiagram.Attribut>> ManyOneIdOwner.name:String =>=>=> RelationalSchema.Column>> manyoneidowner.name;
ClassDiagram.Attribut>> ManyOneIdOwner.optlock:Integer =>=>=> RelationalSchema.Column>> manyoneidowner.optlock;
ClassDiagram.Attribut>> Util1xmLf.id:int =>=>=> RelationalSchema.Column>> util1xmlf.id PRIMARY KEY;
ClassDiagram.Attribut>> Util1xmLf.version:int =>=>=> RelationalSchema.Column>> util1xmlf.version;
ClassDiagram.Attribut>> Util1xmLf.firstname:String =>=>=> RelationalSchema.Column>> util1xmlf.firstname;
ClassDiagram.Attribut>> DataStoreBasicEntity.name:String =>=>=> RelationalSchema.Column>> datastorebasicentity.name;
ClassDiagram.Attribut>> DataStoreBasicEntity.optlock:Integer =>=>=> RelationalSchema.Column>> datastorebasicentity.optlock;
ClassDiagram.Attribut>> IncompleteRelationshipSubclass.serialversionuid:long =>=>=> RelationalSchema.Column>> incompleterelationshipsubclass.serialversionuid;
ClassDiagram.Attribut>> LrsEntityB.serialversionuid:long =>=>=> RelationalSchema.Column>> lrsentityb.serialversionuid;
ClassDiagram.Attribut>> LrsEntityB.id:Integer =>=>=> RelationalSchema.Column>> lrsentityb.id PRIMARY KEY;
ClassDiagram.Attribut>> LrsEntityB.name:String =>=>=> RelationalSchema.Column>> lrsentityb.name;
ClassDiagram.Attribut>> IncompleteRelationshipParentEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> incompleterelationshipparententity.serialversionuid;
ClassDiagram.Attribut>> IncompleteRelationshipParentEntity.pk:IncompleteRelationshipParentEntityPk =>=>=> RelationalSchema.Column>> incompleterelationshipparententity.pk;
ClassDiagram.Attribut>> IncompleteRelationshipChildEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> incompleterelationshipchildentity.serialversionuid;
ClassDiagram.Attribut>> IncompleteRelationshipChildEntity.pk:IncompleteRelationshipChildEntityPk =>=>=> RelationalSchema.Column>> incompleterelationshipchildentity.pk;
ClassDiagram.Attribut>> LrsEntityA.serialversionuid:long =>=>=> RelationalSchema.Column>> lrsentitya.serialversionuid;
ClassDiagram.Attribut>> LrsEntityA.id:Integer =>=>=> RelationalSchema.Column>> lrsentitya.id PRIMARY KEY;
ClassDiagram.Attribut>> LrsEntityA.name:String =>=>=> RelationalSchema.Column>> lrsentitya.name;
ClassDiagram.Attribut>> LrsEntityA.age:int =>=>=> RelationalSchema.Column>> lrsentitya.age;
ClassDiagram.Attribut>> E.eid:String =>=>=> RelationalSchema.Column>> e.eid PRIMARY KEY;
ClassDiagram.Attribut>> E.name:String =>=>=> RelationalSchema.Column>> e.name;
ClassDiagram.Attribut>> Order.oid:int =>=>=> RelationalSchema.Column>> order.oid PRIMARY KEY;
ClassDiagram.Attribut>> Order.amount:double =>=>=> RelationalSchema.Column>> order.amount;
ClassDiagram.Attribut>> Order.delivered:boolean =>=>=> RelationalSchema.Column>> order.delivered;
ClassDiagram.Attribut>> Order.ship:Address =>=>=> RelationalSchema.Column>> order.ship;
ClassDiagram.Attribut>> Order.version:long =>=>=> RelationalSchema.Column>> order.version;
ClassDiagram.Attribut>> Customer.cid:CustomerKey =>=>=> RelationalSchema.Column>> customer.cid;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.GeneratedName:CreditRating =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> Customer.address:EAddress =>=>=> RelationalSchema.Column>> customer.address;
ClassDiagram.Attribut>> Customer.version:long =>=>=> RelationalSchema.Column>> customer.version;
ClassDiagram.Attribut>> Lecturer.serialversionuid:long =>=>=> RelationalSchema.Column>> lecturer.serialversionuid;
ClassDiagram.Attribut>> Lecturer.id:Long =>=>=> RelationalSchema.Column>> lecturer.id PRIMARY KEY;
ClassDiagram.Attribut>> Lecturer.optlock:Integer =>=>=> RelationalSchema.Column>> lecturer.optlock;
ClassDiagram.Attribut>> Lecturer.name:String =>=>=> RelationalSchema.Column>> lecturer.name;
ClassDiagram.Attribut>> Course.serialversionuid:long =>=>=> RelationalSchema.Column>> course.serialversionuid;
ClassDiagram.Attribut>> Course.id:Long =>=>=> RelationalSchema.Column>> course.id PRIMARY KEY;
ClassDiagram.Attribut>> Course.optlock:Integer =>=>=> RelationalSchema.Column>> course.optlock;
ClassDiagram.Attribut>> Course.coursenumber:String =>=>=> RelationalSchema.Column>> course.coursenumber;
ClassDiagram.Attribut>> Course.normalattribute:String =>=>=> RelationalSchema.Column>> course.normalattribute;
ClassDiagram.Attribut>> Course.objective:LocalizedText =>=>=> RelationalSchema.Column>> course.objective;
ClassDiagram.Attribut>> Course.title:LocalizedText =>=>=> RelationalSchema.Column>> course.title;
ClassDiagram.Attribut>> Course.lobcolumn:String =>=>=> RelationalSchema.Column>> course.lobcolumn;
ClassDiagram.Attribut>> EntityB.serialversionuid:long =>=>=> RelationalSchema.Column>> entityb.serialversionuid;
ClassDiagram.Attribut>> EntityB.id:long =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityB.name:String =>=>=> RelationalSchema.Column>> entityb.name;
ClassDiagram.Attribut>> MixedMappingLocation.id:MixedMappingLocationEmbeddedId =>=>=> RelationalSchema.Column>> mixedmappinglocation.id;
ClassDiagram.Attribut>> MixedMappingLocation.basic1:String =>=>=> RelationalSchema.Column>> mixedmappinglocation.basic1;
ClassDiagram.Attribut>> MixedMappingLocation.basic2:String =>=>=> RelationalSchema.Column>> mixedmappinglocation.basic2;
ClassDiagram.Attribut>> EntityC.id:long =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.version:int =>=>=> RelationalSchema.Column>> entityc.version;
ClassDiagram.Attribut>> EntityA.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya.serialversionuid;
ClassDiagram.Attribut>> EntityA.id:long =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA.name:String =>=>=> RelationalSchema.Column>> entitya.name;
ClassDiagram.Attribut>> AccountingHierarchyRate.serialversionuid:long =>=>=> RelationalSchema.Column>> accountinghierarchyrate.serialversionuid;
ClassDiagram.Attribut>> AccountingHierarchyRate.id:String =>=>=> RelationalSchema.Column>> accountinghierarchyrate.id PRIMARY KEY;
ClassDiagram.Attribut>> AccountingHierarchyRate.GeneratedName:AccountingHierarchy =>=>=> RelationalSchema.Column>> accountinghierarchyrate.GeneratedName;
ClassDiagram.Attribut>> AccountingHierarchyRate.currentrate:BigDecimal =>=>=> RelationalSchema.Column>> accountinghierarchyrate.currentrate;
ClassDiagram.Attribut>> AccountingHierarchyRate.budgetrate:BigDecimal =>=>=> RelationalSchema.Column>> accountinghierarchyrate.budgetrate;
ClassDiagram.Attribut>> AccountingHierarchy.serialversionuid:long =>=>=> RelationalSchema.Column>> accountinghierarchy.serialversionuid;
ClassDiagram.Attribut>> AccountingHierarchy.code:String =>=>=> RelationalSchema.Column>> accountinghierarchy.code PRIMARY KEY;
ClassDiagram.Attribut>> AccountingHierarchy.shortdesc:String =>=>=> RelationalSchema.Column>> accountinghierarchy.shortdesc;
ClassDiagram.Attribut>> AccountingHierarchy.version:Long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.empno:int =>=>=> RelationalSchema.Column>> employee.empno PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.version:int =>=>=> RelationalSchema.Column>> employee.version;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.deptno:int =>=>=> RelationalSchema.Column>> department.deptno PRIMARY KEY;
ClassDiagram.Attribut>> Department.version:int =>=>=> RelationalSchema.Column>> department.version;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> PersonTest.primarykey:String =>=>=> RelationalSchema.Column>> persontest.primarykey PRIMARY KEY;
ClassDiagram.Attribut>> PersonTest.name:String =>=>=> RelationalSchema.Column>> persontest.name;
ClassDiagram.Attribut>> DepartmentTest.primarykey:String =>=>=> RelationalSchema.Column>> departmenttest.primarykey PRIMARY KEY;
ClassDiagram.Attribut>> DepartmentTest.name:String =>=>=> RelationalSchema.Column>> departmenttest.name;
ClassDiagram.Attribut>> OrderedNameEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> orderednameentity.serialversionuid;
ClassDiagram.Attribut>> OrderedNameEntity.id:int =>=>=> RelationalSchema.Column>> orderednameentity.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderedNameEntity.name:String =>=>=> RelationalSchema.Column>> orderednameentity.name;
ClassDiagram.Attribut>> OrderedOneToManyEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> orderedonetomanyentity.serialversionuid;
ClassDiagram.Attribut>> OrderedOneToManyEntity.id:int =>=>=> RelationalSchema.Column>> orderedonetomanyentity.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderedElementEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> orderedelemententity.serialversionuid;
ClassDiagram.Attribut>> OrderedElementEntity.id:int =>=>=> RelationalSchema.Column>> orderedelemententity.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderedElementEntity.elements:List<String> =>=>=> RelationalSchema.Column>> orderedelemententity.elements;
ClassDiagram.Attribut>> UnorderedNameEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> unorderednameentity.serialversionuid;
ClassDiagram.Attribut>> UnorderedNameEntity.id:int =>=>=> RelationalSchema.Column>> unorderednameentity.id PRIMARY KEY;
ClassDiagram.Attribut>> UnorderedNameEntity.name:String =>=>=> RelationalSchema.Column>> unorderednameentity.name;
ClassDiagram.Attribut>> OrderedManyToManyEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> orderedmanytomanyentity.serialversionuid;
ClassDiagram.Attribut>> OrderedManyToManyEntity.id:int =>=>=> RelationalSchema.Column>> orderedmanytomanyentity.id PRIMARY KEY;
ClassDiagram.Attribut>> LongVersionEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> longversionentity.serialversionuid;
ClassDiagram.Attribut>> LongVersionEntity.id:int =>=>=> RelationalSchema.Column>> longversionentity.id PRIMARY KEY;
ClassDiagram.Attribut>> LongVersionEntity.version:Long =>=>=> RelationalSchema.Column>> longversionentity.version;
ClassDiagram.Attribut>> ShortVersionEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> shortversionentity.serialversionuid;
ClassDiagram.Attribut>> ShortVersionEntity.id:int =>=>=> RelationalSchema.Column>> shortversionentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ShortVersionEntity.version:Short =>=>=> RelationalSchema.Column>> shortversionentity.version;
ClassDiagram.Attribut>> PrimativeShortVersionEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> primativeshortversionentity.serialversionuid;
ClassDiagram.Attribut>> PrimativeShortVersionEntity.id:int =>=>=> RelationalSchema.Column>> primativeshortversionentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PrimativeShortVersionEntity.version:short =>=>=> RelationalSchema.Column>> primativeshortversionentity.version;
ClassDiagram.Attribut>> TimestampVersionEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> timestampversionentity.serialversionuid;
ClassDiagram.Attribut>> TimestampVersionEntity.id:int =>=>=> RelationalSchema.Column>> timestampversionentity.id PRIMARY KEY;
ClassDiagram.Attribut>> TimestampVersionEntity.version:Timestamp =>=>=> RelationalSchema.Column>> timestampversionentity.version;
ClassDiagram.Attribut>> PrimativeLongVersionEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> primativelongversionentity.serialversionuid;
ClassDiagram.Attribut>> PrimativeLongVersionEntity.id:int =>=>=> RelationalSchema.Column>> primativelongversionentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PrimativeLongVersionEntity.version:long =>=>=> RelationalSchema.Column>> primativelongversionentity.version;
ClassDiagram.Attribut>> ChildVersionEntity.id:int =>=>=> RelationalSchema.Column>> childversionentity.id PRIMARY KEY;
ClassDiagram.Attribut>> Document.id:int =>=>=> RelationalSchema.Column>> document.id PRIMARY KEY;
ClassDiagram.Attribut>> Author.id:int =>=>=> RelationalSchema.Column>> author.id PRIMARY KEY;
ClassDiagram.Attribut>> Author.version:int =>=>=> RelationalSchema.Column>> author.version;
ClassDiagram.Attribut>> EntityA.serialversionuid:long =>=>=> RelationalSchema.Column>> entitya.serialversionuid;
ClassDiagram.Attribut>> EntityA.id:int =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA.s1:String =>=>=> RelationalSchema.Column>> entitya.s1;
ClassDiagram.Attribut>> EntityA.s2:String =>=>=> RelationalSchema.Column>> entitya.s2;
ClassDiagram.Attribut>> EntityA./*	*bydefault,openjpastorescharsasints,sotoforcetheuseof	*achar(1)field,youwouldneedtooverridethisprocessingvia	*adbdictionaryproperty:	*-dopenjpa.jdbc.dbdictionary:boolean =>=>=> RelationalSchema.Column>> entitya./*	*bydefault,openjpastorescharsasints,sotoforcetheuseof	*achar(1)field,youwouldneedtooverridethisprocessingvia	*adbdictionaryproperty:	*-dopenjpa.jdbc.dbdictionary;
ClassDiagram.Attribut>> Ent1.//primarykey:pk:int =>=>=> RelationalSchema.Column>> ent1.//primarykey:pk PRIMARY KEY;
ClassDiagram.Attribut>> Ent1.name:String =>=>=> RelationalSchema.Column>> ent1.name;
ClassDiagram.Attribut>> EntityD3.id:int =>=>=> RelationalSchema.Column>> entityd3.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityD3.name:String =>=>=> RelationalSchema.Column>> entityd3.name;
ClassDiagram.Attribut>> EntityI.id:int =>=>=> RelationalSchema.Column>> entityi.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityI.name:String =>=>=> RelationalSchema.Column>> entityi.name;
ClassDiagram.Attribut>> EntityE.id:int =>=>=> RelationalSchema.Column>> entitye.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityE.name:String =>=>=> RelationalSchema.Column>> entitye.name;
ClassDiagram.Attribut>> EntityI3.id:int =>=>=> RelationalSchema.Column>> entityi3.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityI3.name:String =>=>=> RelationalSchema.Column>> entityi3.name;
ClassDiagram.Attribut>> EntityA.id:int =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA.name:String =>=>=> RelationalSchema.Column>> entitya.name;
ClassDiagram.Attribut>> EntityA.secname:String =>=>=> RelationalSchema.Column>> entitya.secname;
ClassDiagram.Attribut>> EntityA.collectionset:Set<String> =>=>=> RelationalSchema.Column>> entitya.collectionset;
ClassDiagram.Attribut>> EntityA.collectiondelimset:Set<String> =>=>=> RelationalSchema.Column>> entitya.collectiondelimset;
ClassDiagram.Attribut>> EntityA.collectionmap:Map<String,String> =>=>=> RelationalSchema.Column>> entitya.collectionmap;
ClassDiagram.Attribut>> EntityA.delimcollectionmap:Map<String,String> =>=>=> RelationalSchema.Column>> entitya.delimcollectionmap;
ClassDiagram.Attribut>> EntityD.id:int =>=>=> RelationalSchema.Column>> entityd.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityD.name:String =>=>=> RelationalSchema.Column>> entityd.name;
ClassDiagram.Attribut>> EntityI2.id:int =>=>=> RelationalSchema.Column>> entityi2.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityI2.name:String =>=>=> RelationalSchema.Column>> entityi2.name;
ClassDiagram.Attribut>> Car2.id:int =>=>=> RelationalSchema.Column>> car2.id PRIMARY KEY;
ClassDiagram.Attribut>> Car2.model:String =>=>=> RelationalSchema.Column>> car2.model;
ClassDiagram.Attribut>> Car2.color:String =>=>=> RelationalSchema.Column>> car2.color;
ClassDiagram.Attribut>> EntityD2.id:int =>=>=> RelationalSchema.Column>> entityd2.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityD2.name:String =>=>=> RelationalSchema.Column>> entityd2.name;
ClassDiagram.Attribut>> Animal.id:int =>=>=> RelationalSchema.Column>> animal.id PRIMARY KEY;
ClassDiagram.Attribut>> Animal.type:String =>=>=> RelationalSchema.Column>> animal.type;
ClassDiagram.Attribut>> Animal.name:String =>=>=> RelationalSchema.Column>> animal.name;
ClassDiagram.Attribut>> Animal.age:int =>=>=> RelationalSchema.Column>> animal.age;
ClassDiagram.Attribut>> EntityH.id:int =>=>=> RelationalSchema.Column>> entityh.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityH.name:String =>=>=> RelationalSchema.Column>> entityh.name;
ClassDiagram.Attribut>> EntityH.secname:String =>=>=> RelationalSchema.Column>> entityh.secname;
ClassDiagram.Attribut>> EntityF.id:int =>=>=> RelationalSchema.Column>> entityf.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityF.//note:delimitedcolumndefinitionisnotsupportedonsomedbs//todo:copyintoaseparateentityandconditionallyrunadifferenttestname:String =>=>=> RelationalSchema.Column>> entityf.//note:delimitedcolumndefinitionisnotsupportedonsomedbs//todo:copyintoaseparateentityandconditionallyrunadifferenttestname;
ClassDiagram.Attribut>> EntityF.nondelimname:String =>=>=> RelationalSchema.Column>> entityf.nondelimname;
ClassDiagram.Attribut>> EntityF.secname:String =>=>=> RelationalSchema.Column>> entityf.secname;
ClassDiagram.Attribut>> EntityF.cset:Set<String> =>=>=> RelationalSchema.Column>> entityf.cset;
ClassDiagram.Attribut>> EntityF.collectiondelimset:Set<String> =>=>=> RelationalSchema.Column>> entityf.collectiondelimset;
ClassDiagram.Attribut>> EntityF.cmap:Map<String,String> =>=>=> RelationalSchema.Column>> entityf.cmap;
ClassDiagram.Attribut>> EntityF.dcmap:Map<String,String> =>=>=> RelationalSchema.Column>> entityf.dcmap;
ClassDiagram.Attribut>> EntityI4.id:int =>=>=> RelationalSchema.Column>> entityi4.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityI4.name:String =>=>=> RelationalSchema.Column>> entityi4.name;
ClassDiagram.Attribut>> EntityB.id:int =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityB.name:String =>=>=> RelationalSchema.Column>> entityb.name;
ClassDiagram.Attribut>> EntityD.id:int =>=>=> RelationalSchema.Column>> entityd.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityD.name:String =>=>=> RelationalSchema.Column>> entityd.name;
ClassDiagram.Attribut>> EntityD4.id:int =>=>=> RelationalSchema.Column>> entityd4.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityD4.name:String =>=>=> RelationalSchema.Column>> entityd4.name;
ClassDiagram.Attribut>> EntityE.id:int =>=>=> RelationalSchema.Column>> entitye.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityE.name:String =>=>=> RelationalSchema.Column>> entitye.name;
ClassDiagram.Attribut>> EntityG.id:int =>=>=> RelationalSchema.Column>> entityg.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityG.name:String =>=>=> RelationalSchema.Column>> entityg.name;
ClassDiagram.Attribut>> EntityC.id:int =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.name:String =>=>=> RelationalSchema.Column>> entityc.name;
ClassDiagram.Attribut>> EntityC.secname:String =>=>=> RelationalSchema.Column>> entityc.secname;
ClassDiagram.Attribut>> EntityD3.id:int =>=>=> RelationalSchema.Column>> entityd3.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityD3.name:String =>=>=> RelationalSchema.Column>> entityd3.name;
ClassDiagram.Attribut>> EntityF.id:int =>=>=> RelationalSchema.Column>> entityf.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityF.//note:delimitedcolumndefinitionisnotsupportedonsomedbs//todo:copyintoaseparateentityandconditionallyrunadifferenttestname:String =>=>=> RelationalSchema.Column>> entityf.//note:delimitedcolumndefinitionisnotsupportedonsomedbs//todo:copyintoaseparateentityandconditionallyrunadifferenttestname;
ClassDiagram.Attribut>> EntityF.nondelimname:String =>=>=> RelationalSchema.Column>> entityf.nondelimname;
ClassDiagram.Attribut>> EntityF.secname:String =>=>=> RelationalSchema.Column>> entityf.secname;
ClassDiagram.Attribut>> EntityF.nscs:Set<String> =>=>=> RelationalSchema.Column>> entityf.nscs;
ClassDiagram.Attribut>> EntityF.nscds:Set<String> =>=>=> RelationalSchema.Column>> entityf.nscds;
ClassDiagram.Attribut>> EntityF.nscollmap:Map<String,String> =>=>=> RelationalSchema.Column>> entityf.nscollmap;
ClassDiagram.Attribut>> EntityF.delimcollectionmap:Map<String,String> =>=>=> RelationalSchema.Column>> entityf.delimcollectionmap;
ClassDiagram.Attribut>> EntityD2.id:int =>=>=> RelationalSchema.Column>> entityd2.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityD2.name:String =>=>=> RelationalSchema.Column>> entityd2.name;
ClassDiagram.Attribut>> Car.id:int =>=>=> RelationalSchema.Column>> car.id PRIMARY KEY;
ClassDiagram.Attribut>> Car.model:String =>=>=> RelationalSchema.Column>> car.model;
ClassDiagram.Attribut>> Car.color:String =>=>=> RelationalSchema.Column>> car.color;
ClassDiagram.Attribut>> Car.modelyear:String =>=>=> RelationalSchema.Column>> car.modelyear;
ClassDiagram.Attribut>> EntityD4.id:int =>=>=> RelationalSchema.Column>> entityd4.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityD4.name:String =>=>=> RelationalSchema.Column>> entityd4.name;
ClassDiagram.Attribut>> Animal2.id:int =>=>=> RelationalSchema.Column>> animal2.id PRIMARY KEY;
ClassDiagram.Attribut>> Animal2.type:String =>=>=> RelationalSchema.Column>> animal2.type;
ClassDiagram.Attribut>> Animal2.name:String =>=>=> RelationalSchema.Column>> animal2.name;
ClassDiagram.Attribut>> EntityG.id:int =>=>=> RelationalSchema.Column>> entityg.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityG.name:String =>=>=> RelationalSchema.Column>> entityg.name;
ClassDiagram.Attribut>> EntityC.id:int =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.name:String =>=>=> RelationalSchema.Column>> entityc.name;
ClassDiagram.Attribut>> EntityC.secname:String =>=>=> RelationalSchema.Column>> entityc.secname;
ClassDiagram.Attribut>> ByteArrayHolder.taskid:int =>=>=> RelationalSchema.Column>> bytearrayholder.taskid PRIMARY KEY;
ClassDiagram.Attribut>> ByteArrayHolder.//@lob//type1004size-1shouldbe1003tkiid:byte =>=>=> RelationalSchema.Column>> bytearrayholder.//@lob//type1004size-1shouldbe1003tkiid;
ClassDiagram.Attribut>> ByteArrayHolder.serialversionuid:long =>=>=> RelationalSchema.Column>> bytearrayholder.serialversionuid;
ClassDiagram.Attribut>> EnumSetOwner.id:int =>=>=> RelationalSchema.Column>> enumsetowner.id PRIMARY KEY;
ClassDiagram.Attribut>> EnumSetOwner.version:int =>=>=> RelationalSchema.Column>> enumsetowner.version;
ClassDiagram.Attribut>> EnumSetOwner.GeneratedName:EnumSetHolder =>=>=> RelationalSchema.Column>> enumsetowner.GeneratedName;
ClassDiagram.Attribut>> EnumFieldType.field:int =>=>=> RelationalSchema.Column>> enumfieldtype.field PRIMARY KEY;
ClassDiagram.Attribut>> EnumFieldType.enumfield:SampleEnum =>=>=> RelationalSchema.Column>> enumfieldtype.enumfield;
ClassDiagram.Attribut>> EnumFieldType.enumlist:List<SampleEnum> =>=>=> RelationalSchema.Column>> enumfieldtype.enumlist;
ClassDiagram.Attribut>> Person.id:int =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.version:int =>=>=> RelationalSchema.Column>> person.version;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> FGAddress.id:int =>=>=> RelationalSchema.Column>> fgaddress.id PRIMARY KEY;
ClassDiagram.Attribut>> FGAddress.street:String =>=>=> RelationalSchema.Column>> fgaddress.street;
ClassDiagram.Attribut>> FGAddress.city:String =>=>=> RelationalSchema.Column>> fgaddress.city;
ClassDiagram.Attribut>> FGAddress.state:String =>=>=> RelationalSchema.Column>> fgaddress.state;
ClassDiagram.Attribut>> FGAddress.zip:int =>=>=> RelationalSchema.Column>> fgaddress.zip;
ClassDiagram.Attribut>> FGDepartment.id:int =>=>=> RelationalSchema.Column>> fgdepartment.id PRIMARY KEY;
ClassDiagram.Attribut>> FGDepartment.name:String =>=>=> RelationalSchema.Column>> fgdepartment.name;
ClassDiagram.Attribut>> FGManager.mdata:String =>=>=> RelationalSchema.Column>> fgmanager.mdata;
ClassDiagram.Attribut>> FGEmployee.id:int =>=>=> RelationalSchema.Column>> fgemployee.id PRIMARY KEY;
ClassDiagram.Attribut>> FGEmployee.lastname:String =>=>=> RelationalSchema.Column>> fgemployee.lastname;
ClassDiagram.Attribut>> FGEmployee.firstname:String =>=>=> RelationalSchema.Column>> fgemployee.firstname;
ClassDiagram.Attribut>> FGEmployee.description:String =>=>=> RelationalSchema.Column>> fgemployee.description;
ClassDiagram.Attribut>> FGEmployee.rating:String =>=>=> RelationalSchema.Column>> fgemployee.rating;
ClassDiagram.Attribut>> XmlUncacheableEntity.id:int =>=>=> RelationalSchema.Column>> xmluncacheableentity.id PRIMARY KEY;
ClassDiagram.Attribut>> XmlUncacheableEntity.version:int =>=>=> RelationalSchema.Column>> xmluncacheableentity.version;
ClassDiagram.Attribut>> XmlUncacheableEntity.name:String =>=>=> RelationalSchema.Column>> xmluncacheableentity.name;
ClassDiagram.Attribut>> UncacheableEntity.id:int =>=>=> RelationalSchema.Column>> uncacheableentity.id PRIMARY KEY;
ClassDiagram.Attribut>> UncacheableEntity.version:int =>=>=> RelationalSchema.Column>> uncacheableentity.version;
ClassDiagram.Attribut>> UncacheableEntity.name:String =>=>=> RelationalSchema.Column>> uncacheableentity.name;
ClassDiagram.Attribut>> CacheableEntity.id:int =>=>=> RelationalSchema.Column>> cacheableentity.id PRIMARY KEY;
ClassDiagram.Attribut>> CacheableEntity.version:int =>=>=> RelationalSchema.Column>> cacheableentity.version;
ClassDiagram.Attribut>> CacheableEntity.name:String =>=>=> RelationalSchema.Column>> cacheableentity.name;
ClassDiagram.Attribut>> XmlCacheableEntity.id:int =>=>=> RelationalSchema.Column>> xmlcacheableentity.id PRIMARY KEY;
ClassDiagram.Attribut>> XmlCacheableEntity.version:int =>=>=> RelationalSchema.Column>> xmlcacheableentity.version;
ClassDiagram.Attribut>> XmlCacheableEntity.name:String =>=>=> RelationalSchema.Column>> xmlcacheableentity.name;
ClassDiagram.Attribut>> NegatedCachableEntity.id:int =>=>=> RelationalSchema.Column>> negatedcachableentity.id PRIMARY KEY;
ClassDiagram.Attribut>> NegatedCachableEntity.version:int =>=>=> RelationalSchema.Column>> negatedcachableentity.version;
ClassDiagram.Attribut>> NegatedCachableEntity.name:String =>=>=> RelationalSchema.Column>> negatedcachableentity.name;
ClassDiagram.Attribut>> ChildUncacheable.child:String =>=>=> RelationalSchema.Column>> childuncacheable.child;
ClassDiagram.Attribut>> ParentUnspecifiedEntity.id:int =>=>=> RelationalSchema.Column>> parentunspecifiedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ParentUnspecifiedEntity.version:int =>=>=> RelationalSchema.Column>> parentunspecifiedentity.version;
ClassDiagram.Attribut>> ParentUnspecifiedEntity.name:String =>=>=> RelationalSchema.Column>> parentunspecifiedentity.name;
ClassDiagram.Attribut>> UnspecifiedEntity.id:int =>=>=> RelationalSchema.Column>> unspecifiedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> UnspecifiedEntity.version:int =>=>=> RelationalSchema.Column>> unspecifiedentity.version;
ClassDiagram.Attribut>> UnspecifiedEntity.name:String =>=>=> RelationalSchema.Column>> unspecifiedentity.name;
ClassDiagram.Attribut>> NegatedUncacheableEntity.id:int =>=>=> RelationalSchema.Column>> negateduncacheableentity.id PRIMARY KEY;
ClassDiagram.Attribut>> NegatedUncacheableEntity.version:int =>=>=> RelationalSchema.Column>> negateduncacheableentity.version;
ClassDiagram.Attribut>> NegatedUncacheableEntity.name:String =>=>=> RelationalSchema.Column>> negateduncacheableentity.name;
ClassDiagram.Attribut>> ExplicitFieldAccess.f1:long =>=>=> RelationalSchema.Column>> explicitfieldaccess.f1;
ClassDiagram.Attribut>> ExplicitFieldAccess.f2:int =>=>=> RelationalSchema.Column>> explicitfieldaccess.f2;
ClassDiagram.Attribut>> ExplicitFieldAccess.f3:short =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ExplicitFieldAccess.transientf6:ImplicitFieldAccessBase =>=>=> RelationalSchema.Column>> explicitfieldaccess.transientf6;
ClassDiagram.Attribut>> ExplicitFieldAccessMixed.f1:long =>=>=> RelationalSchema.Column>> explicitfieldaccessmixed.f1;
ClassDiagram.Attribut>> ExplicitFieldAccessMixed.f2:int =>=>=> RelationalSchema.Column>> explicitfieldaccessmixed.f2;
ClassDiagram.Attribut>> ExplicitFieldAccessMixed.f3:short =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ExplicitFieldAccessMixed.f4:ImplicitFieldAccessBase =>=>=> RelationalSchema.Column>> explicitfieldaccessmixed.f4;
ClassDiagram.Attribut>> ExplicitFieldAccessMixed.transientf6:ImplicitFieldAccessBase =>=>=> RelationalSchema.Column>> explicitfieldaccessmixed.transientf6;
ClassDiagram.Attribut>> ExplicitPropertyAccess.f1:String =>=>=> RelationalSchema.Column>> explicitpropertyaccess.f1;
ClassDiagram.Attribut>> ExplicitPropertyAccess.f2:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ExplicitPropertyAccess.f3:String =>=>=> RelationalSchema.Column>> explicitpropertyaccess.f3;
ClassDiagram.Attribut>> ExplicitPropertyAccess.f4:String =>=>=> RelationalSchema.Column>> explicitpropertyaccess.f4;
ClassDiagram.Attribut>> MdrTestEntity.id:int =>=>=> RelationalSchema.Column>> mdrtestentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ArrayMember.array:Byte =>=>=> RelationalSchema.Column>> arraymember.array;
ClassDiagram.Attribut>> ArrayMember.array:byte =>=>=> RelationalSchema.Column>> arraymember.array;
ClassDiagram.Attribut>> ImplicitFieldAccessBase.f0:String =>=>=> RelationalSchema.Column>> implicitfieldaccessbase.f0;
ClassDiagram.Attribut>> ImplicitFieldAccessBase.primitive:int =>=>=> RelationalSchema.Column>> implicitfieldaccessbase.primitive;
ClassDiagram.Attribut>> ImplicitFieldAccessBase.boxedint:Integer =>=>=> RelationalSchema.Column>> implicitfieldaccessbase.boxedint;
ClassDiagram.Attribut>> ExplicitPropertyAccessMixed.f1:String =>=>=> RelationalSchema.Column>> explicitpropertyaccessmixed.f1;
ClassDiagram.Attribut>> ExplicitPropertyAccessMixed.f2:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ExplicitPropertyAccessMixed.f4:int =>=>=> RelationalSchema.Column>> explicitpropertyaccessmixed.f4;
ClassDiagram.Attribut>> ExplicitPropertyAccessMixed.f5:short =>=>=> RelationalSchema.Column>> explicitpropertyaccessmixed.f5;
ClassDiagram.Attribut>> RuntimeTest1.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest1.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest1.somefield:String =>=>=> RelationalSchema.Column>> runtimetest1.somefield;
ClassDiagram.Attribut>> RuntimeTest1.field:byte =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:boolean =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:char =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:double =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:float =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:int =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:long =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:short =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:String =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:BigInteger =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:BigDecimal =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:Date =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:Locale =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Byte =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Boolean =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.charobjfield:Character =>=>=> RelationalSchema.Column>> runtimetest1.charobjfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Double =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Float =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.intobjfield:Integer =>=>=> RelationalSchema.Column>> runtimetest1.intobjfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Long =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Short =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.//transactionalonlytransfield:TransactionalClassPC =>=>=> RelationalSchema.Column>> runtimetest1.//transactionalonlytransfield;
ClassDiagram.Attribut>> RuntimeTest1.trans:String =>=>=> RelationalSchema.Column>> runtimetest1.trans;
ClassDiagram.Attribut>> RuntimeTest1.//relationsselfoneone:RuntimeTest1 =>=>=> RelationalSchema.Column>> runtimetest1.//relationsselfoneone;
ClassDiagram.Attribut>> RuntimeTest1.selfonemany:Set =>=>=> RelationalSchema.Column>> runtimetest1.selfonemany;
ClassDiagram.Attribut>> MetaTest3.pcfield:Object =>=>=> RelationalSchema.Column>> metatest3.pcfield;
ClassDiagram.Attribut>> MetaTest3.externalfield:Object =>=>=> RelationalSchema.Column>> metatest3.externalfield;
ClassDiagram.Attribut>> MetaTest3.metafield:Object =>=>=> RelationalSchema.Column>> metatest3.metafield;
ClassDiagram.Attribut>> MetaTest7.id:long =>=>=> RelationalSchema.Column>> metatest7.id;
ClassDiagram.Attribut>> MetaTest7.status:MetaTest7Status =>=>=> RelationalSchema.Column>> metatest7.status;
ClassDiagram.Attribut>> MetaTest7.intlongstatus:MetaTest7IntLongStatus =>=>=> RelationalSchema.Column>> metatest7.intlongstatus;
ClassDiagram.Attribut>> MetaTest7.intintegerstatus:MetaTest7IntIntegerStatus =>=>=> RelationalSchema.Column>> metatest7.intintegerstatus;
ClassDiagram.Attribut>> MetaTest7.integerintegerstatus:MetaTest7IntegerIntegerStatus =>=>=> RelationalSchema.Column>> metatest7.integerintegerstatus;
ClassDiagram.Attribut>> MetaTest7.integerintstatus:MetaTest7IntegerIntStatus =>=>=> RelationalSchema.Column>> metatest7.integerintstatus;
ClassDiagram.Attribut>> MetaTest7.integerlongstatus:MetaTest7IntegerLongStatus =>=>=> RelationalSchema.Column>> metatest7.integerlongstatus;
ClassDiagram.Attribut>> OrderByPCRel.id:long =>=>=> RelationalSchema.Column>> orderbypcrel.id;
ClassDiagram.Attribut>> OrderByPCRel.GeneratedName:String =>=>=> RelationalSchema.Column>> orderbypcrel.GeneratedName;
ClassDiagram.Attribut>> OrderByPCRel.toone:OrderByPC =>=>=> RelationalSchema.Column>> orderbypcrel.toone;
ClassDiagram.Attribut>> ValueStrategyPC.uuid:String =>=>=> RelationalSchema.Column>> valuestrategypc.uuid;
ClassDiagram.Attribut>> ValueStrategyPC.uuidhex:String =>=>=> RelationalSchema.Column>> valuestrategypc.uuidhex;
ClassDiagram.Attribut>> ValueStrategyPC.name:String =>=>=> RelationalSchema.Column>> valuestrategypc.name;
ClassDiagram.Attribut>> ValueStrategyPC.ignoreupdate:int =>=>=> RelationalSchema.Column>> valuestrategypc.ignoreupdate;
ClassDiagram.Attribut>> ValueStrategyPC.restrictupdate:int =>=>=> RelationalSchema.Column>> valuestrategypc.restrictupdate;
ClassDiagram.Attribut>> ValueStrategyPC.version:int =>=>=> RelationalSchema.Column>> valuestrategypc.version;
ClassDiagram.Attribut>> ValueStrategyPC.sequence:int =>=>=> RelationalSchema.Column>> valuestrategypc.sequence;
ClassDiagram.Attribut>> ExternalValues.toshort:boolean =>=>=> RelationalSchema.Column>> externalvalues.toshort;
ClassDiagram.Attribut>> ExternalValues.todouble:byte =>=>=> RelationalSchema.Column>> externalvalues.todouble;
ClassDiagram.Attribut>> ExternalValues.tofloat:int =>=>=> RelationalSchema.Column>> externalvalues.tofloat;
ClassDiagram.Attribut>> ExternalValues.tochar:long =>=>=> RelationalSchema.Column>> externalvalues.tochar;
ClassDiagram.Attribut>> ExternalValues.tostring:short =>=>=> RelationalSchema.Column>> externalvalues.tostring;
ClassDiagram.Attribut>> ExternalValues.toboolean:float =>=>=> RelationalSchema.Column>> externalvalues.toboolean;
ClassDiagram.Attribut>> ExternalValues.tobyte:double =>=>=> RelationalSchema.Column>> externalvalues.tobyte;
ClassDiagram.Attribut>> ExternalValues.toint:char =>=>=> RelationalSchema.Column>> externalvalues.toint;
ClassDiagram.Attribut>> ExternalValues.tolong:String =>=>=> RelationalSchema.Column>> externalvalues.tolong;
ClassDiagram.Attribut>> ExternalValues.GeneratedName:UUID =>=>=> RelationalSchema.Column>> externalvalues.GeneratedName;
ClassDiagram.Attribut>> MetaTest2.field1:Collection =>=>=> RelationalSchema.Column>> metatest2.field1;
ClassDiagram.Attribut>> MetaTest2.field2:Collection =>=>=> RelationalSchema.Column>> metatest2.field2;
ClassDiagram.Attribut>> MetaTest2.field1:Map =>=>=> RelationalSchema.Column>> metatest2.field1;
ClassDiagram.Attribut>> MetaTest2.field2:Map =>=>=> RelationalSchema.Column>> metatest2.field2;
ClassDiagram.Attribut>> FieldOrderPCSubclass.transientsub1:String =>=>=> RelationalSchema.Column>> fieldorderpcsubclass.transientsub1;
ClassDiagram.Attribut>> FieldOrderPCSubclass.sub2:int =>=>=> RelationalSchema.Column>> fieldorderpcsubclass.sub2;
ClassDiagram.Attribut>> FieldOrderPCSubclass.sub3:Double =>=>=> RelationalSchema.Column>> fieldorderpcsubclass.sub3;
ClassDiagram.Attribut>> FieldOrderPCSubclass.unmanagedsubfield:int =>=>=> RelationalSchema.Column>> fieldorderpcsubclass.unmanagedsubfield;
ClassDiagram.Attribut>> FieldOrderPCSubclass.undeclaredsubfield:int =>=>=> RelationalSchema.Column>> fieldorderpcsubclass.undeclaredsubfield;
ClassDiagram.Attribut>> OrderByPCRelSub.sub:int =>=>=> RelationalSchema.Column>> orderbypcrelsub.sub;
ClassDiagram.Attribut>> MetaTest6.name:String =>=>=> RelationalSchema.Column>> metatest6.name;
ClassDiagram.Attribut>> OrderByPC.id:long =>=>=> RelationalSchema.Column>> orderbypc.id;
ClassDiagram.Attribut>> OrderByPC.stringasc:List =>=>=> RelationalSchema.Column>> orderbypc.stringasc;
ClassDiagram.Attribut>> OrderByPC.arraydesc:int =>=>=> RelationalSchema.Column>> orderbypc.arraydesc;
ClassDiagram.Attribut>> OrderByPC.orderbypkasc:List =>=>=> RelationalSchema.Column>> orderbypc.orderbypkasc;
ClassDiagram.Attribut>> OrderByPC.orderbystringdesc:List =>=>=> RelationalSchema.Column>> orderbypc.orderbystringdesc;
ClassDiagram.Attribut>> OrderByPC.orderbystringandpkdesc:List =>=>=> RelationalSchema.Column>> orderbypc.orderbystringandpkdesc;
ClassDiagram.Attribut>> OrderByPC.onetomanyasc:List =>=>=> RelationalSchema.Column>> orderbypc.onetomanyasc;
ClassDiagram.Attribut>> SequenceAssigned3.pk:Long =>=>=> RelationalSchema.Column>> sequenceassigned3.pk;
ClassDiagram.Attribut>> FieldOrderPC.transientfirstfield:String =>=>=> RelationalSchema.Column>> fieldorderpc.transientfirstfield;
ClassDiagram.Attribut>> FieldOrderPC.field:char =>=>=> RelationalSchema.Column>> fieldorderpc.field;
ClassDiagram.Attribut>> FieldOrderPC.field:int =>=>=> RelationalSchema.Column>> fieldorderpc.field;
ClassDiagram.Attribut>> FieldOrderPC.thirdfield:int =>=>=> RelationalSchema.Column>> fieldorderpc.thirdfield;
ClassDiagram.Attribut>> FieldOrderPC.unmanagedfield:int =>=>=> RelationalSchema.Column>> fieldorderpc.unmanagedfield;
ClassDiagram.Attribut>> FieldOrderPC.field:Long =>=>=> RelationalSchema.Column>> fieldorderpc.field;
ClassDiagram.Attribut>> FieldOrderPC.secondfield:Double =>=>=> RelationalSchema.Column>> fieldorderpc.secondfield;
ClassDiagram.Attribut>> FieldOrderPC.onetoonefield:FieldOrderPC =>=>=> RelationalSchema.Column>> fieldorderpc.onetoonefield;
ClassDiagram.Attribut>> RuntimeTest2.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest2.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest2.field2:int =>=>=> RelationalSchema.Column>> runtimetest2.field2;
ClassDiagram.Attribut>> TransactionalClassPC.field:int =>=>=> RelationalSchema.Column>> transactionalclasspc.field;
ClassDiagram.Attribut>> RuntimeTest3.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest3.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest3.field3:int =>=>=> RelationalSchema.Column>> runtimetest3.field3;
ClassDiagram.Attribut>> SequenceAssigned.pk:long =>=>=> RelationalSchema.Column>> sequenceassigned.pk;
ClassDiagram.Attribut>> SequenceAssigned.other:SequenceAssigned =>=>=> RelationalSchema.Column>> sequenceassigned.other;
ClassDiagram.Attribut>> MetaTest1.//theseshouldnotbepersistentfield:int =>=>=> RelationalSchema.Column>> metatest1.//theseshouldnotbepersistentfield;
ClassDiagram.Attribut>> MetaTest1.field:String =>=>=> RelationalSchema.Column>> metatest1.field;
ClassDiagram.Attribut>> MetaTest1.transienttransientfield:char =>=>=> RelationalSchema.Column>> metatest1.transienttransientfield;
ClassDiagram.Attribut>> MetaTest1.field:MetaTest4 =>=>=> RelationalSchema.Column>> metatest1.field;
ClassDiagram.Attribut>> MetaTest1.//@onetomany(mappedby:java.util.Set<MetaTest4> =>=>=> RelationalSchema.Column>> metatest1.//@onetomany(mappedby;
ClassDiagram.Attribut>> MetaTest1.metatest4arrayfieldfield:Object =>=>=> RelationalSchema.Column>> metatest1.metatest4arrayfieldfield;
ClassDiagram.Attribut>> MetaTest1.wrapperfield:Long =>=>=> RelationalSchema.Column>> metatest1.wrapperfield;
ClassDiagram.Attribut>> MetaTest1.field:double =>=>=> RelationalSchema.Column>> metatest1.field;
ClassDiagram.Attribut>> MetaTest1.//persistentfields--seemetadatafield:String =>=>=> RelationalSchema.Column>> metatest1.//persistentfields--seemetadatafield;
ClassDiagram.Attribut>> MetaTest1.intwrapperfield:Integer =>=>=> RelationalSchema.Column>> metatest1.intwrapperfield;
ClassDiagram.Attribut>> MetaTest1.field:int =>=>=> RelationalSchema.Column>> metatest1.field;
ClassDiagram.Attribut>> MetaTest1.field:MetaTest2 =>=>=> RelationalSchema.Column>> metatest1.field;
ClassDiagram.Attribut>> MetaTest1.//@onetomany(mappedby:java.util.Set<MetaTest2> =>=>=> RelationalSchema.Column>> metatest1.//@onetomany(mappedby;
ClassDiagram.Attribut>> MetaTest1.metatest2arrayfieldarrayfield:int =>=>=> RelationalSchema.Column>> metatest1.metatest2arrayfieldarrayfield;
ClassDiagram.Attribut>> MetaTest5.id:long =>=>=> RelationalSchema.Column>> metatest5.id;
ClassDiagram.Attribut>> SequenceAssigned2.foo:int =>=>=> RelationalSchema.Column>> sequenceassigned2.foo;
ClassDiagram.Attribut>> NonPersistentFieldsPC.persistentfield:String =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.persistentfield;
ClassDiagram.Attribut>> NonPersistentFieldsPC.nonpersistentfield:String =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.nonpersistentfield;
ClassDiagram.Attribut>> NonPersistentFieldsPC.field:Object =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.field;
ClassDiagram.Attribut>> NonPersistentFieldsPC.interfacefield:Serializable =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.interfacefield;
ClassDiagram.Attribut>> NonPersistentFieldsPC.userobjectfield:ClassMetaData =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.userobjectfield;
ClassDiagram.Attribut>> NonPersistentFieldsPC.userinterfacefield:ClassMetaData =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.userinterfacefield;
ClassDiagram.Attribut>> NonPersistentFieldsPC.explicitfield:Object =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.explicitfield;
ClassDiagram.Attribut>> NonPersistentFieldsPC.explicitinterfacefield:Serializable =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.explicitinterfacefield;
ClassDiagram.Attribut>> NonPersistentFieldsPC.explicituserobjectfield:ClassMetaData =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.explicituserobjectfield;
ClassDiagram.Attribut>> NonPersistentFieldsPC.explicituserinterfacefield:ClassMetaData =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.explicituserinterfacefield;
ClassDiagram.Attribut>> NonPersistentFieldsPC.persistentfield:Object =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.persistentfield;
ClassDiagram.Attribut>> NonPersistentFieldsPC.persistentinterfacefield:Serializable =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.persistentinterfacefield;
ClassDiagram.Attribut>> NonPersistentFieldsPC.persistentuserobjectfield:ClassMetaData =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.persistentuserobjectfield;
ClassDiagram.Attribut>> NonPersistentFieldsPC.persistentuserinterfacefield:ClassMetaData =>=>=> RelationalSchema.Column>> nonpersistentfieldspc.persistentuserinterfacefield;
ClassDiagram.Attribut>> PObject.id:long =>=>=> RelationalSchema.Column>> pobject.id PRIMARY KEY;
ClassDiagram.Attribut>> PObject.name:String =>=>=> RelationalSchema.Column>> pobject.name;
ClassDiagram.Attribut>> PObject.version:int =>=>=> RelationalSchema.Column>> pobject.version;
ClassDiagram.Attribut>> DetachmentOneManyParent.id:long =>=>=> RelationalSchema.Column>> detachmentonemanyparent.id PRIMARY KEY;
ClassDiagram.Attribut>> DetachmentOneManyParent.name:String =>=>=> RelationalSchema.Column>> detachmentonemanyparent.name;
ClassDiagram.Attribut>> DetachmentOneManyParent.optlock:Integer =>=>=> RelationalSchema.Column>> detachmentonemanyparent.optlock;
ClassDiagram.Attribut>> Record.content:String =>=>=> RelationalSchema.Column>> record.content;
ClassDiagram.Attribut>> Record.id:int =>=>=> RelationalSchema.Column>> record.id PRIMARY KEY;
ClassDiagram.Attribut>> DetachmentOneManyChild.id:long =>=>=> RelationalSchema.Column>> detachmentonemanychild.id PRIMARY KEY;
ClassDiagram.Attribut>> DetachmentOneManyChild.name:String =>=>=> RelationalSchema.Column>> detachmentonemanychild.name;
ClassDiagram.Attribut>> DetachmentOneManyChild.optlock:Integer =>=>=> RelationalSchema.Column>> detachmentonemanychild.optlock;
ClassDiagram.Attribut>> DMCustomerInventory.idcounter:long =>=>=> RelationalSchema.Column>> dmcustomerinventory.idcounter;
ClassDiagram.Attribut>> DMCustomerInventory.id:long =>=>=> RelationalSchema.Column>> dmcustomerinventory.id PRIMARY KEY;
ClassDiagram.Attribut>> DMCustomerInventory.quantity:int =>=>=> RelationalSchema.Column>> dmcustomerinventory.quantity;
ClassDiagram.Attribut>> DMCustomerInventory.version:int =>=>=> RelationalSchema.Column>> dmcustomerinventory.version;
ClassDiagram.Attribut>> SimpleC.c_id:int =>=>=> RelationalSchema.Column>> simplec.c_id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleC.name:String =>=>=> RelationalSchema.Column>> simplec.name;
ClassDiagram.Attribut>> SimpleB.b_id:int =>=>=> RelationalSchema.Column>> simpleb.b_id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleB.name:String =>=>=> RelationalSchema.Column>> simpleb.name;
ClassDiagram.Attribut>> DMCustomer.idcounter:long =>=>=> RelationalSchema.Column>> dmcustomer.idcounter;
ClassDiagram.Attribut>> DMCustomer.id:long =>=>=> RelationalSchema.Column>> dmcustomer.id PRIMARY KEY;
ClassDiagram.Attribut>> DMCustomer.firstname:String =>=>=> RelationalSchema.Column>> dmcustomer.firstname;
ClassDiagram.Attribut>> DMCustomer.lastname:String =>=>=> RelationalSchema.Column>> dmcustomer.lastname;
ClassDiagram.Attribut>> DMCustomer.version:int =>=>=> RelationalSchema.Column>> dmcustomer.version;
ClassDiagram.Attribut>> DMCustomer.cal:Calendar =>=>=> RelationalSchema.Column>> dmcustomer.cal;
ClassDiagram.Attribut>> SimpleRef.id:int =>=>=> RelationalSchema.Column>> simpleref.id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleRef.name:String =>=>=> RelationalSchema.Column>> simpleref.name;
ClassDiagram.Attribut>> NoDetachedStateEntityFieldAccess.id:int =>=>=> RelationalSchema.Column>> nodetachedstateentityfieldaccess.id PRIMARY KEY;
ClassDiagram.Attribut>> NoDetachedStateEntityFieldAccess.version:int =>=>=> RelationalSchema.Column>> nodetachedstateentityfieldaccess.version;
ClassDiagram.Attribut>> NoDetachedStateEntityFieldAccess.GeneratedName:String =>=>=> RelationalSchema.Column>> nodetachedstateentityfieldaccess.GeneratedName;
ClassDiagram.Attribut>> NoDetachedStateEntityPropertyAccess.id:int =>=>=> RelationalSchema.Column>> nodetachedstateentitypropertyaccess.id PRIMARY KEY;
ClassDiagram.Attribut>> NoDetachedStateEntityPropertyAccess.version:int =>=>=> RelationalSchema.Column>> nodetachedstateentitypropertyaccess.version;
ClassDiagram.Attribut>> NoDetachedStateEntityPropertyAccess.GeneratedName:String =>=>=> RelationalSchema.Column>> nodetachedstateentitypropertyaccess.GeneratedName;
ClassDiagram.Attribut>> DMItem.idcounter:long =>=>=> RelationalSchema.Column>> dmitem.idcounter;
ClassDiagram.Attribut>> DMItem.id:long =>=>=> RelationalSchema.Column>> dmitem.id PRIMARY KEY;
ClassDiagram.Attribut>> DMItem.version:int =>=>=> RelationalSchema.Column>> dmitem.version;
ClassDiagram.Attribut>> DMItem.name:String =>=>=> RelationalSchema.Column>> dmitem.name;
ClassDiagram.Attribut>> DMItem.price:double =>=>=> RelationalSchema.Column>> dmitem.price;
ClassDiagram.Attribut>> SimpleA.a_id:int =>=>=> RelationalSchema.Column>> simplea.a_id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleA.name:String =>=>=> RelationalSchema.Column>> simplea.name;
ClassDiagram.Attribut>> ResWordEntity.id:int =>=>=> RelationalSchema.Column>> reswordentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ResWordEntity.alias:String =>=>=> RelationalSchema.Column>> reswordentity.alias;
ClassDiagram.Attribut>> ResWordEntity.boolean:int =>=>=> RelationalSchema.Column>> reswordentity.boolean;
ClassDiagram.Attribut>> ResWordEntity.type:Integer =>=>=> RelationalSchema.Column>> reswordentity.type;
ClassDiagram.Attribut>> EntityVeryLongNames.serialversionuid:long =>=>=> RelationalSchema.Column>> entityverylongnames.serialversionuid;
ClassDiagram.Attribut>> EntityVeryLongNames.id:int =>=>=> RelationalSchema.Column>> entityverylongnames.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityVeryLongNames.firstname:String =>=>=> RelationalSchema.Column>> entityverylongnames.firstname;
ClassDiagram.Attribut>> EntityVeryLongNames.lastname:String =>=>=> RelationalSchema.Column>> entityverylongnames.lastname;
ClassDiagram.Attribut>> EntityReservedWords.serialversionuid:long =>=>=> RelationalSchema.Column>> entityreservedwords.serialversionuid;
ClassDiagram.Attribut>> EntityReservedWords.id:int =>=>=> RelationalSchema.Column>> entityreservedwords.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityReservedWords.add:Integer =>=>=> RelationalSchema.Column>> entityreservedwords.add;
ClassDiagram.Attribut>> EntityReservedWords.application:int =>=>=> RelationalSchema.Column>> entityreservedwords.application;
ClassDiagram.Attribut>> EntityReservedWords.begin:BigDecimal =>=>=> RelationalSchema.Column>> entityreservedwords.begin;
ClassDiagram.Attribut>> EntityReservedWords.bigint:BigInteger =>=>=> RelationalSchema.Column>> entityreservedwords.bigint;
ClassDiagram.Attribut>> EntityReservedWords.GeneratedName:Calendar =>=>=> RelationalSchema.Column>> entityreservedwords.GeneratedName;
ClassDiagram.Attribut>> EntityReservedWords.character:String =>=>=> RelationalSchema.Column>> entityreservedwords.character;
ClassDiagram.Attribut>> EntityReservedWords.conditional:Integer =>=>=> RelationalSchema.Column>> entityreservedwords.conditional;
ClassDiagram.Attribut>> EntityReservedWords.GeneratedName:Date =>=>=> RelationalSchema.Column>> entityreservedwords.GeneratedName;
ClassDiagram.Attribut>> EntityReservedWords.decimal:BigDecimal =>=>=> RelationalSchema.Column>> entityreservedwords.decimal;
ClassDiagram.Attribut>> EntityReservedWords.distinct:Time =>=>=> RelationalSchema.Column>> entityreservedwords.distinct;
ClassDiagram.Attribut>> EntityReservedWords.exception:String =>=>=> RelationalSchema.Column>> entityreservedwords.exception;
ClassDiagram.Attribut>> EntityReservedWords.each:int =>=>=> RelationalSchema.Column>> entityreservedwords.each;
ClassDiagram.Attribut>> EntityReservedWords.from:String =>=>=> RelationalSchema.Column>> entityreservedwords.from;
ClassDiagram.Attribut>> EntityReservedWords.file:Integer =>=>=> RelationalSchema.Column>> entityreservedwords.file;
ClassDiagram.Attribut>> EntityReservedWords.grant:String =>=>=> RelationalSchema.Column>> entityreservedwords.grant;
ClassDiagram.Attribut>> EntityReservedWords.global:BigDecimal =>=>=> RelationalSchema.Column>> entityreservedwords.global;
ClassDiagram.Attribut>> EntityReservedWords.hour:String =>=>=> RelationalSchema.Column>> entityreservedwords.hour;
ClassDiagram.Attribut>> EntityReservedWords.holdlock:String =>=>=> RelationalSchema.Column>> entityreservedwords.holdlock;
ClassDiagram.Attribut>> EntityReservedWords.integer:BigInteger =>=>=> RelationalSchema.Column>> entityreservedwords.integer;
ClassDiagram.Attribut>> EntityReservedWords.index:int =>=>=> RelationalSchema.Column>> entityreservedwords.index;
ClassDiagram.Attribut>> EntityReservedWords.join:BigInteger =>=>=> RelationalSchema.Column>> entityreservedwords.join;
ClassDiagram.Attribut>> EntityReservedWords.jar:String =>=>=> RelationalSchema.Column>> entityreservedwords.jar;
ClassDiagram.Attribut>> EntityReservedWords.key:Calendar =>=>=> RelationalSchema.Column>> entityreservedwords.key;
ClassDiagram.Attribut>> EntityReservedWords.kill:Timestamp =>=>=> RelationalSchema.Column>> entityreservedwords.kill;
ClassDiagram.Attribut>> EntityReservedWords.like:Integer =>=>=> RelationalSchema.Column>> entityreservedwords.like;
ClassDiagram.Attribut>> EntityReservedWords.loop:BigDecimal =>=>=> RelationalSchema.Column>> entityreservedwords.loop;
ClassDiagram.Attribut>> EntityReservedWords.minute:int =>=>=> RelationalSchema.Column>> entityreservedwords.minute;
ClassDiagram.Attribut>> EntityReservedWords.merge:Date =>=>=> RelationalSchema.Column>> entityreservedwords.merge;
ClassDiagram.Attribut>> EntityReservedWords.number:String =>=>=> RelationalSchema.Column>> entityreservedwords.number;
ClassDiagram.Attribut>> EntityReservedWords.not:Integer =>=>=> RelationalSchema.Column>> entityreservedwords.not;
ClassDiagram.Attribut>> EntityReservedWords.outer:Date =>=>=> RelationalSchema.Column>> entityreservedwords.outer;
ClassDiagram.Attribut>> EntityReservedWords.on:String =>=>=> RelationalSchema.Column>> entityreservedwords.on;
ClassDiagram.Attribut>> EntityReservedWords.primary:BigInteger =>=>=> RelationalSchema.Column>> entityreservedwords.primary;
ClassDiagram.Attribut>> EntityReservedWords.purge:int =>=>=> RelationalSchema.Column>> entityreservedwords.purge;
ClassDiagram.Attribut>> EntityReservedWords.quiesce:Integer =>=>=> RelationalSchema.Column>> entityreservedwords.quiesce;
ClassDiagram.Attribut>> EntityReservedWords.quit:String =>=>=> RelationalSchema.Column>> entityreservedwords.quit;
ClassDiagram.Attribut>> EntityReservedWords.restrict:BigDecimal =>=>=> RelationalSchema.Column>> entityreservedwords.restrict;
ClassDiagram.Attribut>> EntityReservedWords.rename:Time =>=>=> RelationalSchema.Column>> entityreservedwords.rename;
ClassDiagram.Attribut>> EntityReservedWords.select:String =>=>=> RelationalSchema.Column>> entityreservedwords.select;
ClassDiagram.Attribut>> EntityReservedWords.savepoint:Integer =>=>=> RelationalSchema.Column>> entityreservedwords.savepoint;
ClassDiagram.Attribut>> EntityReservedWords.GeneratedName:Time =>=>=> RelationalSchema.Column>> entityreservedwords.GeneratedName;
ClassDiagram.Attribut>> EntityReservedWords.GeneratedName:Timestamp =>=>=> RelationalSchema.Column>> entityreservedwords.GeneratedName;
ClassDiagram.Attribut>> EntityReservedWords.trigger:Calendar =>=>=> RelationalSchema.Column>> entityreservedwords.trigger;
ClassDiagram.Attribut>> EntityReservedWords.update:int =>=>=> RelationalSchema.Column>> entityreservedwords.update;
ClassDiagram.Attribut>> EntityReservedWords.until:String =>=>=> RelationalSchema.Column>> entityreservedwords.until;
ClassDiagram.Attribut>> EntityReservedWords.varchar:String =>=>=> RelationalSchema.Column>> entityreservedwords.varchar;
ClassDiagram.Attribut>> EntityReservedWords.variable:Integer =>=>=> RelationalSchema.Column>> entityreservedwords.variable;
ClassDiagram.Attribut>> EntityReservedWords.wait:Timestamp =>=>=> RelationalSchema.Column>> entityreservedwords.wait;
ClassDiagram.Attribut>> EntityReservedWords.where:BigDecimal =>=>=> RelationalSchema.Column>> entityreservedwords.where;
ClassDiagram.Attribut>> EntityReservedWords.xml:BigInteger =>=>=> RelationalSchema.Column>> entityreservedwords.xml;
ClassDiagram.Attribut>> EntityReservedWords.year:int =>=>=> RelationalSchema.Column>> entityreservedwords.year;
ClassDiagram.Attribut>> EntityReservedWords.years:Integer =>=>=> RelationalSchema.Column>> entityreservedwords.years;
ClassDiagram.Attribut>> EntityReservedWords.zerofill:Date =>=>=> RelationalSchema.Column>> entityreservedwords.zerofill;
ClassDiagram.Attribut>> EntityReservedWords.zone:String =>=>=> RelationalSchema.Column>> entityreservedwords.zone;
ClassDiagram.Attribut>> EntityReservedWords.type:Integer =>=>=> RelationalSchema.Column>> entityreservedwords.type;
ClassDiagram.Attribut>> EntityReservedWords.alias:String =>=>=> RelationalSchema.Column>> entityreservedwords.alias;
ClassDiagram.Attribut>> EntityReservedWords.boolean:int =>=>=> RelationalSchema.Column>> entityreservedwords.boolean;
ClassDiagram.Attribut>> AnnoTest2.pk1:long =>=>=> RelationalSchema.Column>> annotest2.pk1 PRIMARY KEY;
ClassDiagram.Attribut>> AnnoTest2.pk2:String =>=>=> RelationalSchema.Column>> annotest2.pk2 PRIMARY KEY;
ClassDiagram.Attribut>> AnnoTest2.version:Date =>=>=> RelationalSchema.Column>> annotest2.version;
ClassDiagram.Attribut>> AnnoTest2.basic:String =>=>=> RelationalSchema.Column>> annotest2.basic;
ClassDiagram.Attribut>> PropertyAccess1.id:int =>=>=> RelationalSchema.Column>> propertyaccess1.id PRIMARY KEY;
ClassDiagram.Attribut>> PropertyAccess1.name:String =>=>=> RelationalSchema.Column>> propertyaccess1.name;
ClassDiagram.Attribut>> PropertyAccess1.//thisentionallydoesnotmatchthegetternameval:int =>=>=> RelationalSchema.Column>> propertyaccess1.//thisentionallydoesnotmatchthegetternameval;
ClassDiagram.Attribut>> Store1.serialversionuid:long =>=>=> RelationalSchema.Column>> store1.serialversionuid;
ClassDiagram.Attribut>> Store1.storename:String =>=>=> RelationalSchema.Column>> store1.storename;
ClassDiagram.Attribut>> Store1.storedescription:String =>=>=> RelationalSchema.Column>> store1.storedescription;
ClassDiagram.Attribut>> Schedule.id:int =>=>=> RelationalSchema.Column>> schedule.id PRIMARY KEY;
ClassDiagram.Attribut>> Schedule.dob:Calendar =>=>=> RelationalSchema.Column>> schedule.dob;
ClassDiagram.Attribut>> Schedule.start:Date =>=>=> RelationalSchema.Column>> schedule.start;
ClassDiagram.Attribut>> Schedule.end:Date =>=>=> RelationalSchema.Column>> schedule.end;
ClassDiagram.Attribut>> Schedule.name:String =>=>=> RelationalSchema.Column>> schedule.name;
ClassDiagram.Attribut>> Site.serialversionuid:long =>=>=> RelationalSchema.Column>> site.serialversionuid;
ClassDiagram.Attribut>> Site.sitename:String =>=>=> RelationalSchema.Column>> site.sitename;
ClassDiagram.Attribut>> Site.sitedescription:String =>=>=> RelationalSchema.Column>> site.sitedescription;
ClassDiagram.Attribut>> FlightSchedule.flightnum:int =>=>=> RelationalSchema.Column>> flightschedule.flightnum;
ClassDiagram.Attribut>> FlightSchedule.planename:String =>=>=> RelationalSchema.Column>> flightschedule.planename;
ClassDiagram.Attribut>> Flat2.basic2:String =>=>=> RelationalSchema.Column>> flat2.basic2;
ClassDiagram.Attribut>> Entity2.serialversionuid:long =>=>=> RelationalSchema.Column>> entity2.serialversionuid;
ClassDiagram.Attribut>> Entity2.pk:long =>=>=> RelationalSchema.Column>> entity2.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity2.field:String =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> Entity2.field:int =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> TablePerClass2.basic2:String =>=>=> RelationalSchema.Column>> tableperclass2.basic2;
ClassDiagram.Attribut>> AnnoTest3.basic2:int =>=>=> RelationalSchema.Column>> annotest3.basic2;
ClassDiagram.Attribut>> EmbedOwner.embed:EmbedValue =>=>=> RelationalSchema.Column>> embedowner.embed;
ClassDiagram.Attribut>> EmbedOwner.basic:String =>=>=> RelationalSchema.Column>> embedowner.basic;
ClassDiagram.Attribut>> EmbedOwner.pk:int =>=>=> RelationalSchema.Column>> embedowner.pk PRIMARY KEY;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.lifecheck:int =>=>=> RelationalSchema.Column>> employee.lifecheck;
ClassDiagram.Attribut>> Employee.synctime:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Store.serialversionuid:long =>=>=> RelationalSchema.Column>> store.serialversionuid;
ClassDiagram.Attribut>> Store.storename:String =>=>=> RelationalSchema.Column>> store.storename;
ClassDiagram.Attribut>> Store.storedescription:String =>=>=> RelationalSchema.Column>> store.storedescription;
ClassDiagram.Attribut>> Store.siteid:Long =>=>=> RelationalSchema.Column>> store.siteid;
ClassDiagram.Attribut>> ContractEmployee.dailyrate:int =>=>=> RelationalSchema.Column>> contractemployee.dailyrate;
ClassDiagram.Attribut>> ContractEmployee.term:int =>=>=> RelationalSchema.Column>> contractemployee.term;
ClassDiagram.Attribut>> AnnoTest1.pk:Long =>=>=> RelationalSchema.Column>> annotest1.pk PRIMARY KEY;
ClassDiagram.Attribut>> AnnoTest1.version:int =>=>=> RelationalSchema.Column>> annotest1.version;
ClassDiagram.Attribut>> AnnoTest1.basic:int =>=>=> RelationalSchema.Column>> annotest1.basic;
ClassDiagram.Attribut>> AnnoTest1.trans:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> AnnoTest1.othertablebasic:int =>=>=> RelationalSchema.Column>> annotest1.othertablebasic;
ClassDiagram.Attribut>> AnnoTest1.blob:byte =>=>=> RelationalSchema.Column>> annotest1.blob;
ClassDiagram.Attribut>> AnnoTest1.serial:Object =>=>=> RelationalSchema.Column>> annotest1.serial;
ClassDiagram.Attribut>> AnnoTest1.clob:String =>=>=> RelationalSchema.Column>> annotest1.clob;
ClassDiagram.Attribut>> AnnoTest1.//un-annotatedenumshouldbepersistedbydefaultenumeration:InheritanceType =>=>=> RelationalSchema.Column>> annotest1.//un-annotatedenumshouldbepersistedbydefaultenumeration;
ClassDiagram.Attribut>> AnnoTest1.ordinalenumeration:InheritanceType =>=>=> RelationalSchema.Column>> annotest1.ordinalenumeration;
ClassDiagram.Attribut>> AnnoTest1.stringenumeration:InheritanceType =>=>=> RelationalSchema.Column>> annotest1.stringenumeration;
ClassDiagram.Attribut>> EmbeddedIdEntity.id:EmbeddedIdClass =>=>=> RelationalSchema.Column>> embeddedidentity.id;
ClassDiagram.Attribut>> EmbeddedIdEntity.value:String =>=>=> RelationalSchema.Column>> embeddedidentity.value;
ClassDiagram.Attribut>> TxRollbackEntity.id:int =>=>=> RelationalSchema.Column>> txrollbackentity.id PRIMARY KEY;
ClassDiagram.Attribut>> TxRollbackEntity.name:String =>=>=> RelationalSchema.Column>> txrollbackentity.name;
ClassDiagram.Attribut>> TablePerClass1.pk:int =>=>=> RelationalSchema.Column>> tableperclass1.pk PRIMARY KEY;
ClassDiagram.Attribut>> TablePerClass1.basic:int =>=>=> RelationalSchema.Column>> tableperclass1.basic;
ClassDiagram.Attribut>> TablePerClass1.embed:EmbedValue =>=>=> RelationalSchema.Column>> tableperclass1.embed;
ClassDiagram.Attribut>> Site1.serialversionuid:long =>=>=> RelationalSchema.Column>> site1.serialversionuid;
ClassDiagram.Attribut>> Site1.sitename:String =>=>=> RelationalSchema.Column>> site1.sitename;
ClassDiagram.Attribut>> Site1.sitedescription:String =>=>=> RelationalSchema.Column>> site1.sitedescription;
ClassDiagram.Attribut>> OrderByEntity.id:long =>=>=> RelationalSchema.Column>> orderbyentity.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderByEntity.GeneratedName:String =>=>=> RelationalSchema.Column>> orderbyentity.GeneratedName;
ClassDiagram.Attribut>> OrderByEntity.strings:List<String> =>=>=> RelationalSchema.Column>> orderbyentity.strings;
ClassDiagram.Attribut>> Generator.pk:int =>=>=> RelationalSchema.Column>> generator.pk PRIMARY KEY;
ClassDiagram.Attribut>> Generator.pk2:Integer =>=>=> RelationalSchema.Column>> generator.pk2 PRIMARY KEY;
ClassDiagram.Attribut>> Generator.pk3:long =>=>=> RelationalSchema.Column>> generator.pk3 PRIMARY KEY;
ClassDiagram.Attribut>> Generator.field:String =>=>=> RelationalSchema.Column>> generator.field;
ClassDiagram.Attribut>> Flat1.pk:int =>=>=> RelationalSchema.Column>> flat1.pk PRIMARY KEY;
ClassDiagram.Attribut>> Flat1.version:int =>=>=> RelationalSchema.Column>> flat1.version;
ClassDiagram.Attribut>> Flat1.basic:int =>=>=> RelationalSchema.Column>> flat1.basic;
ClassDiagram.Attribut>> Entity1.serialversionuid:long =>=>=> RelationalSchema.Column>> entity1.serialversionuid;
ClassDiagram.Attribut>> Entity1.pk:long =>=>=> RelationalSchema.Column>> entity1.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity1.field:String =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.field:int =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.versionfield:int =>=>=> RelationalSchema.Column>> entity1.versionfield;
ClassDiagram.Attribut>> FlightSchedule.flightnum:int =>=>=> RelationalSchema.Column>> flightschedule.flightnum;
ClassDiagram.Attribut>> FlightSchedule.planename:String =>=>=> RelationalSchema.Column>> flightschedule.planename;
ClassDiagram.Attribut>> LifeCycleDDEntity2.id:int =>=>=> RelationalSchema.Column>> lifecycleddentity2.id PRIMARY KEY;
ClassDiagram.Attribut>> LifeCycleDDEntity2.name:String =>=>=> RelationalSchema.Column>> lifecycleddentity2.name;
ClassDiagram.Attribut>> LifeCycleDDEntity2.surname:String =>=>=> RelationalSchema.Column>> lifecycleddentity2.surname;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.lifecheck:int =>=>=> RelationalSchema.Column>> employee.lifecheck;
ClassDiagram.Attribut>> Employee.synctime:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Entity1.serialversionuid:long =>=>=> RelationalSchema.Column>> entity1.serialversionuid;
ClassDiagram.Attribut>> Entity1.pk:long =>=>=> RelationalSchema.Column>> entity1.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity1.field:String =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.field:int =>=>=> RelationalSchema.Column>> entity1.field;
ClassDiagram.Attribut>> Entity1.versionfield:int =>=>=> RelationalSchema.Column>> entity1.versionfield;
ClassDiagram.Attribut>> TxRollbackEntity.id:int =>=>=> RelationalSchema.Column>> txrollbackentity.id PRIMARY KEY;
ClassDiagram.Attribut>> TxRollbackEntity.name:String =>=>=> RelationalSchema.Column>> txrollbackentity.name;
ClassDiagram.Attribut>> ContractEmployee.dailyrate:int =>=>=> RelationalSchema.Column>> contractemployee.dailyrate;
ClassDiagram.Attribut>> ContractEmployee.term:int =>=>=> RelationalSchema.Column>> contractemployee.term;
ClassDiagram.Attribut>> Schedule.id:int =>=>=> RelationalSchema.Column>> schedule.id PRIMARY KEY;
ClassDiagram.Attribut>> Schedule.dob:Calendar =>=>=> RelationalSchema.Column>> schedule.dob;
ClassDiagram.Attribut>> Schedule.start:Date =>=>=> RelationalSchema.Column>> schedule.start;
ClassDiagram.Attribut>> Schedule.end:Date =>=>=> RelationalSchema.Column>> schedule.end;
ClassDiagram.Attribut>> Schedule.name:String =>=>=> RelationalSchema.Column>> schedule.name;
ClassDiagram.Attribut>> Entity2.serialversionuid:long =>=>=> RelationalSchema.Column>> entity2.serialversionuid;
ClassDiagram.Attribut>> Entity2.pk:long =>=>=> RelationalSchema.Column>> entity2.pk PRIMARY KEY;
ClassDiagram.Attribut>> Entity2.field:String =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> Entity2.field:int =>=>=> RelationalSchema.Column>> entity2.field;
ClassDiagram.Attribut>> LifeCycleDDEntity.id:int =>=>=> RelationalSchema.Column>> lifecycleddentity.id PRIMARY KEY;
ClassDiagram.Attribut>> LifeCycleDDEntity.name:String =>=>=> RelationalSchema.Column>> lifecycleddentity.name;
ClassDiagram.Attribut>> LifeCycleDDEntity.surname:String =>=>=> RelationalSchema.Column>> lifecycleddentity.surname;
ClassDiagram.Attribut>> PColl_EntityStringEager.id:int =>=>=> RelationalSchema.Column>> pcoll_entitystringeager.id PRIMARY KEY;
ClassDiagram.Attribut>> PColl_EntityStringEager.collectionofstrings:Set<String> =>=>=> RelationalSchema.Column>> pcoll_entitystringeager.collectionofstrings;
ClassDiagram.Attribut>> PColl_EntityA.id:int =>=>=> RelationalSchema.Column>> pcoll_entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> PColl_EntityA.embedcollection:Set<PColl_EmbedB> =>=>=> RelationalSchema.Column>> pcoll_entitya.embedcollection;
ClassDiagram.Attribut>> PColl_EntityA.version:int =>=>=> RelationalSchema.Column>> pcoll_entitya.version;
ClassDiagram.Attribut>> PColl_EntityA1.id:int =>=>=> RelationalSchema.Column>> pcoll_entitya1.id PRIMARY KEY;
ClassDiagram.Attribut>> PColl_EntityA1.embedcollection:Set<PColl_EntityB> =>=>=> RelationalSchema.Column>> pcoll_entitya1.embedcollection;
ClassDiagram.Attribut>> PColl_EntityA1.version:int =>=>=> RelationalSchema.Column>> pcoll_entitya1.version;
ClassDiagram.Attribut>> PColl_EntityStringLazy.id:int =>=>=> RelationalSchema.Column>> pcoll_entitystringlazy.id PRIMARY KEY;
ClassDiagram.Attribut>> PColl_EntityStringLazy.collectionofstrings:Set<String> =>=>=> RelationalSchema.Column>> pcoll_entitystringlazy.collectionofstrings;
ClassDiagram.Attribut>> PColl_EntityC.id:int =>=>=> RelationalSchema.Column>> pcoll_entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> PColl_EntityC.version:int =>=>=> RelationalSchema.Column>> pcoll_entityc.version;
ClassDiagram.Attribut>> EntityA.id:long =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA.name:String =>=>=> RelationalSchema.Column>> entitya.name;
ClassDiagram.Attribut>> EntityB.id:long =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityB.name:String =>=>=> RelationalSchema.Column>> entityb.name;
ClassDiagram.Attribut>> DerivedB.data:String =>=>=> RelationalSchema.Column>> derivedb.data;
ClassDiagram.Attribut>> PColl_EntityB.name:String =>=>=> RelationalSchema.Column>> pcoll_entityb.name;
ClassDiagram.Attribut>> TopLevel.serialversionuid:long =>=>=> RelationalSchema.Column>> toplevel.serialversionuid;
ClassDiagram.Attribut>> TopLevel.id:long =>=>=> RelationalSchema.Column>> toplevel.id PRIMARY KEY;
ClassDiagram.Attribut>> TopLevel.contmultsecoll:Collection<ContainsMultSimpleEntity> =>=>=> RelationalSchema.Column>> toplevel.contmultsecoll;
ClassDiagram.Attribut>> SimpleEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> simpleentity.serialversionuid;
ClassDiagram.Attribut>> SimpleEntity.id:long =>=>=> RelationalSchema.Column>> simpleentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleEntity.name:String =>=>=> RelationalSchema.Column>> simpleentity.name;
ClassDiagram.Attribut>> OrderedOneManyChild.id:long =>=>=> RelationalSchema.Column>> orderedonemanychild.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderedOneManyChild.name:String =>=>=> RelationalSchema.Column>> orderedonemanychild.name;
ClassDiagram.Attribut>> Purchase.id:int =>=>=> RelationalSchema.Column>> purchase.id PRIMARY KEY;
ClassDiagram.Attribut>> Purchase.version:int =>=>=> RelationalSchema.Column>> purchase.version;
ClassDiagram.Attribut>> MapHolder.id:int =>=>=> RelationalSchema.Column>> mapholder.id PRIMARY KEY;
ClassDiagram.Attribut>> MapHolder.version:int =>=>=> RelationalSchema.Column>> mapholder.version;
ClassDiagram.Attribut>> MapHolder.embeddablemap:Map<MapEmbeddable,MapEmbeddable> =>=>=> RelationalSchema.Column>> mapholder.embeddablemap;
ClassDiagram.Attribut>> CachedPerson.id:int =>=>=> RelationalSchema.Column>> cachedperson.id PRIMARY KEY;
ClassDiagram.Attribut>> CachedPerson.version:int =>=>=> RelationalSchema.Column>> cachedperson.version;
ClassDiagram.Attribut>> CachedPerson.firstname,lastname:String =>=>=> RelationalSchema.Column>> cachedperson.firstname,lastname;
ClassDiagram.Attribut>> CascadeChild.id:long =>=>=> RelationalSchema.Column>> cascadechild.id PRIMARY KEY;
ClassDiagram.Attribut>> CascadeChild.name:String =>=>=> RelationalSchema.Column>> cascadechild.name;
ClassDiagram.Attribut>> IdentityIdClass.id:int =>=>=> RelationalSchema.Column>> identityidclass.id PRIMARY KEY;
ClassDiagram.Attribut>> IdentityIdClass.field:String =>=>=> RelationalSchema.Column>> identityidclass.field;
ClassDiagram.Attribut>> Order.id:int =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.version:int =>=>=> RelationalSchema.Column>> order.version;
ClassDiagram.Attribut>> Order.quantity:int =>=>=> RelationalSchema.Column>> order.quantity;
ClassDiagram.Attribut>> OrderedOneManyParent.id:long =>=>=> RelationalSchema.Column>> orderedonemanyparent.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderedOneManyParent.name:String =>=>=> RelationalSchema.Column>> orderedonemanyparent.name;
ClassDiagram.Attribut>> CachedEntityStatistics.id:int =>=>=> RelationalSchema.Column>> cachedentitystatistics.id PRIMARY KEY;
ClassDiagram.Attribut>> CachedEntityStatistics.version:int =>=>=> RelationalSchema.Column>> cachedentitystatistics.version;
ClassDiagram.Attribut>> CachedEntityStatistics.firstname,lastname:String =>=>=> RelationalSchema.Column>> cachedentitystatistics.firstname,lastname;
ClassDiagram.Attribut>> OptimisticLockInstance.pk:int =>=>=> RelationalSchema.Column>> optimisticlockinstance.pk PRIMARY KEY;
ClassDiagram.Attribut>> OptimisticLockInstance.oplock:int =>=>=> RelationalSchema.Column>> optimisticlockinstance.oplock;
ClassDiagram.Attribut>> OptimisticLockInstance.str:String =>=>=> RelationalSchema.Column>> optimisticlockinstance.str;
ClassDiagram.Attribut>> OptimisticLockInstance.field:int =>=>=> RelationalSchema.Column>> optimisticlockinstance.field;
ClassDiagram.Attribut>> Phone.id:int =>=>=> RelationalSchema.Column>> phone.id PRIMARY KEY;
ClassDiagram.Attribut>> Phone.version:int =>=>=> RelationalSchema.Column>> phone.version;
ClassDiagram.Attribut>> Phone.somethingelse:String =>=>=> RelationalSchema.Column>> phone.somethingelse;
ClassDiagram.Attribut>> Phone.number:String =>=>=> RelationalSchema.Column>> phone.number;
ClassDiagram.Attribut>> Person.id:int =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.version:int =>=>=> RelationalSchema.Column>> person.version;
ClassDiagram.Attribut>> Person.first,middle,last:String =>=>=> RelationalSchema.Column>> person.first,middle,last;
ClassDiagram.Attribut>> Person.ci:ContactInfo =>=>=> RelationalSchema.Column>> person.ci;
ClassDiagram.Attribut>> CacheObjectB.str:String =>=>=> RelationalSchema.Column>> cacheobjectb.str;
ClassDiagram.Attribut>> SelfReferencingCacheTestObject.str:String =>=>=> RelationalSchema.Column>> selfreferencingcachetestobject.str;
ClassDiagram.Attribut>> SelfReferencingCacheTestObject.embedded:CacheObjectAChild1 =>=>=> RelationalSchema.Column>> selfreferencingcachetestobject.embedded;
ClassDiagram.Attribut>> AttachF.serialversionuid:long =>=>=> RelationalSchema.Column>> attachf.serialversionuid;
ClassDiagram.Attribut>> AttachF.id1:int =>=>=> RelationalSchema.Column>> attachf.id1;
ClassDiagram.Attribut>> AttachF.id2:String =>=>=> RelationalSchema.Column>> attachf.id2;
ClassDiagram.Attribut>> AttachF.fstr:String =>=>=> RelationalSchema.Column>> attachf.fstr;
ClassDiagram.Attribut>> AttachF.f:int =>=>=> RelationalSchema.Column>> attachf.f;
ClassDiagram.Attribut>> AttachF.fdbl:double =>=>=> RelationalSchema.Column>> attachf.fdbl;
ClassDiagram.Attribut>> AttachF.e:AttachE =>=>=> RelationalSchema.Column>> attachf.e;
ClassDiagram.Attribut>> AttachF.strings:List =>=>=> RelationalSchema.Column>> attachf.strings;
ClassDiagram.Attribut>> AttachF.embeddedc:AttachC =>=>=> RelationalSchema.Column>> attachf.embeddedc;
ClassDiagram.Attribut>> CacheObjectJ.str:String =>=>=> RelationalSchema.Column>> cacheobjectj.str;
ClassDiagram.Attribut>> AttachB.serialversionuid:long =>=>=> RelationalSchema.Column>> attachb.serialversionuid;
ClassDiagram.Attribut>> AttachB.bstr:String =>=>=> RelationalSchema.Column>> attachb.bstr;
ClassDiagram.Attribut>> AttachB.b:int =>=>=> RelationalSchema.Column>> attachb.b;
ClassDiagram.Attribut>> AttachB.bdbl:double =>=>=> RelationalSchema.Column>> attachb.bdbl;
ClassDiagram.Attribut>> AttachB.ds:Set =>=>=> RelationalSchema.Column>> attachb.ds;
ClassDiagram.Attribut>> AttachB.stringint:Map =>=>=> RelationalSchema.Column>> attachb.stringint;
ClassDiagram.Attribut>> CacheObjectAChild1.str1:String =>=>=> RelationalSchema.Column>> cacheobjectachild1.str1;
ClassDiagram.Attribut>> EmbeddingOwnerEntity.id:long =>=>=> RelationalSchema.Column>> embeddingownerentity.id PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddingOwnerEntity.members:List<EmbeddedEntity> =>=>=> RelationalSchema.Column>> embeddingownerentity.members;
ClassDiagram.Attribut>> AttachC.serialversionuid:long =>=>=> RelationalSchema.Column>> attachc.serialversionuid;
ClassDiagram.Attribut>> AttachC.cstr:String =>=>=> RelationalSchema.Column>> attachc.cstr;
ClassDiagram.Attribut>> AttachC.c:int =>=>=> RelationalSchema.Column>> attachc.c;
ClassDiagram.Attribut>> AttachC.cdbl:double =>=>=> RelationalSchema.Column>> attachc.cdbl;
ClassDiagram.Attribut>> AttachC.//non-dfges:List =>=>=> RelationalSchema.Column>> attachc.//non-dfges;
ClassDiagram.Attribut>> RuntimeTest1.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest1.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest1.somefield:String =>=>=> RelationalSchema.Column>> runtimetest1.somefield;
ClassDiagram.Attribut>> RuntimeTest1.field:byte =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:boolean =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:char =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:double =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:float =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:int =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:long =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:short =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:String =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:BigInteger =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:BigDecimal =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:Date =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:Locale =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Byte =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Boolean =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.charobjfield:Character =>=>=> RelationalSchema.Column>> runtimetest1.charobjfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Double =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Float =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.intobjfield:Integer =>=>=> RelationalSchema.Column>> runtimetest1.intobjfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Long =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Short =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.trans:String =>=>=> RelationalSchema.Column>> runtimetest1.trans;
ClassDiagram.Attribut>> CacheObjectC.str:String =>=>=> RelationalSchema.Column>> cacheobjectc.str;
ClassDiagram.Attribut>> PObject.id:long =>=>=> RelationalSchema.Column>> pobject.id PRIMARY KEY;
ClassDiagram.Attribut>> PObject.name:String =>=>=> RelationalSchema.Column>> pobject.name;
ClassDiagram.Attribut>> PObject.version:int =>=>=> RelationalSchema.Column>> pobject.version;
ClassDiagram.Attribut>> M2MEntityE.id:int =>=>=> RelationalSchema.Column>> m2mentitye.id PRIMARY KEY;
ClassDiagram.Attribut>> M2MEntityE.name:String =>=>=> RelationalSchema.Column>> m2mentitye.name;
ClassDiagram.Attribut>> AttachE.serialversionuid:long =>=>=> RelationalSchema.Column>> attache.serialversionuid;
ClassDiagram.Attribut>> AttachE.version:Object =>=>=> RelationalSchema.Column>> attache.version;
ClassDiagram.Attribut>> AttachE.estr:String =>=>=> RelationalSchema.Column>> attache.estr;
ClassDiagram.Attribut>> AttachE.e:int =>=>=> RelationalSchema.Column>> attache.e;
ClassDiagram.Attribut>> AttachE.edbl:double =>=>=> RelationalSchema.Column>> attache.edbl;
ClassDiagram.Attribut>> AttachE.b:AttachB =>=>=> RelationalSchema.Column>> attache.b;
ClassDiagram.Attribut>> AttachE.f:AttachF =>=>=> RelationalSchema.Column>> attache.f;
ClassDiagram.Attribut>> AttachE.GeneratedName:Date =>=>=> RelationalSchema.Column>> attache.GeneratedName;
ClassDiagram.Attribut>> CacheObjectBChild1.str1:String =>=>=> RelationalSchema.Column>> cacheobjectbchild1.str1;
ClassDiagram.Attribut>> AttachA.serialversionuid:long =>=>=> RelationalSchema.Column>> attacha.serialversionuid;
ClassDiagram.Attribut>> AttachA.astr:String =>=>=> RelationalSchema.Column>> attacha.astr;
ClassDiagram.Attribut>> AttachA.a:int =>=>=> RelationalSchema.Column>> attacha.a;
ClassDiagram.Attribut>> AttachA.adbl:double =>=>=> RelationalSchema.Column>> attacha.adbl;
ClassDiagram.Attribut>> AttachA.array:String =>=>=> RelationalSchema.Column>> attacha.array;
ClassDiagram.Attribut>> AttachA.array:AttachE =>=>=> RelationalSchema.Column>> attacha.array;
ClassDiagram.Attribut>> CacheObjectAChild2.str2:String =>=>=> RelationalSchema.Column>> cacheobjectachild2.str2;
ClassDiagram.Attribut>> CacheObjectA.name:String =>=>=> RelationalSchema.Column>> cacheobjecta.name;
ClassDiagram.Attribut>> CacheObjectA.age:long =>=>=> RelationalSchema.Column>> cacheobjecta.age;
ClassDiagram.Attribut>> CacheObjectA./**@manytomany@jointable(name:Collection<String> =>=>=> RelationalSchema.Column>> cacheobjecta./**@manytomany@jointable(name;
ClassDiagram.Attribut>> CacheObjectA./**@manytomany@jointable(name:Collection<CacheObjectA> =>=>=> RelationalSchema.Column>> cacheobjecta./**@manytomany@jointable(name;
ClassDiagram.Attribut>> CacheObjectA./**@manytomany@jointable(name:String =>=>=> RelationalSchema.Column>> cacheobjecta./**@manytomany@jointable(name;
ClassDiagram.Attribut>> CacheObjectA./**@manytomany@jointable(name:float =>=>=> RelationalSchema.Column>> cacheobjecta./**@manytomany@jointable(name;
ClassDiagram.Attribut>> CacheObjectA./**@manytomany@jointable(name:Date =>=>=> RelationalSchema.Column>> cacheobjecta./**@manytomany@jointable(name;
ClassDiagram.Attribut>> CacheObjectA.GeneratedName:Date =>=>=> RelationalSchema.Column>> cacheobjecta.GeneratedName;
ClassDiagram.Attribut>> CacheObjectA.GeneratedName:Locale =>=>=> RelationalSchema.Column>> cacheobjecta.GeneratedName;
ClassDiagram.Attribut>> AppIdCacheObject.id:int =>=>=> RelationalSchema.Column>> appidcacheobject.id;
ClassDiagram.Attribut>> CacheObjectE.str:String =>=>=> RelationalSchema.Column>> cacheobjecte.str;
ClassDiagram.Attribut>> FlushDataCacheObject.GeneratedName:String =>=>=> RelationalSchema.Column>> flushdatacacheobject.GeneratedName;
ClassDiagram.Attribut>> CacheObjectWithExternalizedFields.cls:Class =>=>=> RelationalSchema.Column>> cacheobjectwithexternalizedfields.cls;
ClassDiagram.Attribut>> CacheObjectD.str:String =>=>=> RelationalSchema.Column>> cacheobjectd.str;
ClassDiagram.Attribut>> TransactionalClassPC.field:int =>=>=> RelationalSchema.Column>> transactionalclasspc.field;
ClassDiagram.Attribut>> M2MEntityF.id:int =>=>=> RelationalSchema.Column>> m2mentityf.id PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedEntity.marker:String =>=>=> RelationalSchema.Column>> embeddedentity.marker;
ClassDiagram.Attribut>> AttachD.serialversionuid:long =>=>=> RelationalSchema.Column>> attachd.serialversionuid;
ClassDiagram.Attribut>> AttachD.version:Object =>=>=> RelationalSchema.Column>> attachd.version;
ClassDiagram.Attribut>> AttachD.dstr:String =>=>=> RelationalSchema.Column>> attachd.dstr;
ClassDiagram.Attribut>> AttachD.d:int =>=>=> RelationalSchema.Column>> attachd.d;
ClassDiagram.Attribut>> AttachD.ddbl:double =>=>=> RelationalSchema.Column>> attachd.ddbl;
ClassDiagram.Attribut>> AttachD.a:AttachA =>=>=> RelationalSchema.Column>> attachd.a;
ClassDiagram.Attribut>> AttachD.//dfgbs:Set =>=>=> RelationalSchema.Column>> attachd.//dfgbs;
ClassDiagram.Attribut>> AttachD.pcstring:Map =>=>=> RelationalSchema.Column>> attachd.pcstring;
ClassDiagram.Attribut>> AttachD.bigintegerpcmap:TreeMap =>=>=> RelationalSchema.Column>> attachd.bigintegerpcmap;
ClassDiagram.Attribut>> AttachD.embeddede:AttachE =>=>=> RelationalSchema.Column>> attachd.embeddede;
ClassDiagram.Attribut>> AttachD.embeddeda:AttachA =>=>=> RelationalSchema.Column>> attachd.embeddeda;
ClassDiagram.Attribut>> RuntimeTest2.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest2.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest2.field2:int =>=>=> RelationalSchema.Column>> runtimetest2.field2;
ClassDiagram.Attribut>> CascadeParent.id:long =>=>=> RelationalSchema.Column>> cascadeparent.id PRIMARY KEY;
ClassDiagram.Attribut>> CascadeParent.name:String =>=>=> RelationalSchema.Column>> cascadeparent.name;
ClassDiagram.Attribut>> Item.id:int =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.version:int =>=>=> RelationalSchema.Column>> item.version;
ClassDiagram.Attribut>> Item.name:String =>=>=> RelationalSchema.Column>> item.name;
ClassDiagram.Attribut>> Item.type:String =>=>=> RelationalSchema.Column>> item.type;
ClassDiagram.Attribut>> MixedInterfaceImpl.id:int =>=>=> RelationalSchema.Column>> mixedinterfaceimpl.id PRIMARY KEY;
ClassDiagram.Attribut>> MixedInterfaceImpl.field:int =>=>=> RelationalSchema.Column>> mixedinterfaceimpl.field;
ClassDiagram.Attribut>> ManagedInterfaceOwner.id:int =>=>=> RelationalSchema.Column>> managedinterfaceowner.id PRIMARY KEY;
ClassDiagram.Attribut>> ManagedInterfaceOwner.field:int =>=>=> RelationalSchema.Column>> managedinterfaceowner.field;
ClassDiagram.Attribut>> ManagedInterfaceOwner.embed:ManagedInterfaceEmbed =>=>=> RelationalSchema.Column>> managedinterfaceowner.embed;
ClassDiagram.Attribut>> NonMappedInterfaceImpl.mismatch:int =>=>=> RelationalSchema.Column>> nonmappedinterfaceimpl.mismatch;
ClassDiagram.Attribut>> CascadesEntity.id:long =>=>=> RelationalSchema.Column>> cascadesentity.id PRIMARY KEY;
ClassDiagram.Attribut>> CascadesEntity.name:String =>=>=> RelationalSchema.Column>> cascadesentity.name;
ClassDiagram.Attribut>> AnnoExceptionEntity.id:int =>=>=> RelationalSchema.Column>> annoexceptionentity.id PRIMARY KEY;
ClassDiagram.Attribut>> AnnoExceptionEntity.exceptions:ArrayList<Exception> =>=>=> RelationalSchema.Column>> annoexceptionentity.exceptions;
ClassDiagram.Attribut>> AnnoExceptionEntity.//elementcollectiondoesnotworkwithexceptions.elemcollexceptions:Collection<String> =>=>=> RelationalSchema.Column>> annoexceptionentity.//elementcollectiondoesnotworkwithexceptions.elemcollexceptions;
ClassDiagram.Attribut>> AnnoExceptionEntity.perscollexceptions:Collection<Exception> =>=>=> RelationalSchema.Column>> annoexceptionentity.perscollexceptions;
ClassDiagram.Attribut>> Node.id:int =>=>=> RelationalSchema.Column>> node.id PRIMARY KEY;
ClassDiagram.Attribut>> Node.version:int =>=>=> RelationalSchema.Column>> node.version;
ClassDiagram.Attribut>> XmlOverrideToOneEntity.id:int =>=>=> RelationalSchema.Column>> xmloverridetooneentity.id PRIMARY KEY;
ClassDiagram.Attribut>> XmlOverrideToOneEntity.version:int =>=>=> RelationalSchema.Column>> xmloverridetooneentity.version;
ClassDiagram.Attribut>> XmlOverrideEntity.id:int =>=>=> RelationalSchema.Column>> xmloverrideentity.id PRIMARY KEY;
ClassDiagram.Attribut>> XmlOverrideEntity.name:String =>=>=> RelationalSchema.Column>> xmloverrideentity.name;
ClassDiagram.Attribut>> XmlOverrideEntity.description:String =>=>=> RelationalSchema.Column>> xmloverrideentity.description;
ClassDiagram.Attribut>> XmlOverrideEntity.picture:Byte =>=>=> RelationalSchema.Column>> xmloverrideentity.picture;
ClassDiagram.Attribut>> CascadePersistEntity.id:long =>=>=> RelationalSchema.Column>> cascadepersistentity.id PRIMARY KEY;
ClassDiagram.Attribut>> CascadePersistEntity.field:String =>=>=> RelationalSchema.Column>> cascadepersistentity.field;
ClassDiagram.Attribut>> Edge.oid:long =>=>=> RelationalSchema.Column>> edge.oid PRIMARY KEY;
ClassDiagram.Attribut>> PUDEntityB.id:int =>=>=> RelationalSchema.Column>> pudentityb.id PRIMARY KEY;
ClassDiagram.Attribut>> PUDEntityB.strdata:String =>=>=> RelationalSchema.Column>> pudentityb.strdata;
ClassDiagram.Attribut>> PUDEntityA02.id:int =>=>=> RelationalSchema.Column>> pudentitya02.id PRIMARY KEY;
ClassDiagram.Attribut>> PUDEntityA02.strdata:String =>=>=> RelationalSchema.Column>> pudentitya02.strdata;
ClassDiagram.Attribut>> PUDEntityA02.emb:EmbeddableWithRelationships =>=>=> RelationalSchema.Column>> pudentitya02.emb;
ClassDiagram.Attribut>> PUDEntityAE01.id:int =>=>=> RelationalSchema.Column>> pudentityae01.id PRIMARY KEY;
ClassDiagram.Attribut>> PUDEntityAE01.strdata:String =>=>=> RelationalSchema.Column>> pudentityae01.strdata;
ClassDiagram.Attribut>> PUDEntityAE01.ane:AnEmbeddable =>=>=> RelationalSchema.Column>> pudentityae01.ane;
ClassDiagram.Attribut>> PUDEntityA01.id:int =>=>=> RelationalSchema.Column>> pudentitya01.id PRIMARY KEY;
ClassDiagram.Attribut>> PUDEntityA01.strdata:String =>=>=> RelationalSchema.Column>> pudentitya01.strdata;
ClassDiagram.Attribut>> Vertex.oid:long =>=>=> RelationalSchema.Column>> vertex.oid PRIMARY KEY;
ClassDiagram.Attribut>> VertexType.oid:long =>=>=> RelationalSchema.Column>> vertextype.oid PRIMARY KEY;
ClassDiagram.Attribut>> VertexType.name:String =>=>=> RelationalSchema.Column>> vertextype.name;
ClassDiagram.Attribut>> IdClassEntity.id:int =>=>=> RelationalSchema.Column>> idclassentity.id PRIMARY KEY;
ClassDiagram.Attribut>> IdClassEntity.somedata:String =>=>=> RelationalSchema.Column>> idclassentity.somedata;
ClassDiagram.Attribut>> DerivedEntityFromMappedSuperWithoutId.id:long =>=>=> RelationalSchema.Column>> derivedentityfrommappedsuperwithoutid.id PRIMARY KEY;
ClassDiagram.Attribut>> DerivedEntityFromMappedSuperWithoutId.name:String =>=>=> RelationalSchema.Column>> derivedentityfrommappedsuperwithoutid.name;
ClassDiagram.Attribut>> DerivedEntityFromMappedSuperWithoutId.version:int =>=>=> RelationalSchema.Column>> derivedentityfrommappedsuperwithoutid.version;
ClassDiagram.Attribut>> SituationDA.cashboxperiodserial:String =>=>=> RelationalSchema.Column>> situationda.cashboxperiodserial PRIMARY KEY;
ClassDiagram.Attribut>> SituationDA.type:short =>=>=> RelationalSchema.Column>> situationda.type PRIMARY KEY;
ClassDiagram.Attribut>> ValuableItemDA.code:short =>=>=> RelationalSchema.Column>> valuableitemda.code PRIMARY KEY;
ClassDiagram.Attribut>> PIdJTSDMSCLeafC.leafcdata:String =>=>=> RelationalSchema.Column>> pidjtsdmscleafc.leafcdata;
ClassDiagram.Attribut>> PIdJTSDMSCLeafD2.leafd2data:String =>=>=> RelationalSchema.Column>> pidjtsdmscleafd2.leafd2data;
ClassDiagram.Attribut>> PIdJTSDMSCLeafB1.leafb1data:String =>=>=> RelationalSchema.Column>> pidjtsdmscleafb1.leafb1data;
ClassDiagram.Attribut>> PIdJTSDMSCEntityD.entityddata:String =>=>=> RelationalSchema.Column>> pidjtsdmscentityd.entityddata;
ClassDiagram.Attribut>> PIdJTSDMSCLeafD1.leafd1data:String =>=>=> RelationalSchema.Column>> pidjtsdmscleafd1.leafd1data;
ClassDiagram.Attribut>> PIdJTSDMSCEntityB.entitybdata:String =>=>=> RelationalSchema.Column>> pidjtsdmscentityb.entitybdata;
ClassDiagram.Attribut>> PIdJTSDMSCRootEntity.rootentitydata:String =>=>=> RelationalSchema.Column>> pidjtsdmscrootentity.rootentitydata;
ClassDiagram.Attribut>> PIdJTSDMSCLeafA.leafadata:String =>=>=> RelationalSchema.Column>> pidjtsdmscleafa.leafadata;
ClassDiagram.Attribut>> PIdJTSDMSCLeafB2.leafb2data:String =>=>=> RelationalSchema.Column>> pidjtsdmscleafb2.leafb2data;
ClassDiagram.Attribut>> PIdJTCDMSCEntityD.entityddata:String =>=>=> RelationalSchema.Column>> pidjtcdmscentityd.entityddata;
ClassDiagram.Attribut>> PIdJTCDMSCLeafD1.leafd1data:String =>=>=> RelationalSchema.Column>> pidjtcdmscleafd1.leafd1data;
ClassDiagram.Attribut>> PIdJTCDMSCRootEntity.rootentitydata:String =>=>=> RelationalSchema.Column>> pidjtcdmscrootentity.rootentitydata;
ClassDiagram.Attribut>> PIdJTCDMSCLeafB2.leafb2data:String =>=>=> RelationalSchema.Column>> pidjtcdmscleafb2.leafb2data;
ClassDiagram.Attribut>> PIdJTCDMSCLeafC.leafcdata:String =>=>=> RelationalSchema.Column>> pidjtcdmscleafc.leafcdata;
ClassDiagram.Attribut>> PIdJTCDMSCLeafD2.leafd2data:String =>=>=> RelationalSchema.Column>> pidjtcdmscleafd2.leafd2data;
ClassDiagram.Attribut>> PIdJTCDMSCLeafA.leafadata:String =>=>=> RelationalSchema.Column>> pidjtcdmscleafa.leafadata;
ClassDiagram.Attribut>> PIdJTCDMSCEntityB.entitybdata:String =>=>=> RelationalSchema.Column>> pidjtcdmscentityb.entitybdata;
ClassDiagram.Attribut>> PIdJTCDMSCLeafB1.leafb1data:String =>=>=> RelationalSchema.Column>> pidjtcdmscleafb1.leafb1data;
ClassDiagram.Attribut>> PIdJTIDMSCLeafD1.leafd1data:String =>=>=> RelationalSchema.Column>> pidjtidmscleafd1.leafd1data;
ClassDiagram.Attribut>> PIdJTIDMSCLeafC.leafcdata:String =>=>=> RelationalSchema.Column>> pidjtidmscleafc.leafcdata;
ClassDiagram.Attribut>> PIdJTIDMSCEntityB.entitybdata:String =>=>=> RelationalSchema.Column>> pidjtidmscentityb.entitybdata;
ClassDiagram.Attribut>> PIdJTIDMSCLeafB2.leafb2data:String =>=>=> RelationalSchema.Column>> pidjtidmscleafb2.leafb2data;
ClassDiagram.Attribut>> PIdJTIDMSCLeafA.leafadata:String =>=>=> RelationalSchema.Column>> pidjtidmscleafa.leafadata;
ClassDiagram.Attribut>> PIdJTIDMSCRootEntity.rootentitydata:String =>=>=> RelationalSchema.Column>> pidjtidmscrootentity.rootentitydata;
ClassDiagram.Attribut>> PIdJTIDMSCLeafD2.leafd2data:String =>=>=> RelationalSchema.Column>> pidjtidmscleafd2.leafd2data;
ClassDiagram.Attribut>> PIdJTIDMSCEntityD.entityddata:String =>=>=> RelationalSchema.Column>> pidjtidmscentityd.entityddata;
ClassDiagram.Attribut>> PIdJTIDMSCLeafB1.leafb1data:String =>=>=> RelationalSchema.Column>> pidjtidmscleafb1.leafb1data;
ClassDiagram.Attribut>> PIdSTCDMSCLeafD2.leafd2data:String =>=>=> RelationalSchema.Column>> pidstcdmscleafd2.leafd2data;
ClassDiagram.Attribut>> PIdSTCDMSCLeafC.leafcdata:String =>=>=> RelationalSchema.Column>> pidstcdmscleafc.leafcdata;
ClassDiagram.Attribut>> PIdSTCDMSCRootEntity.rootentitydata:String =>=>=> RelationalSchema.Column>> pidstcdmscrootentity.rootentitydata;
ClassDiagram.Attribut>> PIdSTCDMSCLeafB1.leafb1data:String =>=>=> RelationalSchema.Column>> pidstcdmscleafb1.leafb1data;
ClassDiagram.Attribut>> PIdSTCDMSCEntityB.entitybdata:String =>=>=> RelationalSchema.Column>> pidstcdmscentityb.entitybdata;
ClassDiagram.Attribut>> PIdSTCDMSCLeafD1.leafd1data:String =>=>=> RelationalSchema.Column>> pidstcdmscleafd1.leafd1data;
ClassDiagram.Attribut>> PIdSTCDMSCEntityD.entityddata:String =>=>=> RelationalSchema.Column>> pidstcdmscentityd.entityddata;
ClassDiagram.Attribut>> PIdSTCDMSCLeafB2.leafb2data:String =>=>=> RelationalSchema.Column>> pidstcdmscleafb2.leafb2data;
ClassDiagram.Attribut>> PIdSTCDMSCLeafA.leafadata:String =>=>=> RelationalSchema.Column>> pidstcdmscleafa.leafadata;
ClassDiagram.Attribut>> PIdSTIDMSCLeafD2.leafd2data:String =>=>=> RelationalSchema.Column>> pidstidmscleafd2.leafd2data;
ClassDiagram.Attribut>> PIdSTIDMSCRootEntity.rootentitydata:String =>=>=> RelationalSchema.Column>> pidstidmscrootentity.rootentitydata;
ClassDiagram.Attribut>> PIdSTIDMSCEntityD.entityddata:String =>=>=> RelationalSchema.Column>> pidstidmscentityd.entityddata;
ClassDiagram.Attribut>> PIdSTIDMSCLeafC.leafcdata:String =>=>=> RelationalSchema.Column>> pidstidmscleafc.leafcdata;
ClassDiagram.Attribut>> PIdSTIDMSCLeafB1.leafb1data:String =>=>=> RelationalSchema.Column>> pidstidmscleafb1.leafb1data;
ClassDiagram.Attribut>> PIdSTIDMSCEntityB.entitybdata:String =>=>=> RelationalSchema.Column>> pidstidmscentityb.entitybdata;
ClassDiagram.Attribut>> PIdSTIDMSCLeafD1.leafd1data:String =>=>=> RelationalSchema.Column>> pidstidmscleafd1.leafd1data;
ClassDiagram.Attribut>> PIdSTIDMSCLeafA.leafadata:String =>=>=> RelationalSchema.Column>> pidstidmscleafa.leafadata;
ClassDiagram.Attribut>> PIdSTIDMSCLeafB2.leafb2data:String =>=>=> RelationalSchema.Column>> pidstidmscleafb2.leafb2data;
ClassDiagram.Attribut>> PIdSTSDMSCEntityD.entityddata:String =>=>=> RelationalSchema.Column>> pidstsdmscentityd.entityddata;
ClassDiagram.Attribut>> PIdSTSDMSCLeafD2.leafd2data:String =>=>=> RelationalSchema.Column>> pidstsdmscleafd2.leafd2data;
ClassDiagram.Attribut>> PIdSTSDMSCLeafB1.leafb1data:String =>=>=> RelationalSchema.Column>> pidstsdmscleafb1.leafb1data;
ClassDiagram.Attribut>> PIdSTSDMSCLeafC.leafcdata:String =>=>=> RelationalSchema.Column>> pidstsdmscleafc.leafcdata;
ClassDiagram.Attribut>> PIdSTSDMSCLeafD1.leafd1data:String =>=>=> RelationalSchema.Column>> pidstsdmscleafd1.leafd1data;
ClassDiagram.Attribut>> PIdSTSDMSCLeafA.leafadata:String =>=>=> RelationalSchema.Column>> pidstsdmscleafa.leafadata;
ClassDiagram.Attribut>> PIdSTSDMSCRootEntity.rootentitydata:String =>=>=> RelationalSchema.Column>> pidstsdmscrootentity.rootentitydata;
ClassDiagram.Attribut>> PIdSTSDMSCEntityB.entitybdata:String =>=>=> RelationalSchema.Column>> pidstsdmscentityb.entitybdata;
ClassDiagram.Attribut>> PIdSTSDMSCLeafB2.leafb2data:String =>=>=> RelationalSchema.Column>> pidstsdmscleafb2.leafb2data;
ClassDiagram.Attribut>> BaseClass6.id:int =>=>=> RelationalSchema.Column>> baseclass6.id PRIMARY KEY;
ClassDiagram.Attribut>> BaseClass6.name:String =>=>=> RelationalSchema.Column>> baseclass6.name;
ClassDiagram.Attribut>> SubclassF.classfname:String =>=>=> RelationalSchema.Column>> subclassf.classfname;
ClassDiagram.Attribut>> SubclassF.fieldsup:int =>=>=> RelationalSchema.Column>> subclassf.fieldsup;
ClassDiagram.Attribut>> BaseClass2.id:int =>=>=> RelationalSchema.Column>> baseclass2.id PRIMARY KEY;
ClassDiagram.Attribut>> BaseClass2.version:int =>=>=> RelationalSchema.Column>> baseclass2.version;
ClassDiagram.Attribut>> BaseClass2.name:String =>=>=> RelationalSchema.Column>> baseclass2.name;
ClassDiagram.Attribut>> PTEmployee.hourlywage:float =>=>=> RelationalSchema.Column>> ptemployee.hourlywage;
ClassDiagram.Attribut>> SubclassB.classbname:String =>=>=> RelationalSchema.Column>> subclassb.classbname;
ClassDiagram.Attribut>> ComputerUser.oid:Integer =>=>=> RelationalSchema.Column>> computeruser.oid PRIMARY KEY;
ClassDiagram.Attribut>> SharedName2.id:long =>=>=> RelationalSchema.Column>> sharedname2.id PRIMARY KEY;
ClassDiagram.Attribut>> SubclassJ.classjname:String =>=>=> RelationalSchema.Column>> subclassj.classjname;
ClassDiagram.Attribut>> SubclassJ.version:int =>=>=> RelationalSchema.Column>> subclassj.version;
ClassDiagram.Attribut>> BaseCallback.transientpostpersistcount:int =>=>=> RelationalSchema.Column>> basecallback.transientpostpersistcount;
ClassDiagram.Attribut>> FTEmployee.salary:double =>=>=> RelationalSchema.Column>> ftemployee.salary;
ClassDiagram.Attribut>> SubclassK.classkname:String =>=>=> RelationalSchema.Column>> subclassk.classkname;
ClassDiagram.Attribut>> SubclassG.classgname:String =>=>=> RelationalSchema.Column>> subclassg.classgname;
ClassDiagram.Attribut>> SubclassG.fieldsup:int =>=>=> RelationalSchema.Column>> subclassg.fieldsup;
ClassDiagram.Attribut>> BaseClass3.id:int =>=>=> RelationalSchema.Column>> baseclass3.id PRIMARY KEY;
ClassDiagram.Attribut>> BaseClass3.version:int =>=>=> RelationalSchema.Column>> baseclass3.version;
ClassDiagram.Attribut>> BaseClass3.name:String =>=>=> RelationalSchema.Column>> baseclass3.name;
ClassDiagram.Attribut>> SubclassC.classcname:String =>=>=> RelationalSchema.Column>> subclassc.classcname;
ClassDiagram.Attribut>> SharedName1.id:long =>=>=> RelationalSchema.Column>> sharedname1.id PRIMARY KEY;
ClassDiagram.Attribut>> SubclassI.classiname:String =>=>=> RelationalSchema.Column>> subclassi.classiname;
ClassDiagram.Attribut>> SubclassI.version:int =>=>=> RelationalSchema.Column>> subclassi.version;
ClassDiagram.Attribut>> BaseClass.id:int =>=>=> RelationalSchema.Column>> baseclass.id PRIMARY KEY;
ClassDiagram.Attribut>> BaseClass.version:int =>=>=> RelationalSchema.Column>> baseclass.version;
ClassDiagram.Attribut>> BaseClass.name:String =>=>=> RelationalSchema.Column>> baseclass.name;
ClassDiagram.Attribut>> BaseClass5.id:int =>=>=> RelationalSchema.Column>> baseclass5.id PRIMARY KEY;
ClassDiagram.Attribut>> BaseClass5.version:int =>=>=> RelationalSchema.Column>> baseclass5.version;
ClassDiagram.Attribut>> BaseClass5.name:String =>=>=> RelationalSchema.Column>> baseclass5.name;
ClassDiagram.Attribut>> SubclassE.classename:String =>=>=> RelationalSchema.Column>> subclasse.classename;
ClassDiagram.Attribut>> ImplClassA.implclassaname:String =>=>=> RelationalSchema.Column>> implclassa.implclassaname;
ClassDiagram.Attribut>> ImplClassA.id:int =>=>=> RelationalSchema.Column>> implclassa.id PRIMARY KEY;
ClassDiagram.Attribut>> ImplClassA.fieldsup:int =>=>=> RelationalSchema.Column>> implclassa.fieldsup;
ClassDiagram.Attribut>> SubclassA.classaname:String =>=>=> RelationalSchema.Column>> subclassa.classaname;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.lastname:String =>=>=> RelationalSchema.Column>> employee.lastname;
ClassDiagram.Attribut>> Employee.firstname:String =>=>=> RelationalSchema.Column>> employee.firstname;
ClassDiagram.Attribut>> Employee.vacationdays:int =>=>=> RelationalSchema.Column>> employee.vacationdays;
ClassDiagram.Attribut>> Employee.version:long =>=>=> RelationalSchema.Column>> employee.version;
ClassDiagram.Attribut>> Employee.transientstr:String =>=>=> RelationalSchema.Column>> employee.transientstr;
ClassDiagram.Attribut>> BaseClass4.id:int =>=>=> RelationalSchema.Column>> baseclass4.id PRIMARY KEY;
ClassDiagram.Attribut>> BaseClass4.version:int =>=>=> RelationalSchema.Column>> baseclass4.version;
ClassDiagram.Attribut>> BaseClass4.name:String =>=>=> RelationalSchema.Column>> baseclass4.name;
ClassDiagram.Attribut>> SubclassD.classdname:String =>=>=> RelationalSchema.Column>> subclassd.classdname;
ClassDiagram.Attribut>> MidClass.midclassname:String =>=>=> RelationalSchema.Column>> midclass.midclassname;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.departmentname:String =>=>=> RelationalSchema.Column>> department.departmentname;
ClassDiagram.Attribut>> AbstractClass.id:int =>=>=> RelationalSchema.Column>> abstractclass.id PRIMARY KEY;
ClassDiagram.Attribut>> AbstractClass.name:String =>=>=> RelationalSchema.Column>> abstractclass.name;
ClassDiagram.Attribut>> SubclassH.classhname:String =>=>=> RelationalSchema.Column>> subclassh.classhname;
ClassDiagram.Attribut>> SubclassH.fieldsup:int =>=>=> RelationalSchema.Column>> subclassh.fieldsup;
ClassDiagram.Attribut>> MidClass2.midclass2name:String =>=>=> RelationalSchema.Column>> midclass2.midclass2name;
ClassDiagram.Attribut>> Superclass.id:Integer =>=>=> RelationalSchema.Column>> superclass.id PRIMARY KEY;
ClassDiagram.Attribut>> Superclass.attr1:String =>=>=> RelationalSchema.Column>> superclass.attr1;
ClassDiagram.Attribut>> RelationOwner.id:Integer =>=>=> RelationalSchema.Column>> relationowner.id PRIMARY KEY;
ClassDiagram.Attribut>> Subclass.attr2:String =>=>=> RelationalSchema.Column>> subclass.attr2;
ClassDiagram.Attribut>> NoGenEntityL3Sibling.siblingl3data:int =>=>=> RelationalSchema.Column>> nogenentityl3sibling.siblingl3data;
ClassDiagram.Attribut>> EnglishParagraph.content:String =>=>=> RelationalSchema.Column>> englishparagraph.content;
ClassDiagram.Attribut>> GermanParagraph.content:String =>=>=> RelationalSchema.Column>> germanparagraph.content;
ClassDiagram.Attribut>> FrenchParagraph.content:String =>=>=> RelationalSchema.Column>> frenchparagraph.content;
ClassDiagram.Attribut>> NoGenEntityL3.l3data:int =>=>=> RelationalSchema.Column>> nogenentityl3.l3data;
ClassDiagram.Attribut>> ConcreteSubclass.subclassdata:int =>=>=> RelationalSchema.Column>> concretesubclass.subclassdata;
ClassDiagram.Attribut>> EntityL3Sibling.siblingl3data:int =>=>=> RelationalSchema.Column>> entityl3sibling.siblingl3data;
ClassDiagram.Attribut>> Contractor.ctrprop1:String =>=>=> RelationalSchema.Column>> contractor.ctrprop1;
ClassDiagram.Attribut>> Department.oid:long =>=>=> RelationalSchema.Column>> department.oid PRIMARY KEY;
ClassDiagram.Attribut>> Department.description:String =>=>=> RelationalSchema.Column>> department.description;
ClassDiagram.Attribut>> Department.deptprop1:String =>=>=> RelationalSchema.Column>> department.deptprop1;
ClassDiagram.Attribut>> Person.oid:long =>=>=> RelationalSchema.Column>> person.oid PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Employee.description:String =>=>=> RelationalSchema.Column>> employee.description;
ClassDiagram.Attribut>> ParttimeEmployee.ptempprop1:String =>=>=> RelationalSchema.Column>> parttimeemployee.ptempprop1;
ClassDiagram.Attribut>> FulltimeEmployee.ftempprop1:String =>=>=> RelationalSchema.Column>> fulltimeemployee.ftempprop1;
ClassDiagram.Attribut>> UMLClass.serialversionuid:long =>=>=> RelationalSchema.Column>> umlclass.serialversionuid;
ClassDiagram.Attribut>> UMLType.serialversionuid:long =>=>=> RelationalSchema.Column>> umltype.serialversionuid;
ClassDiagram.Attribut>> UMLPackage.serialversionuid:long =>=>=> RelationalSchema.Column>> umlpackage.serialversionuid;
ClassDiagram.Attribut>> UMLPackage.id:String =>=>=> RelationalSchema.Column>> umlpackage.id PRIMARY KEY;
ClassDiagram.Attribut>> UMLPackage.name:String =>=>=> RelationalSchema.Column>> umlpackage.name;
ClassDiagram.Attribut>> UMLPrimitiveType.serialversionuid:long =>=>=> RelationalSchema.Column>> umlprimitivetype.serialversionuid;
ClassDiagram.Attribut>> UMLNamed.serialversionuid:long =>=>=> RelationalSchema.Column>> umlnamed.serialversionuid;
ClassDiagram.Attribut>> UMLNamed.id:String =>=>=> RelationalSchema.Column>> umlnamed.id PRIMARY KEY;
ClassDiagram.Attribut>> UMLNamed.name:String =>=>=> RelationalSchema.Column>> umlnamed.name;
ClassDiagram.Attribut>> AbstractBase.id:String =>=>=> RelationalSchema.Column>> abstractbase.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityL3.l3data:int =>=>=> RelationalSchema.Column>> entityl3.l3data;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.salary:float =>=>=> RelationalSchema.Column>> employee.salary;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.id:int =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.version:int =>=>=> RelationalSchema.Column>> person.version;
ClassDiagram.Attribut>> Issue428Entity.field:double =>=>=> RelationalSchema.Column>> issue428entity.field;
ClassDiagram.Attribut>> Subject.oid:int =>=>=> RelationalSchema.Column>> subject.oid PRIMARY KEY;
ClassDiagram.Attribut>> Subject.//persistentfieldsname:String =>=>=> RelationalSchema.Column>> subject.//persistentfieldsname;
ClassDiagram.Attribut>> Book.weeks_time_ms:int =>=>=> RelationalSchema.Column>> book.weeks_time_ms;
ClassDiagram.Attribut>> Book.oid:int =>=>=> RelationalSchema.Column>> book.oid PRIMARY KEY;
ClassDiagram.Attribut>> Book.//persistentfieldstitle:String =>=>=> RelationalSchema.Column>> book.//persistentfieldstitle;
ClassDiagram.Attribut>> Book.due:Date =>=>=> RelationalSchema.Column>> book.due;
ClassDiagram.Attribut>> Volunteer.oid:int =>=>=> RelationalSchema.Column>> volunteer.oid PRIMARY KEY;
ClassDiagram.Attribut>> Volunteer.hours_per_week:int =>=>=> RelationalSchema.Column>> volunteer.hours_per_week;
ClassDiagram.Attribut>> Borrower.oid:int =>=>=> RelationalSchema.Column>> borrower.oid PRIMARY KEY;
ClassDiagram.Attribut>> Borrower.//persistentfieldsname:String =>=>=> RelationalSchema.Column>> borrower.//persistentfieldsname;
ClassDiagram.Attribut>> FullTimeEmployee.salary:float =>=>=> RelationalSchema.Column>> fulltimeemployee.salary;
ClassDiagram.Attribut>> Employee.title:String =>=>=> RelationalSchema.Column>> employee.title;
ClassDiagram.Attribut>> Employee.hire:Date =>=>=> RelationalSchema.Column>> employee.hire;
ClassDiagram.Attribut>> Company.idcounter:long =>=>=> RelationalSchema.Column>> company.idcounter;
ClassDiagram.Attribut>> Company.id:long =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Company.name:String =>=>=> RelationalSchema.Column>> company.name;
ClassDiagram.Attribut>> Person.idcounter:long =>=>=> RelationalSchema.Column>> person.idcounter;
ClassDiagram.Attribut>> Person.id:long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Address.idcounter:long =>=>=> RelationalSchema.Column>> address.idcounter;
ClassDiagram.Attribut>> Address.id:long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.streetaddress:String =>=>=> RelationalSchema.Column>> address.streetaddress;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.postalcode:String =>=>=> RelationalSchema.Column>> address.postalcode;
ClassDiagram.Attribut>> Address.phonenumber:String =>=>=> RelationalSchema.Column>> address.phonenumber;
ClassDiagram.Attribut>> Product.idcounter:long =>=>=> RelationalSchema.Column>> product.idcounter;
ClassDiagram.Attribut>> Product.id:long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.image:byte =>=>=> RelationalSchema.Column>> product.image;
ClassDiagram.Attribut>> Product.price:float =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> LineItem.idcounter:long =>=>=> RelationalSchema.Column>> lineitem.idcounter;
ClassDiagram.Attribut>> LineItem.id:long =>=>=> RelationalSchema.Column>> lineitem.id PRIMARY KEY;
ClassDiagram.Attribut>> LineItem.quantity:int =>=>=> RelationalSchema.Column>> lineitem.quantity;
ClassDiagram.Attribut>> ProductOrder.idcounter:long =>=>=> RelationalSchema.Column>> productorder.idcounter;
ClassDiagram.Attribut>> ProductOrder.id:long =>=>=> RelationalSchema.Column>> productorder.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductOrder.order:Date =>=>=> RelationalSchema.Column>> productorder.order;
ClassDiagram.Attribut>> ProductOrder.shipped:Date =>=>=> RelationalSchema.Column>> productorder.shipped;
ClassDiagram.Attribut>> PartTimeEmployee.wage:float =>=>=> RelationalSchema.Column>> parttimeemployee.wage;
ClassDiagram.Attribut>> PartTimeEmployee.weeklyhours:int =>=>=> RelationalSchema.Column>> parttimeemployee.weeklyhours;
ClassDiagram.Attribut>> Company.idcounter:long =>=>=> RelationalSchema.Column>> company.idcounter;
ClassDiagram.Attribut>> Company.id:long =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Company.name:String =>=>=> RelationalSchema.Column>> company.name;
ClassDiagram.Attribut>> FullTimeEmployee.salary:float =>=>=> RelationalSchema.Column>> fulltimeemployee.salary;
ClassDiagram.Attribut>> Employee.title:String =>=>=> RelationalSchema.Column>> employee.title;
ClassDiagram.Attribut>> Employee.hire:Date =>=>=> RelationalSchema.Column>> employee.hire;
ClassDiagram.Attribut>> Product.idcounter:long =>=>=> RelationalSchema.Column>> product.idcounter;
ClassDiagram.Attribut>> Product.id:long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.image:byte =>=>=> RelationalSchema.Column>> product.image;
ClassDiagram.Attribut>> Product.price:float =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Address.idcounter:long =>=>=> RelationalSchema.Column>> address.idcounter;
ClassDiagram.Attribut>> Address.id:long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.streetaddress:String =>=>=> RelationalSchema.Column>> address.streetaddress;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.postalcode:String =>=>=> RelationalSchema.Column>> address.postalcode;
ClassDiagram.Attribut>> Address.phonenumber:String =>=>=> RelationalSchema.Column>> address.phonenumber;
ClassDiagram.Attribut>> Person.idcounter:long =>=>=> RelationalSchema.Column>> person.idcounter;
ClassDiagram.Attribut>> Person.id:long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> LineItem.idcounter:long =>=>=> RelationalSchema.Column>> lineitem.idcounter;
ClassDiagram.Attribut>> LineItem.id:long =>=>=> RelationalSchema.Column>> lineitem.id PRIMARY KEY;
ClassDiagram.Attribut>> LineItem.quantity:int =>=>=> RelationalSchema.Column>> lineitem.quantity;
ClassDiagram.Attribut>> PartTimeEmployee.wage:float =>=>=> RelationalSchema.Column>> parttimeemployee.wage;
ClassDiagram.Attribut>> PartTimeEmployee.weeklyhours:int =>=>=> RelationalSchema.Column>> parttimeemployee.weeklyhours;
ClassDiagram.Attribut>> ProductOrder.idcounter:long =>=>=> RelationalSchema.Column>> productorder.idcounter;
ClassDiagram.Attribut>> ProductOrder.id:long =>=>=> RelationalSchema.Column>> productorder.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductOrder.order:Date =>=>=> RelationalSchema.Column>> productorder.order;
ClassDiagram.Attribut>> ProductOrder.shipped:Date =>=>=> RelationalSchema.Column>> productorder.shipped;
ClassDiagram.Attribut>> LineItem.ids:int =>=>=> RelationalSchema.Column>> lineitem.ids;
ClassDiagram.Attribut>> LineItem.id:int =>=>=> RelationalSchema.Column>> lineitem.id PRIMARY KEY;
ClassDiagram.Attribut>> LineItem.quantity:int =>=>=> RelationalSchema.Column>> lineitem.quantity;
ClassDiagram.Attribut>> FullTimeEmployee.salary:float =>=>=> RelationalSchema.Column>> fulltimeemployee.salary;
ClassDiagram.Attribut>> Company.ids:int =>=>=> RelationalSchema.Column>> company.ids;
ClassDiagram.Attribut>> Company.id:int =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Company.name:String =>=>=> RelationalSchema.Column>> company.name;
ClassDiagram.Attribut>> Employee.title:String =>=>=> RelationalSchema.Column>> employee.title;
ClassDiagram.Attribut>> Employee.hire:Date =>=>=> RelationalSchema.Column>> employee.hire;
ClassDiagram.Attribut>> PartTimeEmployee.wage:float =>=>=> RelationalSchema.Column>> parttimeemployee.wage;
ClassDiagram.Attribut>> PartTimeEmployee.weeklyhours:int =>=>=> RelationalSchema.Column>> parttimeemployee.weeklyhours;
ClassDiagram.Attribut>> Person.ids:int =>=>=> RelationalSchema.Column>> person.ids;
ClassDiagram.Attribut>> Person.id:int =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Address.ids:int =>=>=> RelationalSchema.Column>> address.ids;
ClassDiagram.Attribut>> Address.id:int =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.streetaddress:String =>=>=> RelationalSchema.Column>> address.streetaddress;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.postalcode:String =>=>=> RelationalSchema.Column>> address.postalcode;
ClassDiagram.Attribut>> Address.phonenumber:String =>=>=> RelationalSchema.Column>> address.phonenumber;
ClassDiagram.Attribut>> ProductOrder.ids:int =>=>=> RelationalSchema.Column>> productorder.ids;
ClassDiagram.Attribut>> ProductOrder.id:int =>=>=> RelationalSchema.Column>> productorder.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductOrder.order:Date =>=>=> RelationalSchema.Column>> productorder.order;
ClassDiagram.Attribut>> ProductOrder.shipped:Date =>=>=> RelationalSchema.Column>> productorder.shipped;
ClassDiagram.Attribut>> Product.ids:int =>=>=> RelationalSchema.Column>> product.ids;
ClassDiagram.Attribut>> Product.id:int =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.image:byte =>=>=> RelationalSchema.Column>> product.image;
ClassDiagram.Attribut>> Product.price:float =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Address.idcounter:long =>=>=> RelationalSchema.Column>> address.idcounter;
ClassDiagram.Attribut>> Address.id:long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.streetaddress:String =>=>=> RelationalSchema.Column>> address.streetaddress;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.postalcode:String =>=>=> RelationalSchema.Column>> address.postalcode;
ClassDiagram.Attribut>> Address.phonenumber:String =>=>=> RelationalSchema.Column>> address.phonenumber;
ClassDiagram.Attribut>> FullTimeEmployee.salary:float =>=>=> RelationalSchema.Column>> fulltimeemployee.salary;
ClassDiagram.Attribut>> Product.idcounter:long =>=>=> RelationalSchema.Column>> product.idcounter;
ClassDiagram.Attribut>> Product.id:long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.image:byte =>=>=> RelationalSchema.Column>> product.image;
ClassDiagram.Attribut>> Product.price:float =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Employee.title:String =>=>=> RelationalSchema.Column>> employee.title;
ClassDiagram.Attribut>> Employee.hire:Date =>=>=> RelationalSchema.Column>> employee.hire;
ClassDiagram.Attribut>> Person.idcounter:long =>=>=> RelationalSchema.Column>> person.idcounter;
ClassDiagram.Attribut>> Person.id:long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> PartTimeEmployee.wage:float =>=>=> RelationalSchema.Column>> parttimeemployee.wage;
ClassDiagram.Attribut>> PartTimeEmployee.weeklyhours:int =>=>=> RelationalSchema.Column>> parttimeemployee.weeklyhours;
ClassDiagram.Attribut>> ProductOrder.idcounter:long =>=>=> RelationalSchema.Column>> productorder.idcounter;
ClassDiagram.Attribut>> ProductOrder.id:long =>=>=> RelationalSchema.Column>> productorder.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductOrder.order:Date =>=>=> RelationalSchema.Column>> productorder.order;
ClassDiagram.Attribut>> ProductOrder.shipped:Date =>=>=> RelationalSchema.Column>> productorder.shipped;
ClassDiagram.Attribut>> LineItem.idcounter:long =>=>=> RelationalSchema.Column>> lineitem.idcounter;
ClassDiagram.Attribut>> LineItem.id:long =>=>=> RelationalSchema.Column>> lineitem.id PRIMARY KEY;
ClassDiagram.Attribut>> LineItem.quantity:int =>=>=> RelationalSchema.Column>> lineitem.quantity;
ClassDiagram.Attribut>> Company.idcounter:long =>=>=> RelationalSchema.Column>> company.idcounter;
ClassDiagram.Attribut>> Company.id:long =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Company.name:String =>=>=> RelationalSchema.Column>> company.name;
ClassDiagram.Attribut>> DogTable2.serialversionuid:long =>=>=> RelationalSchema.Column>> dogtable2.serialversionuid;
ClassDiagram.Attribut>> DogTable2.id2:int =>=>=> RelationalSchema.Column>> dogtable2.id2 PRIMARY KEY;
ClassDiagram.Attribut>> DogTable2.name:String =>=>=> RelationalSchema.Column>> dogtable2.name;
ClassDiagram.Attribut>> DogTable2.price:float =>=>=> RelationalSchema.Column>> dogtable2.price;
ClassDiagram.Attribut>> DogTable2.domestic:boolean =>=>=> RelationalSchema.Column>> dogtable2.domestic;
ClassDiagram.Attribut>> Dog4.id:int =>=>=> RelationalSchema.Column>> dog4.id PRIMARY KEY;
ClassDiagram.Attribut>> Dog4.name:String =>=>=> RelationalSchema.Column>> dog4.name;
ClassDiagram.Attribut>> EntityE2.id:int =>=>=> RelationalSchema.Column>> entitye2.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityE2.name:String =>=>=> RelationalSchema.Column>> entitye2.name;
ClassDiagram.Attribut>> Dog.id:int =>=>=> RelationalSchema.Column>> dog.id PRIMARY KEY;
ClassDiagram.Attribut>> Dog.name:String =>=>=> RelationalSchema.Column>> dog.name;
ClassDiagram.Attribut>> Dog1.serialversionuid:long =>=>=> RelationalSchema.Column>> dog1.serialversionuid;
ClassDiagram.Attribut>> Dog1.id2:int =>=>=> RelationalSchema.Column>> dog1.id2 PRIMARY KEY;
ClassDiagram.Attribut>> Dog1.name:String =>=>=> RelationalSchema.Column>> dog1.name;
ClassDiagram.Attribut>> Dog1.price:float =>=>=> RelationalSchema.Column>> dog1.price;
ClassDiagram.Attribut>> Dog1.domestic:boolean =>=>=> RelationalSchema.Column>> dog1.domestic;
ClassDiagram.Attribut>> DogTable.serialversionuid:long =>=>=> RelationalSchema.Column>> dogtable.serialversionuid;
ClassDiagram.Attribut>> DogTable.id2:int =>=>=> RelationalSchema.Column>> dogtable.id2 PRIMARY KEY;
ClassDiagram.Attribut>> DogTable.name:String =>=>=> RelationalSchema.Column>> dogtable.name;
ClassDiagram.Attribut>> DogTable.price:float =>=>=> RelationalSchema.Column>> dogtable.price;
ClassDiagram.Attribut>> DogTable.domestic:boolean =>=>=> RelationalSchema.Column>> dogtable.domestic;
ClassDiagram.Attribut>> DogTable3.serialversionuid:long =>=>=> RelationalSchema.Column>> dogtable3.serialversionuid;
ClassDiagram.Attribut>> DogTable3.id2:int =>=>=> RelationalSchema.Column>> dogtable3.id2 PRIMARY KEY;
ClassDiagram.Attribut>> DogTable3.name:String =>=>=> RelationalSchema.Column>> dogtable3.name;
ClassDiagram.Attribut>> DogTable3.price:float =>=>=> RelationalSchema.Column>> dogtable3.price;
ClassDiagram.Attribut>> DogTable3.domestic:boolean =>=>=> RelationalSchema.Column>> dogtable3.domestic;
ClassDiagram.Attribut>> GeneratedValues.id:int =>=>=> RelationalSchema.Column>> generatedvalues.id PRIMARY KEY;
ClassDiagram.Attribut>> GeneratedValues.field:long =>=>=> RelationalSchema.Column>> generatedvalues.field;
ClassDiagram.Attribut>> GeneratedValues.//@generatedvalue(strategy:int =>=>=> RelationalSchema.Column>> generatedvalues.//@generatedvalue(strategy;
ClassDiagram.Attribut>> GeneratedValues.uuidhex:String =>=>=> RelationalSchema.Column>> generatedvalues.uuidhex;
ClassDiagram.Attribut>> GeneratedValues.uuid:String =>=>=> RelationalSchema.Column>> generatedvalues.uuid;
ClassDiagram.Attribut>> GeneratedValues.uuidt4hex:String =>=>=> RelationalSchema.Column>> generatedvalues.uuidt4hex;
ClassDiagram.Attribut>> GeneratedValues.uuidt4:String =>=>=> RelationalSchema.Column>> generatedvalues.uuidt4;
ClassDiagram.Attribut>> Dog3.id:int =>=>=> RelationalSchema.Column>> dog3.id PRIMARY KEY;
ClassDiagram.Attribut>> Dog3.name:String =>=>=> RelationalSchema.Column>> dog3.name;
ClassDiagram.Attribut>> DogTable4.serialversionuid:long =>=>=> RelationalSchema.Column>> dogtable4.serialversionuid;
ClassDiagram.Attribut>> DogTable4.id2:int =>=>=> RelationalSchema.Column>> dogtable4.id2 PRIMARY KEY;
ClassDiagram.Attribut>> DogTable4.name:String =>=>=> RelationalSchema.Column>> dogtable4.name;
ClassDiagram.Attribut>> DogTable4.price:float =>=>=> RelationalSchema.Column>> dogtable4.price;
ClassDiagram.Attribut>> DogTable4.domestic:boolean =>=>=> RelationalSchema.Column>> dogtable4.domestic;
ClassDiagram.Attribut>> EntityWithGeneratedValueAndPostPersist.id:long =>=>=> RelationalSchema.Column>> entitywithgeneratedvalueandpostpersist.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityWithGeneratedValueAndPostPersist.bingo:int =>=>=> RelationalSchema.Column>> entitywithgeneratedvalueandpostpersist.bingo;
ClassDiagram.Attribut>> EntityWithGeneratedValueAndPostPersist.name:String =>=>=> RelationalSchema.Column>> entitywithgeneratedvalueandpostpersist.name;
ClassDiagram.Attribut>> EntityWithGeneratedValueAndPostPersist.cache:ValueCache =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Dog2.serialversionuid:long =>=>=> RelationalSchema.Column>> dog2.serialversionuid;
ClassDiagram.Attribut>> Dog2.id2:int =>=>=> RelationalSchema.Column>> dog2.id2 PRIMARY KEY;
ClassDiagram.Attribut>> Dog2.name:String =>=>=> RelationalSchema.Column>> dog2.name;
ClassDiagram.Attribut>> Dog2.price:float =>=>=> RelationalSchema.Column>> dog2.price;
ClassDiagram.Attribut>> Dog2.domestic:boolean =>=>=> RelationalSchema.Column>> dog2.domestic;
ClassDiagram.Attribut>> AnEntity.id:int =>=>=> RelationalSchema.Column>> anentity.id PRIMARY KEY;
ClassDiagram.Attribut>> AnEntity.version:int =>=>=> RelationalSchema.Column>> anentity.version;
ClassDiagram.Attribut>> AnEntity.name:String =>=>=> RelationalSchema.Column>> anentity.name;
ClassDiagram.Attribut>> RuntimeTest4.name:String =>=>=> RelationalSchema.Column>> runtimetest4.name;
ClassDiagram.Attribut>> RuntimeTest4.runtimetest5s:Collection =>=>=> RelationalSchema.Column>> runtimetest4.runtimetest5s;
ClassDiagram.Attribut>> TransactionalClassPC.field:int =>=>=> RelationalSchema.Column>> transactionalclasspc.field;
ClassDiagram.Attribut>> RuntimeTest1.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest1.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest1.somefield:String =>=>=> RelationalSchema.Column>> runtimetest1.somefield;
ClassDiagram.Attribut>> RuntimeTest1.field:byte =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:boolean =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:char =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:double =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:float =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:int =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:long =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:short =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:String =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:BigInteger =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:BigDecimal =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:Date =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.field:Locale =>=>=> RelationalSchema.Column>> runtimetest1.field;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Byte =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Boolean =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.charobjfield:Character =>=>=> RelationalSchema.Column>> runtimetest1.charobjfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Double =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Float =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.intobjfield:Integer =>=>=> RelationalSchema.Column>> runtimetest1.intobjfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Long =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.objfield:Short =>=>=> RelationalSchema.Column>> runtimetest1.objfield;
ClassDiagram.Attribut>> RuntimeTest1.//transactionalonlytransfield:TransactionalClassPC =>=>=> RelationalSchema.Column>> runtimetest1.//transactionalonlytransfield;
ClassDiagram.Attribut>> RuntimeTest1.trans:String =>=>=> RelationalSchema.Column>> runtimetest1.trans;
ClassDiagram.Attribut>> RuntimeTest1.selfonemany:Set =>=>=> RelationalSchema.Column>> runtimetest1.selfonemany;
ClassDiagram.Attribut>> Duration._name:String =>=>=> RelationalSchema.Column>> duration._name;
ClassDiagram.Attribut>> Duration._started:boolean =>=>=> RelationalSchema.Column>> duration._started;
ClassDiagram.Attribut>> Duration._running:boolean =>=>=> RelationalSchema.Column>> duration._running;
ClassDiagram.Attribut>> Duration.//millis_starttime:long =>=>=> RelationalSchema.Column>> duration.//millis_starttime;
ClassDiagram.Attribut>> Duration.//millis_stoptime:long =>=>=> RelationalSchema.Column>> duration.//millis_stoptime;
ClassDiagram.Attribut>> RuntimeTest2.serialversionuid:long =>=>=> RelationalSchema.Column>> runtimetest2.serialversionuid;
ClassDiagram.Attribut>> RuntimeTest2.field2:int =>=>=> RelationalSchema.Column>> runtimetest2.field2;
ClassDiagram.Attribut>> PostRemoveCallbackEntity.id:long =>=>=> RelationalSchema.Column>> postremovecallbackentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PostRemoveCallbackEntity.name:String =>=>=> RelationalSchema.Column>> postremovecallbackentity.name;
ClassDiagram.Attribut>> PostRemoveCallbackEntity.transientpostremovetime:long =>=>=> RelationalSchema.Column>> postremovecallbackentity.transientpostremovetime;
ClassDiagram.Attribut>> BlobEntity.id:int =>=>=> RelationalSchema.Column>> blobentity.id PRIMARY KEY;
ClassDiagram.Attribut>> BlobEntity.version:int =>=>=> RelationalSchema.Column>> blobentity.version;
ClassDiagram.Attribut>> BlobEntity.lobfield:String =>=>=> RelationalSchema.Column>> blobentity.lobfield;
ClassDiagram.Attribut>> BlobEntity.blobfield:byte =>=>=> RelationalSchema.Column>> blobentity.blobfield;
ClassDiagram.Attribut>> BlobColumnEntity.id:int =>=>=> RelationalSchema.Column>> blobcolumnentity.id PRIMARY KEY;
ClassDiagram.Attribut>> BlobColumnEntity.smalllob:byte =>=>=> RelationalSchema.Column>> blobcolumnentity.smalllob;
ClassDiagram.Attribut>> BlobColumnEntity.oldlob:byte =>=>=> RelationalSchema.Column>> blobcolumnentity.oldlob;
ClassDiagram.Attribut>> BlobColumnEntity.medlob:byte =>=>=> RelationalSchema.Column>> blobcolumnentity.medlob;
ClassDiagram.Attribut>> BlobColumnEntity.longlob:byte =>=>=> RelationalSchema.Column>> blobcolumnentity.longlob;
ClassDiagram.Attribut>> BlobColumnEntity.defaultlob:byte =>=>=> RelationalSchema.Column>> blobcolumnentity.defaultlob;
ClassDiagram.Attribut>> BlobColumnEntity.definedlob:byte =>=>=> RelationalSchema.Column>> blobcolumnentity.definedlob;
ClassDiagram.Attribut>> ClobColumnEntity.id:int =>=>=> RelationalSchema.Column>> clobcolumnentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ClobColumnEntity.smalllob:String =>=>=> RelationalSchema.Column>> clobcolumnentity.smalllob;
ClassDiagram.Attribut>> ClobColumnEntity.medlob:String =>=>=> RelationalSchema.Column>> clobcolumnentity.medlob;
ClassDiagram.Attribut>> ClobColumnEntity.longlob:String =>=>=> RelationalSchema.Column>> clobcolumnentity.longlob;
ClassDiagram.Attribut>> ClobColumnEntity.defaultlob:String =>=>=> RelationalSchema.Column>> clobcolumnentity.defaultlob;
ClassDiagram.Attribut>> Product.serialversionuid:long =>=>=> RelationalSchema.Column>> product.serialversionuid;
ClassDiagram.Attribut>> Product.id:int =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Account.id:int =>=>=> RelationalSchema.Column>> account.id PRIMARY KEY;
ClassDiagram.Attribut>> Account.name:String =>=>=> RelationalSchema.Column>> account.name;
ClassDiagram.Attribut>> UserIdentity.id:int =>=>=> RelationalSchema.Column>> useridentity.id PRIMARY KEY;
ClassDiagram.Attribut>> UserIdentity.GeneratedName:Member =>=>=> RelationalSchema.Column>> useridentity.GeneratedName;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.certifications:Queue<Certification> =>=>=> RelationalSchema.Column>> department.certifications;
ClassDiagram.Attribut>> Department.awards:LinkedList<Award> =>=>=> RelationalSchema.Column>> department.awards;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empname:String =>=>=> RelationalSchema.Column>> employee.empname;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.certifications:Set<Certification> =>=>=> RelationalSchema.Column>> department.certifications;
ClassDiagram.Attribut>> Department.awards:Set<Award> =>=>=> RelationalSchema.Column>> department.awards;
ClassDiagram.Attribut>> UserIdentity.id:int =>=>=> RelationalSchema.Column>> useridentity.id PRIMARY KEY;
ClassDiagram.Attribut>> UserIdentity.GeneratedName:Member =>=>=> RelationalSchema.Column>> useridentity.GeneratedName;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empname:String =>=>=> RelationalSchema.Column>> employee.empname;
ClassDiagram.Attribut>> Account.id:int =>=>=> RelationalSchema.Column>> account.id PRIMARY KEY;
ClassDiagram.Attribut>> Account.name:String =>=>=> RelationalSchema.Column>> account.name;
ClassDiagram.Attribut>> Account.id:int =>=>=> RelationalSchema.Column>> account.id PRIMARY KEY;
ClassDiagram.Attribut>> Account.name:String =>=>=> RelationalSchema.Column>> account.name;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.certifications:PriorityQueue<Certification> =>=>=> RelationalSchema.Column>> department.certifications;
ClassDiagram.Attribut>> Department.awards:PriorityQueue<Award> =>=>=> RelationalSchema.Column>> department.awards;
ClassDiagram.Attribut>> UserIdentity.id:int =>=>=> RelationalSchema.Column>> useridentity.id PRIMARY KEY;
ClassDiagram.Attribut>> UserIdentity.GeneratedName:Member =>=>=> RelationalSchema.Column>> useridentity.GeneratedName;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empname:String =>=>=> RelationalSchema.Column>> employee.empname;
ClassDiagram.Attribut>> UserIdentity.id:int =>=>=> RelationalSchema.Column>> useridentity.id PRIMARY KEY;
ClassDiagram.Attribut>> UserIdentity.GeneratedName:Member =>=>=> RelationalSchema.Column>> useridentity.GeneratedName;
ClassDiagram.Attribut>> Account.id:int =>=>=> RelationalSchema.Column>> account.id PRIMARY KEY;
ClassDiagram.Attribut>> Account.name:String =>=>=> RelationalSchema.Column>> account.name;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empname:String =>=>=> RelationalSchema.Column>> employee.empname;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.certifications:TreeSet<Certification> =>=>=> RelationalSchema.Column>> department.certifications;
ClassDiagram.Attribut>> Department.awards:SortedSet<Award> =>=>=> RelationalSchema.Column>> department.awards;
ClassDiagram.Attribut>> Location.serialversionuid:long =>=>=> RelationalSchema.Column>> location.serialversionuid;
ClassDiagram.Attribut>> Location.id:int =>=>=> RelationalSchema.Column>> location.id PRIMARY KEY;
ClassDiagram.Attribut>> Location.address:String =>=>=> RelationalSchema.Column>> location.address;
ClassDiagram.Attribut>> Location.city:String =>=>=> RelationalSchema.Column>> location.city;
ClassDiagram.Attribut>> Location.zip:String =>=>=> RelationalSchema.Column>> location.zip;
ClassDiagram.Attribut>> UserIdentity.id:int =>=>=> RelationalSchema.Column>> useridentity.id PRIMARY KEY;
ClassDiagram.Attribut>> UserIdentity.GeneratedName:Member =>=>=> RelationalSchema.Column>> useridentity.GeneratedName;
ClassDiagram.Attribut>> Account.id:int =>=>=> RelationalSchema.Column>> account.id PRIMARY KEY;
ClassDiagram.Attribut>> Account.name:String =>=>=> RelationalSchema.Column>> account.name;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empname:String =>=>=> RelationalSchema.Column>> employee.empname;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.certifications:List<Certification> =>=>=> RelationalSchema.Column>> department.certifications;
ClassDiagram.Attribut>> Department.awards:List<Award> =>=>=> RelationalSchema.Column>> department.awards;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.certifications:Vector<Certification> =>=>=> RelationalSchema.Column>> department.certifications;
ClassDiagram.Attribut>> Department.awards:Vector<Award> =>=>=> RelationalSchema.Column>> department.awards;
ClassDiagram.Attribut>> Account.id:int =>=>=> RelationalSchema.Column>> account.id PRIMARY KEY;
ClassDiagram.Attribut>> Account.name:String =>=>=> RelationalSchema.Column>> account.name;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empname:String =>=>=> RelationalSchema.Column>> employee.empname;
ClassDiagram.Attribut>> UserIdentity.id:int =>=>=> RelationalSchema.Column>> useridentity.id PRIMARY KEY;
ClassDiagram.Attribut>> UserIdentity.GeneratedName:Member =>=>=> RelationalSchema.Column>> useridentity.GeneratedName;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.certifications:LinkedHashSet<Certification> =>=>=> RelationalSchema.Column>> department.certifications;
ClassDiagram.Attribut>> Department.awards:LinkedHashSet<Award> =>=>=> RelationalSchema.Column>> department.awards;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empname:String =>=>=> RelationalSchema.Column>> employee.empname;
ClassDiagram.Attribut>> UserIdentity.id:int =>=>=> RelationalSchema.Column>> useridentity.id PRIMARY KEY;
ClassDiagram.Attribut>> UserIdentity.GeneratedName:Member =>=>=> RelationalSchema.Column>> useridentity.GeneratedName;
ClassDiagram.Attribut>> Account.id:int =>=>=> RelationalSchema.Column>> account.id PRIMARY KEY;
ClassDiagram.Attribut>> Account.name:String =>=>=> RelationalSchema.Column>> account.name;
ClassDiagram.Attribut>> FixedAnnuity.serialversionuid:long =>=>=> RelationalSchema.Column>> fixedannuity.serialversionuid;
ClassDiagram.Attribut>> FixedAnnuity.rate:Double =>=>=> RelationalSchema.Column>> fixedannuity.rate;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.governmentid:String =>=>=> RelationalSchema.Column>> person.governmentid;
ClassDiagram.Attribut>> Person.ofbirth:Date =>=>=> RelationalSchema.Column>> person.ofbirth;
ClassDiagram.Attribut>> Person.timeofbirth:Date =>=>=> RelationalSchema.Column>> person.timeofbirth;
ClassDiagram.Attribut>> Person.picture:Byte =>=>=> RelationalSchema.Column>> person.picture;
ClassDiagram.Attribut>> Payor.serialversionuid:long =>=>=> RelationalSchema.Column>> payor.serialversionuid;
ClassDiagram.Attribut>> Payor.name:String =>=>=> RelationalSchema.Column>> payor.name;
ClassDiagram.Attribut>> Annuity.serialversionuid:long =>=>=> RelationalSchema.Column>> annuity.serialversionuid;
ClassDiagram.Attribut>> Annuity.lastpaidamt:Double =>=>=> RelationalSchema.Column>> annuity.lastpaidamt;
ClassDiagram.Attribut>> Annuity.accountnumber:String =>=>=> RelationalSchema.Column>> annuity.accountnumber;
ClassDiagram.Attribut>> Annuity.amount:Double =>=>=> RelationalSchema.Column>> annuity.amount;
ClassDiagram.Attribut>> Annuity.annuityholderid:String =>=>=> RelationalSchema.Column>> annuity.annuityholderid;
ClassDiagram.Attribut>> Annuity.comments:List<String> =>=>=> RelationalSchema.Column>> annuity.comments;
ClassDiagram.Attribut>> Annuity.approvedat:Date =>=>=> RelationalSchema.Column>> annuity.approvedat;
ClassDiagram.Attribut>> Annuity.previous:Annuity =>=>=> RelationalSchema.Column>> annuity.previous;
ClassDiagram.Attribut>> EquityAnnuity.serialversionuid:long =>=>=> RelationalSchema.Column>> equityannuity.serialversionuid;
ClassDiagram.Attribut>> EquityAnnuity.fundnames:String =>=>=> RelationalSchema.Column>> equityannuity.fundnames;
ClassDiagram.Attribut>> EquityAnnuity.indexrate:Double =>=>=> RelationalSchema.Column>> equityannuity.indexrate;
ClassDiagram.Attribut>> Contact.serialversionuid:long =>=>=> RelationalSchema.Column>> contact.serialversionuid;
ClassDiagram.Attribut>> Contact.the:Address =>=>=> RelationalSchema.Column>> contact.the;
ClassDiagram.Attribut>> Contact.email:String =>=>=> RelationalSchema.Column>> contact.email;
ClassDiagram.Attribut>> Contact.phone:String =>=>=> RelationalSchema.Column>> contact.phone;
ClassDiagram.Attribut>> Contact.GeneratedName:ContactType =>=>=> RelationalSchema.Column>> contact.GeneratedName;
ClassDiagram.Attribut>> Payout.serialversionuid:long =>=>=> RelationalSchema.Column>> payout.serialversionuid;
ClassDiagram.Attribut>> Payout.taxableamount:BigDecimal =>=>=> RelationalSchema.Column>> payout.taxableamount;
ClassDiagram.Attribut>> Payout.startdate:Calendar =>=>=> RelationalSchema.Column>> payout.startdate;
ClassDiagram.Attribut>> Payout.enddate:Calendar =>=>=> RelationalSchema.Column>> payout.enddate;
ClassDiagram.Attribut>> Address.serialversionuid:long =>=>=> RelationalSchema.Column>> address.serialversionuid;
ClassDiagram.Attribut>> Address.line1:String =>=>=> RelationalSchema.Column>> address.line1;
ClassDiagram.Attribut>> Address.line2:String =>=>=> RelationalSchema.Column>> address.line2;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.zipcode:String =>=>=> RelationalSchema.Column>> address.zipcode;
ClassDiagram.Attribut>> Address.country:String =>=>=> RelationalSchema.Column>> address.country;
ClassDiagram.Attribut>> AnnuityHolder.serialversionuid:long =>=>=> RelationalSchema.Column>> annuityholder.serialversionuid;
ClassDiagram.Attribut>> AnnuityHolder.category:AnnuityHolderCategory =>=>=> RelationalSchema.Column>> annuityholder.category;
ClassDiagram.Attribut>> Rider.serialversionuid:long =>=>=> RelationalSchema.Column>> rider.serialversionuid;
ClassDiagram.Attribut>> Rider.rule:String =>=>=> RelationalSchema.Column>> rider.rule;
ClassDiagram.Attribut>> Rider.effective:Date =>=>=> RelationalSchema.Column>> rider.effective;
ClassDiagram.Attribut>> Rider.type:RiderType =>=>=> RelationalSchema.Column>> rider.type;
ClassDiagram.Attribut>> ConcreteEntity.field:int =>=>=> RelationalSchema.Column>> concreteentity.field;
ClassDiagram.Attribut>> TreeNode.serialversionuid:long =>=>=> RelationalSchema.Column>> treenode.serialversionuid;
ClassDiagram.Attribut>> TreeNode.id:long =>=>=> RelationalSchema.Column>> treenode.id PRIMARY KEY;
ClassDiagram.Attribut>> TreeNode.name:String =>=>=> RelationalSchema.Column>> treenode.name;
ClassDiagram.Attribut>> TreeNode.version:int =>=>=> RelationalSchema.Column>> treenode.version;
ClassDiagram.Attribut>> AggEntity.id:int =>=>=> RelationalSchema.Column>> aggentity.id PRIMARY KEY;
ClassDiagram.Attribut>> AggEntity.pval:short =>=>=> RelationalSchema.Column>> aggentity.pval;
ClassDiagram.Attribut>> AggEntity.val:Short =>=>=> RelationalSchema.Column>> aggentity.val;
ClassDiagram.Attribut>> AggEntity.pval:int =>=>=> RelationalSchema.Column>> aggentity.pval;
ClassDiagram.Attribut>> AggEntity.intval:Integer =>=>=> RelationalSchema.Column>> aggentity.intval;
ClassDiagram.Attribut>> AggEntity.pval:long =>=>=> RelationalSchema.Column>> aggentity.pval;
ClassDiagram.Attribut>> AggEntity.val:Long =>=>=> RelationalSchema.Column>> aggentity.val;
ClassDiagram.Attribut>> AggEntity.pval:float =>=>=> RelationalSchema.Column>> aggentity.pval;
ClassDiagram.Attribut>> AggEntity.val:Float =>=>=> RelationalSchema.Column>> aggentity.val;
ClassDiagram.Attribut>> AggEntity.pdblval:double =>=>=> RelationalSchema.Column>> aggentity.pdblval;
ClassDiagram.Attribut>> AggEntity.dblval:Double =>=>=> RelationalSchema.Column>> aggentity.dblval;
ClassDiagram.Attribut>> AggEntity.val:String =>=>=> RelationalSchema.Column>> aggentity.val;
ClassDiagram.Attribut>> AggEntity.utildate:java.util.Date =>=>=> RelationalSchema.Column>> aggentity.utildate;
ClassDiagram.Attribut>> AggEntity.sqldate:java.sql.Date =>=>=> RelationalSchema.Column>> aggentity.sqldate;
ClassDiagram.Attribut>> Item.serialversionuid:long =>=>=> RelationalSchema.Column>> item.serialversionuid;
ClassDiagram.Attribut>> Item.id:int =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.title:String =>=>=> RelationalSchema.Column>> item.title;
ClassDiagram.Attribut>> Parent.idparent:int =>=>=> RelationalSchema.Column>> parent.idparent PRIMARY KEY;
ClassDiagram.Attribut>> Parent.child_ref:String =>=>=> RelationalSchema.Column>> parent.child_ref;
ClassDiagram.Attribut>> PChild.idchild:int =>=>=> RelationalSchema.Column>> pchild.idchild PRIMARY KEY;
ClassDiagram.Attribut>> PChild.version:int =>=>=> RelationalSchema.Column>> pchild.version;
ClassDiagram.Attribut>> PChild.basic:String =>=>=> RelationalSchema.Column>> pchild.basic;
ClassDiagram.Attribut>> Painter.serialversionuid:long =>=>=> RelationalSchema.Column>> painter.serialversionuid;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name PRIMARY KEY;
ClassDiagram.Attribut>> Artist.serialversionuid:long =>=>=> RelationalSchema.Column>> artist.serialversionuid;
ClassDiagram.Attribut>> PChildBi.idchild:int =>=>=> RelationalSchema.Column>> pchildbi.idchild PRIMARY KEY;
ClassDiagram.Attribut>> PChildBi.version:int =>=>=> RelationalSchema.Column>> pchildbi.version;
ClassDiagram.Attribut>> PChildBi.basic:String =>=>=> RelationalSchema.Column>> pchildbi.basic;
ClassDiagram.Attribut>> C.GeneratedName:A =>=>=> RelationalSchema.Column>> c.GeneratedName;
ClassDiagram.Attribut>> C.GeneratedName:B =>=>=> RelationalSchema.Column>> c.GeneratedName;
ClassDiagram.Attribut>> C.num:long =>=>=> RelationalSchema.Column>> c.num PRIMARY KEY;
ClassDiagram.Attribut>> User2018.id:Long =>=>=> RelationalSchema.Column>> user2018.id PRIMARY KEY;
Many-To-One relationship from ClassDiagram.Class>>Story  to ClassDiagram.Class>>Task represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>M21UniEmployee  to ClassDiagram.Class>>M21UniDepartment represented by ClassDiagram.Atrribute>>department;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>EntityF  to ClassDiagram.Class>>List<EntityG>;
One-To-One relationship between ClassDiagram.Class>>OptSelectEntity  to ClassDiagram.Class>>OptSelectEntity represented by ClassDiagram.Atrribute>>eageronetoone;
One-To-One relationship between ClassDiagram.Class>>OptSelectEntity  to ClassDiagram.Class>>OptSelectEntity represented by ClassDiagram.Atrribute>>eageronetooneowner;
One-To-One relationship between ClassDiagram.Class>>OptSelectEntity  to ClassDiagram.Class>>OptSelectEntity represented by ClassDiagram.Atrribute>>lazyonetoone;
One-To-One relationship between ClassDiagram.Class>>OptSelectEntity  to ClassDiagram.Class>>OptSelectEntity represented by ClassDiagram.Atrribute>>lazyonetooneowner;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityD represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>EntityG  to ClassDiagram.Class>>EntityF represented by ClassDiagram.Atrribute>>GeneratedName;
M2MBiDepartment: m2mbiemployee_M2MBiDepartment(m2mbiemployeeID:m2mbiemployee [PK] #FK to m2mbiemployee,M2MBiDepartmentID:M2MBiDepartment [PK] #FK to M2MBiDepartment);
One-To-One relationship between ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>Collection<Story>;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>EntityE  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Collection<Task>;
One-To-One relationship between ClassDiagram.Class>>EntityD  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>EntityD  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Movie  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>1;
One-To-Many relationship from ClassDiagram.Class>>Artist  to ClassDiagram.Class>>Collection<Book>;
One-To-Many relationship from ClassDiagram.Class>>Artist  to ClassDiagram.Class>>Collection<Movie>;
One-To-One relationship between ClassDiagram.Class>>UnenhancedPropertyAccessSubclass  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>related;
Many-To-One relationship from ClassDiagram.Class>>UnenhancedMany  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>one;
One-To-One relationship between ClassDiagram.Class>>UnenhancedUnlistedReferer  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>other;
One-To-One relationship between ClassDiagram.Class>>UnenhancedFieldAccessPrimitiveWrapperSubclass  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>related;
One-To-Many relationship from ClassDiagram.Class>>UnenhancedOne  to ClassDiagram.Class>>Collection<UnenhancedMany>;
One-To-One relationship between ClassDiagram.Class>>UnenhancedFieldAccessSubclass  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>related;
Many-To-One relationship from ClassDiagram.Class>>AuditedEntry  to ClassDiagram.Class>>object represented by ClassDiagram.Atrribute>>audited;
One-To-One relationship between ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>EntityD represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>EntityE represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Entity5  to ClassDiagram.Class>>Entity6 represented by ClassDiagram.Atrribute>>e6;
One-To-One relationship between ClassDiagram.Class>>Entity1  to ClassDiagram.Class>>Entity14 represented by ClassDiagram.Atrribute>>e14;
One-To-Many relationship from ClassDiagram.Class>>Entity10  to ClassDiagram.Class>>Collection<Entity8>;
One-To-One relationship between ClassDiagram.Class>>IntVersionEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>e2;
One-To-One relationship between ClassDiagram.Class>>Entity4  to ClassDiagram.Class>>Entity5 represented by ClassDiagram.Atrribute>>e5;
One-To-One relationship between ClassDiagram.Class>>Entity8  to ClassDiagram.Class>>Entity9 represented by ClassDiagram.Atrribute>>e9;
One-To-One relationship between ClassDiagram.Class>>Entity6  to ClassDiagram.Class>>Entity7 represented by ClassDiagram.Atrribute>>e7;
One-To-Many relationship from ClassDiagram.Class>>Entity13  to ClassDiagram.Class>>Map<String,Entity11>;
One-To-One relationship between ClassDiagram.Class>>Entity3  to ClassDiagram.Class>>Entity4 represented by ClassDiagram.Atrribute>>e4;
Many-To-One relationship from ClassDiagram.Class>>Assignment  to ClassDiagram.Class>>Topic represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ClassPeriod  to ClassDiagram.Class>>Course represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>ClassPeriod  to ClassDiagram.Class>>Set<Topic>;
One-To-Many relationship from ClassDiagram.Class>>Course  to ClassDiagram.Class>>Set<ClassPeriod>;
Many-To-One relationship from ClassDiagram.Class>>SubTopic  to ClassDiagram.Class>>Topic represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Topic  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>clp;
One-To-Many relationship from ClassDiagram.Class>>Topic  to ClassDiagram.Class>>Set<Assignment>;
One-To-Many relationship from ClassDiagram.Class>>Topic  to ClassDiagram.Class>>Set<SubTopic>;
Many-To-One relationship from ClassDiagram.Class>>Security  to ClassDiagram.Class>>country represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Security  to ClassDiagram.Class>>country represented by ClassDiagram.Atrribute>>eager;
Many-To-One relationship from ClassDiagram.Class>>DependentFieldsPC  to ClassDiagram.Class>>DependentFieldsPC represented by ClassDiagram.Atrribute>>relation;
Many-To-One relationship from ClassDiagram.Class>>DependentFieldsPC  to ClassDiagram.Class>>DependentFieldsPC represented by ClassDiagram.Atrribute>>owner;
DependentFieldsPC: dependentfieldspc_DependentFieldsPC(dependentfieldspcID:dependentfieldspc [PK] #FK to dependentfieldspc,DependentFieldsPCID:DependentFieldsPC [PK] #FK to DependentFieldsPC);
Many-To-One relationship from ClassDiagram.Class>>DependentFieldsPC  to ClassDiagram.Class>>DependentFieldsPC represented by ClassDiagram.Atrribute>>dependentrelation;
DependentFieldsPC: dependentfieldspc_DependentFieldsPC(dependentfieldspcID:dependentfieldspc [PK] #FK to dependentfieldspc,DependentFieldsPCID:DependentFieldsPC [PK] #FK to DependentFieldsPC);dependentfieldspc_DependentFieldsPC(dependentfieldspcID:dependentfieldspc [PK] #FK to dependentfieldspc,DependentFieldsPCID:DependentFieldsPC [PK] #FK to DependentFieldsPC);
One-To-Many relationship from ClassDiagram.Class>>DependentFieldsPC  to ClassDiagram.Class>>List<DependentFieldsPC>;
One-To-Many relationship from ClassDiagram.Class>>DependentFieldsPC  to ClassDiagram.Class>>List<DependentFieldsPC>;
One-To-One relationship between ClassDiagram.Class>>RecursivelyEmbeddedPC  to ClassDiagram.Class>>EmbeddedPC represented by ClassDiagram.Atrribute>>embedded;
One-To-One relationship between ClassDiagram.Class>>Entity1  to ClassDiagram.Class>>Entity2 represented by ClassDiagram.Atrribute>>field;
One-To-One relationship between ClassDiagram.Class>>InstanceCallbacksTest  to ClassDiagram.Class>>RuntimeTest1 represented by ClassDiagram.Atrribute>>oneone;
One-To-One relationship between ClassDiagram.Class>>InstanceCallbacksTest  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>rel;
One-To-One relationship between ClassDiagram.Class>>ModInstanceCallbackTests  to ClassDiagram.Class>>ModRuntimeTest1 represented by ClassDiagram.Atrribute>>oneone;
One-To-One relationship between ClassDiagram.Class>>ModInstanceCallbackTests  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>rel;
A: attachc_A(attachcID:attachc [PK] #FK to attachc,AID:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>PCPerson  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>address;
Many-To-One relationship from ClassDiagram.Class>>PCPerson  to ClassDiagram.Class>>PCPerson represented by ClassDiagram.Atrribute>>parent;
PCPerson: pcperson_PCPerson(pcpersonID:pcperson [PK] #FK to pcperson,PCPersonID:PCPerson [PK] #FK to PCPerson);
One-To-One relationship between ClassDiagram.Class>>InterfaceHolder  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>intf;
One-To-One relationship between ClassDiagram.Class>>SequenceAssigned  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>other;
One-To-One relationship between ClassDiagram.Class>>BlobTest  to ClassDiagram.Class>>object represented by ClassDiagram.Atrribute>>blob;
Many-To-One relationship from ClassDiagram.Class>>PCDirectory  to ClassDiagram.Class>>PCDirectory represented by ClassDiagram.Atrribute>>_parent;
PCDirectory: pcdirectory_PCDirectory(pcdirectoryID:pcdirectory [PK] #FK to pcdirectory,PCDirectoryID:PCDirectory [PK] #FK to PCDirectory);
PCFile: pcdirectory_PCDirectory(pcdirectoryID:pcdirectory [PK] #FK to pcdirectory,PCDirectoryID:PCDirectory [PK] #FK to PCDirectory);pcdirectory_PCFile(pcdirectoryID:pcdirectory [PK] #FK to pcdirectory,PCFileID:PCFile [PK] #FK to PCFile);
One-To-Many relationship from ClassDiagram.Class>>ProxiesPC  to ClassDiagram.Class>>TreeSet<ProxiesPC>;
One-To-Many relationship from ClassDiagram.Class>>ProxiesPC  to ClassDiagram.Class>>TreeMap<String,ProxiesPC>;
Many-To-One relationship from ClassDiagram.Class>>AttachF  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>e;
One-To-One relationship between ClassDiagram.Class>>FetchGroupTestObject  to ClassDiagram.Class>>FetchGroupTestObject represented by ClassDiagram.Atrribute>>g;
One-To-One relationship between ClassDiagram.Class>>FetchGroupTestObject  to ClassDiagram.Class>>FetchGroupTestObject represented by ClassDiagram.Atrribute>>h;
Many-To-One relationship from ClassDiagram.Class>>PCAddress  to ClassDiagram.Class>>PCCountry represented by ClassDiagram.Atrribute>>country;
A: attachb_A(attachbID:attachb [PK] #FK to attachb,AID:A [PK] #FK to A);
One-To-One relationship between ClassDiagram.Class>>ComplexEmbeddedPC  to ClassDiagram.Class>>Owner represented by ClassDiagram.Atrribute>>ownerfield;
Many-To-One relationship from ClassDiagram.Class>>ModRuntimeTest1  to ClassDiagram.Class>>ModRuntimeTest1 represented by ClassDiagram.Atrribute>>selfoneone;
One-To-Many relationship from ClassDiagram.Class>>ModRuntimeTest1  to ClassDiagram.Class>>Set<ModRuntimeTest1>;
Many-To-One relationship from ClassDiagram.Class>>PCFile  to ClassDiagram.Class>>PCDirectory represented by ClassDiagram.Atrribute>>_dir;
Many-To-One relationship from ClassDiagram.Class>>AttachD  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>a;
One-To-One relationship between ClassDiagram.Class>>FetchA  to ClassDiagram.Class>>FetchB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>RuntimeTest1  to ClassDiagram.Class>>RuntimeTest1 represented by ClassDiagram.Atrribute>>//relations//@transientselfoneone;
One-To-Many relationship from ClassDiagram.Class>>RuntimeTest1  to ClassDiagram.Class>>Set<RuntimeTest1>;
Many-To-One relationship from ClassDiagram.Class>>PCDepartment  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>company;
Employee: pcdepartment_Employee(pcdepartmentID:pcdepartment [PK] #FK to pcdepartment,EmployeeID:Employee [PK] #FK to Employee);
Many-To-One relationship from ClassDiagram.Class>>PCEmployee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>department;
Many-To-One relationship from ClassDiagram.Class>>PCCompany  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>address;
A: pccompany_A(pccompanyID:pccompany [PK] #FK to pccompany,AID:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>AttachE  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>AttachE  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>f;
One-To-Many relationship from ClassDiagram.Class>>RuntimeTest4  to ClassDiagram.Class>>Collection<RuntimeTest5>;
Many-To-One relationship from ClassDiagram.Class>>Transition  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>Transition  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>State  to ClassDiagram.Class>>List<Transition>;
One-To-Many relationship from ClassDiagram.Class>>State  to ClassDiagram.Class>>List<Transition>;
One-To-One relationship between ClassDiagram.Class>>ColumnIOPC  to ClassDiagram.Class>>ColumnIOPC represented by ClassDiagram.Atrribute>>rel;
One-To-One relationship between ClassDiagram.Class>>AllFieldTypes  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>//one-to-oneandone-to-manyrelationstoselfselfoneone;
One-To-Many relationship from ClassDiagram.Class>>AllFieldTypes  to ClassDiagram.Class>>List<AllFieldTypes>;
Many-To-One relationship from ClassDiagram.Class>>PropAccessFieldStratsEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>m2one;
One-To-Many relationship from ClassDiagram.Class>>PropAccessFieldStratsEntity  to ClassDiagram.Class>>Collection<FieldAccess>;
One-To-One relationship between ClassDiagram.Class>>PropAccessFieldStratsEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>one2one;
A: propaccessfieldstratsentity_A(propaccessfieldstratsentityID:propaccessfieldstratsentity [PK] #FK to propaccessfieldstratsentity,AID:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>GrandChild  to ClassDiagram.Class>>Child represented by ClassDiagram.Atrribute>>key_1;
Many-To-One relationship from ClassDiagram.Class>>Child  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>key_1;
One-To-Many relationship from ClassDiagram.Class>>Child  to ClassDiagram.Class>>Collection<GrandChild>;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>List<LineItem>;
One-To-Many relationship from ClassDiagram.Class>>Parent  to ClassDiagram.Class>>Collection<Child>;
One-To-One relationship between ClassDiagram.Class>>Car  to ClassDiagram.Class>>Model represented by ClassDiagram.Atrribute>>GeneratedName;
Inner: outer_Inner(outerID:outer [PK] #FK to outer,InnerID:Inner [PK] #FK to Inner);
Many-To-One relationship from ClassDiagram.Class>>Model  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Model  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>ShipPackage  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Label  to ClassDiagram.Class>>package represented by ClassDiagram.Atrribute>>pkg;
One-To-Many relationship from ClassDiagram.Class>>Make  to ClassDiagram.Class>>List<Model>;
Many-To-One relationship from ClassDiagram.Class>>Toy  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>ShipPackage2  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>label;
One-To-Many relationship from ClassDiagram.Class>>ToyBox  to ClassDiagram.Class>>List<Toy>;
One-To-One relationship between ClassDiagram.Class>>Label2  to ClassDiagram.Class>>package represented by ClassDiagram.Atrribute>>pkg;
One-To-One relationship between ClassDiagram.Class>>EDBigIntegerID  to ClassDiagram.Class>>EBigIntegerID represented by ClassDiagram.Atrribute>>rid;
One-To-One relationship between ClassDiagram.Class>>EDBigDecimalID  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>rid;
One-To-One relationship between ClassDiagram.Class>>EDSQLDateID  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>rid;
One-To-One relationship between ClassDiagram.Class>>EDDateID  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>rid;
One-To-Many relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>Collection<Employee>;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Part  to ClassDiagram.Class>>Shirt represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>EmbeddedOwnerPC  to ClassDiagram.Class>>EmbeddedPC represented by ClassDiagram.Atrribute>>embedded;
One-To-One relationship between ClassDiagram.Class>>EmbeddedOwnerPC  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>complexembedded;
Many-To-Many relationship between ClassDiagram.Class>>Student  and ClassDiagram.Class>>Course: stud_course(stud_id:Student [PK] #FK to Student,crse_id:Course [PK] #FK to Course);
Many-To-Many relationship between ClassDiagram.Class>>Student  and ClassDiagram.Class>>A: stud_course(stud_id:Student [PK] #FK to Student,crse_id:Course [PK] #FK to Course);stud_dep(stud_id:Student [PK] #FK to Student,dep_id:A [PK] #FK to A);
One-To-One relationship between ClassDiagram.Class>>Entity1  to ClassDiagram.Class>>Entity2 represented by ClassDiagram.Atrribute>>field;
One-To-One relationship between ClassDiagram.Class>>CompUser  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>ComplexEmbeddedPC  to ClassDiagram.Class>>Owner represented by ClassDiagram.Atrribute>>ownerfield;
One-To-Many relationship from ClassDiagram.Class>>Shirt  to ClassDiagram.Class>>Collection<Part>;
One-To-One relationship between ClassDiagram.Class>>Address  to ClassDiagram.Class>>CompUser represented by ClassDiagram.Atrribute>>user;
One-To-One relationship between ClassDiagram.Class>>RuntimeTest1  to ClassDiagram.Class>>RuntimeTest1 represented by ClassDiagram.Atrribute>>//relations//@transientselfoneone;
One-To-One relationship between ClassDiagram.Class>>UnidirectionalOne2OneOwner  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>owned;
One-To-One relationship between ClassDiagram.Class>>BidirectionalOne2OneOwner  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>owned;
One-To-One relationship between ClassDiagram.Class>>Entity1  to ClassDiagram.Class>>Entity2 represented by ClassDiagram.Atrribute>>field;
One-To-One relationship between ClassDiagram.Class>>BidirectionalOne2OneOwned  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>owner;
Many-To-One relationship from ClassDiagram.Class>>QCEntityM2O  to ClassDiagram.Class>>QCEntity represented by ClassDiagram.Atrribute>>qc;
One-To-One relationship between ClassDiagram.Class>>MapValEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>OneToEntity  to ClassDiagram.Class>>Collection<ToManyLazy>;
One-To-Many relationship from ClassDiagram.Class>>OneToEntity  to ClassDiagram.Class>>Collection<ToManyEager>;
One-To-One relationship between ClassDiagram.Class>>MapEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>MapEntity  to ClassDiagram.Class>>Map<MapKeyEmbed,MapValEntity>;
One-To-Many relationship from ClassDiagram.Class>>EagerEntity  to ClassDiagram.Class>>List<EagerEntity>;
One-To-Many relationship from ClassDiagram.Class>>LazyEntity  to ClassDiagram.Class>>List<RelEntity>;
One-To-One relationship between ClassDiagram.Class>>LazyEntity  to ClassDiagram.Class>>RelEntity represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ComplexCompoundIdTestEntity  to ClassDiagram.Class>>TypeEntity represented by ClassDiagram.Atrribute>>type;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>accountholder;
One-To-Many relationship from ClassDiagram.Class>>AccountGroup  to ClassDiagram.Class>>Set<Account>;
One-To-Many relationship from ClassDiagram.Class>>Course  to ClassDiagram.Class>>Collection<Attendance>;
One-To-One relationship between ClassDiagram.Class>>Student  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>Collection<Attendance>;
Many-To-One relationship from ClassDiagram.Class>>Attendance  to ClassDiagram.Class>>Student represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Attendance  to ClassDiagram.Class>>Course represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Parent  to ClassDiagram.Class>>Collection<Child>;
Many-To-One relationship from ClassDiagram.Class>>Child  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>HelperPC  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>eager;
One-To-One relationship between ClassDiagram.Class>>AutoIncrementPC1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>oneone;
One-To-Many relationship from ClassDiagram.Class>>EagerPCSub  to ClassDiagram.Class>>List;
One-To-One relationship between ClassDiagram.Class>>InvertB  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>EagerPC  to ClassDiagram.Class>>HelperPC represented by ClassDiagram.Atrribute>>eager;
One-To-One relationship between ClassDiagram.Class>>EagerPC  to ClassDiagram.Class>>HelperPC represented by ClassDiagram.Atrribute>>eagersub;
One-To-One relationship between ClassDiagram.Class>>EagerPC  to ClassDiagram.Class>>HelperPC represented by ClassDiagram.Atrribute>>recurse;
One-To-One relationship between ClassDiagram.Class>>EagerPC  to ClassDiagram.Class>>HelperPC represented by ClassDiagram.Atrribute>>helper;
One-To-One relationship between ClassDiagram.Class>>HelperPC2  to ClassDiagram.Class>>HelperPC represented by ClassDiagram.Atrribute>>helper;
One-To-One relationship between ClassDiagram.Class>>RuntimeTest1  to ClassDiagram.Class>>RuntimeTest1 represented by ClassDiagram.Atrribute>>//relations//@transientselfoneone;
One-To-One relationship between ClassDiagram.Class>>ConstantJoinPC4  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>onetoone1;
set: constantjoinpc4_set(constantjoinpc4ID:constantjoinpc4 [PK] #FK to constantjoinpc4,setID:set [PK] #FK to set);
One-To-One relationship between ClassDiagram.Class>>Entity1  to ClassDiagram.Class>>Entity2 represented by ClassDiagram.Atrribute>>field;
One-To-One relationship between ClassDiagram.Class>>SQLMapPerson  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>address;
One-To-One relationship between ClassDiagram.Class>>SQLMapPerson  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>partner;
One-To-One relationship between ClassDiagram.Class>>OwnerOfEntityWithCompositeId  to ClassDiagram.Class>>CompositeId represented by ClassDiagram.Atrribute>>relation;
One-To-One relationship between ClassDiagram.Class>>SQLMapOrder  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>item;
One-To-One relationship between ClassDiagram.Class>>InvertA  to ClassDiagram.Class>>InvertB represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>UnidirectionalOneToOneOwner  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>owned;
One-To-One relationship between ClassDiagram.Class>>AutoIncrementPC3  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>oneone;
One-To-Many relationship from ClassDiagram.Class>>MapperEntity  to ClassDiagram.Class>>Map<Key,MappedEntity>;
Many-To-Many relationship between ClassDiagram.Class>>UniqueA  and ClassDiagram.Class>>Unique: unique_jointable(fk_a:UniqueA [PK] #FK to UniqueA,fk_b:Unique [PK] #FK to Unique);
Many-To-Many relationship between ClassDiagram.Class>>NamedUniqueA  and ClassDiagram.Class>>Unique: n_unique_jointable(fk_a:NamedUniqueA [PK] #FK to NamedUniqueA,fk_b:Unique [PK] #FK to Unique);
Many-To-One relationship from ClassDiagram.Class>>CD  to ClassDiagram.Class>>Singer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>UserData  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>extvalue;
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Collection<Department>;
Many-To-One relationship from ClassDiagram.Class>>Child  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Parent  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>addrid;
One-To-Many relationship from ClassDiagram.Class>>Parent  to ClassDiagram.Class>>Collection<Child>;
One-To-Many relationship from ClassDiagram.Class>>Singer  to ClassDiagram.Class>>Set<CD>;
Book: author_Book(authorID:author [PK] #FK to author,BookID:Book [PK] #FK to Book);
A: book_A(bookID:book [PK] #FK to book,AID:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Collection<Employee>;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CombinedPKListEntity  to ClassDiagram.Class>>CombinedPKTestEntity represented by ClassDiagram.Atrribute>>keya;
A: trainer_A(trainerID:trainer [PK] #FK to trainer,AID:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>BattingOrder  to ClassDiagram.Class>>List<Player>;
One-To-Many relationship from ClassDiagram.Class>>BattingOrder  to ClassDiagram.Class>>List<Player>;
One-To-Many relationship from ClassDiagram.Class>>BattingOrder  to ClassDiagram.Class>>List<Player>;
One-To-Many relationship from ClassDiagram.Class>>ColDefTestEntity  to ClassDiagram.Class>>List<ColDefTestElement>;
ColDefTestElement: coldeftestentity_ColDefTestElement(coldeftestentityID:coldeftestentity [PK] #FK to coldeftestentity,ColDefTestElementID:ColDefTestElement [PK] #FK to ColDefTestElement);
Many-To-Many relationship between ClassDiagram.Class>>Course  and ClassDiagram.Class>>Student: course_enrollment(Course_ID:Course [PK] #FK to Course,Student_ID:Student [PK] #FK to Student);
Many-To-Many relationship between ClassDiagram.Class>>Course  and ClassDiagram.Class>>Student: course_enrollment(Course_ID:Course [PK] #FK to Course,Student_ID:Student [PK] #FK to Student);wait_list(Course_ID:Course [PK] #FK to Course,Student_ID:Student [PK] #FK to Student);
A: game_A(gameID:game [PK] #FK to game,AID:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>BiOrderEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>bo2mbentity;
One-To-Many relationship from ClassDiagram.Class>>BiOrderMappedByEntity  to ClassDiagram.Class>>List<BiOrderEntity>;
One-To-Many relationship from ClassDiagram.Class>>Owner  to ClassDiagram.Class>>Collection<Car>;
One-To-Many relationship from ClassDiagram.Class>>Owner  to ClassDiagram.Class>>Collection<Home>;
Many-To-Many relationship between ClassDiagram.Class>>Owner  and ClassDiagram.Class>>Widget: widget_m2m_table(Owner_ID:Owner [PK] #FK to Owner,Widget_ID:Widget [PK] #FK to Widget);
Many-To-One relationship from ClassDiagram.Class>>Car  to ClassDiagram.Class>>Owner represented by ClassDiagram.Atrribute>>GeneratedName;
A: employee_A(employeeID:employee [PK] #FK to employee,AID:A [PK] #FK to A);
A: employee_A(employeeID:employee [PK] #FK to employee,AID:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Map<Division,VicePresident>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Map<EmployeePK,Employee>;
Many-To-One relationship from ClassDiagram.Class>>Office  to ClassDiagram.Class>>Division represented by ClassDiagram.Atrribute>>GeneratedName;
A: employee_A(employeeID:employee [PK] #FK to employee,AID:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>Division  to ClassDiagram.Class>>Collection<Office>;
Many-To-One relationship from ClassDiagram.Class>>VicePresident  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>co;
One-To-One relationship between ClassDiagram.Class>>VicePresident  to ClassDiagram.Class>>Division represented by ClassDiagram.Atrribute>>div;
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Map<Division,VicePresident>;
A: employee_A(employeeID:employee [PK] #FK to employee,AID:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>VicePresident  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>co;
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Map<FileName,VicePresident>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Map<Integer,Employee>;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dept;
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Map<Division,VicePresident>;
Many-To-One relationship from ClassDiagram.Class>>VicePresident  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>co;
A: employee_A(employeeID:employee [PK] #FK to employee,AID:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Map<Division,VicePresident>;
Many-To-One relationship from ClassDiagram.Class>>VicePresident  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>co;
One-To-One relationship between ClassDiagram.Class>>VicePresident  to ClassDiagram.Class>>Division represented by ClassDiagram.Atrribute>>div;
One-To-One relationship between ClassDiagram.Class>>Division  to ClassDiagram.Class>>VicePresident represented by ClassDiagram.Atrribute>>vp;
A: employee_A(employeeID:employee [PK] #FK to employee,AID:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Map<EmployeeName,Employee>;
One-To-Many relationship from ClassDiagram.Class>>Compny2  to ClassDiagram.Class>>Map<Division,VicePresident>;
Many-To-One relationship from ClassDiagram.Class>>VicePresident  to ClassDiagram.Class>>Compny1 represented by ClassDiagram.Atrribute>>co;
One-To-Many relationship from ClassDiagram.Class>>Compny1  to ClassDiagram.Class>>Map;
A: employee_A(employeeID:employee [PK] #FK to employee,AID:A [PK] #FK to A);
A: employee_A(employeeID:employee [PK] #FK to employee,AID:A [PK] #FK to A);
A: employee_A(employeeID:employee [PK] #FK to employee,AID:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>VicePresident  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>co;
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Map<Division,VicePresident>;
Many-To-One relationship from ClassDiagram.Class>>Employee3  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>department;
One-To-Many relationship from ClassDiagram.Class>>Department2  to ClassDiagram.Class>>Map<EmployeePK2,Employee2>;
Many-To-One relationship from ClassDiagram.Class>>Employee2  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>department;
One-To-Many relationship from ClassDiagram.Class>>Department3  to ClassDiagram.Class>>Map<EmployeeName3,Employee3>;
Many-To-One relationship from ClassDiagram.Class>>Employee1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>department;
A: employee_A(employeeID:employee [PK] #FK to employee,AID:A [PK] #FK to A);
One-To-One relationship between ClassDiagram.Class>>PhoneNumber  to ClassDiagram.Class>>Division represented by ClassDiagram.Atrribute>>GeneratedName;
A: employee_A(employeeID:employee [PK] #FK to employee,AID:A [PK] #FK to A);
One-To-One relationship between ClassDiagram.Class>>Division  to ClassDiagram.Class>>PhoneNumber represented by ClassDiagram.Atrribute>>phone;
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Map;
Many-To-One relationship from ClassDiagram.Class>>VicePresident  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>co;
Many-To-Many relationship between ClassDiagram.Class>>Student  and ClassDiagram.Class>>A: cenrolls(student:Student [PK] #FK to Student,semester:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>Application  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>user;
One-To-One relationship between ClassDiagram.Class>>Magazine  to ClassDiagram.Class>>Publisher represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>DtaSrc  to ClassDiagram.Class>>List<DtaSrcField>;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Collection<Order>;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>DtaSrcField  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>id;
A: supplier_A(supplierID:supplier [PK] #FK to supplier,AID:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>PartComposite  to ClassDiagram.Class>>Collection<Usage>;
Many-To-One relationship from ClassDiagram.Class>>LineItem  to ClassDiagram.Class>>Invoice represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Invoice  to ClassDiagram.Class>>List<LineItem>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Collection<PartTimeEmployee>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Collection<FullTimeEmployee>;
Many-To-One relationship from ClassDiagram.Class>>Usage  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>child;
Many-To-One relationship from ClassDiagram.Class>>Usage  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>Part  to ClassDiagram.Class>>Collection<Usage>;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dept;
Many-To-One relationship from ClassDiagram.Class>>MaxQueryMapEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>refentity;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>ssn;
One-To-Many relationship from ClassDiagram.Class>>ParentWithAppIdentity  to ClassDiagram.Class>>Set<Child>;
One-To-Many relationship from ClassDiagram.Class>>ParentWithAutoIdentity  to ClassDiagram.Class>>Set<Child>;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>Set<Address>;
One-To-Many relationship from ClassDiagram.Class>>ParentWithSequenceIdentity  to ClassDiagram.Class>>Set<Child>;
Many-To-One relationship from ClassDiagram.Class>>EmbeddedIdEntity  to ClassDiagram.Class>>EmbeddedIdEntity represented by ClassDiagram.Atrribute>>relation;
Many-To-One relationship from ClassDiagram.Class>>EmbeddedIdEntity  to ClassDiagram.Class>>EmbeddedIdEntity represented by ClassDiagram.Atrribute>>epk1;
One-To-One relationship between ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>selfoneone;
One-To-One relationship between ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>pkjoinselfoneone;
One-To-One relationship between ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>oneone;
One-To-One relationship between ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>othertableoneone;
One-To-One relationship between ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>inverseowneroneone;
One-To-Many relationship from ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>Set<AnnoTest2>;
One-To-Many relationship from ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>Set<AnnoTest2>;
Many-To-Many relationship between ClassDiagram.Class>>AnnoTest1  and ClassDiagram.Class>>A: annotest1_manymany(many_pk:AnnoTest1 [PK] #FK to AnnoTest1,many_pk1:A [PK] #FK to A);
null: annotest1_manymany(many_pk:AnnoTest1 [PK] #FK to AnnoTest1,many_pk1:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>Map<Integer,Flat1>;
One-To-Many relationship from ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>Map<Integer,Flat1>;
One-To-Many relationship from ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>Map<String,AnnoTest2>;
One-To-One relationship between ClassDiagram.Class>>AnnoTest2  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>inverseoneone;
Many-To-One relationship from ClassDiagram.Class>>AnnoTest2  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>pk;
Many-To-Many relationship between ClassDiagram.Class>>AnnoTest2  and ClassDiagram.Class>>A: annotest2_manymany(many_pk1:AnnoTest2 [PK] #FK to AnnoTest2,manye_pk:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>EmbeddableSuperSub  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>sub;
Many-To-One relationship from ClassDiagram.Class>>EmbeddableSuperSub  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>//#####sup;
Many-To-One relationship from ClassDiagram.Class>>ExtensionsEntity  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ExtensionsEntity  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>id;
X: extensionsentity_X(extensionsentityID:extensionsentity [PK] #FK to extensionsentity,XID:X [PK] #FK to X);
X: extensionsentity_X(extensionsentityID:extensionsentity [PK] #FK to extensionsentity,XID:X [PK] #FK to X);extensionsentity_X(extensionsentityID:extensionsentity [PK] #FK to extensionsentity,XID:X [PK] #FK to X);
One-To-One relationship between ClassDiagram.Class>>AnnoTest3  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>suboneone;
One-To-Many relationship from ClassDiagram.Class>>Department3  to ClassDiagram.Class>>Map<EmployeeName3,Employee3>;
Many-To-One relationship from ClassDiagram.Class>>Employee3  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>department;
One-To-Many relationship from ClassDiagram.Class>>Company2  to ClassDiagram.Class>>Map<Division,VicePresident>;
One-To-Many relationship from ClassDiagram.Class>>Department2  to ClassDiagram.Class>>Map<EmployeePK2,Employee2>;
Many-To-One relationship from ClassDiagram.Class>>Topic  to ClassDiagram.Class>>subject represented by ClassDiagram.Atrribute>>//@joincolumn(table;
Many-To-One relationship from ClassDiagram.Class>>Employee2  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>department;
One-To-One relationship between ClassDiagram.Class>>EntityB1  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>entitya;
One-To-Many relationship from ClassDiagram.Class>>ProgramManager  to ClassDiagram.Class>>Collection<Employee>;
Many-To-One relationship from ClassDiagram.Class>>VicePresident  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>co;
One-To-Many relationship from ClassDiagram.Class>>Company1  to ClassDiagram.Class>>Map;
One-To-Many relationship from ClassDiagram.Class>>Department1  to ClassDiagram.Class>>Map<Integer,Employee1>;
One-To-One relationship between ClassDiagram.Class>>ParkingSpot  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>assignedto;
Many-To-One relationship from ClassDiagram.Class>>Employee1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>department;
One-To-Many relationship from ClassDiagram.Class>>ProgramManager  to ClassDiagram.Class>>Collection<Employee>;
One-To-One relationship between ClassDiagram.Class>>EntityB2  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>entitya;
Many-To-One relationship from ClassDiagram.Class>>Dependent4  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>MedicalHistory1  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
One-To-Many relationship from ClassDiagram.Class>>Book1  to ClassDiagram.Class>>Set<Page1>;
Many-To-One relationship from ClassDiagram.Class>>Book1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>library_name;
One-To-Many relationship from ClassDiagram.Class>>Employee1  to ClassDiagram.Class>>List<Dependent1>;
Many-To-One relationship from ClassDiagram.Class>>Line1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>library_name;
One-To-Many relationship from ClassDiagram.Class>>Library1  to ClassDiagram.Class>>Set<Book1>;
One-To-Many relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>Set<Page>;
Many-To-One relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Person2  to ClassDiagram.Class>>Story represented by ClassDiagram.Atrribute>>medical;
One-To-One relationship between ClassDiagram.Class>>Parent3  to ClassDiagram.Class>>dependent3 represented by ClassDiagram.Atrribute>>dependent;
One-To-One relationship between ClassDiagram.Class>>Person3  to ClassDiagram.Class>>Story represented by ClassDiagram.Atrribute>>medical;
Many-To-One relationship from ClassDiagram.Class>>Dependent5  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>firstname;
One-To-Many relationship from ClassDiagram.Class>>Employee4  to ClassDiagram.Class>>List<Dependent4>;
Many-To-One relationship from ClassDiagram.Class>>Page  to ClassDiagram.Class>>Book represented by ClassDiagram.Atrribute>>library_library_name;
One-To-One relationship between ClassDiagram.Class>>MedicalHistory4  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
Many-To-One relationship from ClassDiagram.Class>>Dependent1  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>emp;
One-To-Many relationship from ClassDiagram.Class>>Beneficiary  to ClassDiagram.Class>>List<BeneContact>;
One-To-One relationship between ClassDiagram.Class>>Person1  to ClassDiagram.Class>>Story represented by ClassDiagram.Atrribute>>medical;
One-To-Many relationship from ClassDiagram.Class>>Library  to ClassDiagram.Class>>Set<Book>;
Many-To-One relationship from ClassDiagram.Class>>Dependent5a  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>xfirstname;
One-To-One relationship between ClassDiagram.Class>>MedicalHistory2  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
One-To-Many relationship from ClassDiagram.Class>>Employee2  to ClassDiagram.Class>>List<Dependent2>;
Many-To-One relationship from ClassDiagram.Class>>Dependent3  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>emp;
One-To-One relationship between ClassDiagram.Class>>Dependent3  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent;
One-To-One relationship between ClassDiagram.Class>>MedicalHistory3  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
One-To-Many relationship from ClassDiagram.Class>>Employee3  to ClassDiagram.Class>>List<Dependent3>;
Many-To-One relationship from ClassDiagram.Class>>Dependent2  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>emp;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>PhoneNumber represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>PhoneNumber  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>emp;
Many-To-One relationship from ClassDiagram.Class>>Page1  to ClassDiagram.Class>>Book represented by ClassDiagram.Atrribute>>library_name;
One-To-Many relationship from ClassDiagram.Class>>Page1  to ClassDiagram.Class>>Set<Line1>;
One-To-One relationship between ClassDiagram.Class>>Person4  to ClassDiagram.Class>>Story represented by ClassDiagram.Atrribute>>medical;
One-To-One relationship between ClassDiagram.Class>>ManagedInverseTestInstance  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>managed2;
One-To-One relationship between ClassDiagram.Class>>Entity1  to ClassDiagram.Class>>Entity2 represented by ClassDiagram.Atrribute>>field;
One-To-One relationship between ClassDiagram.Class>>ManagedInverseTestInstance2  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>managed;
One-To-Many relationship from ClassDiagram.Class>>Invoice  to ClassDiagram.Class>>List<LineItem>;
Many-To-One relationship from ClassDiagram.Class>>EntityC_B1M_Map_JT  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>Bi_1ToM_JT  to ClassDiagram.Class>>List<EntityC_B1MJT>;
Many-To-One relationship from ClassDiagram.Class>>EmbeddableSuperSub  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>sub;
Many-To-One relationship from ClassDiagram.Class>>EmbeddableSuperSub  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>//#####sup;
One-To-One relationship between ClassDiagram.Class>>EntityC_B11JT  to ClassDiagram.Class>>bi_1to1_jt represented by ClassDiagram.Atrribute>>bi11jt;
One-To-Many relationship from ClassDiagram.Class>>Uni_1ToM_Map_FK  to ClassDiagram.Class>>Map<String,EntityC_U1M_Map_FK>;
One-To-One relationship between ClassDiagram.Class>>Bi_1To1_JT  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>//ajointableannotationisspecifiedontheowningsideoftheassociationentityc;
One-To-Many relationship from ClassDiagram.Class>>Uni_1ToM_Map_RelKey_FK  to ClassDiagram.Class>>Map<EntityC,EntityC_U1M_Map_RelKey_FK>;
Many-To-One relationship from ClassDiagram.Class>>EntityC_B1MFK  to ClassDiagram.Class>>bi_1tom_fk represented by ClassDiagram.Atrribute>>bi1mfk;
Many-To-One relationship from ClassDiagram.Class>>LineItem  to ClassDiagram.Class>>Invoice represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Uni_1ToM_FK  to ClassDiagram.Class>>List<EntityC_U1MFK>;
One-To-One relationship between ClassDiagram.Class>>Uni_1To1_JT  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>entityc;
One-To-Many relationship from ClassDiagram.Class>>Bi_1ToM_Map_RelKey_JT  to ClassDiagram.Class>>Map<EntityC,EntityC_B1M_Map_RelKey_JT>;
Many-To-One relationship from ClassDiagram.Class>>EntityC_B1MJT  to ClassDiagram.Class>>bi_1tom_jt represented by ClassDiagram.Atrribute>>cid;
Many-To-One relationship from ClassDiagram.Class>>EntityC_B1M_Map_RelKey_JT  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Uni_1ToM_JT  to ClassDiagram.Class>>List<EntityC>;
Many-To-One relationship from ClassDiagram.Class>>Uni_MTo1_JT  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>Bi_1ToM_FK  to ClassDiagram.Class>>List<EntityC_B1MFK>;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dept;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Collection<PartTimeEmployee>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Collection<FullTimeEmployee>;
One-To-Many relationship from ClassDiagram.Class>>Bi_1ToM_Map_JT  to ClassDiagram.Class>>Map<String,EntityC_B1M_Map_JT>;
One-To-One relationship between ClassDiagram.Class>>Address  to ClassDiagram.Class>>CompUser represented by ClassDiagram.Atrribute>>user;
One-To-One relationship between ClassDiagram.Class>>CompUser  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>A  to ClassDiagram.Class>>b represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Publisher  to ClassDiagram.Class>>Set<Magazine>;
Many-To-One relationship from ClassDiagram.Class>>D  to ClassDiagram.Class>>c represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>List<LineItem>;
Many-To-One relationship from ClassDiagram.Class>>LineItem  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>LineItem  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Dependent  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>emp;
Many-To-One relationship from ClassDiagram.Class>>Magazine  to ClassDiagram.Class>>Publisher represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>CreditCard  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>CreditCard  to ClassDiagram.Class>>List<TransactionHistory>;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Set<Order>;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>List<Account>;
Many-To-One relationship from ClassDiagram.Class>>Request  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Item  to ClassDiagram.Class>>producer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Set<Item>;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>shop represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Shop  to ClassDiagram.Class>>Set<Order>;
One-To-One relationship between ClassDiagram.Class>>Foo  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Producer  to ClassDiagram.Class>>Item represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Set<Employee>;
One-To-Many relationship from ClassDiagram.Class>>MyUserEntity  to ClassDiagram.Class>>List<AddressEntity>;
Many-To-One relationship from ClassDiagram.Class>>AddressEntity  to ClassDiagram.Class>>myuserentity represented by ClassDiagram.Atrribute>>user;
Employee: phone_Employee(phoneID:phone [PK] #FK to phone,EmployeeID:Employee [PK] #FK to Employee);
One-To-Many relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>Map<String,Photo>;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>spouse;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Account  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>owner;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Course  to ClassDiagram.Class>>List<Student>;
Many-To-Many relationship between ClassDiagram.Class>>Student  and ClassDiagram.Class>>A: tenrollmnts(student:Student [PK] #FK to Student,semester:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>C  to ClassDiagram.Class>>Set<D>;
One-To-Many relationship from ClassDiagram.Class>>C  to ClassDiagram.Class>>List<D>;
One-To-Many relationship from ClassDiagram.Class>>C  to ClassDiagram.Class>>Collection<D>;
A: c_A(cID:c [PK] #FK to c,AID:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>ScheduledAssignment  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>ScheduledAssignment  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ScheduledAssignment  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>caze;
Many-To-One relationship from ClassDiagram.Class>>ScheduledAssignment  to ClassDiagram.Class>>role represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ScheduledAssignment  to ClassDiagram.Class>>lookup represented by ClassDiagram.Atrribute>>brokenrule;
Many-To-One relationship from ClassDiagram.Class>>ManyOneEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>rel;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Collection<OrderItem>;
Many-To-One relationship from ClassDiagram.Class>>Magazine  to ClassDiagram.Class>>Publisher represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>Hardware  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>techowner;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Collection<Order>;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>List<Account>;
One-To-Many relationship from ClassDiagram.Class>>Publisher  to ClassDiagram.Class>>Set<Magazine>;
Many-To-One relationship from ClassDiagram.Class>>Case  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Case  to ClassDiagram.Class>>List<ScheduledAssignment>;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>cust;
One-To-One relationship between ClassDiagram.Class>>ComplexF  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>e;
One-To-One relationship between ClassDiagram.Class>>ComplexB  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>a;
list<projekt>: osoba_list<projekt>(osobaID:osoba [PK] #FK to osoba,list<projekt>ID:list<projekt> [PK] #FK to list<projekt>);
One-To-One relationship between ClassDiagram.Class>>QueryTest2  to ClassDiagram.Class>>querytest2 represented by ClassDiagram.Atrribute>>onetoone;
One-To-Many relationship from ClassDiagram.Class>>QueryTest2  to ClassDiagram.Class>>List<QueryTest2>;
One-To-Many relationship from ClassDiagram.Class>>QueryTest2  to ClassDiagram.Class>>Map<String,QueryTest2>;
One-To-One relationship between ClassDiagram.Class>>ComplexG  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>f;
One-To-One relationship between ClassDiagram.Class>>ComplexC  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>QueryTest4  to ClassDiagram.Class>>querytest2 represented by ClassDiagram.Atrribute>>onetoone2;
One-To-One relationship between ClassDiagram.Class>>QueryTest4  to ClassDiagram.Class>>querytest2 represented by ClassDiagram.Atrribute>>onetoone3;
collection<querytest2>: querytest4_collection<querytest2>(querytest4ID:querytest4 [PK] #FK to querytest4,collection<querytest2>ID:collection<querytest2> [PK] #FK to collection<querytest2>);
One-To-One relationship between ClassDiagram.Class>>ModRuntimeTest1  to ClassDiagram.Class>>ModRuntimeTest1 represented by ClassDiagram.Atrribute>>selfoneone;
A: projekt_A(projektID:projekt [PK] #FK to projekt,AID:A [PK] #FK to A);
One-To-One relationship between ClassDiagram.Class>>ComplexE  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>d;
One-To-One relationship between ClassDiagram.Class>>Entity1  to ClassDiagram.Class>>Entity2 represented by ClassDiagram.Atrribute>>field;
One-To-One relationship between ClassDiagram.Class>>ComplexD  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>c;
One-To-One relationship between ClassDiagram.Class>>RuntimeTest5  to ClassDiagram.Class>>RuntimeTest4 represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>RuntimeTest1  to ClassDiagram.Class>>RuntimeTest1 represented by ClassDiagram.Atrribute>>//relationsselfoneone;
Many-To-One relationship from ClassDiagram.Class>>CrtRequisicaoChequePersEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>CrtRequisicaoChequePersEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>Role  to ClassDiagram.Class>>lookup represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Dependent  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>emp;
Many-To-One relationship from ClassDiagram.Class>>OrderItem  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>HungarianNotationFields  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>m_clzfoobar6;
One-To-One relationship between ClassDiagram.Class>>PersistentRelation  to ClassDiagram.Class>>v1 represented by ClassDiagram.Atrribute>>/***arelationmusthaveanon-nullvertexassource.*/source;
One-To-One relationship between ClassDiagram.Class>>PersistentRelation  to ClassDiagram.Class>>v2 represented by ClassDiagram.Atrribute>>/***arelationmayhaveanon-nullvertexastarget.*/target;
properties: persistentrelation_properties(persistentrelationID:persistentrelation [PK] #FK to persistentrelation,propertiesID:properties [PK] #FK to properties);
One-To-Many relationship from ClassDiagram.Class>>RelationGraph  to ClassDiagram.Class>>Set<PersistentRelation<E,E>>;
Many-To-One relationship from ClassDiagram.Class>>UnidirectionalManyToOne  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>related;
EntityB: chainentitya_EntityB(chainentityaID:chainentitya [PK] #FK to chainentitya,EntityBID:EntityB [PK] #FK to EntityB);
Many-To-One relationship from ClassDiagram.Class>>EntityBInverseEager  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>entitya;
Many-To-One relationship from ClassDiagram.Class>>TargetedIFaceRelationParent  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>EntityCInverseEager  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>entityd;
A: lrsentity_A(lrsentityID:lrsentity [PK] #FK to lrsentity,AID:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Collection<Order>;
Many-To-One relationship from ClassDiagram.Class>>OneManyEagerChild  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>ConcurrentEntityLeft  to ClassDiagram.Class>>concurrententityright represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>CascadingOneManyParent  to ClassDiagram.Class>>List<CascadingOneManyChild>;
Many-To-One relationship from ClassDiagram.Class>>GrandChild  to ClassDiagram.Class>>Child represented by ClassDiagram.Atrribute>>GeneratedName;
Person: pphone_Person(pphoneID:pphone [PK] #FK to pphone,PersonID:Person [PK] #FK to Person);
Many-To-One relationship from ClassDiagram.Class>>BasicEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>rel;
Many-To-One relationship from ClassDiagram.Class>>VCS  to ClassDiagram.Class>>e represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>VCS  to ClassDiagram.Class>>Set<VC>;
One-To-Many relationship from ClassDiagram.Class>>MapKeyParent  to ClassDiagram.Class>>Map<String,MapKeyChild>;
Many-To-One relationship from ClassDiagram.Class>>C  to ClassDiagram.Class>>cm represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>C  to ClassDiagram.Class>>Set<D>;
One-To-Many relationship from ClassDiagram.Class>>IdOrderedOneManyParent  to ClassDiagram.Class>>List<IdOrderedOneManyChild>;
One-To-Many relationship from ClassDiagram.Class>>IdOrderedOneManyParent  to ClassDiagram.Class>>List<IdOrderedOneManyChild>;
One-To-Many relationship from ClassDiagram.Class>>EntityAInverseEager  to ClassDiagram.Class>>List<EntityBInverseEager>;
One-To-Many relationship from ClassDiagram.Class>>BidiParent  to ClassDiagram.Class>>List<BidiChild>;
One-To-One relationship between ClassDiagram.Class>>BidiParent  to ClassDiagram.Class>>Child represented by ClassDiagram.Atrribute>>onetoonechild;
Many-To-One relationship from ClassDiagram.Class>>CascadingOneManyChild  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>TblChild  to ClassDiagram.Class>>Collection<TblGrandChild>;
Many-To-One relationship from ClassDiagram.Class>>TblChild  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent_id;
One-To-Many relationship from ClassDiagram.Class>>AText  to ClassDiagram.Class>>Set<AEvident>;
One-To-One relationship between ClassDiagram.Class>>OneOneChild  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>VC  to ClassDiagram.Class>>vcs represented by ClassDiagram.Atrribute>>//////ii;
One-To-Many relationship from ClassDiagram.Class>>VC  to ClassDiagram.Class>>Set<D>;
Many-To-One relationship from ClassDiagram.Class>>MapKeyChild  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>EntityDInverseEager  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>entityc;
Many-To-One relationship from ClassDiagram.Class>>Child  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Child  to ClassDiagram.Class>>Collection<GrandChild>;
Many-To-One relationship from ClassDiagram.Class>>IdOrderedOneManyChild  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>explicitparent;
Many-To-One relationship from ClassDiagram.Class>>IdOrderedOneManyChild  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>implicitparent;
Many-To-One relationship from ClassDiagram.Class>>OneManyLazyChild  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>EntityA2InverseEager  to ClassDiagram.Class>>List<EntityBInverseEager>;
One-To-Many relationship from ClassDiagram.Class>>CM  to ClassDiagram.Class>>Set<C>;
Many-To-One relationship from ClassDiagram.Class>>CM  to ClassDiagram.Class>>e represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>D  to ClassDiagram.Class>>c represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>D  to ClassDiagram.Class>>vc represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>EntityA1InverseEager  to ClassDiagram.Class>>List<EntityBInverseEager>;
Many-To-One relationship from ClassDiagram.Class>>BidiChild  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>onetomanyparent;
One-To-One relationship between ClassDiagram.Class>>BidiChild  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>onetooneparent;
One-To-Many relationship from ClassDiagram.Class>>OneManyEagerParent  to ClassDiagram.Class>>List<OneManyLazyChild>;
One-To-Many relationship from ClassDiagram.Class>>OneManyEagerParent  to ClassDiagram.Class>>List<OneManyEagerChild>;
One-To-Many relationship from ClassDiagram.Class>>ChainEntityB  to ClassDiagram.Class>>Set<ChainEntityC>;
One-To-Many relationship from ClassDiagram.Class>>ConcurrentEntityRight  to ClassDiagram.Class>>Map<String,ConcurrentEntityLeft>;
One-To-One relationship between ClassDiagram.Class>>OneOneParent  to ClassDiagram.Class>>Child represented by ClassDiagram.Atrribute>>child;
Many-To-One relationship from ClassDiagram.Class>>DataStoreManyOneIdOwner  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>DataStoreManyOneIdOwner  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>selfrel;
Many-To-One relationship from ClassDiagram.Class>>TblGrandChild  to ClassDiagram.Class>>Child represented by ClassDiagram.Atrribute>>child_id;
One-To-Many relationship from ClassDiagram.Class>>Parent  to ClassDiagram.Class>>Collection<Child>;
One-To-Many relationship from ClassDiagram.Class>>TblParent  to ClassDiagram.Class>>Collection<TblChild>;
Many-To-One relationship from ClassDiagram.Class>>ChainEntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ManyOneCompoundIdOwner  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>entityid;
Many-To-One relationship from ClassDiagram.Class>>ManyOneCompoundIdOwner  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>selfrel;
Many-To-One relationship from ClassDiagram.Class>>InheritanceHierarchyAbstract  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>InheritanceHierarchyAbstract  to ClassDiagram.Class>>Set<InheritanceHierarchyAbstract>;
Many-To-One relationship from ClassDiagram.Class>>ManyOneIdOwner  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ManyOneIdOwner  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>selfrel;
One-To-Many relationship from ClassDiagram.Class>>Util1xmLf  to ClassDiagram.Class>>Collection<Util1xmRt>;
One-To-Many relationship from ClassDiagram.Class>>Util1xmLf  to ClassDiagram.Class>>Collection<Util1xmRt>;
Many-To-One relationship from ClassDiagram.Class>>DataStoreBasicEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>rel;
Many-To-One relationship from ClassDiagram.Class>>LrsEntityB  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>entitya;
Many-To-One relationship from ClassDiagram.Class>>IncompleteRelationshipParentEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>discount;
One-To-Many relationship from ClassDiagram.Class>>LrsEntityA  to ClassDiagram.Class>>Collection<LrsEntityB>;
One-To-Many relationship from ClassDiagram.Class>>E  to ClassDiagram.Class>>Set<VCS>;
One-To-Many relationship from ClassDiagram.Class>>E  to ClassDiagram.Class>>Set<CM>;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Collection<Order>;
Many-To-One relationship from ClassDiagram.Class>>Lecturer  to ClassDiagram.Class>>Course represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Course  to ClassDiagram.Class>>List<Lecturer>;
Many-To-One relationship from ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>center;
One-To-Many relationship from ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>Set<EntityC>;
Many-To-One relationship from ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>service;
One-To-Many relationship from ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>Set<EntityB>;
One-To-Many relationship from ClassDiagram.Class>>AccountingHierarchy  to ClassDiagram.Class>>List<AccountingHierarchyRate>;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dept;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>List<Employee>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>List<Employee>;
Many-To-One relationship from ClassDiagram.Class>>PersonTest  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>DepartmentTest  to ClassDiagram.Class>>Set<PersonTest>;
Order: orderednameentity_Order(orderednameentityID:orderednameentity [PK] #FK to orderednameentity,OrderID:Order [PK] #FK to Order);
One-To-Many relationship from ClassDiagram.Class>>OrderedOneToManyEntity  to ClassDiagram.Class>>List<INameEntity>;
A: orderedmanytomanyentity_A(orderedmanytomanyentityID:orderedmanytomanyentity [PK] #FK to orderedmanytomanyentity,AID:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>Document  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>EntityI2  to ClassDiagram.Class>>entityi3 represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>EntityD2  to ClassDiagram.Class>>EntityD represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>EntityH  and ClassDiagram.Class>>collection<entityi>: ha i(EntityH_ID:EntityH [PK] #FK to EntityH,collection<entityi>_ID:collection<entityi> [PK] #FK to collection<entityi>);
One-To-One relationship between ClassDiagram.Class>>EntityH  to ClassDiagram.Class>>entityi2 represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>EntityH  and ClassDiagram.Class>>A: ha i(EntityH_ID:EntityH [PK] #FK to EntityH,collection<entityi>_ID:collection<entityi> [PK] #FK to collection<entityi>);map3a join table(EntityH_ID:EntityH [PK] #FK to EntityH,A_ID:A [PK] #FK to A);
Many-To-Many relationship between ClassDiagram.Class>>EntityH  and ClassDiagram.Class>>A: ha i(EntityH_ID:EntityH [PK] #FK to EntityH,collection<entityi>_ID:collection<entityi> [PK] #FK to collection<entityi>);map3a join table(EntityH_ID:EntityH [PK] #FK to EntityH,A_ID:A [PK] #FK to A);map4 join table(EntityH_ID:EntityH [PK] #FK to EntityH,A_ID:A [PK] #FK to A);
Many-To-Many relationship between ClassDiagram.Class>>EntityC  and ClassDiagram.Class>>EntityD: \(EntityC_ID:EntityC [PK] #FK to EntityC,EntityD_ID:EntityD [PK] #FK to EntityD);
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityD represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>EntityC  and ClassDiagram.Class>>A: \(EntityC_ID:EntityC [PK] #FK to EntityC,EntityD_ID:EntityD [PK] #FK to EntityD);\(EntityC_ID:EntityC [PK] #FK to EntityC,A_ID:A [PK] #FK to A);
Many-To-Many relationship between ClassDiagram.Class>>EntityC  and ClassDiagram.Class>>A: \(EntityC_ID:EntityC [PK] #FK to EntityC,EntityD_ID:EntityD [PK] #FK to EntityD);\(EntityC_ID:EntityC [PK] #FK to EntityC,A_ID:A [PK] #FK to A);\(EntityC_ID:EntityC [PK] #FK to EntityC,A_ID:A [PK] #FK to A);
One-To-One relationship between ClassDiagram.Class>>EntityD2  to ClassDiagram.Class>>EntityD represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>EntityC  and ClassDiagram.Class>>EntityD: \(EntityC_ID:EntityC [PK] #FK to EntityC,EntityD_ID:EntityD [PK] #FK to EntityD);
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityD represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>EntityC  and ClassDiagram.Class>>A: \(EntityC_ID:EntityC [PK] #FK to EntityC,EntityD_ID:EntityD [PK] #FK to EntityD);\(EntityC_ID:EntityC [PK] #FK to EntityC,A_ID:A [PK] #FK to A);
Many-To-Many relationship between ClassDiagram.Class>>EntityC  and ClassDiagram.Class>>A: \(EntityC_ID:EntityC [PK] #FK to EntityC,EntityD_ID:EntityD [PK] #FK to EntityD);\(EntityC_ID:EntityC [PK] #FK to EntityC,A_ID:A [PK] #FK to A);\(EntityC_ID:EntityC [PK] #FK to EntityC,A_ID:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>FGManager  to ClassDiagram.Class>>Collection<FGEmployee>;
Many-To-One relationship from ClassDiagram.Class>>FGEmployee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dept;
One-To-One relationship between ClassDiagram.Class>>FGEmployee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>address;
Many-To-One relationship from ClassDiagram.Class>>FGEmployee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>manager;
One-To-One relationship between ClassDiagram.Class>>ExplicitFieldAccess  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>f4;
One-To-One relationship between ClassDiagram.Class>>ExplicitFieldAccess  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>f5;
One-To-One relationship between ClassDiagram.Class>>ExplicitFieldAccessMixed  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>f5;
One-To-One relationship between ClassDiagram.Class>>ExplicitPropertyAccess  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>f5;
One-To-One relationship between ClassDiagram.Class>>ExplicitPropertyAccess  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>f6;
Many-To-One relationship from ClassDiagram.Class>>MdrTestEntity  to ClassDiagram.Class>>mdrtestentity represented by ClassDiagram.Atrribute>>manytoone;
One-To-Many relationship from ClassDiagram.Class>>MdrTestEntity  to ClassDiagram.Class>>List<MdrTestEntity>;
One-To-One relationship between ClassDiagram.Class>>ImplicitFieldAccessSubclass  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>base;
A: implicitfieldaccesssubclass_A(implicitfieldaccesssubclassID:implicitfieldaccesssubclass [PK] #FK to implicitfieldaccesssubclass,AID:A [PK] #FK to A);
One-To-One relationship between ClassDiagram.Class>>ImplicitFieldAccessBase  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>one2onerelation;
One-To-Many relationship from ClassDiagram.Class>>ImplicitFieldAccessBase  to ClassDiagram.Class>>Collection<ExplicitFieldAccess>;
One-To-Many relationship from ClassDiagram.Class>>ImplicitFieldAccessBase  to ClassDiagram.Class>>List<ExplicitFieldAccess>;
One-To-Many relationship from ClassDiagram.Class>>ImplicitFieldAccessBase  to ClassDiagram.Class>>Set<ExplicitFieldAccess>;
A: implicitfieldaccessbase_A(implicitfieldaccessbaseID:implicitfieldaccessbase [PK] #FK to implicitfieldaccessbase,AID:A [PK] #FK to A);
A: implicitfieldaccessbase_A(implicitfieldaccessbaseID:implicitfieldaccessbase [PK] #FK to implicitfieldaccessbase,AID:A [PK] #FK to A);implicitfieldaccessbase_A(implicitfieldaccessbaseID:implicitfieldaccessbase [PK] #FK to implicitfieldaccessbase,AID:A [PK] #FK to A);
One-To-One relationship between ClassDiagram.Class>>ExplicitPropertyAccessMixed  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>f3;
One-To-One relationship between ClassDiagram.Class>>ExplicitPropertyAccessMixed  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>f6;
Many-To-One relationship from ClassDiagram.Class>>MetaTest2  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>field;
One-To-Many relationship from ClassDiagram.Class>>DetachmentOneManyParent  to ClassDiagram.Class>>List<DetachmentOneManyChild>;
Many-To-One relationship from ClassDiagram.Class>>DetachmentOneManyChild  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>DMCustomerInventory  to ClassDiagram.Class>>Item represented by ClassDiagram.Atrribute>>item;
Many-To-One relationship from ClassDiagram.Class>>DMCustomerInventory  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>customer;
Many-To-One relationship from ClassDiagram.Class>>SimpleC  to ClassDiagram.Class>>simpleb represented by ClassDiagram.Atrribute>>b_id;
Many-To-One relationship from ClassDiagram.Class>>SimpleB  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>a_id;
One-To-Many relationship from ClassDiagram.Class>>SimpleB  to ClassDiagram.Class>>Set<SimpleC>;
One-To-Many relationship from ClassDiagram.Class>>DMCustomer  to ClassDiagram.Class>>List<DMCustomerInventory>;
Many-To-One relationship from ClassDiagram.Class>>NoDetachedStateEntityFieldAccess  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>relationship;
One-To-One relationship between ClassDiagram.Class>>SimpleA  to ClassDiagram.Class>>simpleref represented by ClassDiagram.Atrribute>>ref;
One-To-Many relationship from ClassDiagram.Class>>SimpleA  to ClassDiagram.Class>>Set<SimpleB>;
Many-To-One relationship from ClassDiagram.Class>>EmbeddableSuperSub  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>sub;
Many-To-One relationship from ClassDiagram.Class>>EmbeddableSuperSub  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>sup;
One-To-One relationship between ClassDiagram.Class>>AnnoTest2  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>inverseoneone;
Many-To-One relationship from ClassDiagram.Class>>AnnoTest2  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>pk;
Many-To-Many relationship between ClassDiagram.Class>>AnnoTest2  and ClassDiagram.Class>>A: annotest2_manymany(many_pk1:AnnoTest2 [PK] #FK to AnnoTest2,manye_pk:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>Store1  to ClassDiagram.Class>>site1 represented by ClassDiagram.Atrribute>>site;
One-To-Many relationship from ClassDiagram.Class>>Site  to ClassDiagram.Class>>List<Store>;
One-To-One relationship between ClassDiagram.Class>>AnnoTest3  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>suboneone;
Many-To-One relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>site represented by ClassDiagram.Atrribute>>site.partyid;
One-To-One relationship between ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>selfoneone;
One-To-One relationship between ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>pkjoinselfoneone;
One-To-One relationship between ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>oneone;
One-To-One relationship between ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>othertableoneone;
One-To-One relationship between ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>inverseowneroneone;
One-To-Many relationship from ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>Set<AnnoTest2>;
One-To-Many relationship from ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>Set<AnnoTest2>;
Many-To-Many relationship between ClassDiagram.Class>>AnnoTest1  and ClassDiagram.Class>>A: annotest1_manymany(many_pk:AnnoTest1 [PK] #FK to AnnoTest1,many_pk1:A [PK] #FK to A);
null: annotest1_manymany(many_pk:AnnoTest1 [PK] #FK to AnnoTest1,many_pk1:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>Map<Integer,Flat1>;
One-To-Many relationship from ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>Map<Integer,Flat1>;
One-To-Many relationship from ClassDiagram.Class>>AnnoTest1  to ClassDiagram.Class>>Map<String,AnnoTest2>;
Many-To-One relationship from ClassDiagram.Class>>EmbeddedIdEntity  to ClassDiagram.Class>>EmbeddedIdEntity represented by ClassDiagram.Atrribute>>relation;
Many-To-One relationship from ClassDiagram.Class>>EmbeddedIdEntity  to ClassDiagram.Class>>EmbeddedIdEntity represented by ClassDiagram.Atrribute>>epk1;
One-To-Many relationship from ClassDiagram.Class>>Site1  to ClassDiagram.Class>>List<Store1>;
Many-To-Many relationship between ClassDiagram.Class>>OrderByEntity  and ClassDiagram.Class>>Order: orderby_pkrels(rel_id:OrderByEntity [PK] #FK to OrderByEntity,rel_id:Order [PK] #FK to Order);
Many-To-Many relationship between ClassDiagram.Class>>OrderByEntity  and ClassDiagram.Class>>Order: orderby_pkrels(rel_id:OrderByEntity [PK] #FK to OrderByEntity,rel_id:Order [PK] #FK to Order);orderby_stringrels(rel_id:OrderByEntity [PK] #FK to OrderByEntity,rel_id:Order [PK] #FK to Order);
One-To-One relationship between ClassDiagram.Class>>Entity1  to ClassDiagram.Class>>Entity2 represented by ClassDiagram.Atrribute>>field;
One-To-One relationship between ClassDiagram.Class>>Entity1  to ClassDiagram.Class>>Entity2 represented by ClassDiagram.Atrribute>>field;
Many-To-One relationship from ClassDiagram.Class>>PColl_EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>m2oc;
Many-To-One relationship from ClassDiagram.Class>>OrderedOneManyChild  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>Purchase  to ClassDiagram.Class>>Collection<Order>;
One-To-Many relationship from ClassDiagram.Class>>CachedManager  to ClassDiagram.Class>>Collection<CachedEmployee>;
Many-To-One relationship from ClassDiagram.Class>>CachedEmployee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>manager;
One-To-One relationship between ClassDiagram.Class>>Order  to ClassDiagram.Class>>Item represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>OrderedOneManyParent  to ClassDiagram.Class>>List<OrderedOneManyChild>;
One-To-Many relationship from ClassDiagram.Class>>CachedEntityStatistics  to ClassDiagram.Class>>Set<CachedEntityStatistics>;
One-To-Many relationship from ClassDiagram.Class>>CachedEntityStatistics  to ClassDiagram.Class>>Set<CachedEntityStatistics>;
One-To-One relationship between ClassDiagram.Class>>Phone  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>owner;
Many-To-One relationship from ClassDiagram.Class>>SelfReferencingCacheTestObject  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>o;
Many-To-One relationship from ClassDiagram.Class>>CacheObjectJ  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>e;
One-To-One relationship between ClassDiagram.Class>>RuntimeTest1  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>//transactionalonlytransfield;
One-To-One relationship between ClassDiagram.Class>>RuntimeTest1  to ClassDiagram.Class>>RuntimeTest1 represented by ClassDiagram.Atrribute>>//relationsselfoneone;
One-To-Many relationship from ClassDiagram.Class>>RuntimeTest1  to ClassDiagram.Class>>Set<RuntimeTest1>;
EntityF: m2mentitye_EntityF(m2mentityeID:m2mentitye [PK] #FK to m2mentitye,EntityFID:EntityF [PK] #FK to EntityF);
Many-To-One relationship from ClassDiagram.Class>>CacheObjectA  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>relatedobj;
Many-To-Many relationship between ClassDiagram.Class>>CacheObjectA  and ClassDiagram.Class>>A: cache_as(id:CacheObjectA [PK] #FK to CacheObjectA,element:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>CacheObjectA  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>relatedb;
One-To-One relationship between ClassDiagram.Class>>CacheObjectA  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>relatedinterface;
One-To-One relationship between ClassDiagram.Class>>CascadeParent  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>child;
One-To-One relationship between ClassDiagram.Class>>ManagedInterfaceOwner  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>iface;
Many-To-One relationship from ClassDiagram.Class>>CascadesEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>none;
Many-To-One relationship from ClassDiagram.Class>>CascadesEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>all;
Many-To-One relationship from ClassDiagram.Class>>CascadesEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dependent;
Many-To-Many relationship between ClassDiagram.Class>>CascadesEntity  and ClassDiagram.Class>>A: cascades_none_coll(owner:CascadesEntity [PK] #FK to CascadesEntity,A_ID:A [PK] #FK to A);
Many-To-Many relationship between ClassDiagram.Class>>CascadesEntity  and ClassDiagram.Class>>A: cascades_none_coll(owner:CascadesEntity [PK] #FK to CascadesEntity,A_ID:A [PK] #FK to A);cascades_all_coll(owner:CascadesEntity [PK] #FK to CascadesEntity,A_ID:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>Node  to ClassDiagram.Class>>List<Node>;
One-To-One relationship between ClassDiagram.Class>>XmlOverrideToOneEntity  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>othero2o;
Many-To-One relationship from ClassDiagram.Class>>XmlOverrideToOneEntity  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>otherm2o;
One-To-One relationship between ClassDiagram.Class>>CascadePersistEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>other;
Many-To-One relationship from ClassDiagram.Class>>Edge  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>source;
Many-To-One relationship from ClassDiagram.Class>>Edge  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>target;
EntityB: pudentityae01_EntityB(pudentityae01ID:pudentityae01 [PK] #FK to pudentityae01,EntityBID:EntityB [PK] #FK to EntityB);
One-To-Many relationship from ClassDiagram.Class>>PUDEntityAE01  to ClassDiagram.Class>>Collection<PUDEntityB>;
Many-To-One relationship from ClassDiagram.Class>>PUDEntityAE01  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>m2o;
One-To-One relationship between ClassDiagram.Class>>PUDEntityAE01  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>o2o;
EntityB: pudentitya01_EntityB(pudentitya01ID:pudentitya01 [PK] #FK to pudentitya01,EntityBID:EntityB [PK] #FK to EntityB);
One-To-Many relationship from ClassDiagram.Class>>PUDEntityA01  to ClassDiagram.Class>>Collection<PUDEntityB>;
Many-To-One relationship from ClassDiagram.Class>>PUDEntityA01  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>m2o;
One-To-One relationship between ClassDiagram.Class>>PUDEntityA01  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>o2o;
One-To-Many relationship from ClassDiagram.Class>>Vertex  to ClassDiagram.Class>>List<Edge>;
One-To-Many relationship from ClassDiagram.Class>>Vertex  to ClassDiagram.Class>>List<Edge>;
Many-To-One relationship from ClassDiagram.Class>>Vertex  to ClassDiagram.Class>>X represented by ClassDiagram.Atrribute>>type;
One-To-Many relationship from ClassDiagram.Class>>VertexType  to ClassDiagram.Class>>List<Vertex>;
One-To-One relationship between ClassDiagram.Class>>BaseClass5  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>List<Employee>;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>department;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>List<Employee>;
Many-To-One relationship from ClassDiagram.Class>>RegularUser  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Admin  to ClassDiagram.Class>>Set<RegularUser>;
One-To-One relationship between ClassDiagram.Class>>SubclassH  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>RelationOwner  to ClassDiagram.Class>>Collection<Superclass>;
Many-To-One relationship from ClassDiagram.Class>>Translation  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Translatable  to ClassDiagram.Class>>Set<Translation>;
Many-To-One relationship from ClassDiagram.Class>>Contractor  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>oid;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>java.util.Collection<Contractor>;
Many-To-One relationship from ClassDiagram.Class>>ParttimeEmployee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>oid;
Many-To-One relationship from ClassDiagram.Class>>FulltimeEmployee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>oid;
Many-To-One relationship from ClassDiagram.Class>>UMLType  to ClassDiagram.Class>>package represented by ClassDiagram.Atrribute>>ownerpackage;
One-To-Many relationship from ClassDiagram.Class>>UMLPackage  to ClassDiagram.Class>>List<UMLType>;
Book: subject_Book(subjectID:subject [PK] #FK to subject,BookID:Book [PK] #FK to Book);
Many-To-One relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>borrower represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Volunteer  to ClassDiagram.Class>>borrower represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Borrower  to ClassDiagram.Class>>Set<Book>;
One-To-One relationship between ClassDiagram.Class>>Borrower  to ClassDiagram.Class>>volunteer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>manager;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Company  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Set<Employee>;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>home;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Collection<ProductOrder>;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>shipping;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>billing;
A: product_A(productID:product [PK] #FK to product,AID:A [PK] #FK to A);
One-To-One relationship between ClassDiagram.Class>>LineItem  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>ProductOrder  to ClassDiagram.Class>>List<LineItem>;
One-To-One relationship between ClassDiagram.Class>>ProductOrder  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Collection<ProductOrder>;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>shipping;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>billing;
One-To-One relationship between ClassDiagram.Class>>Company  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Set<Employee>;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>manager;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
A: product_A(productID:product [PK] #FK to product,AID:A [PK] #FK to A);
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>home;
One-To-One relationship between ClassDiagram.Class>>LineItem  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>ProductOrder  to ClassDiagram.Class>>List<LineItem>;
One-To-One relationship between ClassDiagram.Class>>ProductOrder  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>LineItem  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Company  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Set<Employee>;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>manager;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Collection<ProductOrder>;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>shipping;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>billing;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>home;
One-To-Many relationship from ClassDiagram.Class>>ProductOrder  to ClassDiagram.Class>>List<LineItem>;
One-To-One relationship between ClassDiagram.Class>>ProductOrder  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
A: product_A(productID:product [PK] #FK to product,AID:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Collection<ProductOrder>;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>shipping;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>billing;
A: product_A(productID:product [PK] #FK to product,AID:A [PK] #FK to A);
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>manager;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>home;
One-To-Many relationship from ClassDiagram.Class>>ProductOrder  to ClassDiagram.Class>>List<LineItem>;
One-To-One relationship between ClassDiagram.Class>>ProductOrder  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>LineItem  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Company  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Set<Employee>;
One-To-One relationship between ClassDiagram.Class>>RuntimeTest1  to ClassDiagram.Class>>RuntimeTest1 represented by ClassDiagram.Atrribute>>//relationsselfoneone;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>useridentity represented by ClassDiagram.Atrribute>>userident;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Queue<IEmployee>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>LinkedList<Location>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Queue<Product>;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dept;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Set<IEmployee>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Set<Location>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Set<Product>;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dept;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>useridentity represented by ClassDiagram.Atrribute>>userident;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>useridentity represented by ClassDiagram.Atrribute>>userident;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>PriorityQueue<IEmployee>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>PriorityQueue<Location>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>PriorityQueue<Product>;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dept;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>useridentity represented by ClassDiagram.Atrribute>>userident;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dept;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>TreeSet<IEmployee>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>TreeSet<Location>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>SortedSet<Product>;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>useridentity represented by ClassDiagram.Atrribute>>userident;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dept;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>List<IEmployee>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>List<Location>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>List<Product>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Vector<IEmployee>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Vector<Location>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Vector<Product>;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>useridentity represented by ClassDiagram.Atrribute>>userident;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dept;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>LinkedHashSet<IEmployee>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>LinkedHashSet<Location>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>LinkedHashSet<Product>;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>dept;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>useridentity represented by ClassDiagram.Atrribute>>userident;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>contact;
One-To-Many relationship from ClassDiagram.Class>>Annuity  to ClassDiagram.Class>>List<IPayout>;
One-To-Many relationship from ClassDiagram.Class>>Annuity  to ClassDiagram.Class>>List<IRider>;
Many-To-Many relationship between ClassDiagram.Class>>Annuity  and ClassDiagram.Class>>A: annuity_payor(fk_annuity_id:Annuity [PK] #FK to Annuity,fk_payor_id:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>Payout  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>annuity;
One-To-Many relationship from ClassDiagram.Class>>TreeNode  to ClassDiagram.Class>>List<TreeNode>;
Many-To-One relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Parent  to ClassDiagram.Class>>Child represented by ClassDiagram.Atrribute>>child;
One-To-One relationship between ClassDiagram.Class>>Parent  to ClassDiagram.Class>>Child represented by ClassDiagram.Atrribute>>childbi;
Many-To-One relationship from ClassDiagram.Class>>Parent  to ClassDiagram.Class>>Child represented by ClassDiagram.Atrribute>>idchild;
One-To-Many relationship from ClassDiagram.Class>>B  to ClassDiagram.Class>>Set<C>;
One-To-Many relationship from ClassDiagram.Class>>B  to ClassDiagram.Class>>Set<A>;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>Collection<Painter>;
One-To-One relationship between ClassDiagram.Class>>PChildBi  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Item   Descriminator>>ITEM_TYPE: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>UnenhancedPropertyAccess  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>UnenhancedFieldAccess  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>UnenhancedFieldAccessPrimitiveWrapper  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>RecursivelyEmbeddedPC  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>SequenceAssigned  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>ModRuntimeTest1  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>RuntimeTest1  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>SuperPropertyEntity  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>SuperFieldEntity  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>CharAbstractEntity   Descriminator>>DISC_COL: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>StringAbstractEntity   Descriminator>>DISC_COL: String ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Person  Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>IntegerAbstractEntity   Descriminator>>DISC_COL: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>CompUser  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Textile  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Course  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>RuntimeTest1  SubClass>>EnhancedSubClass Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>AutoIncrementPC1  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>EagerPC  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>RuntimeTest1  SubClass>>EnhancedSubClass Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>HelperPC3  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Merchandise  SubClass>>FetchGroupTestObjectChild ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Person  ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Game  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Part   Descriminator>>PARTTYPE: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Employee   Descriminator>>TYPE: String ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>TablePerClass1  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>AnnoTest1  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Flat1   Descriminator>>EJB_CLS: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>BaseEntity  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Employee   Descriminator>>TYPE: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>CompUser  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Employee   Descriminator>>EMP_TYPE: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>ManyOneEntity  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>ModRuntimeTest1  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>CrtRequisicaoEntity  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>ChildClass  Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>EntityAInverseEager   Descriminator>>TYPE: String ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>ChildChildClass  Inheritance based on JOINED strategy (DISTINCTION): ROOT>>ParentClass  Inheritance based on JOINED strategy (DISTINCTION): ROOT>>InheritanceHierarchyAbstract  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>IncompleteRelationshipParentEntity  Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Car2   Descriminator>>discrcol: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Animal   Descriminator>>\: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Car   Descriminator>>discrcol: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Animal2   Descriminator>>\: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>FGEmployee   Descriminator>>EMP_TYPE: String ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Schedule  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Employee  Inheritance based on JOINED strategy (DISTINCTION): ROOT>>AnnoTest1  ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>TablePerClass1  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Flat1   Descriminator>>EJB_CLS: String ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Employee  Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Schedule  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>EntityA  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>EntityB  ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>CachedPerson  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>CacheObjectB   Descriminator>>TYP: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>CacheObjectA  SubClass>>PartTimeEmployee SubClass>>FullTimeEmployee SubClass>>FullTimeEmployee SubClass>>PartTimeEmployee SubClass>>Exempt SubClass>>ContractEmployee SubClass>>ContractEmployee SubClass>>PTEmployee SubClass>>FTEmployee SubClass>>Contractor SubClass>>ParttimeEmployee SubClass>>FulltimeEmployee SubClass>>FullTimeEmployee SubClass>>PartTimeEmployee SubClass>>FullTimeEmployee SubClass>>PartTimeEmployee SubClass>>FullTimeEmployee SubClass>>PartTimeEmployee SubClass>>FullTimeEmployee SubClass>>PartTimeEmployee Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>CacheObjectE   Descriminator>>TYP: String ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>PIdJTSDMSCRootEntity  Inheritance based on JOINED strategy (DISTINCTION): ROOT>>PIdJTCDMSCRootEntity  Inheritance based on JOINED strategy (DISTINCTION): ROOT>>PIdJTIDMSCRootEntity  Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>PIdSTCDMSCRootEntity   Descriminator>>TYPE: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>PIdSTIDMSCRootEntity  SubClass>>IndoorGame SubClass>>Chess SubClass>>Scrabble  Descriminator>>TYPE: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>PIdSTSDMSCRootEntity   Descriminator>>TYPE: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>ComputerUser  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Employee  Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Superclass  ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Translatable  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Person  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Employee  Inheritance based on JOINED strategy (DISTINCTION): ROOT>>UMLNamed  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>AbstractBase  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Employee  Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Person  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Person  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Person  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Person  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Person  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Annuity   Descriminator>>DTYPE: String ;
