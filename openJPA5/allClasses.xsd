<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="isolationlevel" >
      <xs:sequence>
        <xs:element name="_connectionconstant" type="xs:long" />
        <xs:element name="_names" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eagerfetchmode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcfetchplan" >
      <xs:complexContent>
       <xs:extension base="fetchplan">
         <xs:sequence>
          <xs:element name="/***usethe{@linkfetchmode}enuminstead.*/eager_none" type="xs:long" />
          <xs:element name="/***usethe{@linkfetchmode}enuminstead.*/eager_join" type="xs:long" />
          <xs:element name="/***usethe{@linkfetchmode}enuminstead.*/eager_parallel" type="xs:long" />
          <xs:element name="/***usethe{@linklrssizealgorithm}enuminstead.*/size_unknown" type="xs:long" />
          <xs:element name="/***usethe{@linklrssizealgorithm}enuminstead.*/size_last" type="xs:long" />
          <xs:element name="/***usethe{@linklrssizealgorithm}enuminstead.*/size_query" type="xs:long" />
          <xs:element name="/***usethe{@linkjoinsyntax}enuminstead.*/syntax_sql92" type="xs:long" />
          <xs:element name="/***usethe{@linkjoinsyntax}enuminstead.*/syntax_traditional" type="xs:long" />
          <xs:element name="/***usethe{@linkjoinsyntax}enuminstead.*/syntax_database" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkey" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keycolumns" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unique" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcpersistenceproductderivation" >
      <xs:complexContent>
       <xs:extension base="abstractproductderivation">
         <xs:sequence>
          <xs:element name=".*/_hints" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmappingoverride" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xsecondarytables" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keyclasscriteria" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lrssizealgorithm" >
      <xs:sequence>
        <xs:element name="lrsconstant" type="xs:long" />
        <xs:element name="_names" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keyembeddedmapping" >
      <xs:sequence>
        <xs:element name="true" type="xs:string" />
        <xs:element name="false" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchdirection" >
      <xs:sequence>
        <xs:element name="resultsetconstant" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keynonpolymorphic" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keyindex" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elementindex" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keyforeignkey" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xjoincolumns" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elementstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versioncolumn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsettype" >
      <xs:sequence>
        <xs:element name="resultsetconstant" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlpersistencemappingparser" >
      <xs:complexContent>
       <xs:extension base="xmlpersistencemetadataparser">
         <xs:sequence>
          <xs:element name="_elems" type="xs:anyType" />
          <xs:element name="_loc" type="localizer" nillable="true" minOccurs="0" />
          <xs:element name="_override" type="xs:string" />
          <xs:element name="_schema" type="xs:string" />
          <xs:element name="_coltable" type="xs:string" />
          <xs:element name="_secondarytable" type="xs:string" />
          <xs:element name="_cols" type="xs:anyType" />
          <xs:element name="_joincols" type="xs:anyType" />
          <xs:element name="_supjoincols" type="xs:anyType" />
          <xs:element name="_lob" type="xs:anyType" />
          <xs:element name="_temporal" type="xs:anyType" />
          <xs:element name="_unique" type="xs:anyType" />
          <xs:element name="_disctype" type="xs:anyType" />
          <xs:element name="_disccol" type="xs:anyType" />
          <xs:element name="_resultidx" type="xs:long" />
          <xs:element name="_dict" type="xs:anyType" />
          <xs:element name="//foreignkeyinfo_foreignkey" type="xs:anyType" />
          <xs:element name="_columnnameslist" type="xs:anyType" />
          <xs:element name="_columnnames" type="xs:string" />
          <xs:element name="_versioncolumnslist" type="xs:anyType" />
          <xs:element name="_deferredmappings" type="xs:anyType" />
          <xs:element name="/***setsreferencecolumnnameofthegivencolumntakingintoaccount*thatthegivenreferencenamethatbeginswithasinglequoterepresents*specialmeaningofaconstantjoincolumnandhencenottobedelimited.*@paramcol*@paramrefcolumnname*@see<ahref" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xtable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedmapping" >
      <xs:sequence>
        <xs:element name="true" type="xs:string" />
        <xs:element name="false" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elementjoincolumn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassfetchmode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingtag" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingoverrides" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonpolymorphictype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmappingoverrides" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="index" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keystrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elementclasscriteria" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistencemappingfactory" >
      <xs:complexContent>
       <xs:extension base="persistencemetadatafactory">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columns" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keyjoincolumn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elementcolumn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistencemappingdefaults" >
      <xs:complexContent>
       <xs:extension base="mappingdefaultsimpl">
         <xs:sequence>
          <xs:element name="_prependfieldnametojointableinversejoincolumns" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classcriteria" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlpersistencemappingserializer" >
      <xs:complexContent>
       <xs:extension base="xmlpersistencemetadataserializer">
         <xs:sequence>
          <xs:element name="type_resultmap" type="xs:long" />
          <xs:element name="_names" type="xs:anyType" />
          <xs:element name="_results" type="xs:anyType" />
          <xs:element name="_sync" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationpersistencemappingparser" >
      <xs:complexContent>
       <xs:extension base="annotationpersistencemetadataparser">
         <xs:sequence>
          <xs:element name="true" type="xs:long" />
          <xs:element name="false" type="xs:long" />
          <xs:element name="_loc" type="localizer" nillable="true" minOccurs="0" />
          <xs:element name="_tags" type="xs:anyType" />
          <xs:element name="_dict" type="xs:anyType" />
          <xs:element name="/***setsreferencecolumnnameofthegivencolumntakingintoaccount*thatthegivenreferencenamethatbeginswithasinglequoterepresents*specialmeaningofaconstantjoincolumnandhencenottobedelimited.*@paramcol*@paramrefcolumnname*@see<ahref" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elementcolumns" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingoverride" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elementembeddedmapping" >
      <xs:sequence>
        <xs:element name="true" type="xs:string" />
        <xs:element name="false" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchmode" >
      <xs:sequence>
        <xs:element name="eagerfetchconstant" type="xs:long" />
        <xs:element name="_names" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versioncolumns" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elementforeignkey" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xjoincolumn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datastoreidcolumn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keyjoincolumns" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonpolymorphic" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discriminatorstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ordercolumn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcfetchplanimpl" >
      <xs:complexContent>
       <xs:extension base="fetchplanimpl">
         <xs:sequence>
          <xs:element name="_fetch" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elementjoincolumns" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keycolumn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xsecondarytable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xembeddedmapping" >
      <xs:sequence>
        <xs:element name="true" type="xs:string" />
        <xs:element name="false" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elementnonpolymorphic" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationpersistencemappingserializer" >
      <xs:complexContent>
       <xs:extension base="annotationpersistencemetadataserializer">
         <xs:sequence>
          <xs:element name="type_resultmap" type="xs:long" />
          <xs:element name="_results" type="xs:anyType" />
          <xs:element name="_sync" type="xs:anyType" />
          <xs:element name="_rsmannos" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeyaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="containertable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinsyntax" >
      <xs:sequence>
        <xs:element name="joinsyntaxconstant" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="j2.security.test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="j2.security.jse" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="access-pudef-field-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="access-def-field-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="access-pudef-prop-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="access-def-prop-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="access-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed-assoc-over-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed-lazy-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed-lazy-persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed-persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detach-all-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="no-detach-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detach-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence-2_0-orm-1_0" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm_2_0" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toone-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence-2_0-orm-2_0" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence-without-xsd" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence-2_0" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence-2_0-no-pu" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence-1_0-orm-2_0" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequence-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="create-after-metadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="drop" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="create-mssql" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="create" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="create-postgresql" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="drop-after-metadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="create-oracle" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order-orm-3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order-orm-2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="named-constraint-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapsid-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence-config" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence-2_0-config" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arrays-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pudefaults2-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listener-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonstandard-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version-columns-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="caching-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreign-key-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pudefaults-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="table-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="caching-persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delim_persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascade-persist" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="caching-persistence-invalid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetch-groups-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleprovider" >
      <xs:complexContent>
       <xs:extension base="abstractinstrumentationprovider">
         <xs:sequence>
          <xs:element name="simple_instrument_aliases" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="brokerlevelinstrument" >
      <xs:complexContent>
       <xs:extension base="abstractinstrument">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="_initialized" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qcinstrument" >
      <xs:complexContent>
       <xs:extension base="abstractquerycacheinstrument">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondprovider" >
      <xs:complexContent>
       <xs:extension base="abstractinstrumentationprovider">
         <xs:sequence>
          <xs:element name="instrument_aliases" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinstrumentationprovider" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="single_provider" type="xs:string" />
          <xs:element name="multi_provider" type="xs:string" />
          <xs:element name="dc_provider" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dcinstrument" >
      <xs:complexContent>
       <xs:extension base="abstractdatacacheinstrument">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qscinstrument" >
      <xs:complexContent>
       <xs:extension base="abstractpreparedquerycacheinstrument">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicprovider" >
      <xs:complexContent>
       <xs:extension base="abstractinstrumentationprovider">
         <xs:sequence>
          <xs:element name="dynamic_instrument_aliases" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpletransaction" >
      <xs:sequence>
        <xs:element name="synchs" type="xs:anyType" />
        <xs:element name="rollbackcause" type="xs:anyType" />
        <xs:element name="volatilestatus" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="containertest" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="runtime" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpletransactionmanager" >
      <xs:sequence>
        <xs:element name="txns" type="simpletransaction" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtamanagedruntime" >
      <xs:sequence>
        <xs:element name="txm" type="simpletransactionmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsjvmremotecommitprovider" >
      <xs:complexContent>
       <xs:extension base="abstractcachedemftestcase">
         <xs:sequence>
          <xs:element name="emf1" type="xs:anyType" />
          <xs:element name="emf2" type="xs:anyType" />
          <xs:element name="listen1" type="listenerimpl" nillable="true" minOccurs="0" />
          <xs:element name="listen2" type="listenerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlifecyclelistener" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testm21universion" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="salesid" type="xs:string" />
          <xs:element name="marketingid" type="xs:string" />
          <xs:element name="employee1id" type="xs:string" />
          <xs:element name="employee2id" type="xs:string" />
          <xs:element name="employee3id" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testforeignkeycountviolation" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_conf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="story" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="task" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnoforeignkeyviolation" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="" type="entitya" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityb" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityc" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityd" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="m21unidepartment" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="costcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="m21uniemployee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="department" type="m21unidepartment" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="salary" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="entityc" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityf" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="listg" type="entityg" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optselectentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="eageronetoone" type="optselectentity" nillable="true" minOccurs="0" />
        <xs:element name="eageronetooneowner" type="optselectentity" nillable="true" minOccurs="0" />
        <xs:element name="lazyonetoone" type="optselectentity" nillable="true" minOccurs="0" />
        <xs:element name="lazyonetooneowner" type="optselectentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testinsertorder" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="emptablename" type="xs:string" />
          <xs:element name="tasktablename" type="xs:string" />
          <xs:element name="storytablename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="entityd" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityg" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="entityf" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="m2mbiemployee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="departments" type="m2mbidepartment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="salary" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="m2mbidepartment" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="employees" type="m2mbiemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="costcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcollectiontracking" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_conf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="task" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="stories" type="story" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitye" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="tasks" type="task" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testjdbcstoreoptselect" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="props" type="xs:anyType" />
          <xs:element name="e1,e2" type="optselectentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testm2mbiversion" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="salesid" type="xs:string" />
          <xs:element name="marketingid" type="xs:string" />
          <xs:element name="employee1id" type="xs:string" />
          <xs:element name="employee2id" type="xs:string" />
          <xs:element name="employee3id" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityd" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="entitya" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsnakecaseddl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdelimitidentifiers" >
      <xs:complexContent>
       <xs:extension base="derbydictionary">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmappingtooltemporal" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitybool" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="dummy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmappingtoolautodelete" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="_conf" type="xs:anyType" />
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmappingtoolrefresh" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcalendarfield" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityboolchar" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="dummy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inputstreamwrapper" >
      <xs:complexContent>
       <xs:extension base="inputstream">
         <xs:sequence>
          <xs:element name="is" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readerwrapper" >
      <xs:complexContent>
       <xs:extension base="reader">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinputstreamlob" >
      <xs:complexContent>
       <xs:extension base="abstractlobtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlobtest" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="firsttestexecuted" type="xs:anyType" />
          <xs:element name="supporteddatabases" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inputstreamlobentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="stream" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readerlobentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="stream" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testreaderlob" >
      <xs:complexContent>
       <xs:extension base="abstractlobtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testbooleanvalue" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithstoredprocedure" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="procedures" >
      <xs:sequence>
        <xs:element name="simplecalled" type="xs:anyType" />
        <xs:element name="inparamseger" type="xs:long" />
        <xs:element name="inparams" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teststoredprocedure" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlcolentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="xmlcolumn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testoraclexmlcolumn" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="projectstr" type="xs:string" />
          <xs:element name="xmldata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="movie" >
      <xs:complexContent>
       <xs:extension base="item">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="duration" type="xs:anyType" />
          <xs:element name="" type="artist" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:complexContent>
       <xs:extension base="item">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="pagecount" type="xs:long" />
          <xs:element name="1" type="artist" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testquerysubclass" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="rating" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artist" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="books" type="book" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="movies" type="movie" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testbadversionfield" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testequivalentconfiguration" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="emf1" type="xs:anyType" />
          <xs:element name="_system" type="xs:anyType" />
          <xs:element name="old_style_url_key" type="xs:string" />
          <xs:element name="old_style_driver_key" type="xs:string" />
          <xs:element name="new_style_driver_key" type="xs:string" />
          <xs:element name="new_style_url_key" type="xs:string" />
          <xs:element name="keys" type="xs:string" />
          <xs:element name="//note:non-standardnamingbecauseanothertestintheharnessscansall//meta-inf/persistence.xmlandfailsasthisfilecontainsconflicting//propertykeysfortesting.persistence_unit" type="xs:string" />
          <xs:element name="old_style_unit_name" type="xs:string" />
          <xs:element name="new_style_unit_name" type="xs:string" />
          <xs:element name="mixed_style_unit_name" type="xs:string" />
          <xs:element name="conflict_style_unit_name" type="xs:string" />
          <xs:element name="system_configured_unit_name" type="xs:string" />
          <xs:element name="runtime_configured_unit_name" type="xs:string" />
          <xs:element name="url" type="xs:string" />
          <xs:element name="driver" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testanchorparsing" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testunenhancedfieldaccesswithrelationinstancebrokerserialization" >
      <xs:complexContent>
       <xs:extension base="abstractunenhancedrelationbrokerserializationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinstancegraphbrokerserialization" >
      <xs:complexContent>
       <xs:extension base="abstractbrokerserializationtest<manyoneentity>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testquerycompilationcache" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testunenhancedfieldaccessinstancebrokerserialization" >
      <xs:complexContent>
       <xs:extension base="abstractbrokerserializationtest<unenhancedfieldaccess>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbrokerserializationtest" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="deserialized" type="xs:anyType" />
          <xs:element name="testglobalrefreshcount" type="xs:long" />
          <xs:element name="deserialized" type="xs:anyType" />
          <xs:element name="testglobalbegincount" type="xs:long" />
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbrokerfactorylistenerregistry" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="persistcount" type="xs:long" />
          <xs:element name="begincount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testunenhancedpropertyaccessinstancebrokerserialization" >
      <xs:complexContent>
       <xs:extension base="abstractbrokerserializationtest<unenhancedpropertyaccess>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testentitymanagerfactorypool" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testenhancedinstancebrokerserialization" >
      <xs:complexContent>
       <xs:extension base="abstractbrokerserializationtest<simpleentity>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractunenhancedrelationbrokerserializationtest" >
      <xs:complexContent>
       <xs:extension base="abstractbrokerserializationtest<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbrokerfactoryeventmanager" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdynamicclassregistration" >
      <xs:complexContent>
       <xs:extension base="abstractcachedemftestcase">
         <xs:sequence>
          <xs:element name="emf1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testunenhancedpropertyaccesswithrelationinstancebrokerserialization" >
      <xs:complexContent>
       <xs:extension base="abstractunenhancedrelationbrokerserializationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbroker" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reservedwordsit" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="_emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unenhancedpropertyaccess" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="sf" type="xs:string" />
        <xs:element name="lazyfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unenhancedfieldaccess" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="lazyfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsimpleunenhancedquery" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatacachingandunenhancedpropertyaccess" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractunenhancedclasstest" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unenhancedpobject" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unenhancedfieldaccessprimitivewrapper" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="lazyfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unenhancedpropertyaccesssubclass" >
      <xs:complexContent>
       <xs:extension base="unenhancedpropertyaccess">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="related" type="unenhancedpropertyaccess" nillable="true" minOccurs="0" />
          <xs:element name="field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unenhancedmany" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="one" type="unenhancedone" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unenhancedunlistedreferer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="other" type="unenhancedunlistedclass" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unenhancedfieldaccessprimitivewrappersubclass" >
      <xs:complexContent>
       <xs:extension base="unenhancedfieldaccessprimitivewrapper">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="related" type="unenhancedfieldaccessprimitivewrapper" nillable="true" minOccurs="0" />
          <xs:element name="field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enhancedsubclass" >
      <xs:complexContent>
       <xs:extension base="enhancedsuperclass">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="valueinsubclass" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unenhancedbootstrapinstance2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testunenhancedfieldaccessprimitivewrapper" >
      <xs:complexContent>
       <xs:extension base="abstractunenhancedclasstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testunenhancedfieldaccess" >
      <xs:complexContent>
       <xs:extension base="abstractunenhancedclasstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unenhancedbootstrapinstance" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deviceid" >
      <xs:sequence>
        <xs:element name="usedconstructor" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="type" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="software" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hardware" >
      <xs:sequence>
        <xs:element name="serial" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testoptimizeidcopy" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hardwareid" >
      <xs:sequence>
        <xs:element name="usedconstructor" type="xs:anyType" />
        <xs:element name="serial" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="device" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="type" type="xs:long" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="softwareid" >
      <xs:sequence>
        <xs:element name="usedconstructor" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unenhancedone" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="many" type="unenhancedmany" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unenhancedcompoundpkfieldaccess" >
      <xs:sequence>
        <xs:element name="id0" type="xs:long" />
        <xs:element name="id1" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="restrictedmetadatarepository" >
      <xs:complexContent>
       <xs:extension base="metadatarepository">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="_excludedtypes" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unenhancedcompoundpkpropertyaccess" >
      <xs:sequence>
        <xs:element name="id0" type="xs:long" />
        <xs:element name="id1" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unenhancedcompoundpkfieldaccesssubclass" >
      <xs:complexContent>
       <xs:extension base="unenhancedcompoundpkfieldaccesssuperclass">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testenhancementconfiguration" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unenhancedidentityidpropertyaccess" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unenhancedsubtype" >
      <xs:complexContent>
       <xs:extension base="unenhancedtype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testunenhancedpropertyaccess" >
      <xs:complexContent>
       <xs:extension base="abstractunenhancedclasstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unenhancedunlistedclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unenhancedfieldaccesssubclass" >
      <xs:complexContent>
       <xs:extension base="unenhancedfieldaccess">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="related" type="unenhancedfieldaccess" nillable="true" minOccurs="0" />
          <xs:element name="field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpcenhancerenhancementcontractversion" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testunenhancedcompoundpksubclass" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testunenhancedonetomany" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unenhancedcompoundpkfieldaccesssuperclass" >
      <xs:sequence>
        <xs:element name="id0" type="xs:long" />
        <xs:element name="id1" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpcenhancerfindfield" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="field" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testunenhancedcompoundpk" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testclasshierarchyenhancement" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unenhancedtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enhancedsuperclass" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="valueinsuperclass" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testrelationtounlistedclass" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testenhancementwithmultiplepus" >
      <xs:complexContent>
       <xs:extension base="abstractcachedemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbegineventontransactionlistener" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inplaceauditor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditedentry" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="audited" type="xs:anyType" />
        <xs:element name="operation" type="xs:anyType" />
        <xs:element name="ts" type="xs:anyType" />
        <xs:element name="updatedfields" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testaudit" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="oid" type="xs:anyType" />
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="x" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:long" />
        <xs:element name="id_generator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testopenjpaidnotrecognizedmessage" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitye" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integerversionentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity9" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entityc" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entityd" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitye" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity5" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="e6" type="entity6" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity14" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="e14" type="entity14" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity10" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="collection" type="entity8" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="intcollection" type="xs:anyType" />
        <xs:element name="stringcollection" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="intversionentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="e2" type="timestampversionentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestampversionentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="e5" type="entity5" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity11" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity20" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="sql" type="xs:dateTime" />
        <xs:element name="sql" type="xs:dateTime" />
        <xs:element name="sql" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdetachcascade" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="compat" type="xs:anyType" />
          <xs:element name="//referencese14-nocascadee1" type="entity1" nillable="true" minOccurs="0" />
          <xs:element name="//referencese4-cascadealle3" type="entity3" nillable="true" minOccurs="0" />
          <xs:element name="//referencese5-cascadecleare4" type="entity4" nillable="true" minOccurs="0" />
          <xs:element name="//referencese6-nocascadee5" type="entity5" nillable="true" minOccurs="0" />
          <xs:element name="//referencese7-cascadecleare6" type="entity6" nillable="true" minOccurs="0" />
          <xs:element name="e7" type="entity7" nillable="true" minOccurs="0" />
          <xs:element name="//referencese9-cascadealle8" type="entity8" nillable="true" minOccurs="0" />
          <xs:element name="//samease8e8a" type="entity8" nillable="true" minOccurs="0" />
          <xs:element name="e9" type="entity9" nillable="true" minOccurs="0" />
          <xs:element name="-cascadealle10" type="entity10" nillable="true" minOccurs="0" />
          <xs:element name="e11" type="entity11" nillable="true" minOccurs="0" />
          <xs:element name="e12" type="entity12" nillable="true" minOccurs="0" />
          <xs:element name="-cascadealle13" type="entity13" nillable="true" minOccurs="0" />
          <xs:element name="e14" type="entity14" nillable="true" minOccurs="0" />
          <xs:element name="allentities" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityd" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity8" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="e9" type="entity9" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noversionentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity6" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="e7" type="entity7" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity13" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmergenostatemanager" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="args" type="xs:anyType" />
          <xs:element name="_ive" type="intversionentity" nillable="true" minOccurs="0" />
          <xs:element name="_nve" type="noversionentity" nillable="true" minOccurs="0" />
          <xs:element name="_integerve" type="integerversionentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdetachreloadprop" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="intver" type="intversionentity" nillable="true" minOccurs="0" />
          <xs:element name="tsver" type="timestampversionentity" nillable="true" minOccurs="0" />
          <xs:element name="nover" type="noversionentity" nillable="true" minOccurs="0" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="compat" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdetachstatecascade" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="compat" type="xs:anyType" />
          <xs:element name="" type="entitya" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityb" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityc" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityd" nillable="true" minOccurs="0" />
          <xs:element name="" type="entitye" nillable="true" minOccurs="0" />
          <xs:element name="list" type="entityc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="allentities" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdetachnoproxy" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="numentities" type="xs:long" />
          <xs:element name="proxy" type="xs:string" />
          <xs:element name="_" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity7" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializabledetachedstatemanager" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="z" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testserializabledetachedstatemanager" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdetachnocascade" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="compat" type="xs:anyType" />
          <xs:element name="e1" type="entity1" nillable="true" minOccurs="0" />
          <xs:element name="e7" type="entity7" nillable="true" minOccurs="0" />
          <xs:element name="e14" type="entity14" nillable="true" minOccurs="0" />
          <xs:element name="allentities" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdetachxml" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="passenger" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//manytomany(mappedby" type="automobile" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//one-2-manyautos" type="automobile" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="driver" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//onetooneauto" type="automobile" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="automobile" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="make" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="//manytomanypassengers" type="passenger" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="//onetooneprimary" type="driver" nillable="true" minOccurs="0" />
        <xs:element name="//manytoone" type="owner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity12" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="e4" type="entity4" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="globallistenerentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listenerinentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
        <xs:element name="transientprepersistcount" type="xs:long" />
        <xs:element name="transientpostpersistcount" type="xs:long" />
        <xs:element name="transientpreupdatecount" type="xs:long" />
        <xs:element name="transientpostupdatecount" type="xs:long" />
        <xs:element name="transientpreremovecount" type="xs:long" />
        <xs:element name="transientpostremovecount" type="xs:long" />
        <xs:element name="transientpostloadcount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmultiementitylisteners" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="skipped" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="duplicatelistenerentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postpersistentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="transientpostpersistcallbackcount" type="xs:long" />
        <xs:element name="transientidoncallback" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postloadlistenerentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="//thosefieldsareimportantforthetestsince//openjpawillloadthefulltableatonceifyouremovethemvalue2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postloadlistenerimpl" >
      <xs:sequence>
        <xs:element name="postloadvalue" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentitylisteners" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="entity_listener_entity" type="xs:long" />
          <xs:element name="global_listener_entity" type="xs:long" />
          <xs:element name="duplicate_listener_entity" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listenertestentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="perinstancelistener" >
      <xs:sequence>
        <xs:element name="beforestore" type="xs:long" />
        <xs:element name="afterstore" type="xs:long" />
        <xs:element name="afterload" type="xs:long" />
        <xs:element name="afterrefresh" type="xs:long" />
        <xs:element name="beforedirty" type="xs:long" />
        <xs:element name="afterdirty" type="xs:long" />
        <xs:element name="beforedirtyflushed" type="xs:long" />
        <xs:element name="afterdirtyflushed" type="xs:long" />
        <xs:element name="beforedelete" type="xs:long" />
        <xs:element name="afterdelete" type="xs:long" />
        <xs:element name="beforepersist" type="xs:long" />
        <xs:element name="afterpersist" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listenerimpl" >
      <xs:sequence>
        <xs:element name="prepersistcount" type="xs:long" />
        <xs:element name="postpersistcount" type="xs:long" />
        <xs:element name="preupdatecount" type="xs:long" />
        <xs:element name="postupdatecount" type="xs:long" />
        <xs:element name="preremovecount" type="xs:long" />
        <xs:element name="postremovecount" type="xs:long" />
        <xs:element name="postloadcount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="message" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="message" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
        <xs:element name="upd" type="xs:dateTime" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messagelistenerimpl" >
      <xs:sequence>
        <xs:element name="prepersistcount" type="xs:long" />
        <xs:element name="postpersistcount" type="xs:long" />
        <xs:element name="preupdatecount" type="xs:long" />
        <xs:element name="postupdatecount" type="xs:long" />
        <xs:element name="preremovecount" type="xs:long" />
        <xs:element name="postremovecount" type="xs:long" />
        <xs:element name="postloadcount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="msclistenerentity" >
      <xs:complexContent>
       <xs:extension base="entitylistenermappedsuperclass">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="value" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmscentitylisteners" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="msc_listener_entity" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="exceptionsfromcallbacksentity" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="version" type="xs:long" />
          <xs:element name="throwonprepersist" type="xs:anyType" />
          <xs:element name="throwonpostpersist" type="xs:anyType" />
          <xs:element name="throwonpreupdate" type="xs:anyType" />
          <xs:element name="throwonpostupdate" type="xs:anyType" />
          <xs:element name="throwonpostload" type="xs:anyType" />
          <xs:element name="throwonpreremove" type="xs:anyType" />
          <xs:element name="throwonpostremove" type="xs:anyType" />
          <xs:element name="field" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpostpersistcallback" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmessagelisteners" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitylistenermappedsuperclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitylistenerentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addlistenerentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testexceptionsfromcallbacks" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="testrunning" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitylistenerpostloadtest" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignment" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="assignid" type="xs:long" />
        <xs:element name="GeneratedName" type="topic" nillable="true" minOccurs="0" />
        <xs:element name="assigntext" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcascadingflush" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="supportsnativesequence" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classperiod" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="clpid" type="xs:long" />
        <xs:element name="clptext" type="xs:string" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
        <xs:element name="topics" type="topic" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="courseid" type="xs:long" />
        <xs:element name="coursetext" type="xs:string" />
        <xs:element name="classperiods" type="classperiod" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subtopic" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="subtopicid" type="xs:long" />
        <xs:element name="GeneratedName" type="topic" nillable="true" minOccurs="0" />
        <xs:element name="subtopictext" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="topic" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="topicid" type="xs:long" />
        <xs:element name="clp" type="classperiod" nillable="true" minOccurs="0" />
        <xs:element name="topictext" type="xs:string" />
        <xs:element name="assignments" type="assignment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="subtopics" type="subtopic" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="security" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="symbol" type="embed" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="eager" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentitymanagerconfiguration" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accessmodsentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="pub" type="xs:string" />
        <xs:element name="prot" type="xs:string" />
        <xs:element name="priv" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testaccessmods" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcompataccessmods" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="privaccessmodsentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="pub" type="xs:string" />
        <xs:element name="prot" type="xs:string" />
        <xs:element name="priv" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcompatible" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="icontact" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitycontact" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="email" type="xs:string" />
        <xs:element name="phone" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="theaddress" type="embeddableaddress" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iaddress" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddableaddress" >
      <xs:sequence>
        <xs:element name="line1" type="xs:string" />
        <xs:element name="line2" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zipcode" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcheckconsistency" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_oid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbinterfaces" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinitializeeagerly" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdependentfields2" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="commit" type="xs:long" />
          <xs:element name="rollback" type="xs:long" />
          <xs:element name="prestore" type="xs:long" />
          <xs:element name="_root" type="xs:anyType" />
          <xs:element name="_rel" type="xs:anyType" />
          <xs:element name="_deprel" type="xs:anyType" />
          <xs:element name="_deep" type="xs:anyType" />
          <xs:element name="_coll" type="xs:anyType" />
          <xs:element name="_depcoll" type="xs:anyType" />
          <xs:element name="_map" type="xs:anyType" />
          <xs:element name="_depmap" type="xs:anyType" />
          <xs:element name="_repeat" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testoptimisticlockgroups" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="oid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsecuritycontext" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="oldmanager" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pessimisticlockentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdetachedstatemanager" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="enhanced" type="xs:anyType" />
          <xs:element name="oid" type="xs:long" />
          <xs:element name="doid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfetchgroups" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="oid1" type="xs:long" />
          <xs:element name="oid2" type="xs:long" />
          <xs:element name="oidc1" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbtransactionalclass" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testindirectrecursion" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="transitions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinitialvaluefetching" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbnopersistentfields" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="holder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbigdecimals" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmultithreaded" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="serial" type="xs:long" />
          <xs:element name="threads" type="xs:long" />
          <xs:element name="iterations" type="xs:long" />
          <xs:element name="pm" type="xs:anyType" />
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpmmemory" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_dopause" type="xs:anyType" />
          <xs:element name="num_objects" type="xs:long" />
          <xs:element name="num_flushes" type="xs:long" />
          <xs:element name="_fetchgroupserial" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testntw" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="factory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbretainvalues" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testincrementalflushesdeletes" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="pm" type="xs:anyType" />
          <xs:element name="oid" type="xs:anyType" />
          <xs:element name="a" type="runtimetest1" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfetchgroupsextent" >
      <xs:complexContent>
       <xs:extension base="testfetchgroups">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testarrayvalues2" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_precision" type="xs:double" />
          <xs:element name="_precision" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinheritance" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejblocales" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfieldrange2" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="random_" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsequence" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfieldrange" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="random_" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpcclass" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test2ejbconcurrency" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatequeries" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_pm" type="xs:anyType" />
          <xs:element name="_" type="xs:dateTime" />
          <xs:element name="_before" type="xs:dateTime" />
          <xs:element name="_after" type="xs:dateTime" />
          <xs:element name="referencetst" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpersistencemanagerfactoryimpl" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_conf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teststatemanagerimpldata" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_meta" type="xs:anyType" />
          <xs:element name="_f1" type="xs:anyType" />
          <xs:element name="_f3" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsavepoints" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testabstractmappedappidsuper" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testconnectionretainmode" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfetchgroupsquery" >
      <xs:complexContent>
       <xs:extension base="testfetchgroups">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbmanagedinverses" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbembedded" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_oid1" type="xs:anyType" />
          <xs:element name="_oid2" type="xs:anyType" />
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testqueries" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="child_count" type="xs:long" />
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basekerneltest" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.common.utils.abstracttestcase">
         <xs:sequence>
          <xs:element name="_sysprops" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbrokerfactorypooling" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teststoreblob" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtransition2" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="supportspessimistic" type="xs:anyType" />
          <xs:element name="_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbstate" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testserialize" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_oid" type="xs:long" />
          <xs:element name="_oid2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsecondclassvalues" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_precision" type="xs:double" />
          <xs:element name="_precision" type="xs:double" />
          <xs:element name="//mprudhom:useoptimisticsowedon'thangonsomedatabasespm" type="xs:anyType" />
          <xs:element name="newline" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsuppressbatchole" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbincrementalflushes" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytearray" >
      <xs:sequence>
        <xs:element name="ids" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:string" />
        <xs:element name="s" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapelementpcchild" >
      <xs:complexContent>
       <xs:extension base="mapelementpc">
         <xs:sequence>
          <xs:element name="elementdatachild" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependentfieldspc" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="relation" type="dependentfieldspc" nillable="true" minOccurs="0" />
        <xs:element name="owner" type="dependentfieldspc" nillable="true" minOccurs="0" />
        <xs:element name="list" type="dependentfieldspc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="map" type="xs:anyType" />
        <xs:element name="dependentrelation" type="dependentfieldspc" nillable="true" minOccurs="0" />
        <xs:element name="dependentlist" type="dependentfieldspc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="dependentmappedlist" type="dependentfieldspc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="dependentinversekeylist" type="dependentfieldspc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="dependentmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dateversion" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="recursivelyembeddedpc" >
      <xs:sequence>
        <xs:element name="embedded" type="embeddedpc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="entity2" nillable="true" minOccurs="0" />
        <xs:element name="versionfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchbase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceassigned3" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedinterfaceappid" >
      <xs:complexContent>
       <xs:extension base="managedinterfacesupappid">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singleidlong" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singleid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchb" >
      <xs:complexContent>
       <xs:extension base="fetchbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mixedinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instancecallbackstest" >
      <xs:sequence>
        <xs:element name="predeleteinvocations" type="xs:long" />
        <xs:element name="postloadinvocations" type="xs:long" />
        <xs:element name="prestoreinvocations" type="xs:long" />
        <xs:element name="preclearinvocations" type="xs:long" />
        <xs:element name="transientpostloadcalled" type="xs:anyType" />
        <xs:element name="transientprestorecalled" type="xs:anyType" />
        <xs:element name="transientpredeletecalled" type="xs:anyType" />
        <xs:element name="transientpreclearcalled" type="xs:anyType" />
        <xs:element name="transientpredeletecycle" type="xs:long" />
        <xs:element name="transientflushinprestore" type="xs:anyType" />
        <xs:element name="//thisshouldneverbenullinjdopostloadnonnull" type="xs:string" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="nondfgfield" type="xs:long" />
        <xs:element name="oneone" type="runtimetest1" nillable="true" minOccurs="0" />
        <xs:element name="rel" type="instancecallbackstest" nillable="true" minOccurs="0" />
        <xs:element name="transientrelid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detachsmpc" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="rel" type="xs:anyType" />
        <xs:element name="stringint" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="appidsubd" >
      <xs:complexContent>
       <xs:extension base="appidsubb">
         <xs:sequence>
          <xs:element name="pkd" type="xs:double" />
          <xs:element name="fieldd" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="modinstancecallbacktests" >
      <xs:sequence>
        <xs:element name="predeleteinvocations" type="xs:long" />
        <xs:element name="postloadinvocations" type="xs:long" />
        <xs:element name="prestoreinvocations" type="xs:long" />
        <xs:element name="preclearinvocations" type="xs:long" />
        <xs:element name="transientpostloadcalled" type="xs:anyType" />
        <xs:element name="transientprestorecalled" type="xs:anyType" />
        <xs:element name="transientpredeletecalled" type="xs:anyType" />
        <xs:element name="transientpreclearcalled" type="xs:anyType" />
        <xs:element name="transientpredeletecycle" type="xs:long" />
        <xs:element name="transientflushinprestore" type="xs:anyType" />
        <xs:element name="//thisshouldneverbenullinjdopostloadnonnull" type="xs:string" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="nondfgfield" type="xs:long" />
        <xs:element name="oneone" type="modruntimetest1" nillable="true" minOccurs="0" />
        <xs:element name="rel" type="modinstancecallbacktests" nillable="true" minOccurs="0" />
        <xs:element name="transientrelid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest2" >
      <xs:complexContent>
       <xs:extension base="runtimetest1">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="//@idfield2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectcollectionholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attachc" >
      <xs:complexContent>
       <xs:extension base="attachb">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="cstr" type="xs:string" />
          <xs:element name="c" type="xs:long" />
          <xs:element name="cdbl" type="xs:double" />
          <xs:element name="//non-dfges" type="attache" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pcperson" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="pcaddress" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="pcperson" nillable="true" minOccurs="0" />
        <xs:element name="children" type="pcperson" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="appidclassstring" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedpc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
        <xs:element name="field1" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="appidholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="somefield" type="xs:string" />
        <xs:element name="//one-to-onerelations" type="appidsuper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="appidsuba" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="appidsubb" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="appidsubc" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="appidsubd" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="appidsube" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="appidsubf" nillable="true" minOccurs="0" />
        <xs:element name="//one-to-manyrelationsappidsupers" type="xs:anyType" />
        <xs:element name="appidsubas" type="xs:anyType" />
        <xs:element name="appidsubbs" type="xs:anyType" />
        <xs:element name="appidsubcs" type="xs:anyType" />
        <xs:element name="appidsubds" type="xs:anyType" />
        <xs:element name="appidsubes" type="xs:anyType" />
        <xs:element name="appidsubfs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modruntimetest2" >
      <xs:complexContent>
       <xs:extension base="modruntimetest1">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="field2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attachversionb" >
      <xs:complexContent>
       <xs:extension base="attachversiona">
         <xs:sequence>
          <xs:element name="field2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interfaceholder" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="intfs" type="xs:anyType" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="intf" type="interfacetest" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="allfieldstypetest" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="test" type="xs:long" />
        <xs:element name="test" type="xs:long" />
        <xs:element name="test" type="xs:long" />
        <xs:element name="test" type="xs:double" />
        <xs:element name="test" type="xs:double" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="test" type="xs:string" />
        <xs:element name="testbig" type="xs:string" />
        <xs:element name="test" type="xs:dateTime" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="test" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondarytab" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interfacetestimpl4" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singleidstring" >
      <xs:sequence>
        <xs:element name="pk" type="xs:string" />
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceassigned" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="other" type="sequenceassigned" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valuestrategypc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="uuidhex" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ignoreupdate" type="xs:long" />
        <xs:element name="restrictupdate" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="sequence" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceaware" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interfacetestimpl1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attachversionc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
        <xs:element name="pc" type="attachversiona" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockgrouppcknownsubclass" >
      <xs:complexContent>
       <xs:extension base="lockgrouppc">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="knownsubclassfield" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interfacetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blobtest" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="blob" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pcdirectory" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="_name" type="xs:string" />
        <xs:element name="_parent" type="pcdirectory" nillable="true" minOccurs="0" />
        <xs:element name="_children" type="pcdirectory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="_files" type="pcfile" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singleidchar" >
      <xs:sequence>
        <xs:element name="pk" type="xs:anyType" />
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unannotpojo" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="num" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outerjoinvaluepc" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="value1" type="xs:long" />
        <xs:element name="value2" type="xs:long" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pcclasspc" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="specificpc" type="xs:anyType" />
        <xs:element name="genericpc" type="xs:anyType" />
        <xs:element name="generic" type="xs:anyType" />
        <xs:element name="specificinterface" type="pcclassinterface" nillable="true" minOccurs="0" />
        <xs:element name="defaultinterface" type="pcclassinterface" nillable="true" minOccurs="0" />
        <xs:element name="interface" type="xs:anyType" />
        <xs:element name="genericinterface" type="pcclassinterface" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxiespc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stringset" type="xs:anyType" />
        <xs:element name="proxyset" type="proxiespc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="stringmap" type="xs:anyType" />
        <xs:element name="proxymap" type="xs:anyType" />
        <xs:element name="list" type="xs:anyType" />
        <xs:element name="comp" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="//sqltypessqldate" type="xs:anyType" />
        <xs:element name="timestamp" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedownerpc" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="mapping(nullindicatorattributename" type="embeddedpc" nillable="true" minOccurs="0" />
        <xs:element name="complexembedded" type="complexembeddedpc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceassigned2" >
      <xs:complexContent>
       <xs:extension base="sequenceassigned">
         <xs:sequence>
          <xs:element name="foo" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attachf" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:string" />
        <xs:element name="fstr" type="xs:string" />
        <xs:element name="f" type="xs:long" />
        <xs:element name="fdbl" type="xs:double" />
        <xs:element name="e" type="attache" nillable="true" minOccurs="0" />
        <xs:element name="strings" type="xs:anyType" />
        <xs:element name="embeddedc" type="attachc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singleidwrapper" >
      <xs:sequence>
        <xs:element name="pk" type="xs:anyType" />
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="appidsuba" >
      <xs:complexContent>
       <xs:extension base="appidsuper">
         <xs:sequence>
          <xs:element name="pka" type="xs:long" />
          <xs:element name="fielda" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchgrouptestobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="b" type="xs:string" />
        <xs:element name="c" type="xs:anyType" />
        <xs:element name="d" type="xs:dateTime" />
        <xs:element name="e" type="xs:string" />
        <xs:element name="f" type="xs:string" />
        <xs:element name="g" type="fetchgrouptestobject" nillable="true" minOccurs="0" />
        <xs:element name="h" type="fetchgrouptestobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singleidint" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concretemappedappidsub" >
      <xs:complexContent>
       <xs:extension base="abstractmappedappidsuper">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inversea" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="oneone" type="inversea" nillable="true" minOccurs="0" />
        <xs:element name="oneoneowner" type="inversea" nillable="true" minOccurs="0" />
        <xs:element name="onemany" type="inversea" nillable="true" minOccurs="0" />
        <xs:element name="manyone" type="xs:anyType" />
        <xs:element name="manymany" type="xs:anyType" />
        <xs:element name="manymanyowner" type="xs:anyType" />
        <xs:element name="null" type="xs:anyType" />
        <xs:element name="nullowner" type="inversea" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="appidsube" >
      <xs:complexContent>
       <xs:extension base="appidsubd">
         <xs:sequence>
          <xs:element name="fielde" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pcaddress" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="country" type="pccountry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest3" >
      <xs:complexContent>
       <xs:extension base="runtimetest2">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="//@idfield3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attachb" >
      <xs:complexContent>
       <xs:extension base="attacha">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bstr" type="xs:string" />
          <xs:element name="b" type="xs:long" />
          <xs:element name="bdbl" type="xs:double" />
          <xs:element name="ds" type="attachd" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="stringintmap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="complexembeddedpc" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="field" type="xs:string" />
          <xs:element name="ownerfield" type="embeddedownerpc" nillable="true" minOccurs="0" />
          <xs:element name="stringset" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="managedinterfacesupappid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedinterfaceowner" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
        <xs:element name="iface" type="managedinterfacesup" nillable="true" minOccurs="0" />
        <xs:element name="embed" type="managedinterfaceembed" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modruntimetest1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="somefield" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="trans" type="xs:string" />
        <xs:element name="selfoneone" type="modruntimetest1" nillable="true" minOccurs="0" />
        <xs:element name="selfonemany" type="modruntimetest1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonmappedinterfaceimpl" >
      <xs:sequence>
        <xs:element name="mismatch" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inner" >
      <xs:sequence>
        <xs:element name="none" type="xs:anyType" />
        <xs:element name="exception" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attachversiona" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="fetcha" type="xs:string" />
        <xs:element name="fetchb" type="xs:string" />
        <xs:element name="pc" type="attachversiona" nillable="true" minOccurs="0" />
        <xs:element name="embedded" type="attachversionc" nillable="true" minOccurs="0" />
        <xs:element name="many" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionalclasspc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentmapholder" >
      <xs:sequence>
        <xs:element name="testpckeystringvalue" type="xs:anyType" />
        <xs:element name="teststringkeypcvalue" type="xs:anyType" />
        <xs:element name="testpckeypcvalue" type="xs:anyType" />
        <xs:element name="testpcsubkeystringvalue" type="xs:anyType" />
        <xs:element name="teststringkeypcsubvalue" type="xs:anyType" />
        <xs:element name="testpcsubkeypcvalue" type="xs:anyType" />
        <xs:element name="testpcsubkeypcsubvalue" type="xs:anyType" />
        <xs:element name="testpckeypcsubvalue" type="xs:anyType" />
        <xs:element name="testpcintfkeystringvalue" type="xs:anyType" />
        <xs:element name="teststringkeypcintfvalue" type="xs:anyType" />
        <xs:element name="testpcintfkeypcvalue" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interfacetestimpl3" >
      <xs:complexContent>
       <xs:extension base="interfacetestimpl2">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pcclassinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pcfile" >
      <xs:sequence>
        <xs:element name="_name" type="xs:string" />
        <xs:element name="_dir" type="pcdirectory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singleidbyte" >
      <xs:sequence>
        <xs:element name="pk" type="xs:anyType" />
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedinterfaceembed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobs" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="lobnullable" type="xs:string" />
        <xs:element name="lobnotnullable" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchgrouptestobjectchild" >
      <xs:complexContent>
       <xs:extension base="fetchgrouptestobject">
         <xs:sequence>
          <xs:element name="childa" type="xs:long" />
          <xs:element name="childb" type="xs:long" />
          <xs:element name="childc" type="xs:long" />
          <xs:element name="childd" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attachd" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="dstr" type="xs:string" />
        <xs:element name="d" type="xs:long" />
        <xs:element name="ddbl" type="xs:double" />
        <xs:element name="a" type="attacha" nillable="true" minOccurs="0" />
        <xs:element name="bs" type="attachb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="pcstringmap" type="xs:anyType" />
        <xs:element name="bigintegerpcmap" type="xs:anyType" />
        <xs:element name="embeddede" type="attache" nillable="true" minOccurs="0" />
        <xs:element name="embeddeda" type="attacha" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest5" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="runtimetest4" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="appidsubc" >
      <xs:complexContent>
       <xs:extension base="appidsubb">
         <xs:sequence>
          <xs:element name="pk1c" type="xs:long" />
          <xs:element name="pk2c" type="xs:string" />
          <xs:element name="fieldc" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockgrouppc2" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetcha" >
      <xs:complexContent>
       <xs:extension base="fetchbase">
         <xs:sequence>
          <xs:element name="b" type="fetchb" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interfacetest2" >
      <xs:complexContent>
       <xs:extension base="interfacetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraystest" >
      <xs:sequence>
        <xs:element name="counter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="a" type="xs:string" />
        <xs:element name="a" type="xs:dateTime" />
        <xs:element name="aint" type="xs:anyType" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="a" type="xs:double" />
        <xs:element name="a" type="xs:anyType" />
        <xs:element name="a" type="xs:double" />
        <xs:element name="a" type="xs:anyType" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="a" type="xs:anyType" />
        <xs:element name="ap" type="xs:long" />
        <xs:element name="ap" type="xs:long" />
        <xs:element name="ap" type="xs:double" />
        <xs:element name="ap" type="xs:anyType" />
        <xs:element name="ap" type="xs:double" />
        <xs:element name="ap" type="xs:anyType" />
        <xs:element name="ap" type="xs:long" />
        <xs:element name="aacterp" type="xs:anyType" />
        <xs:element name="aacterpclob" type="xs:anyType" />
        <xs:element name="a" type="arraystest" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scotest" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="strintmap" type="xs:anyType" />
        <xs:element name="intlongmap" type="xs:anyType" />
        <xs:element name="longfloatmap" type="xs:anyType" />
        <xs:element name="floatbytemap" type="xs:anyType" />
        <xs:element name="bytedoublemap" type="xs:anyType" />
        <xs:element name="doublecharmap" type="xs:anyType" />
        <xs:element name="charbooleanmap" type="xs:anyType" />
        <xs:element name="datestrmap" type="xs:anyType" />
        <xs:element name="bigdecimalbigintegermap" type="xs:anyType" />
        <xs:element name="cstring" type="xs:anyType" />
        <xs:element name="cinteger" type="xs:anyType" />
        <xs:element name="clong" type="xs:anyType" />
        <xs:element name="cfloat" type="xs:anyType" />
        <xs:element name="cbyte" type="xs:anyType" />
        <xs:element name="cdouble" type="xs:anyType" />
        <xs:element name="cboolean" type="xs:anyType" />
        <xs:element name="cshort" type="xs:anyType" />
        <xs:element name="cdate" type="xs:anyType" />
        <xs:element name="ccharacter" type="xs:anyType" />
        <xs:element name="cbiginteger" type="xs:anyType" />
        <xs:element name="cbigdecimal" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapelementintf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singleidshort" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="field" type="xs:dateTime" />
        <xs:element name="somefield" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field1" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="//transactionalonlytrans" type="xs:string" />
        <xs:element name="//relations//@transientselfoneone" type="runtimetest1" nillable="true" minOccurs="0" />
        <xs:element name="selfonemany" type="runtimetest1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pcdepartment" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="company" type="pccompany" nillable="true" minOccurs="0" />
        <xs:element name="employees" type="pcemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pcemployee" >
      <xs:complexContent>
       <xs:extension base="pcperson">
         <xs:sequence>
          <xs:element name="department" type="pcdepartment" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pccompany" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="pcaddress" nillable="true" minOccurs="0" />
        <xs:element name="departments" type="pcdepartment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedinterfaceimpl" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attache" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="estr" type="xs:string" />
        <xs:element name="e" type="xs:long" />
        <xs:element name="edbl" type="xs:double" />
        <xs:element name="b" type="attachb" nillable="true" minOccurs="0" />
        <xs:element name="f" type="attachf" nillable="true" minOccurs="0" />
        <xs:element name="field" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest4" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="runtimetest5s" type="runtimetest5" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blobs" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="lobnullable" type="xs:anyType" />
        <xs:element name="lobnotnullable" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="appidsubb" >
      <xs:complexContent>
       <xs:extension base="appidsuba">
         <xs:sequence>
          <xs:element name="pkb" type="xs:string" />
          <xs:element name="fieldb" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aimplb" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="pk1" type="xs:long" />
        <xs:element name="pk2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="externalvalues" >
      <xs:sequence>
        <xs:element name="toshort" type="xs:anyType" />
        <xs:element name="todouble" type="xs:anyType" />
        <xs:element name="tofloat" type="xs:long" />
        <xs:element name="tochar" type="xs:long" />
        <xs:element name="tostring" type="xs:long" />
        <xs:element name="toboolean" type="xs:double" />
        <xs:element name="tobyte" type="xs:double" />
        <xs:element name="toint" type="xs:anyType" />
        <xs:element name="tolong" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transition" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="from" type="state" nillable="true" minOccurs="0" />
        <xs:element name="to" type="state" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pccountry" >
      <xs:sequence>
        <xs:element name="code" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractmappedappidsuper" >
      <xs:sequence>
        <xs:element name="pk" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="appidsubf" >
      <xs:complexContent>
       <xs:extension base="appidsubb">
         <xs:sequence>
          <xs:element name="fieldf" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inverseb" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="oneone" type="inverseb" nillable="true" minOccurs="0" />
        <xs:element name="manymany" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attacha" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="astr" type="xs:string" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="adbl" type="xs:double" />
        <xs:element name="array" type="xs:string" />
        <xs:element name="array" type="attache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedinterfaceownerappid" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
        <xs:element name="iface" type="managedinterfacesupappid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedinterfacesup" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockgrouppc" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="defaultlockgroupfield" type="xs:string" />
        <xs:element name="explicitdefaultlockgroupfield" type="xs:long" />
        <xs:element name="lockgroup0field" type="xs:long" />
        <xs:element name="lockgroup0field" type="xs:string" />
        <xs:element name="transientlockgroup1relationfield" type="runtimetest1" nillable="true" minOccurs="0" />
        <xs:element name="lockgroup1field" type="xs:long" />
        <xs:element name="unlockedfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="outgoingtransitions" type="transition" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="incomingtransitions" type="transition" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aintf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedinterface" >
      <xs:complexContent>
       <xs:extension base="managedinterfacesup">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapelementpc" >
      <xs:sequence>
        <xs:element name="elementdata" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interfacetestimpl2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columniopc" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="ignoreinsert" type="xs:long" />
        <xs:element name="ignoreupdate" type="xs:long" />
        <xs:element name="ident" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="rel" type="columniopc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="appidsuper" >
      <xs:sequence>
        <xs:element name="superfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="calendarfields" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="unassigned" type="xs:anyType" />
        <xs:element name="gmt" type="xs:anyType" />
        <xs:element name="pacific" type="xs:anyType" />
        <xs:element name="newyork" type="xs:anyType" />
        <xs:element name="berlin" type="xs:anyType" />
        <xs:element name="singapore" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonmappedinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="allfieldtypestest" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="test" type="xs:long" />
        <xs:element name="test" type="xs:long" />
        <xs:element name="test" type="xs:long" />
        <xs:element name="test" type="xs:double" />
        <xs:element name="test" type="xs:double" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="test" type="xs:string" />
        <xs:element name="testbig" type="xs:string" />
        <xs:element name="test" type="xs:dateTime" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="testtstscale0" type="xs:anyType" />
        <xs:element name="testtstscale3" type="xs:anyType" />
        <xs:element name="testtstscale6" type="xs:anyType" />
        <xs:element name="testtstmaxscale" type="xs:anyType" />
        <xs:element name="testscale0" type="xs:dateTime" />
        <xs:element name="testscale3" type="xs:dateTime" />
        <xs:element name="testmaxscale" type="xs:dateTime" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="test" type="xs:anyType" />
        <xs:element name="test" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testproxies2" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_oid" type="xs:long" />
          <xs:element name="_" type="xs:dateTime" />
          <xs:element name="_sqldate" type="xs:anyType" />
          <xs:element name="_timestamp" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbtransactions" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsavepointordering" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="user" type="xs:long" />
          <xs:element name="released" type="xs:long" />
          <xs:element name="rollback" type="xs:long" />
          <xs:element name="_assigned" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teststaticinnerclasses" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_oid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejblobs" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_pm" type="xs:anyType" />
          <xs:element name="_" type="inner" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcalendarfields" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpersistentmaps" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="jdoql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpojowithoutannotationscannotbepersisted" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="pojo" type="unannotpojo" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testclassstringconstructor" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbentitymanager" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfieldstate" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="oid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbgetobjectbyidvalue" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testgetobjectsbyid" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="oids" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmultipleinsertdeletesameid" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpessimisticlockexception" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="pkey" type="xs:long" />
          <xs:element name="dosleep" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testrestorevalues" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_oid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsavepointembeddedpreflush" >
      <xs:complexContent>
       <xs:extension base="testsavepointembedded">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testincrementalflushes" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsavepointembedded" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinstancecallbacks" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="commit" type="xs:long" />
          <xs:element name="flush" type="xs:long" />
          <xs:element name="prestore" type="xs:long" />
          <xs:element name="_pm" type="xs:anyType" />
          <xs:element name="_callbacks" type="instancecallbackstest" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testextents" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testspecialnumbers" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testextents2" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_oid1" type="xs:anyType" />
          <xs:element name="_oid2" type="xs:anyType" />
          <xs:element name="_oid3" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpessimisticlocking" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_id" type="xs:anyType" />
          <xs:element name="_bugcount" type="xs:long" />
          <xs:element name="_factory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testspecialnumbers2" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbnullvalues" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dummybrokerfactory" >
      <xs:complexContent>
       <xs:extension base="jdbcbrokerfactory">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="_conf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfetchplan" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_rootdirid" type="xs:anyType" />
          <xs:element name="_rootcompanyid" type="xs:anyType" />
          <xs:element name="//maximumdepthofthedirectoriesmax_depth" type="xs:long" />
          <xs:element name="//maximumnumberoffiles/directorymax_child" type="xs:long" />
          <xs:element name="quote" type="xs:string" />
          <xs:element name="firsttime" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbobjectcollections" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbulkdelete" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdynamicfetchplan" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="jpql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testretainvaluesinoptimistic" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_oid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsimple" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testopenresultscommit" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpersistencemanager" >
      <xs:complexContent>
       <xs:extension base="basekerneltest">
         <xs:sequence>
          <xs:element name="_id" type="xs:long" />
          <xs:element name="_id2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testentitymanagerfactory" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbasicannotation" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="val_local_date" type="xs:string" />
          <xs:element name="val_local_time" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsubclassofabstractsuperclass" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcaseinsensitivekeywordsinjpql" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpersistence" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testflushbeforedetach" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="itemid" type="xs:long" />
        <xs:element name="itemname" type="xs:string" />
        <xs:element name="itemprice" type="xs:anyType" />
        <xs:element name="itemdata" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testserializedfactory" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtablenamesdefaulttoentitynames" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclassperson" >
      <xs:complexContent>
       <xs:extension base="abstractsuperclass">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="forename" type="xs:string" />
          <xs:element name="surname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testrefresh" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="forename" type="xs:string" />
        <xs:element name="surname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpropertiesmethods" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="unit_name" type="xs:string" />
          <xs:element name="emf" type="xs:anyType" />
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="place" >
      <xs:sequence>
        <xs:element name="location" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractsuperclass" >
      <xs:sequence>
        <xs:element name="someproperty" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithtimestamppk" >
      <xs:sequence>
        <xs:element name="idtsp" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="temporalfieldtypes" >
      <xs:sequence>
        <xs:element name="//mapping-defaulttotimestampdefaultfield" type="xs:dateTime" />
        <xs:element name="field" type="xs:dateTime" />
        <xs:element name="timefield" type="xs:dateTime" />
        <xs:element name="timestampfield" type="xs:dateTime" />
        <xs:element name="//mapping-defaulttotimestampdefaultfield" type="xs:anyType" />
        <xs:element name="datefield" type="xs:anyType" />
        <xs:element name="timefield" type="xs:anyType" />
        <xs:element name="timestampfield" type="xs:anyType" />
        <xs:element name="timezonefield" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testjoin" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="allfieldtypes" >
      <xs:sequence>
        <xs:element name="//@basictypesfield" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:double" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:double" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="wfield" type="xs:long" />
        <xs:element name="wfield" type="xs:anyType" />
        <xs:element name="wfield" type="xs:anyType" />
        <xs:element name="wfield" type="xs:long" />
        <xs:element name="wfield" type="xs:double" />
        <xs:element name="wfield" type="xs:anyType" />
        <xs:element name="wfield" type="xs:double" />
        <xs:element name="wfield" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:dateTime" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="sqldatefield" type="xs:anyType" />
        <xs:element name="sqltimefield" type="xs:anyType" />
        <xs:element name="sqltimestampfield" type="xs:anyType" />
        <xs:element name="lob" type="xs:anyType" />
        <xs:element name="wlob" type="xs:anyType" />
        <xs:element name="lob" type="xs:anyType" />
        <xs:element name="wlob" type="xs:anyType" />
        <xs:element name="enumfield" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="//additionaltypessetofstrings" type="xs:anyType" />
        <xs:element name="arrayofs" type="xs:string" />
        <xs:element name="arrayofs" type="xs:long" />
        <xs:element name="//one-to-oneandone-to-manyrelationstoselfselfoneone" type="allfieldtypes" nillable="true" minOccurs="0" />
        <xs:element name="selfonemany" type="allfieldtypes" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="//java8datetimetypeswhicharerequiredbythejpa-2.2specfield" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testjava8timetypes" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="val_local_date" type="xs:string" />
          <xs:element name="val_local_time" type="xs:string" />
          <xs:element name="val_local_datetime" type="xs:string" />
          <xs:element name="insertedentity" type="java8timetypes" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmissingmetadata" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="java8timetypes" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="olddatefield" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentitymanagerclear" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testentitymanagermerge" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testentitymanagermethodsthrowafterclose" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
          <xs:element name="aft" type="allfieldtypes" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtimestampoptlockex" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versiontsentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="update" type="xs:anyType" />
        <xs:element name="someint" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultclsxml" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testresultclsannotation" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testresultclsxml" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultclsannotation" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdropaddsequence" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityperson" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generatedidobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityemployee" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="salary" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsequencegenerationonmt" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsequence" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="multithreadexecuting" type="xs:string" />
          <xs:element name="number_entities" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="gval1" type="xs:long" />
        <xs:element name="gval2" type="xs:long" />
        <xs:element name="gval3" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hsqlemployee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testhsqlsequence" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="conf" type="xs:anyType" />
          <xs:element name="dict" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hsqlemployee2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embedouterfield" >
      <xs:sequence>
        <xs:element name="outname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="superpropertyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdefaultaccess" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertysub2" >
      <xs:complexContent>
       <xs:extension base="mappedsuperfield">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mixednestedembedentity" >
      <xs:sequence>
        <xs:element name="mid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="eip" type="embedinnerprop" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldsub2" >
      <xs:complexContent>
       <xs:extension base="mappedsuperproperty">
         <xs:sequence>
          <xs:element name="crt" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embedfieldaccess" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propembedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="efa" type="embedfieldaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertysub3" >
      <xs:complexContent>
       <xs:extension base="superfieldentity">
         <xs:sequence>
          <xs:element name="crt" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperfield" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="crt" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldsub3" >
      <xs:complexContent>
       <xs:extension base="superpropertyentity">
         <xs:sequence>
          <xs:element name="crt" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defpropmixedfieldaccess" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="strfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccesscapitalizationoldbehavior" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="word" type="xs:long" />
        <xs:element name="aword" type="xs:long" />
        <xs:element name="aaword" type="xs:long" />
        <xs:element name="aaaword" type="xs:long" />
        <xs:element name="capital" type="xs:long" />
        <xs:element name="acapital" type="xs:long" />
        <xs:element name="another" type="xs:long" />
        <xs:element name="a1" type="xs:long" />
        <xs:element name="b1" type="xs:long" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="b" type="xs:long" />
        <xs:element name="a" type="xs:anyType" />
        <xs:element name="b" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="bool" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embedpropaccess" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractmappedsuperproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propentity" >
      <xs:complexContent>
       <xs:extension base="mappedcallbacksup">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractmappedsuperfield" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="menuitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ingredients" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldsub" >
      <xs:complexContent>
       <xs:extension base="abstractmappedsuperproperty">
         <xs:sequence>
          <xs:element name="crt" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlfieldaccess2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="strfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlmixedmappedsuper" >
      <xs:sequence>
        <xs:element name="mid" type="xs:long" />
        <xs:element name="mname" type="xs:string" />
        <xs:element name="crt" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlfieldembedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="epa" type="xmlembedpropaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlfieldaccess" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="strfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlpropertysub" >
      <xs:complexContent>
       <xs:extension base="xmlabstractmappedsuperfield">
         <xs:sequence>
          <xs:element name="crt" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlmixedfieldsub" >
      <xs:complexContent>
       <xs:extension base="xmlmixedmappedsuper">
         <xs:sequence>
          <xs:element name="myfield" type="xs:string" />
          <xs:element name="crt" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlembedpropaccess" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlsuperpropertyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlabstractmappedsuperproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlembedmixedaccess" >
      <xs:sequence>
        <xs:element name="transientfname" type="xs:string" />
        <xs:element name="transientlname" type="xs:string" />
        <xs:element name="mname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlsuperfieldentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlpropembedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="efa" type="xmlembedfieldaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmldefpropmixedfieldaccess" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="strfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testxmlexplicitaccess" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmldeffieldmixedpropaccess2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="strfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmldeffieldmixedpropaccess" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="strfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlpropaccess" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="strfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlfieldsub3" >
      <xs:complexContent>
       <xs:extension base="xmlsuperpropertyentity">
         <xs:sequence>
          <xs:element name="crt" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlpropertysub3" >
      <xs:complexContent>
       <xs:extension base="xmlsuperfieldentity">
         <xs:sequence>
          <xs:element name="crt" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlmappedsuperproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmldefpropmixedfieldaccess2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="strfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlabstractmappedsuperfield" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlfieldsub2" >
      <xs:complexContent>
       <xs:extension base="xmlmappedsuperproperty">
         <xs:sequence>
          <xs:element name="crt" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlpropertysub2" >
      <xs:complexContent>
       <xs:extension base="xmlmappedsuperfield">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlmappedsuperfield" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="crt" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlpropaccess2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="strfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlfieldsub" >
      <xs:complexContent>
       <xs:extension base="xmlabstractmappedsuperproperty">
         <xs:sequence>
          <xs:element name="crt" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlembedfieldaccess" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlpropmixedentity" >
      <xs:sequence>
        <xs:element name="idval" type="xs:long" />
        <xs:element name="myname" type="xs:string" />
        <xs:element name="ema" type="xmlembedmixedaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccesscapitalization" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="word" type="xs:long" />
        <xs:element name="aword" type="xs:long" />
        <xs:element name="aaword" type="xs:long" />
        <xs:element name="aaaword" type="xs:long" />
        <xs:element name="capital" type="xs:long" />
        <xs:element name="acapital" type="xs:long" />
        <xs:element name="another" type="xs:long" />
        <xs:element name="a1" type="xs:long" />
        <xs:element name="b1" type="xs:long" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="b" type="xs:long" />
        <xs:element name="a" type="xs:anyType" />
        <xs:element name="b" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="bool" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propaccessfieldstratsentity" >
      <xs:sequence>
        <xs:element name="eid" type="embedid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="m2one" type="propaccess" nillable="true" minOccurs="0" />
        <xs:element name="one2m" type="fieldaccess" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="one2one" type="propaccess" nillable="true" minOccurs="0" />
        <xs:element name="ecoll" type="embedpropaccess" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="embed" type="embedfieldaccess" nillable="true" minOccurs="0" />
        <xs:element name="ver" type="xs:long" />
        <xs:element name="m2m" type="propaccess" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propaccess" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="strfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ingredient" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="qty" type="quantity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertysub" >
      <xs:complexContent>
       <xs:extension base="abstractmappedsuperfield">
         <xs:sequence>
          <xs:element name="crt" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="quantity" >
      <xs:sequence>
        <xs:element name="amount" type="xs:double" />
        <xs:element name="unit" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testexplicitaccess" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mixedmappedsuper" >
      <xs:sequence>
        <xs:element name="mid" type="xs:long" />
        <xs:element name="mname" type="xs:string" />
        <xs:element name="crt" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldembedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="epa" type="embedpropaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deffieldmixedpropaccess" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="strfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedcallbacksup" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpropertyaccesscapitalization" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propmixedentity" >
      <xs:sequence>
        <xs:element name="idval" type="xs:long" />
        <xs:element name="myname" type="xs:string" />
        <xs:element name="ema" type="embedmixedaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedmultembedentity" >
      <xs:sequence>
        <xs:element name="mid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="epa" type="embedpropaccess" nillable="true" minOccurs="0" />
        <xs:element name="efa" type="embedfieldaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldaccesspropstratsentity" >
      <xs:sequence>
        <xs:element name="eid" type="embedid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="m2one" type="propaccess" nillable="true" minOccurs="0" />
        <xs:element name="one2m" type="fieldaccess" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="one2one" type="propaccess" nillable="true" minOccurs="0" />
        <xs:element name="ecoll" type="embedpropaccess" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="embed" type="embedfieldaccess" nillable="true" minOccurs="0" />
        <xs:element name="ver" type="xs:long" />
        <xs:element name="m2m" type="propaccess" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="superfieldentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embedmixedaccess" >
      <xs:sequence>
        <xs:element name="transientfname" type="xs:string" />
        <xs:element name="transientlname" type="xs:string" />
        <xs:element name="mname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embedid" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedfieldsub" >
      <xs:complexContent>
       <xs:extension base="mixedmappedsuper">
         <xs:sequence>
          <xs:element name="myfield" type="xs:string" />
          <xs:element name="crt" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embedinnerprop" >
      <xs:sequence>
        <xs:element name="inname" type="xs:string" />
        <xs:element name="eof" type="embedouterfield" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedsuperproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldaccess" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="strfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testopenjpa2330" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="grandchild" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="GeneratedName" type="child" nillable="true" minOccurs="0" />
        <xs:element name="grandchildkey" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmultiplemerge" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmerge" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlazyfields" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childpk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="parent" type="parentpk" nillable="true" minOccurs="0" />
        <xs:element name="childkey" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmergedetachstatefield" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lineitempk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="orderid" type="xs:long" />
        <xs:element name="itemid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="childkey" type="xs:anyType" />
        <xs:element name="grandchilds" type="grandchild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="orderentry" type="xs:dateTime" />
        <xs:element name="//whenusingalist,thingsfails...usingasetallworksfine.items" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentpk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="key1" type="xs:string" />
        <xs:element name="key2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmergenew" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="orderid" type="xs:long" />
        <xs:element name="itemid" type="xs:long" />
        <xs:element name="productname" type="xs:string" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="price" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="key1" type="xs:string" />
        <xs:element name="key2" type="xs:anyType" />
        <xs:element name="childs" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcascadeonetomanymerge" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="model" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="inners" type="inner" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="model" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="make" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="car" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shippackage" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="label" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="label" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="pkg" type="shippackage" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="state" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="make" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="models" type="model" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="state" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toy" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="toyname" type="xs:string" />
        <xs:element name="GeneratedName" type="toybox" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shippackage2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="label" type="label2" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toybox" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="ownername" type="xs:string" />
        <xs:element name="toylist" type="toy" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="label2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="pkg" type="shippackage2" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="state" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="outers" type="outer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="grandchildpk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="child" type="childpk" nillable="true" minOccurs="0" />
        <xs:element name="grandchildkey" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="puschemainsequenceannotationentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="puschemainsequencemappingentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testopenjpaschemapudefault" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pudefaultschemaentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testschemapudefault" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="puschemaintablemappingentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="puschemaintableannotationentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="esqldateid" >
      <xs:sequence>
        <xs:element name="id" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="edbigintegerid" >
      <xs:sequence>
        <xs:element name="rid" type="ebigintegerid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ebigdecimalid" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ebigintegerid" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="edbigdecimalid" >
      <xs:sequence>
        <xs:element name="rid" type="ebigdecimalid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="edateid" >
      <xs:sequence>
        <xs:element name="id" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testderivedidentity" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="edsqldateid" >
      <xs:sequence>
        <xs:element name="rid" type="esqldateid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eddateid" >
      <xs:sequence>
        <xs:element name="rid" type="edateid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdiscriminatortypes" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="charrootentity" >
      <xs:complexContent>
       <xs:extension base="charabstractentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="charabstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringleafentity" >
      <xs:complexContent>
       <xs:extension base="stringrootentity">
         <xs:sequence>
          <xs:element name="sub" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringrootentity" >
      <xs:complexContent>
       <xs:extension base="stringabstractentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="charleafentity" >
      <xs:complexContent>
       <xs:extension base="charrootentity">
         <xs:sequence>
          <xs:element name="sub" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integerleafentity" >
      <xs:complexContent>
       <xs:extension base="integerrootentity">
         <xs:sequence>
          <xs:element name="sub" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringabstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manager" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="" type="manager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlazyfetch" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="n_emps" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integerabstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integerrootentity" >
      <xs:complexContent>
       <xs:extension base="integerabstractentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="textilepk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="textileid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="part" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="partname" type="xs:string" />
        <xs:element name="id" type="partpk" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="shirt" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedownerpc" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="embedded" type="embeddedpc" nillable="true" minOccurs="0" />
        <xs:element name="complexembedded" type="complexembeddedpc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maleuser" >
      <xs:complexContent>
       <xs:extension base="compuser">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="artcourse" >
      <xs:complexContent>
       <xs:extension base="course">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="relcourse" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="course" type="course" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="department" type="department" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedpc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="entity2" nillable="true" minOccurs="0" />
        <xs:element name="versionfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest2" >
      <xs:complexContent>
       <xs:extension base="runtimetest1">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="field2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compuser" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="computername" type="xs:string" />
        <xs:element name="nameaslob" type="xs:string" />
        <xs:element name="nicknames" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="userid" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="complexembeddedpc" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="ownerfield" type="embeddedownerpc" nillable="true" minOccurs="0" />
        <xs:element name="string" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partpk" >
      <xs:sequence>
        <xs:element name="/*textileid*/serialversionuid" type="xs:long" />
        <xs:element name="textileid" type="xs:anyType" />
        <xs:element name="/*partnumber*/partnumber" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="femaleuser" >
      <xs:complexContent>
       <xs:extension base="compuser">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sciencecourse" >
      <xs:complexContent>
       <xs:extension base="course">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="relcourse" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="trousers" >
      <xs:complexContent>
       <xs:extension base="textile">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="lnhnumber" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="textile" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="textileid" type="xs:anyType" />
        <xs:element name="txename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shirt" >
      <xs:complexContent>
       <xs:extension base="textile">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="szeid" type="xs:string" />
          <xs:element name="parts" type="part" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="streetad" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="zipcode" type="xs:string" />
        <xs:element name="user" type="compuser" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="units" type="xs:long" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="courseid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="slist" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="somefield" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="//transactionalonlytrans" type="xs:string" />
        <xs:element name="//relations//@transientselfoneone" type="runtimetest1" nillable="true" minOccurs="0" />
        <xs:element name="selfonemany" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bug" >
      <xs:complexContent>
       <xs:extension base="assertionfailederror">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bug_token" type="xs:string" />
          <xs:element name="bug_delimiter" type="xs:string" />
          <xs:element name="error" type="xs:anyType" />
          <xs:element name="trackingid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bufferedlogfactory" >
      <xs:complexContent>
       <xs:extension base="logfactoryimpl">
         <xs:sequence>
          <xs:element name="buffersize" type="xs:long" />
          <xs:element name="buffer" type="xs:anyType" />
          <xs:element name="disallowedmessages" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttestcase" >
      <xs:complexContent>
       <xs:extension base="abstractcachedemftestcase,">
         <xs:sequence>
          <xs:element name="persistencexmlresource" type="xs:string" />
          <xs:element name="emfs" type="xs:anyType" />
          <xs:element name="currententitymanager" type="xs:anyType" />
          <xs:element name="props" type="xs:anyType" />
          <xs:element name="multithreadexecuting" type="xs:string" />
          <xs:element name="intimeoutthread" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testunwrap" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="temporalentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="test" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtemporaltimestamp" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="sdf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitvaluestrategyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="/***thisfieldgetsautomaticallyconvertedbyopenjpabecauseweregistered*the{@linkprincipalvaluestrategyhandler}inpersistence.xml.*currentlythisneedseithertobeserializable,sowecannotstoreprincipalbutonlytheimpl:(*/user" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="principalvaluestrategyhandler" >
      <xs:complexContent>
       <xs:extension base="abstractvaluehandler">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="_instance" type="principalvaluestrategyhandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuestrategyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/***thisfieldgetsautomaticallyconvertedbyopenjpabecauseweregistered*the{@linkprincipalvaluestrategyhandler}inpersistence.xml.*currentlythisneedseithertobeserializable,sowecannotstoreprincipalbutonlytheimpl:(*/user" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valuestrategyhandler" >
      <xs:complexContent>
       <xs:extension base="abstractvaluehandler">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="_instance" type="valuestrategyhandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testimplicitvaluestrategy" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testvaluestrategy" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qcentity" >
      <xs:sequence>
        <xs:element name="pk" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="amount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unidirectionalone2oneowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="owned" type="unidirectionalone2oneowned" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidirectionalone2oneowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="owned" type="bidirectionalone2oneowned" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unidirectionalone2oneowned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="entity2" nillable="true" minOccurs="0" />
        <xs:element name="versionfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidirectionalone2oneowned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="owner" type="bidirectionalone2oneowner" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testquerycachewithdatacache" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testquerycache" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="cache_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qcentitym2o" >
      <xs:sequence>
        <xs:element name="pk" type="xs:string" />
        <xs:element name="qc" type="qcentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testquerysqlcache" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagerembedrel" >
      <xs:sequence>
        <xs:element name="intvals" type="xs:anyType" />
        <xs:element name="eagerents" type="eagerentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapvalentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="val" type="xs:long" />
        <xs:element name="GeneratedName" type="mapentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeyembed" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="tomanylazy" type="tomanylazy" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="tomanyeager" type="tomanyeager" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tomanylazy" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testjpafacadehelper" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="repo" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpersistenceutil" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="mapvalentity" nillable="true" minOccurs="0" />
        <xs:element name="mapentities" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eagerentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="eagerembed" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="eagerembedrel" nillable="true" minOccurs="0" />
        <xs:element name="eagerembedcoll" type="eagerembed" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="eagerself" type="eagerentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="transfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpersistenceunitutil" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testproviderutil" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="lazyembed" nillable="true" minOccurs="0" />
        <xs:element name="lazyembedcoll" type="lazyembed" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="relentities" type="relentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="relentity" nillable="true" minOccurs="0" />
        <xs:element name="transfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tomanyeager" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyembed" >
      <xs:sequence>
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eagerembed" >
      <xs:sequence>
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsqlbigdecimalid" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="floatidentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:double" />
        <xs:element name="data" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlbigdecimalidentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doubleobjidentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:double" />
        <xs:element name="data" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringidentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="data" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="complexcompoundidtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="type" type="typeentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compoundbooleanid" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsqlbigintegerid" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcompundidwithnull" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="tablescreated" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="booleanidentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="other" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accountid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="accountid" type="xs:anyType" />
        <xs:element name="groupid" type="xs:anyType" />
        <xs:element name="accountholder" type="xs:anyType" />
        <xs:element name="hashcode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="accountid" type="xs:anyType" />
        <xs:element name="groupid" type="xs:anyType" />
        <xs:element name="accountholder" type="person" nillable="true" minOccurs="0" />
        <xs:element name="balanceindollars" type="xs:long" />
        <xs:element name="balanceincents" type="xs:long" />
        <xs:element name="accountlocked" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accountgroup" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="accountset" type="account" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentityasidentityfields" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testbooleanid" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="se" type="booleanidentity" nillable="true" minOccurs="0" />
          <xs:element name="ce" type="compoundbooleanidentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testgenerationtype" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfloatingpointids" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsqldateid" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typeentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplecompoundidtestentity" >
      <xs:sequence>
        <xs:element name="firstid" type="xs:long" />
        <xs:element name="secondid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="complexcompoundidtestentityid" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="type" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqldateidentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:dateTime" />
        <xs:element name="data" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplecompoundidtestentityid" >
      <xs:sequence>
        <xs:element name="firstid" type="xs:long" />
        <xs:element name="secondid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlbigintegeridentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="attendances" type="attendance" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="attendances" type="attendance" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attendance" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="student" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentityasidentityfields2" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compoundbooleanidentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teststringid" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="_emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identitygenerationtype" >
      <xs:sequence>
        <xs:element name="orderid" type="xs:long" />
        <xs:element name="somedata" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testversioncolumn" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestampversion" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shortversion" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="intversion" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pobjectnative" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testautoincrement" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnonstandardmappingxml" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="numericversionedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/***thisfieldismappedbythechild.thechild'stablewillholdaforeign*keylinkingtotheprimarykeyofthisparent'stable.injpa*terminology,thatmakesthechildtheownerofthisbi-directional*relationship.*/children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basetimestampedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testparentchild" >
      <xs:complexContent>
       <xs:extension base="combinatorialpersistencetestcase">
         <xs:sequence>
          <xs:element name="//eachofthesepropertykeyscantakemultiplepossiblevalueskey_updatemanager" type="xs:string" />
          <xs:element name="key_schemafactory" type="xs:string" />
          <xs:element name="key_mappingdefaults" type="xs:string" />
          <xs:element name="key_persistorder" type="xs:string" />
          <xs:element name="option_mappingdefaults" type="xs:string" />
          <xs:element name="option_schemafactory" type="xs:string" />
          <xs:element name="option_updatemanager" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestampedentity" >
      <xs:complexContent>
       <xs:extension base="basetimestampedentity{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtimestampversion" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testisolationleveloverride" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoincremententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="somethingelse" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testautoincrement" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
          <xs:element name="disabled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizl" >
      <xs:complexContent>
       <xs:extension base="horizj">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="l" type="xs:string" />
          <xs:element name="l" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizappinterverticald" >
      <xs:complexContent>
       <xs:extension base="horizappinterverticalb">
         <xs:sequence>
          <xs:element name="d" type="xs:string" />
          <xs:element name="d" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constantjoinpc3" >
      <xs:complexContent>
       <xs:extension base="constantjoinpc">
         <xs:sequence>
          <xs:element name="pc3field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="seqc" >
      <xs:complexContent>
       <xs:extension base="seqa">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizh" >
      <xs:complexContent>
       <xs:extension base="horizg">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="h" type="xs:string" />
          <xs:element name="h" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lrscompoundpc" >
      <xs:sequence>
        <xs:element name="idgen" type="xs:long" />
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="string" type="xs:anyType" />
        <xs:element name="rel" type="xs:anyType" />
        <xs:element name="string" type="xs:anyType" />
        <xs:element name="rel" type="xs:anyType" />
        <xs:element name="string" type="xs:anyType" />
        <xs:element name="rel" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizinterb" >
      <xs:complexContent>
       <xs:extension base="horizintera">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runtimetest2" >
      <xs:complexContent>
       <xs:extension base="runtimetest1">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="field2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="seqg" >
      <xs:complexContent>
       <xs:extension base="seqe">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="base" >
      <xs:sequence>
        <xs:element name="basefield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unknownsubclassparent" >
      <xs:sequence>
        <xs:element name="parent" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizappb" >
      <xs:complexContent>
       <xs:extension base="horizappa">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="placeholdertypesa" >
      <xs:sequence>
        <xs:element name="a" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oporderpcsub" >
      <xs:complexContent>
       <xs:extension base="oporderpc">
         <xs:sequence>
          <xs:element name="sub" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizappsinglea" >
      <xs:sequence>
        <xs:element name="//initializepkvaluestorandomvalues//fixme/*pk1" type="xs:string" />
        <xs:element name="pk2" type="xs:long" />
        <xs:element name="a" type="xs:string" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="relations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizinterflatb" >
      <xs:complexContent>
       <xs:extension base="horizinterflata">
         <xs:sequence>
          <xs:element name="b" type="xs:string" />
          <xs:element name="b" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multie" >
      <xs:sequence>
        <xs:element name="0" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingtest2id" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="//eachpkfieldinmappingtest2//mustbelistedasafieldherepk1" type="xs:long" />
        <xs:element name="pk2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizd" >
      <xs:complexContent>
       <xs:extension base="horizc">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="d" type="xs:string" />
          <xs:element name="d" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multia" >
      <xs:sequence>
        <xs:element name="0" type="xs:string" />
        <xs:element name="1" type="xs:string" />
        <xs:element name="a0" type="xs:long" />
        <xs:element name="a1" type="xs:long" />
        <xs:element name="multics" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pagingpc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
        <xs:element name="rel" type="paginghelperpc" nillable="true" minOccurs="0" />
        <xs:element name="rels" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="helperpc" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="helper" type="helperpc" nillable="true" minOccurs="0" />
        <xs:element name="eager" type="eagerpc" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizappmultib" >
      <xs:complexContent>
       <xs:extension base="horizappmultia">
         <xs:sequence>
          <xs:element name="b" type="xs:string" />
          <xs:element name="b" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lrspc" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="string" type="xs:anyType" />
        <xs:element name="rel" type="xs:anyType" />
        <xs:element name="string" type="xs:anyType" />
        <xs:element name="rel" type="xs:anyType" />
        <xs:element name="string" type="xs:anyType" />
        <xs:element name="rel" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attachc" >
      <xs:complexContent>
       <xs:extension base="attachb">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="cstr" type="xs:string" />
          <xs:element name="c" type="xs:long" />
          <xs:element name="cdbl" type="xs:double" />
          <xs:element name="//non-dfges" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoincrementpc1" >
      <xs:sequence>
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="oneone" type="autoincrementpc1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedbymappc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingtest2" >
      <xs:sequence>
        <xs:element name="pk1" type="xs:long" />
        <xs:element name="pk2" type="xs:long" />
        <xs:element name="oneoneowner" type="mappingtest1" nillable="true" minOccurs="0" />
        <xs:element name="onemanyowner" type="mappingtest1" nillable="true" minOccurs="0" />
        <xs:element name="manymanyowner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partialjoinpc" >
      <xs:sequence>
        <xs:element name="pk1" type="xs:long" />
        <xs:element name="pk2" type="xs:long" />
        <xs:element name="nonpk" type="nonpkjoinpc" nillable="true" minOccurs="0" />
        <xs:element name="nonpks" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizinterverticala" >
      <xs:sequence>
        <xs:element name="a" type="xs:string" />
        <xs:element name="a" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attachf" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:string" />
        <xs:element name="fstr" type="xs:string" />
        <xs:element name="f" type="xs:long" />
        <xs:element name="fdbl" type="xs:double" />
        <xs:element name="e" type="attache" nillable="true" minOccurs="0" />
        <xs:element name="strings" type="xs:anyType" />
        <xs:element name="embeddedc" type="attachc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizinterflatc" >
      <xs:complexContent>
       <xs:extension base="horizinterflatb">
         <xs:sequence>
          <xs:element name="c" type="xs:string" />
          <xs:element name="c" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multid" >
      <xs:complexContent>
       <xs:extension base="multib">
         <xs:sequence>
          <xs:element name="d0" type="xs:string" />
          <xs:element name="d1" type="xs:string" />
          <xs:element name="d" type="xs:long" />
          <xs:element name="a" type="multia" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basesub2" >
      <xs:complexContent>
       <xs:extension base="base">
         <xs:sequence>
          <xs:element name="basesub2field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dfgtest" >
      <xs:sequence>
        <xs:element name="dfgfield" type="xs:long" />
        <xs:element name="nondfgfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizinterverticald" >
      <xs:complexContent>
       <xs:extension base="horizinterverticalb">
         <xs:sequence>
          <xs:element name="d" type="xs:string" />
          <xs:element name="d" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytearraypkpc2" >
      <xs:complexContent>
       <xs:extension base="bytearraypkpc">
         <xs:sequence>
          <xs:element name="subfield" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horize" >
      <xs:complexContent>
       <xs:extension base="horizc">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="e" type="xs:string" />
          <xs:element name="e" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="helperpc4" >
      <xs:complexContent>
       <xs:extension base="helperpc3">
         <xs:sequence>
          <xs:element name="field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizappmultic" >
      <xs:complexContent>
       <xs:extension base="horizappmultia">
         <xs:sequence>
          <xs:element name="c" type="xs:string" />
          <xs:element name="c" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attachb" >
      <xs:complexContent>
       <xs:extension base="attacha">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bstr" type="xs:string" />
          <xs:element name="b" type="xs:long" />
          <xs:element name="bdbl" type="xs:double" />
          <xs:element name="ds" type="xs:anyType" />
          <xs:element name="stringint" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizappsingled" >
      <xs:complexContent>
       <xs:extension base="horizappsinglea">
         <xs:sequence>
          <xs:element name="d" type="xs:string" />
          <xs:element name="d" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagerpcsub" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="field" type="xs:long" />
          <xs:element name="eagercollection2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappingtest3" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="verticalvalue" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horiza" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="a" type="xs:string" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="relations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinsubclassbasesubvert" >
      <xs:complexContent>
       <xs:extension base="joinsubclassbase">
         <xs:sequence>
          <xs:element name="basesubvertfield" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetooneowned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="marker" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="perclasstestobject" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizm" >
      <xs:complexContent>
       <xs:extension base="horizl">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="m" type="xs:string" />
          <xs:element name="m" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagerouterjoinpc2" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="ref" type="eagerouterjoinpc" nillable="true" minOccurs="0" />
        <xs:element name="helper" type="helperpc" nillable="true" minOccurs="0" />
        <xs:element name="string" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seqb" >
      <xs:complexContent>
       <xs:extension base="seqa">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rawsql" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constantjoinpc2" >
      <xs:complexContent>
       <xs:extension base="constantjoinpc">
         <xs:sequence>
          <xs:element name="pc2field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="invertb" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="inverta" nillable="true" minOccurs="0" />
        <xs:element name="test" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizappinterverticala" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="a" type="xs:string" />
        <xs:element name="a" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizi" >
      <xs:complexContent>
       <xs:extension base="horizg">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="i" type="xs:string" />
          <xs:element name="i" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basesub1sub1" >
      <xs:complexContent>
       <xs:extension base="basesub1">
         <xs:sequence>
          <xs:element name="basesub1sub1field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runtimetest3" >
      <xs:complexContent>
       <xs:extension base="runtimetest2">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="field3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizinterc" >
      <xs:complexContent>
       <xs:extension base="horizinterb">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonpkjoinpc" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="partial" type="partialjoinpc" nillable="true" minOccurs="0" />
        <xs:element name="partials" type="xs:anyType" />
        <xs:element name="constant" type="constantjoinpc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relations" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="base" nillable="true" minOccurs="0" />
        <xs:element name="null" type="base" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="basesub1" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="basesub1sub2" nillable="true" minOccurs="0" />
        <xs:element name="base" type="xs:anyType" />
        <xs:element name="emptybase" type="xs:anyType" />
        <xs:element name="basesub1" type="xs:anyType" />
        <xs:element name="basesub1sub2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inversekeymappc" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="helpers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eagerpc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="eager" type="helperpc" nillable="true" minOccurs="0" />
        <xs:element name="eagersub" type="helperpc4" nillable="true" minOccurs="0" />
        <xs:element name="recurse" type="helperpc2" nillable="true" minOccurs="0" />
        <xs:element name="helper" type="helperpc" nillable="true" minOccurs="0" />
        <xs:element name="eagercollection" type="xs:anyType" />
        <xs:element name="recursecollection" type="xs:anyType" />
        <xs:element name="helpercollection" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seqf" >
      <xs:complexContent>
       <xs:extension base="seqe">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizappc" >
      <xs:complexContent>
       <xs:extension base="horizappa">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizinterflata" >
      <xs:sequence>
        <xs:element name="a" type="xs:string" />
        <xs:element name="a" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizappsingleb" >
      <xs:complexContent>
       <xs:extension base="horizappsinglea">
         <xs:sequence>
          <xs:element name="b" type="xs:string" />
          <xs:element name="b" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="placeholdertypesb" >
      <xs:complexContent>
       <xs:extension base="placeholdertypesa">
         <xs:sequence>
          <xs:element name="b" type="xs:anyType" />
          <xs:element name="b" type="xs:anyType" />
          <xs:element name="b" type="xs:anyType" />
          <xs:element name="b" type="xs:double" />
          <xs:element name="b" type="xs:long" />
          <xs:element name="b" type="xs:string" />
          <xs:element name="clobb" type="xs:string" />
          <xs:element name="blobb" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attachd" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="dstr" type="xs:string" />
        <xs:element name="d" type="xs:long" />
        <xs:element name="ddbl" type="xs:double" />
        <xs:element name="a" type="attacha" nillable="true" minOccurs="0" />
        <xs:element name="//dfgbs" type="xs:anyType" />
        <xs:element name="pcstring" type="xs:anyType" />
        <xs:element name="bigintegerpcmap" type="xs:anyType" />
        <xs:element name="embeddede" type="attache" nillable="true" minOccurs="0" />
        <xs:element name="embeddeda" type="attacha" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multif" >
      <xs:complexContent>
       <xs:extension base="multie">
         <xs:sequence>
          <xs:element name="1" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithfailedexternalizer" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="iref" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="ext" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="perclasstestobject2" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoincrementoporderpcsub" >
      <xs:complexContent>
       <xs:extension base="autoincrementoporderpc">
         <xs:sequence>
          <xs:element name="sub" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizg" >
      <xs:complexContent>
       <xs:extension base="horize">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="g" type="xs:string" />
          <xs:element name="g" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rawfield" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytest1" >
      <xs:sequence>
        <xs:element name="five" type="xs:long" />
        <xs:element name="num" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:string" />
        <xs:element name="clobfield" type="xs:string" />
        <xs:element name="bool" type="xs:anyType" />
        <xs:element name="decimal" type="xs:double" />
        <xs:element name="acter" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="manytomany" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingtest5" >
      <xs:complexContent>
       <xs:extension base="mappingtest2">
         <xs:sequence>
          <xs:element name="vertvalue" type="xs:long" />
          <xs:element name="vertrel" type="mappingtest5" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stateimagepc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
        <xs:element name="stateimage" type="stateimagepc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizappmultia" >
      <xs:sequence>
        <xs:element name="//initializepkvaluestorandomvalues//fixme/*pk1" type="xs:string" />
        <xs:element name="pk2" type="xs:long" />
        <xs:element name="a" type="xs:string" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="relations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multib" >
      <xs:complexContent>
       <xs:extension base="multia">
         <xs:sequence>
          <xs:element name="b" type="xs:string" />
          <xs:element name="b" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="recursivelyembeddedpc" >
      <xs:sequence>
        <xs:element name="embedded" type="embeddedpc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoincrementpc2" >
      <xs:complexContent>
       <xs:extension base="autoincrementpc1">
         <xs:sequence>
          <xs:element name="field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="helperpc2" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="helper" type="helperpc3" nillable="true" minOccurs="0" />
        <xs:element name="helpercollection" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizc" >
      <xs:complexContent>
       <xs:extension base="horiza">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="c" type="xs:string" />
          <xs:element name="c" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jointablemappc" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="helpers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingtest1" >
      <xs:sequence>
        <xs:element name="value" type="xs:long" />
        <xs:element name="othertablevalue" type="xs:long" />
        <xs:element name="blob" type="xs:anyType" />
        <xs:element name="oneone" type="mappingtest2" nillable="true" minOccurs="0" />
        <xs:element name="selfoneone" type="mappingtest1" nillable="true" minOccurs="0" />
        <xs:element name="othertableoneone" type="mappingtest2" nillable="true" minOccurs="0" />
        <xs:element name="inverseowneroneone" type="mappingtest2" nillable="true" minOccurs="0" />
        <xs:element name="inverseoneone" type="mappingtest2" nillable="true" minOccurs="0" />
        <xs:element name="collection" type="xs:anyType" />
        <xs:element name="inverseowneronemany" type="xs:anyType" />
        <xs:element name="onemany" type="xs:anyType" />
        <xs:element name="manymany" type="xs:anyType" />
        <xs:element name="inverseownermanymany" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="nmany" type="xs:anyType" />
        <xs:element name="manymany" type="xs:anyType" />
        <xs:element name="transactionalvalue" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizinterverticalb" >
      <xs:complexContent>
       <xs:extension base="horizinterverticala">
         <xs:sequence>
          <xs:element name="b" type="xs:string" />
          <xs:element name="b" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizrelation" >
      <xs:sequence>
        <xs:element name="/////////////////////////onetoonemappings///////////////////////serialversionuid" type="xs:long" />
        <xs:element name="ob" type="horiza" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizb" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizc" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizd" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horize" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizf" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizg" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizh" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizi" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizj" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizk" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizl" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizm" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizn" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizo" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizappsinglea" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizappsingleb" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizappsinglec" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizappsingled" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizappmultia" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizappmultib" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizappmultic" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizappmultid" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizinterflata" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizinterflatb" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizinterflatc" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizinterflatd" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizinterverticala" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizinterverticalb" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizinterverticalc" nillable="true" minOccurs="0" />
        <xs:element name="ob" type="horizinterverticald" nillable="true" minOccurs="0" />
        <xs:element name="//////////////////////////onetomanymappings////////////////////////choriza" type="xs:anyType" />
        <xs:element name="chorizb" type="xs:anyType" />
        <xs:element name="chorizc" type="xs:anyType" />
        <xs:element name="chorizd" type="xs:anyType" />
        <xs:element name="chorize" type="xs:anyType" />
        <xs:element name="chorizf" type="xs:anyType" />
        <xs:element name="chorizg" type="xs:anyType" />
        <xs:element name="chorizh" type="xs:anyType" />
        <xs:element name="chorizi" type="xs:anyType" />
        <xs:element name="chorizj" type="xs:anyType" />
        <xs:element name="chorizk" type="xs:anyType" />
        <xs:element name="chorizl" type="xs:anyType" />
        <xs:element name="chorizm" type="xs:anyType" />
        <xs:element name="chorizn" type="xs:anyType" />
        <xs:element name="chorizo" type="xs:anyType" />
        <xs:element name="chorizappsinglea" type="xs:anyType" />
        <xs:element name="chorizappsingleb" type="xs:anyType" />
        <xs:element name="chorizappsinglec" type="xs:anyType" />
        <xs:element name="chorizappsingled" type="xs:anyType" />
        <xs:element name="chorizappmultia" type="xs:anyType" />
        <xs:element name="chorizappmultib" type="xs:anyType" />
        <xs:element name="chorizappmultic" type="xs:anyType" />
        <xs:element name="chorizappmultid" type="xs:anyType" />
        <xs:element name="chorizinterflata" type="xs:anyType" />
        <xs:element name="chorizinterflatb" type="xs:anyType" />
        <xs:element name="chorizinterflatc" type="xs:anyType" />
        <xs:element name="chorizinterflatd" type="xs:anyType" />
        <xs:element name="chorizinterverticala" type="xs:anyType" />
        <xs:element name="chorizinterverticalb" type="xs:anyType" />
        <xs:element name="chorizinterverticalc" type="xs:anyType" />
        <xs:element name="chorizinterverticald" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoincrementoporderpc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="rel" type="autoincrementoporderpc" nillable="true" minOccurs="0" />
        <xs:element name="owner" type="autoincrementoporderpc" nillable="true" minOccurs="0" />
        <xs:element name="secondary" type="xs:string" />
        <xs:element name="rel" type="xs:anyType" />
        <xs:element name="mappedrel" type="xs:anyType" />
        <xs:element name="inversekeyrel" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locatortestobject" >
      <xs:sequence>
        <xs:element name="s" type="xs:anyType" />
        <xs:element name="clob" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonpkjoinpc2" >
      <xs:complexContent>
       <xs:extension base="nonpkjoinpc">
         <xs:sequence>
          <xs:element name="field" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagerouterjoinpc" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="string" type="xs:anyType" />
        <xs:element name="string" type="xs:anyType" />
        <xs:element name="onemany" type="xs:anyType" />
        <xs:element name="manymany" type="xs:anyType" />
        <xs:element name="manymany" type="xs:anyType" />
        <xs:element name="helper" type="helperpc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizo" >
      <xs:complexContent>
       <xs:extension base="horizn">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="o" type="xs:string" />
          <xs:element name="o" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="noclasscolumn" >
      <xs:sequence>
        <xs:element name="test" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oporderpc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="rel" type="oporderpc" nillable="true" minOccurs="0" />
        <xs:element name="owner" type="oporderpc" nillable="true" minOccurs="0" />
        <xs:element name="secondary" type="xs:string" />
        <xs:element name="rel" type="xs:anyType" />
        <xs:element name="mappedrel" type="xs:anyType" />
        <xs:element name="inversekeyrel" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stateimagepc2" >
      <xs:complexContent>
       <xs:extension base="stateimagepc">
         <xs:sequence>
          <xs:element name="field" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="paginghelperpc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedownerpc" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="embedded" type="embeddedpc" nillable="true" minOccurs="0" />
        <xs:element name="complexembedded" type="complexembeddedpc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constantjoinpc" >
      <xs:sequence>
        <xs:element name="pk1" type="xs:long" />
        <xs:element name="pk2" type="xs:long" />
        <xs:element name="nonpk" type="nonpkjoinpc" nillable="true" minOccurs="0" />
        <xs:element name="nonpk2" type="nonpkjoinpc" nillable="true" minOccurs="0" />
        <xs:element name="nonpks" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partialjoinpc3" >
      <xs:complexContent>
       <xs:extension base="partialjoinpc2">
         <xs:sequence>
          <xs:element name="nonpk3" type="nonpkjoinpc3" nillable="true" minOccurs="0" />
          <xs:element name="nonpk2s" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizk" >
      <xs:complexContent>
       <xs:extension base="horizj">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="k" type="xs:string" />
          <xs:element name="k" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizappinterverticalc" >
      <xs:complexContent>
       <xs:extension base="horizappinterverticalb">
         <xs:sequence>
          <xs:element name="c" type="xs:string" />
          <xs:element name="c" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="buildschemapc" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionalclasspc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custommappingpc" >
      <xs:sequence>
        <xs:element name="female" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockgroupsubclass" >
      <xs:complexContent>
       <xs:extension base="horizb">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="nondefaultlockgroupfield" type="xs:string" />
          <xs:element name="defaultlockgroupfield" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datastoretripspc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="somefield" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="//transactionalonlytrans" type="xs:string" />
        <xs:element name="//relations//@transientselfoneone" type="runtimetest1" nillable="true" minOccurs="0" />
        <xs:element name="selfonemany" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizintera" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constantjoinpc4" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="onetoone1" type="constantjoinpc5" nillable="true" minOccurs="0" />
        <xs:element name="manytomany" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seqd" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="recursiveentitywithcompositeid" >
      <xs:sequence>
        <xs:element name="//thismustmatchthefieldincompositeidid" type="xs:anyType" />
        <xs:element name="//thismustmatchthefieldincompositeidname" type="xs:string" />
        <xs:element name="//anon-primarykeyfieldvalue" type="xs:long" />
        <xs:element name="//self-relatedrelation" type="recursiveentitywithcompositeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlmapitem" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="entity2" nillable="true" minOccurs="0" />
        <xs:element name="versionfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlmapperson" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="sqlmapaddress" nillable="true" minOccurs="0" />
        <xs:element name="partner" type="sqlmapperson" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ownerofentitywithcompositeid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="relation" type="entitywithcompositeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlmaporder" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="item" type="sqlmapitem" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlmapaddress" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithcompositeid" >
      <xs:sequence>
        <xs:element name="//thismustmatchthefieldincompositeidid" type="xs:anyType" />
        <xs:element name="//thismustmatchthefieldincompositeidname" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizappa" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="complexembeddedpc" >
      <xs:complexContent>
       <xs:extension base="recursivelyembeddedpc">
         <xs:sequence>
          <xs:element name="field" type="xs:string" />
          <xs:element name="ownerfield" type="embeddedownerpc" nillable="true" minOccurs="0" />
          <xs:element name="string" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="predetachcallback" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonpkjoinpc3" >
      <xs:complexContent>
       <xs:extension base="nonpkjoinpc2">
         <xs:sequence>
          <xs:element name="partial3" type="partialjoinpc3" nillable="true" minOccurs="0" />
          <xs:element name="partial2s" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizinterd" >
      <xs:complexContent>
       <xs:extension base="horizinterb">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stateimagepc3" >
      <xs:sequence>
        <xs:element name="lockfield" type="xs:long" />
        <xs:element name="nolockfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizn" >
      <xs:complexContent>
       <xs:extension base="horizm">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="n" type="xs:string" />
          <xs:element name="n" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedsql" >
      <xs:sequence>
        <xs:element name="num" type="xs:long" />
        <xs:element name="num2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizappd" >
      <xs:complexContent>
       <xs:extension base="horizappa">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postdetachcallback" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partialjoinpc2" >
      <xs:complexContent>
       <xs:extension base="partialjoinpc">
         <xs:sequence>
          <xs:element name="field" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedpc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inverta" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="test" type="xs:string" />
        <xs:element name="GeneratedName" type="invertb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seqa" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizappinterverticalb" >
      <xs:complexContent>
       <xs:extension base="horizappinterverticala">
         <xs:sequence>
          <xs:element name="b" type="xs:string" />
          <xs:element name="b" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basesub1sub2" >
      <xs:complexContent>
       <xs:extension base="basesub1">
         <xs:sequence>
          <xs:element name="basesub1sub2field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizj" >
      <xs:complexContent>
       <xs:extension base="horizd">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="j" type="xs:string" />
          <xs:element name="j" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="circularfkpc2" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="fkfield" type="circularfkpc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seqe" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constantjoinpc5" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bytearraypkpcid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="hex" type="xs:anyType" />
        <xs:element name="pk" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetooneowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="marker" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="owned" type="unidirectionalonetooneowned" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinsubclassbase" >
      <xs:sequence>
        <xs:element name="basefield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lrspcintf" >
      <xs:complexContent>
       <xs:extension base="comparable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizappsinglec" >
      <xs:complexContent>
       <xs:extension base="horizappsinglea">
         <xs:sequence>
          <xs:element name="c" type="xs:string" />
          <xs:element name="c" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attache" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="estr" type="xs:string" />
        <xs:element name="e" type="xs:long" />
        <xs:element name="edbl" type="xs:double" />
        <xs:element name="b" type="attachb" nillable="true" minOccurs="0" />
        <xs:element name="f" type="attachf" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basesub1" >
      <xs:complexContent>
       <xs:extension base="base">
         <xs:sequence>
          <xs:element name="basesub1field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizappmultid" >
      <xs:complexContent>
       <xs:extension base="horizappmultia">
         <xs:sequence>
          <xs:element name="d" type="xs:string" />
          <xs:element name="d" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytearraypkpc" >
      <xs:sequence>
        <xs:element name="pk" type="xs:anyType" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="rels" type="xs:anyType" />
        <xs:element name="parent" type="bytearraypkpc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoincrementpc3id" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizf" >
      <xs:complexContent>
       <xs:extension base="horize">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="f" type="xs:string" />
          <xs:element name="f" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="perclasstestobject3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinsubclassbasesubflat" >
      <xs:complexContent>
       <xs:extension base="joinsubclassbasesubvert">
         <xs:sequence>
          <xs:element name="basesubflatfield" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappingtest4" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="flatvalue" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="circularfkpc" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="fkfield" type="circularfkpc2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oporder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multic" >
      <xs:complexContent>
       <xs:extension base="multib">
         <xs:sequence>
          <xs:element name="c0" type="xs:string" />
          <xs:element name="c1" type="xs:string" />
          <xs:element name="c" type="xs:long" />
          <xs:element name="multias" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horizinterflatd" >
      <xs:complexContent>
       <xs:extension base="horizinterflatb">
         <xs:sequence>
          <xs:element name="d" type="xs:string" />
          <xs:element name="d" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preattachcallback" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoincrementpc3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="oneone" type="autoincrementpc3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attacha" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="//transientmethodfortestingcallbackstransientdetachsource" type="xs:anyType" />
        <xs:element name="transientattachsource" type="xs:anyType" />
        <xs:element name="transientpreattachcalls" type="xs:long" />
        <xs:element name="transientpostattachcalls" type="xs:long" />
        <xs:element name="transientpredetachcalls" type="xs:long" />
        <xs:element name="transientpostdetachcalls" type="xs:long" />
        <xs:element name="astr" type="xs:string" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="adbl" type="xs:double" />
        <xs:element name="array" type="xs:string" />
        <xs:element name="array" type="attache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizb" >
      <xs:complexContent>
       <xs:extension base="horiza">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="b" type="xs:string" />
          <xs:element name="b" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="helperpc3" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pagingappidpc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="rel" type="paginghelperpc" nillable="true" minOccurs="0" />
        <xs:element name="rels" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horizinterverticalc" >
      <xs:complexContent>
       <xs:extension base="horizinterverticalb">
         <xs:sequence>
          <xs:element name="c" type="xs:string" />
          <xs:element name="c" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postattachcallback" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlsniffer" >
      <xs:sequence>
        <xs:element name="cache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbctestcase" >
      <xs:complexContent>
       <xs:extension base="basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testincrementaljdbcflushes" >
      <xs:complexContent>
       <xs:extension base="basejdbctest">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbytearrayappid" >
      <xs:complexContent>
       <xs:extension base="basejdbctest">
         <xs:sequence>
          <xs:element name="_init" type="xs:anyType" />
          <xs:element name="test_count" type="xs:long" />
          <xs:element name="_pmf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbatchflushwithmetadataexception" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testembeddedpessimisticlocking" >
      <xs:complexContent>
       <xs:extension base="testsqllistenertestcase">
         <xs:sequence>
          <xs:element name="supportslocking" type="xs:anyType" />
          <xs:element name="oid" type="xs:anyType" />
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testrawsql" >
      <xs:complexContent>
       <xs:extension base="basejdbctest">
         <xs:sequence>
          <xs:element name="_oids" type="xs:anyType" />
          <xs:element name="_s" type="xs:string" />
          <xs:element name="_s" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbautoincrement" >
      <xs:complexContent>
       <xs:extension base="basejdbctest">
         <xs:sequence>
          <xs:element name="//boolean" type="xs:long" />
          <xs:element name="oid3" type="xs:long" />
          <xs:element name="oid4,oid2a,oid2b,oid3b" type="xs:long" />
          <xs:element name="oid3a" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testunknownsubclass" >
      <xs:complexContent>
       <xs:extension base="jdbctestcase">
         <xs:sequence>
          <xs:element name="parentname" type="xs:string" />
          <xs:element name="childname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpagingresultobjectprovider" >
      <xs:complexContent>
       <xs:extension base="testsqllistenertestcase">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsqllistenertestcase" >
      <xs:complexContent>
       <xs:extension base="basejdbctest">
         <xs:sequence>
          <xs:element name="brokers" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testupdatewithsubselect" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basejdbctest" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.common.utils.abstracttestcase">
         <xs:sequence>
          <xs:element name="_sysprops" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testefficientattach" >
      <xs:complexContent>
       <xs:extension base="testsqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcircularfk" >
      <xs:complexContent>
       <xs:extension base="basejdbctest{">
         <xs:sequence>
          <xs:element name="_oid1" type="xs:anyType" />
          <xs:element name="_oid2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatastoretrips" >
      <xs:complexContent>
       <xs:extension base="basejdbctest{">
         <xs:sequence>
          <xs:element name="//boolean" type="xs:anyType" />
          <xs:element name="_oid" type="xs:anyType" />
          <xs:element name="_counter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testoperationorderupdatemanager" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="//" type="xs:anyType" />
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjdbctype" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjointobaseclass" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmultitableselfcollection" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="a1oid" type="xs:anyType" />
          <xs:element name="a2oid" type="xs:anyType" />
          <xs:element name="a3oid" type="xs:anyType" />
          <xs:element name="a4oid" type="xs:anyType" />
          <xs:element name="c1oid" type="xs:anyType" />
          <xs:element name="c2oid" type="xs:anyType" />
          <xs:element name="c3oid" type="xs:anyType" />
          <xs:element name="c4oid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsubclassjoinextent" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.testsqllistenertestcase">
         <xs:sequence>
          <xs:element name="_outer" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsubclassjoinrelations" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.testsqllistenertestcase">
         <xs:sequence>
          <xs:element name="_outer" type="xs:string" />
          <xs:element name="_oid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjoinsubclasses" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.testsqllistenertestcase">
         <xs:sequence>
          <xs:element name="_outer" type="xs:string" />
          <xs:element name="_base" type="xs:anyType" />
          <xs:element name="_basesubflat" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsubclassjoingetobjectbyid" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.testsqllistenertestcase">
         <xs:sequence>
          <xs:element name="_outer" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnoclasscolumn" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testeageroutertomanyjoins" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testrawfield" >
      <xs:complexContent>
       <xs:extension base="basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmetadatavalueindicator" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="pm" type="xs:anyType" />
          <xs:element name="emapping" type="xs:anyType" />
          <xs:element name="fmapping" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbconstantjoinonsamereftable" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="oid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlrsproxies" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="_oid" type="xs:anyType" />
          <xs:element name="_coid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlockgroupswithhorizontalbasetype" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testqueryagainstentiremappedhierarchy" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.testsqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmultidfg" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="boid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testeagerdistinct" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.testsqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlocators" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="pmf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbuildschema" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmappedbykeymaps" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testunionplaceholdertypes" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.testsqllistenertestcase">
         <xs:sequence>
          <xs:element name="_union" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testrangequery" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbdateversion" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="oid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testirregularjoins" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="_nonpk" type="xs:anyType" />
          <xs:element name="_nonpk3" type="xs:anyType" />
          <xs:element name="_partial" type="xs:anyType" />
          <xs:element name="_partial3" type="xs:anyType" />
          <xs:element name="_constant2" type="xs:anyType" />
          <xs:element name="_constant3" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testuseschemaelement" >
      <xs:complexContent>
       <xs:extension base="/*testcase*/">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbcolumniomappings" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbcustommapping" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="_oid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbouterjoinvalues" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="oid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teststateimage" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.testsqllistenertestcase">
         <xs:sequence>
          <xs:element name="_oid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdfg" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="oid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmultitablemappings" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.testsqllistenertestcase">
         <xs:sequence>
          <xs:element name="aoid" type="xs:anyType" />
          <xs:element name="boid" type="xs:anyType" />
          <xs:element name="coid" type="xs:anyType" />
          <xs:element name="doid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbeager" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="_oid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testintermediate" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="_pc" type="xs:anyType" />
          <xs:element name="_rel" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbbytearray" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="_null" type="xs:long" />
          <xs:element name="_empty" type="xs:long" />
          <xs:element name="_small" type="xs:long" />
          <xs:element name="_large" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbinverseonetoone" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teststrategyannotaion" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="innerjoinstrategy" >
      <xs:complexContent>
       <xs:extension base="relationfieldstrategy">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testhandlerstrategy" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="idaddress" type="xs:long" />
        <xs:element name="city" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapperentity" >
      <xs:sequence>
        <xs:element name="values" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="idperson" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtimestamppkdeletion" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testoptimizeforclause" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfkcolumnnames" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testisolationfecthhint" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nameduniqueb" >
      <xs:sequence>
        <xs:element name="bid" type="xs:long" />
        <xs:element name="//samenamedfieldinuniqueaalsoisdefinedasuniquef1" type="xs:long" />
        <xs:element name="f2" type="xs:long" />
        <xs:element name="f3" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uniquea" >
      <xs:sequence>
        <xs:element name="aid" type="xs:long" />
        <xs:element name="//samenamedfieldinuniquebalsoisdefinedasuniquef1" type="xs:long" />
        <xs:element name="f2" type="xs:long" />
        <xs:element name="f3" type="xs:long" />
        <xs:element name="f4" type="xs:long" />
        <xs:element name="f5" type="xs:long" />
        <xs:element name="f6" type="xs:long" />
        <xs:element name="sf1" type="xs:long" />
        <xs:element name="sf2" type="xs:long" />
        <xs:element name="bs" type="uniqueb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnameduniqueconstraintwithxmldescriptor" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="dict" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nameduniquea" >
      <xs:sequence>
        <xs:element name="aid" type="xs:long" />
        <xs:element name="//samenamedfieldinuniquebalsoisdefinedasuniquef1" type="xs:long" />
        <xs:element name="f2" type="xs:long" />
        <xs:element name="f3" type="xs:long" />
        <xs:element name="f4" type="xs:long" />
        <xs:element name="f5" type="xs:long" />
        <xs:element name="f6" type="xs:long" />
        <xs:element name="sf1" type="xs:long" />
        <xs:element name="sf2" type="xs:long" />
        <xs:element name="bs" type="nameduniqueb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testuniqueconstraint" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnameduniqueconstraint" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="dict" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uniqueb" >
      <xs:sequence>
        <xs:element name="bid" type="xs:long" />
        <xs:element name="//samenamedfieldinuniqueaalsoisdefinedasuniquef1" type="xs:long" />
        <xs:element name="f2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testuniqueconstraintwithxmldescriptor" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjdbcenumtokernelconstantmappings" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testselectforupdateoverride" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mydbcsentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdbcs" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cd" >
      <xs:complexContent>
       <xs:extension base="merchandise">
         <xs:sequence>
          <xs:element name="label" type="xs:string" />
          <xs:element name="status" type="xs:long" />
          <xs:element name="" type="singer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="composedpk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="field1" type="xs:long" />
        <xs:element name="field2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extvalue1" >
      <xs:complexContent>
       <xs:extension base="abstractextvalue">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractextvalue" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdata" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="composedpk" nillable="true" minOccurs="0" />
        <xs:element name="extvalue" type="extvalue1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testfindercachewithnulls" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="fetchcfg" type="xs:anyType" />
          <xs:element name="fndrcache" type="xs:anyType" />
          <xs:element name="clsmapping_userdata" type="xs:anyType" />
          <xs:element name="clsmapping_abstractextvalue" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpreparedquerycacheexclusion" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="cache" type="xs:anyType" />
          <xs:element name="keys" type="xs:string" />
          <xs:element name="values" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderjpa" >
      <xs:sequence>
        <xs:element name="orderid" type="xs:long" />
        <xs:element name="customerid" type="xs:long" />
        <xs:element name="districtid" type="xs:long" />
        <xs:element name="warehouseid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="merchandise" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="startyear" type="xs:long" />
        <xs:element name="departments" type="department" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testexternalizedparameter" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="resource" type="xs:string" />
          <xs:element name="unit_name" type="xs:string" />
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="combinedpktestentity" >
      <xs:sequence>
        <xs:element name="pk" type="combinedpkembeddedentity" nillable="true" minOccurs="0" />
        <xs:element name="data1" type="xs:string" />
        <xs:element name="data2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="addrid" type="address" nillable="true" minOccurs="0" />
        <xs:element name="/***thisfieldismappedbythechild.thechild'stablewillholdaforeign*keylinkingtotheprimarykeyofthisparent'stable.injpa*terminology,thatmakesthechildtheownerofthisbi-directional*relationship.*/children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpreparedquerycache" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="resource" type="xs:string" />
          <xs:element name="unit_name" type="xs:string" />
          <xs:element name="//no.ofobservationsforperformancestatisticssample_size" type="xs:long" />
          <xs:element name="//mnemonicforusingcacheuse_cache" type="xs:anyType" />
          <xs:element name="no_params" type="xs:anyType" />
          <xs:element name="//mnemonicfornamedqueryis_named_query" type="xs:anyType" />
          <xs:element name="fail_if_perf_degrade" type="xs:anyType" />
          <xs:element name="ibm" type="company" nillable="true" minOccurs="0" />
          <xs:element name="company_names" type="xs:string" />
          <xs:element name="start_years" type="xs:long" />
          <xs:element name="department_names" type="xs:string" />
          <xs:element name="employee_names" type="xs:string" />
          <xs:element name="employee_start_s" type="xs:dateTime" />
          <xs:element name="employee_end_s" type="xs:dateTime" />
          <xs:element name="city_names" type="xs:string" />
          <xs:element name="excluded_query_1" type="xs:string" />
          <xs:element name="excluded_query_2" type="xs:string" />
          <xs:element name="included_query" type="xs:string" />
          <xs:element name="book_ids" type="xs:long" />
          <xs:element name="book_names" type="xs:string" />
          <xs:element name="cd_ids" type="xs:long" />
          <xs:element name="cd_labels" type="xs:string" />
          <xs:element name="emf" type="xs:anyType" />
          <xs:element name="auditor" type="xs:anyType" />
          <xs:element name="test_count" type="xs:long" />
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="addrid" type="xs:long" />
        <xs:element name="hashcode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="cds" type="cd" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="books" type="book" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdefaultquerystatistics" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="statistics" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmultithreadedreparameterization" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="resource" type="xs:string" />
          <xs:element name="unit_name" type="xs:string" />
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfindercache" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="book_ids" type="xs:long" />
          <xs:element name="book_names" type="xs:string" />
          <xs:element name="cd_ids" type="xs:long" />
          <xs:element name="cd_labels" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:complexContent>
       <xs:extension base="merchandise">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="authors" type="author" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="token" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="company" nillable="true" minOccurs="0" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="combinedpkembeddedentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="keya" type="xs:long" />
        <xs:element name="keyb" type="xs:long" />
        <xs:element name="keyc" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testinexpressionparameterbinding" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_emf" type="xs:anyType" />
          <xs:element name="original_zips" type="xs:anyType" />
          <xs:element name="_em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="yob" type="xs:long" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="idcounter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="department" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="ismanager" type="xs:anyType" />
        <xs:element name="status" type="xs:anyType" />
        <xs:element name="hirestatus" type="xs:anyType" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="combinedpklistentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="te" type="combinedpktestentity" nillable="true" minOccurs="0" />
        <xs:element name="keya" type="xs:long" />
        <xs:element name="keyb" type="xs:long" />
        <xs:element name="keyc" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testlobs" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basetestelement" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bicycle" >
      <xs:sequence>
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basetestentity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="one2melems" type="basetestelement2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="m2melems" type="basetestelement2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="collelems" type="basetestelement2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trainer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="playerstrained" type="player" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testordercolumn" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="s" type="student" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="battingorder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="batters" type="player" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="pinch_hitters" type="player" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="fixedbatters" type="player" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="titles" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="obocentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="intlist" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="buildyear" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basetestelement3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="coldeftestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="one2mcoldef" type="coldeftestelement" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="collcoldef" type="coldeftestelement" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="m2mcoldef" type="coldeftestelement" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testordercolumnxml" >
      <xs:complexContent>
       <xs:extension base="abstractcachedemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basetestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="one2melems" type="basetestelement" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="m2melems" type="basetestelement" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="collelems" type="basetestelement" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basetestelement2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="waitlist" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="game" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="playedin" type="player" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="raindates" type="xs:anyType" />
        <xs:element name="innings" type="inning" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basetestentity3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="one2melems" type="basetestelement3" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="m2melems" type="basetestelement3" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="collelems" type="basetestelement3" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inning" >
      <xs:sequence>
        <xs:element name="inningnumber" type="xs:long" />
        <xs:element name="hitshome" type="xs:long" />
        <xs:element name="hitsaway" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="biorderentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bo2mbentity" type="biordermappedbyentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="biordermappedbyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="bo2mentities" type="biorderentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="//bidirectionalone-to-manyw/defaultjoincolumncars" type="car" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="//unidirectionalone-to-manyw/joincolumnhomes" type="home" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="widgets" type="widget" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="//elementcollectionbikecoll" type="bicycle" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="widget" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="owners" type="owner" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="courses" type="course" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="coldeftestelement" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="modelyear" type="xs:long" />
        <xs:element name="make" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basetestentity1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="one2melems" type="basetestelement1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="m2melems" type="basetestelement1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="collelems" type="basetestelement1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="player" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="playernumber" type="xs:long" />
          <xs:element name="trainers" type="trainer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="gamesplayedin" type="game" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basetestelement1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fullname" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmany2manymapex3" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbers" type="xs:long" />
          <xs:element name="numemployeesperphonenumber" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="empmap" type="xs:anyType" />
          <xs:element name="phonemap" type="xs:anyType" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="rsallphones" type="xs:anyType" />
          <xs:element name="rsallemps" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="emps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="phones" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fullname" >
      <xs:sequence>
        <xs:element name="fname1" type="xs:string" />
        <xs:element name="lname1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="//@attributeoverrides({//@attributeoverride(name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fullphonename" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmany2manymapex9" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbers" type="xs:long" />
          <xs:element name="numemployeesperphonenumber" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="phones" type="xs:anyType" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="empmap" type="xs:anyType" />
          <xs:element name="phonemap" type="xs:anyType" />
          <xs:element name="rsallphones" type="xs:anyType" />
          <xs:element name="rsallemps" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="//@attributeoverrides({//@attributeoverride(name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="branches" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspec10_1_29_ex1" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numcompany" type="xs:long" />
          <xs:element name="numdivisionsperco" type="xs:long" />
          <xs:element name="rsallcompany" type="xs:anyType" />
          <xs:element name="compid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="vpid" type="xs:long" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="sqlcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="organization" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vicepresident" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="emppk" type="employeepk" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="department" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeepk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bday" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:long" />
        <xs:element name="empmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspec10_1_26_ex2" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numdepartments" type="xs:long" />
          <xs:element name="numemployeesperdept" type="xs:long" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="rsalldepartments" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="office" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="division" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="emps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmany2manymapex4" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbers" type="xs:long" />
          <xs:element name="numemployeesperphonenumber" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="phones" type="xs:anyType" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="empmap" type="xs:anyType" />
          <xs:element name="phonemap" type="xs:anyType" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="officeid" type="xs:long" />
          <xs:element name="numofficesperdivision" type="xs:long" />
          <xs:element name="rsallphones" type="xs:anyType" />
          <xs:element name="rsallemps" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="sqlcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="phones" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="offices" type="office" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspec10_1_27_ex6" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numcompany" type="xs:long" />
          <xs:element name="numdivisionsperco" type="xs:long" />
          <xs:element name="compid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="vpid" type="xs:long" />
          <xs:element name="newdivid" type="xs:long" />
          <xs:element name="newvpid" type="xs:long" />
          <xs:element name="rsallcompany" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vicepresident" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="co" type="company" nillable="true" minOccurs="0" />
        <xs:element name="div" type="division" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="organization" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmany2manymap" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="empmap" type="xs:anyType" />
          <xs:element name="phonemap" type="xs:anyType" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="rsallphones" type="xs:anyType" />
          <xs:element name="rsallemps" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="phones" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="emps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vicepresident" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="co" type="company" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="orgs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspec10_1_27_ex8" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numcompany" type="xs:long" />
          <xs:element name="numdivisionsperco" type="xs:long" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="compid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="vpid" type="xs:long" />
          <xs:element name="newdivid" type="xs:long" />
          <xs:element name="newvpid" type="xs:long" />
          <xs:element name="rsallcompany" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filename" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:long" />
        <xs:element name="empmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="dept" type="department" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspec10_1_26_ex1" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numdepartments" type="xs:long" />
          <xs:element name="numemployeesperdept" type="xs:long" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="rsalldepartments" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testspec10_1_27_ex5" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numcompany" type="xs:long" />
          <xs:element name="numdivisionsperco" type="xs:long" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="compid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="vpid" type="xs:long" />
          <xs:element name="newdivid" type="xs:long" />
          <xs:element name="newvpid" type="xs:long" />
          <xs:element name="rsallcompany" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="orgs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vicepresident" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="co" type="company" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="emps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fullname" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmany2manymapex7" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbers" type="xs:long" />
          <xs:element name="numemployeesperphonenumber" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="phones" type="xs:anyType" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="empmap" type="xs:anyType" />
          <xs:element name="phonemap" type="xs:anyType" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="rsallphones" type="xs:anyType" />
          <xs:element name="rsallemps" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="sqlcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="phones" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="orgs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vicepresident" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="co" type="company" nillable="true" minOccurs="0" />
        <xs:element name="div" type="division" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="vp" type="vicepresident" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspec10_1_27_ex7" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numcompany" type="xs:long" />
          <xs:element name="numdivisionsperco" type="xs:long" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="compid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="vpid" type="xs:long" />
          <xs:element name="newdivid" type="xs:long" />
          <xs:element name="newvpid" type="xs:long" />
          <xs:element name="rsallcompany" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmany2manymapex5" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbers" type="xs:long" />
          <xs:element name="numemployeesperphonenumber" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="phones" type="xs:anyType" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="empmap" type="xs:anyType" />
          <xs:element name="phonemap" type="xs:anyType" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="rsallphones" type="xs:anyType" />
          <xs:element name="rsallemps" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="phones" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="emps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="personalinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personalinfo" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="phones" type="phone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="home" type="xs:string" />
        <xs:element name="office" type="xs:string" />
        <xs:element name="mobile" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="number" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testqualifiedpath" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numdivisions" type="xs:long" />
          <xs:element name="numemployeesperdivision" type="xs:long" />
          <xs:element name="nummobilephonesperemployee" type="xs:long" />
          <xs:element name="divisionid" type="xs:long" />
          <xs:element name="employeeid" type="xs:long" />
          <xs:element name="namecount" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="phonenumber" type="xs:long" />
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="GeneratedName" type="department" nillable="true" minOccurs="0" />
        <xs:element name="name" type="employeename" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:long" />
        <xs:element name="emps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspec10_1_26_ex3" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numdepartments" type="xs:long" />
          <xs:element name="numemployeesperdept" type="xs:long" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="rsalldepartments" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeename" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="images" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compny2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="orgs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vicepresident" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="co" type="compny1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="images" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspec10_1_27" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numitems" type="xs:long" />
          <xs:element name="numimagesperitem" type="xs:long" />
          <xs:element name="numcompany" type="xs:long" />
          <xs:element name="numdivisionsperco" type="xs:long" />
          <xs:element name="itemid" type="xs:long" />
          <xs:element name="compid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="vpid" type="xs:long" />
          <xs:element name="rsallcompny1" type="compny1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="rsallcompny2" type="compny2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compny1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="orgs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="emps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fullname" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmany2manymapex8" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbers" type="xs:long" />
          <xs:element name="numemployeesperphonenumber" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="phones" type="xs:anyType" />
          <xs:element name="empmap" type="xs:anyType" />
          <xs:element name="phonemap" type="xs:anyType" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="rsallphones" type="xs:anyType" />
          <xs:element name="rsallemps" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="phones" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmany2manymapex2" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbers" type="xs:long" />
          <xs:element name="numemployeesperphonenumber" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="empmap" type="xs:anyType" />
          <xs:element name="phonemap" type="xs:anyType" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="rsallphones" type="xs:anyType" />
          <xs:element name="rsallemps" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="emps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="phones" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fullname" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="emps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmany2manymapex6" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbers" type="xs:long" />
          <xs:element name="numemployeesperphonenumber" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="phones" type="xs:anyType" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="empmap" type="xs:anyType" />
          <xs:element name="phonemap" type="xs:anyType" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="rsallphones" type="xs:anyType" />
          <xs:element name="rsallemps" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="phones" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspec10_1_27_ex4" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numcompany" type="xs:long" />
          <xs:element name="numdivisionsperco" type="xs:long" />
          <xs:element name="compid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="vpid" type="xs:long" />
          <xs:element name="newdivid" type="xs:long" />
          <xs:element name="newvpid" type="xs:long" />
          <xs:element name="rsallcompany" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vicepresident" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="co" type="company" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="organization" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeename3" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee3" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="department" type="department3" nillable="true" minOccurs="0" />
        <xs:element name="name" type="employeename3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department2" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:long" />
        <xs:element name="empmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeepk2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bday" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee2" >
      <xs:sequence>
        <xs:element name="emppk" type="employeepk2" nillable="true" minOccurs="0" />
        <xs:element name="department" type="department2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department3" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:long" />
        <xs:element name="emps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department1" >
      <xs:sequence>
        <xs:element name="//@iddeptid" type="xs:long" />
        <xs:element name="//@onetomany(mappedby" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspec10_1_26" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numdepartments" type="xs:long" />
          <xs:element name="numemployeesperdept" type="xs:long" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="rsalldepartment1" type="department1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="rsalldepartment2" type="department2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="rsalldepartment3" type="department3" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee1" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="department" type="department1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmany2manymapex10" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbers" type="xs:long" />
          <xs:element name="numemployeesperphonenumber" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="emppks" type="employeepk" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="phonepks" type="phonepk" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="empmap" type="xs:anyType" />
          <xs:element name="phonemap" type="xs:anyType" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="rsallphones" type="xs:anyType" />
          <xs:element name="rsallemps" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeepk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bday" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonepk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="areacode" type="xs:string" />
        <xs:element name="phonenum" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="phonepk" nillable="true" minOccurs="0" />
        <xs:element name="emps" type="xs:anyType" />
        <xs:element name="room" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="emppk" type="employeepk" nillable="true" minOccurs="0" />
        <xs:element name="phones" type="xs:anyType" />
        <xs:element name="salary" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="emps" type="xs:anyType" />
        <xs:element name="GeneratedName" type="division" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="phones" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmany2manymapex1" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="empmap" type="xs:anyType" />
          <xs:element name="phonemap" type="xs:anyType" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="rsallphones" type="xs:anyType" />
          <xs:element name="rsallemps" type="xs:anyType" />
          <xs:element name="rsalldivisions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="phone" type="phonenumber" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="orgs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspec10_1_27_ex3" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numcompany" type="xs:long" />
          <xs:element name="numdivisionsperco" type="xs:long" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="compid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="vpid" type="xs:long" />
          <xs:element name="newdivid" type="xs:long" />
          <xs:element name="newvpid" type="xs:long" />
          <xs:element name="rsallcompany" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vicepresident" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="co" type="company" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localizedstring" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="/***languagecode.*/language" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multilingualstring" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmapupdate" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="entity1" type="multilingualstring" nillable="true" minOccurs="0" />
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="enrollment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="semester" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspec10_1_29_ex3" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numstudents" type="xs:long" />
          <xs:element name="numcoursesperstudent" type="xs:long" />
          <xs:element name="studentid" type="xs:long" />
          <xs:element name="courseid" type="xs:long" />
          <xs:element name="semesterid" type="xs:long" />
          <xs:element name="rsallstudents" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnativequeryparameterbinding" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="no_error" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbqlselectnplusone" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbctestcase" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testupdatesinglevaluedassociation" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="must_be_null" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractprocedurelist" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derbyprocedurelist" >
      <xs:complexContent>
       <xs:extension base="abstractprocedurelist">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="procedurelist" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timekeeper" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="tstamp" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timeentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:long" />
        <xs:element name="cal2timestamp" type="xs:anyType" />
        <xs:element name="cal2time" type="xs:anyType" />
        <xs:element name="cal2date" type="xs:anyType" />
        <xs:element name="udate2timestamp" type="xs:anyType" />
        <xs:element name="udate2time" type="xs:anyType" />
        <xs:element name="udate2sdate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="game" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dtasrcfieldbean" >
      <xs:sequence>
        <xs:element name="field" type="dtasrcfield" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="application" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="user" type="applicant" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chess" >
      <xs:complexContent>
       <xs:extension base="indoorgame">
         <xs:sequence>
          <xs:element name="npiece" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="applicant" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="magazine" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="publisher" nillable="true" minOccurs="0" />
        <xs:element name="published" type="xs:dateTime" />
        <xs:element name="tspublished" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gamebean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="game" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dtasrc" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="fields" type="dtasrcfield" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indoorgame" >
      <xs:complexContent>
       <xs:extension base="game">
         <xs:sequence>
          <xs:element name="nplayer" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="p1" type="xs:long" />
        <xs:element name="p2" type="xs:string" />
        <xs:element name="p3" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scrabble" >
      <xs:complexContent>
       <xs:extension base="indoorgame">
         <xs:sequence>
          <xs:element name="ntile" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="publisher" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="amount" type="xs:long" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dtasrcfield" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="datasource" type="dtasrc" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testorderbyquery" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsqlqueries" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="_tablename" type="xs:string" />
          <xs:element name="_fulltablename" type="xs:string" />
          <xs:element name="_pkcolname" type="xs:string" />
          <xs:element name="_intcolname" type="xs:string" />
          <xs:element name="_colname" type="xs:string" />
          <xs:element name="_relcolname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testupdatesinglevaluedassociationxml" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teststringfunctions" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="_pm" type="xs:anyType" />
          <xs:element name="_match" type="querytest1" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnamedsqlqueries" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testquerydefaulteviction" >
      <xs:complexContent>
       <xs:extension base="abstractquerycachetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parttimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="hourlywage" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractquerycachetest" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="entitytypes" type="xs:anyType" />
          <xs:element name="deletedata" type="xs:anyType" />
          <xs:element name="recreatedata" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="supplier" >
      <xs:sequence>
        <xs:element name="sid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="supplies" type="partbase" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partcomposite" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="assemblycost" type="xs:double" />
          <xs:element name="assemblytime" type="xs:double" />
          <xs:element name="massincrement" type="xs:double" />
          <xs:element name="partsused" type="usage" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="invoice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invoice" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="brandname" type="xs:string" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="lineitems" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnonprimarykeyqueryparameters" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="fulltime_employee_count" type="xs:long" />
          <xs:element name="parttime_employee_count" type="xs:long" />
          <xs:element name="lineitem_per_invoice" type="xs:long" />
          <xs:element name="dept_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parttimeemployees" type="parttimeemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="fulltimeemployees" type="fulltimeemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invoicekey" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="brandname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usage" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="child" type="part" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="partcomposite" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="departmentid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="part" >
      <xs:sequence>
        <xs:element name="partno" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="inventory" type="xs:long" />
        <xs:element name="usedin" type="usage" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
        <xs:element name="dept" type="department" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testquerytimestampeviction" >
      <xs:complexContent>
       <xs:extension base="abstractquerycachetest">
         <xs:sequence>
          <xs:element name="_sql" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="partbase" >
      <xs:complexContent>
       <xs:extension base="part">
         <xs:sequence>
          <xs:element name="cost" type="xs:double" />
          <xs:element name="mass" type="xs:double" />
          <xs:element name="backorder" type="xs:long" />
          <xs:element name="suppliers" type="supplier" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnativequeryprocedures" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="procedurelist" type="abstractprocedurelist" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testqueryparameterbinding" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="jpql" type="xs:string" />
          <xs:element name="_value" type="xs:long" />
          <xs:element name="str_value" type="xs:string" />
          <xs:element name="dbl_value" type="xs:double" />
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="maxquerymapentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="revision" type="xs:long" />
        <xs:element name="refentity" type="maxqueryentity" nillable="true" minOccurs="0" />
        <xs:element name="selectcriteria" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maxqueryentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="domainid" type="xs:long" />
        <xs:element name="revision" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsubquery" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtemporaltypequeryparameterbinding" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="param_" type="xs:anyType" />
          <xs:element name="t1" type="xs:long" />
          <xs:element name="t2" type="xs:long" />
          <xs:element name="t3" type="xs:long" />
          <xs:element name="value_" type="xs:dateTime" />
          <xs:element name="value_" type="xs:dateTime" />
          <xs:element name="value_tstamp" type="xs:anyType" />
          <xs:element name="jpql_named" type="xs:string" />
          <xs:element name="jpql_positional" type="xs:string" />
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnewjavaobjectquery" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testaggregatequerywithnoresult" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablenameinxmlentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="myid" type="xs:long" />
        <xs:element name="a,b,c" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtablenameinxml" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="containssql" type="xs:string" />
          <xs:element name="notcontainssql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjdbcgrouping" >
      <xs:complexContent>
       <xs:extension base="groupingtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmultipleentityprojection" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="inner_join" type="xs:anyType" />
          <xs:element name="magazine_publisher_name_pairs" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testhintedquery" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testgroupbyquery" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testperclasssequencefactory" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testclasssequencefactory" >
      <xs:complexContent>
       <xs:extension base="basejdbctest{">
         <xs:sequence>
          <xs:element name="_sysprops" type="xs:anyType" />
          <xs:element name="_" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdbsequencefactory" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="_" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testxmlschemaparser" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="conf" type="xs:anyType" />
          <xs:element name="_group" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testschemagenerator" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlazyschemafactory" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="_group" type="xs:anyType" />
          <xs:element name="_fks" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsequencegeneratorensurecapacitycall" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.testsqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testclassdbsequencefactory" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjdbclistener" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="commitoccurred" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testschema" >
      <xs:complexContent>
       <xs:extension base="basejdbctest">
         <xs:sequence>
          <xs:element name="_" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testschemaclone" >
      <xs:complexContent>
       <xs:extension base="testxmlschemaparser">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testschemagenerationproperties" >
      <xs:complexContent>
       <xs:extension base="basejdbctest">
         <xs:sequence>
          <xs:element name="tables_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdynamicschemafactory" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.jdbc.kernel.basejdbctest">
         <xs:sequence>
          <xs:element name="_mapping" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testxmlschemaserializer" >
      <xs:complexContent>
       <xs:extension base="testxmlschemaparser{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precisiontestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="primdbl" type="xs:double" />
        <xs:element name="dbl" type="xs:double" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="primdblprecis" type="xs:double" />
        <xs:element name="dblprecis" type="xs:double" />
        <xs:element name="precis" type="xs:anyType" />
        <xs:element name="primdblscale" type="xs:double" />
        <xs:element name="dblscale" type="xs:double" />
        <xs:element name="scale" type="xs:anyType" />
        <xs:element name="primdblprecisscale" type="xs:double" />
        <xs:element name="dblprecisscale" type="xs:double" />
        <xs:element name="precisscale" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="authority" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="authorityname" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcompositeidtraversalinsqlmapping" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnativequeries" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="table_name" type="xs:string" />
          <xs:element name="table_name_2" type="xs:string" />
          <xs:element name="const_name" type="xs:string" />
          <xs:element name="const_" type="xs:long" />
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="seqparentid" type="xs:long" />
        <xs:element name="autoparentid" type="xs:long" />
        <xs:element name="appparentid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iparent" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="phone" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="zip" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentwithappidentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="foreignkeylinkingtotheprimarykeyofthis*parent'stable.*/children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testonesidedparentchildwithimplicitforeignkey" >
      <xs:complexContent>
       <xs:extension base="		singleemftestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="parent_id_types" type="xs:anyType" />
          <xs:element name="value_strategies" type="xs:long" />
          <xs:element name="parent_ids" type="xs:long" />
          <xs:element name="parent_id_counter" type="xs:long" />
          <xs:element name="child_id_counter" type="xs:long" />
          <xs:element name="child_count" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbidirectionaljointable" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="ssn" type="xs:long" />
          <xs:element name="phones" type="xs:string" />
          <xs:element name="address_count" type="xs:long" />
          <xs:element name="citis" type="xs:string" />
          <xs:element name="zips" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentwithautoidentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="foreignkeylinkingtotheprimarykeyofthis*parent'stable.*/children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="addresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentwithsequenceidentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="foreignkeylinkingtotheprimarykeyofthis*parent'stable.*/children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testenumxmltypemapping" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testprecisionmapping" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_double_fields" type="xs:string" />
          <xs:element name="_big_decimal_field" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedidentity" >
      <xs:sequence>
        <xs:element name="id" type="embeddedidclass" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="relation" type="embeddedidentity" nillable="true" minOccurs="0" />
        <xs:element name="mapoverriderelation" type="embeddedidentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flat2" >
      <xs:complexContent>
       <xs:extension base="flat1">
         <xs:sequence>
          <xs:element name="basic2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tableperclass1" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="basic" type="xs:long" />
        <xs:element name="embed" type="embedvalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testonetomany" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embedvalue2" >
      <xs:sequence>
        <xs:element name="basic" type="xs:string" />
        <xs:element name="basic" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testindices" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotest1" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="basic" type="xs:long" />
        <xs:element name="trans" type="xs:long" />
        <xs:element name="othertablebasic" type="xs:long" />
        <xs:element name="selfoneone" type="annotest1" nillable="true" minOccurs="0" />
        <xs:element name="pkjoinselfoneone" type="annotest1" nillable="true" minOccurs="0" />
        <xs:element name="oneone" type="annotest2" nillable="true" minOccurs="0" />
        <xs:element name="othertableoneone" type="annotest2" nillable="true" minOccurs="0" />
        <xs:element name="inverseowneroneone" type="annotest2" nillable="true" minOccurs="0" />
        <xs:element name="blob" type="xs:anyType" />
        <xs:element name="serial" type="xs:anyType" />
        <xs:element name="clob" type="xs:string" />
        <xs:element name="//un-annotatedenumshouldbepersistedbydefaultenumeration" type="xs:anyType" />
        <xs:element name="ordinalenumeration" type="xs:anyType" />
        <xs:element name="stringenumeration" type="xs:anyType" />
        <xs:element name="onemany" type="annotest2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="inverseowneronemany" type="annotest2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="manymany" type="annotest2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="inverseownermanymany" type="annotest2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="defaultmapkey" type="xs:anyType" />
        <xs:element name="namedmapkey" type="xs:anyType" />
        <xs:element name="inverseownermapkey" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multicolumnsecondaryversionpc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="s1" type="xs:string" />
        <xs:element name="s2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multicolumnversionpc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embedowner" >
      <xs:sequence>
        <xs:element name="embed" type="embedvalue" nillable="true" minOccurs="0" />
        <xs:element name="embedcollection" type="embedvalue" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="basic" type="xs:string" />
        <xs:element name="pk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmulticolumnversionxml" >
      <xs:complexContent>
       <xs:extension base="testmulticolumnversion">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjoinedinheritance" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonstandardmappingentity4" >
      <xs:complexContent>
       <xs:extension base="nonstandardmappingmappedsuper4">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonstandardmappingmappedsuper" >
      <xs:sequence>
        <xs:element name="supercollection" type="xs:anyType" />
        <xs:element name="superrel" type="nonstandardmappingentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pointhandler" >
      <xs:complexContent>
       <xs:extension base="abstractvaluehandler">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testflatinheritance" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsequencegenerator" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="enabled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonstandardmappingmappedsuper4" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdiscriminator" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generator" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="pk2" type="xs:anyType" />
        <xs:element name="pk3" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmanytomany" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unenhancedmixedaccess" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmapkey" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embedvalue3" >
      <xs:sequence>
        <xs:element name="basic" type="xs:string" />
        <xs:element name="basic" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesequenceentity" >
      <xs:sequence>
        <xs:element name="seq_name" type="xs:string" />
        <xs:element name="schema_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testembeddedid" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_oid" type="embeddedidclass" nillable="true" minOccurs="0" />
          <xs:element name="_roid" type="embeddedidclass" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablesuper" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="trans" type="xs:long" />
        <xs:element name="clob" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testversion" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testgenerators" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unenhancedinappropriatetransient" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embedvalue" >
      <xs:sequence>
        <xs:element name="basic" type="xs:string" />
        <xs:element name="clob" type="xs:string" />
        <xs:element name="blob" type="xs:anyType" />
        <xs:element name="owner" type="embedowner" nillable="true" minOccurs="0" />
        <xs:element name="transientfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotest2" >
      <xs:sequence>
        <xs:element name="pk1" type="xs:long" />
        <xs:element name="pk2" type="xs:string" />
        <xs:element name="version" type="xs:dateTime" />
        <xs:element name="basic" type="xs:string" />
        <xs:element name="inverseoneone" type="annotest1" nillable="true" minOccurs="0" />
        <xs:element name="onemanyowner" type="annotest1" nillable="true" minOccurs="0" />
        <xs:element name="manymany" type="annotest1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testenumerated" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtableperclassinheritance" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedidclass" >
      <xs:sequence>
        <xs:element name="pk1" type="xs:long" />
        <xs:element name="pk2" type="xs:long" />
        <xs:element name="pk3" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithindices" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="index1" type="xs:string" />
        <xs:element name="longname" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="col2" type="xs:string" />
        <xs:element name="col3" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpropertyaccess" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testembeddablesuperclass" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmixedaccess" >
      <xs:complexContent>
       <xs:extension base="abstractcachedemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablesupersub" >
      <xs:complexContent>
       <xs:extension base="embeddablesuper">
         <xs:sequence>
          <xs:element name="sub" type="embeddablesupersub" nillable="true" minOccurs="0" />
          <xs:element name="//#####sup" type="embeddablesuper" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testextensionannotations" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_mapping" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testonetoone" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonstandardmappingentity" >
      <xs:complexContent>
       <xs:extension base="nonstandardmappingmappedsuper">
         <xs:sequence>
          <xs:element name="custom" type="xs:anyType" />
          <xs:element name="stringcollection" type="xs:anyType" />
          <xs:element name="joincollection" type="nonstandardmappingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="string" type="xs:anyType" />
          <xs:element name="joinmap" type="xs:anyType" />
          <xs:element name="mapping(nullindicatorattributename" type="extensionsentity" nillable="true" minOccurs="0" />
          <xs:element name="embedcollection" type="embedvalue2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flat1" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="basic" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tableperclass2" >
      <xs:complexContent>
       <xs:extension base="tableperclass1">
         <xs:sequence>
          <xs:element name="basic2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmulticolumnversion" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativeormsequenceentity" >
      <xs:sequence>
        <xs:element name="schema_name" type="xs:string" />
        <xs:element name="seq_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testserializedlobs" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extensionsentity" >
      <xs:sequence>
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="uuidt4hex" type="xs:string" />
        <xs:element name="uuidt4" type="xs:string" />
        <xs:element name="seq" type="xs:long" />
        <xs:element name="rel" type="extensionsentity" nillable="true" minOccurs="0" />
        <xs:element name="owner" type="extensionsentity" nillable="true" minOccurs="0" />
        <xs:element name="lrs" type="extensionsentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="eager" type="extensionsentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="externalvalues" type="xs:anyType" />
        <xs:element name="externalizer" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotest3" >
      <xs:complexContent>
       <xs:extension base="annotest1">
         <xs:sequence>
          <xs:element name="basic2" type="xs:long" />
          <xs:element name="suboneone" type="annotest2" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnonstandardmappingannotations" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_mapping" type="xs:anyType" />
          <xs:element name="_dict" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonstandardmappingentity3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="embedval3s" type="embedvalue3" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="embedval3" type="embedvalue3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testejbembedded" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="clob" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyaccess1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//thisentionallydoesnotmatchthegetternameval" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department3" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:long" />
        <xs:element name="emps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_coll_embed_embed" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="embeds" type="embed_embed" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="GeneratedName" type="contactinfo" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jobinfo" nillable="true" minOccurs="0" />
        <xs:element name="location" type="locationdetails" nillable="true" minOccurs="0" />
        <xs:element name="nicknames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="division_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_mappedtoonecascadedelete" >
      <xs:sequence>
        <xs:element name="name1" type="xs:string" />
        <xs:element name="name2" type="xs:string" />
        <xs:element name="name3" type="xs:string" />
        <xs:element name="bm" type="entityb2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_complex" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="nicknames" type="xs:anyType" />
        <xs:element name="cr" type="xs:anyType" />
        <xs:element name="ts" type="xs:anyType" />
        <xs:element name="lobs" type="xs:anyType" />
        <xs:element name="embed" type="embed_embed" nillable="true" minOccurs="0" />
        <xs:element name="embeds" type="embed_embed" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="embed1s" type="embed_toone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="transienttransientjavavalue" type="xs:anyType" />
        <xs:element name="transientvalue" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="divisionxml" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filename4" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee3" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="department" type="department3" nillable="true" minOccurs="0" />
        <xs:element name="name" type="employeename3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="organization" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seller" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item3_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="images" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="division" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributexml" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_toone_" >
      <xs:sequence>
        <xs:element name="b" type="xs:anyType" />
        <xs:element name="name1" type="xs:anyType" />
        <xs:element name="name2" type="xs:anyType" />
        <xs:element name="name3" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_embed_" >
      <xs:sequence>
        <xs:element name="embed" type="xs:anyType" />
        <xs:element name="intval1" type="xs:anyType" />
        <xs:element name="intval2" type="xs:anyType" />
        <xs:element name="intval3" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb1_" >
      <xs:sequence>
        <xs:element name="entitya" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="images" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_toone" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="embed" type="embed_toone" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_embed_tomany" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="embed" type="embed_embed_tomany" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item2_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="images" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee1_" >
      <xs:sequence>
        <xs:element name="department" type="xs:anyType" />
        <xs:element name="empid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_embed_tomany_" >
      <xs:sequence>
        <xs:element name="embed" type="xs:anyType" />
        <xs:element name="intval1" type="xs:anyType" />
        <xs:element name="intval2" type="xs:anyType" />
        <xs:element name="intval3" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_embed" >
      <xs:sequence>
        <xs:element name="val1" type="xs:long" />
        <xs:element name="val2" type="xs:long" />
        <xs:element name="val3" type="xs:long" />
        <xs:element name="GeneratedName" type="embed" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_mappedtoone" >
      <xs:sequence>
        <xs:element name="name1" type="xs:string" />
        <xs:element name="name2" type="xs:string" />
        <xs:element name="name3" type="xs:string" />
        <xs:element name="bm" type="entityb1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_coll_integer_" >
      <xs:sequence>
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="embed" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contactinfo" >
      <xs:sequence>
        <xs:element name="//bidirectionalphonenumbers" type="phonenumber" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_coll_integer" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="embed" type="embed_coll_integer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="images" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_tomany_" >
      <xs:sequence>
        <xs:element name="bs" type="xs:anyType" />
        <xs:element name="name1" type="xs:anyType" />
        <xs:element name="name2" type="xs:anyType" />
        <xs:element name="name3" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_tomany" >
      <xs:sequence>
        <xs:element name="name1" type="xs:string" />
        <xs:element name="name2" type="xs:string" />
        <xs:element name="name3" type="xs:string" />
        <xs:element name="bs" type="entityb1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee2_" >
      <xs:sequence>
        <xs:element name="department" type="xs:anyType" />
        <xs:element name="emppk" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item1_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="images" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vicepresident_" >
      <xs:sequence>
        <xs:element name="co" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_mappedtoone_" >
      <xs:sequence>
        <xs:element name="bm" type="xs:anyType" />
        <xs:element name="name1" type="xs:anyType" />
        <xs:element name="name2" type="xs:anyType" />
        <xs:element name="name3" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeepk2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bday" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department2" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:long" />
        <xs:element name="empmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="itemxml" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="images" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeename3" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="topic_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="subject" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcompositeprimarykeys" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="//note:thereare3aspectstothefixtoopenjpa-2631,eachbeingtestedinsomemannerinthetest//methodsbelow.the3aspectsofthefixare:////1)fixinclassmappingwhichresolvesthereportedclasscastex.//2)after#1,thingsprogressedfurther,butforsomecriteriabuildertestsincorrectsqlwascreatedasfollows://2.1)anequalsexpressionwascreatedforonlyoneofthecolumnsinthecompositepk.to//resolvethisafixwasmadetoclassequalexpression.//2.2)anextraparametermarker(?)wasaddedtothesql.toresolvethisafixwasmadetoclasslit.em" type="xs:anyType" />
          <xs:element name="tx" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subjectwithidclass_" >
      <xs:sequence>
        <xs:element name="subjectnummer" type="xs:anyType" />
        <xs:element name="subjecttypecode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subjectkey" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="subjectnummer" type="xs:anyType" />
        <xs:element name="subjecttypecode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="topic" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="//@joincolumn(table" type="subject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subjectidclass" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="subjectnummer" type="xs:anyType" />
        <xs:element name="subjecttypecode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subjectwithidclass" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="subjectnummer" type="xs:anyType" />
        <xs:element name="subjecttypecode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subject" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="key" type="subjectkey" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subjectkey_" >
      <xs:sequence>
        <xs:element name="subjectnummer" type="xs:anyType" />
        <xs:element name="subjecttypecode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subject_" >
      <xs:sequence>
        <xs:element name="key" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_mappedtoone" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="embed" type="embed_mappedtoone" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="GeneratedName" type="embed" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobinfo" >
      <xs:sequence>
        <xs:element name="jobdescription" type="xs:string" />
        <xs:element name="//bidirectionalpm" type="programmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee2" >
      <xs:sequence>
        <xs:element name="emppk" type="employeepk2" nillable="true" minOccurs="0" />
        <xs:element name="department" type="department2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee3_" >
      <xs:sequence>
        <xs:element name="department" type="xs:anyType" />
        <xs:element name="empid" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="departmentxml" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:long" />
        <xs:element name="empmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_coll_map" >
      <xs:sequence>
        <xs:element name="name1" type="xs:string" />
        <xs:element name="name2" type="xs:string" />
        <xs:element name="name3" type="xs:string" />
        <xs:element name="mapkeyinteger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitya" type="entitya_embed_mappedtoone" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_coll_embed_" >
      <xs:sequence>
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="embed" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embedxml" >
      <xs:sequence>
        <xs:element name="//ownedbybasicaviaembed4//cannotcontainacollectionofbasictypesifbasicacontains//acollectionofembed4val1" type="xs:long" />
        <xs:element name="val2" type="xs:long" />
        <xs:element name="val3" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_coll_integer" >
      <xs:sequence>
        <xs:element name="val1" type="xs:long" />
        <xs:element name="val2" type="xs:long" />
        <xs:element name="val3" type="xs:long" />
        <xs:element name="//@collectiontableotherintvals" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testembeddable" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="cal" type="xs:anyType" />
          <xs:element name="timehash" type="xs:anyType" />
          <xs:element name="numembeddables" type="xs:long" />
          <xs:element name="numbasictypes" type="xs:long" />
          <xs:element name="numprogrammanagers" type="xs:long" />
          <xs:element name="numnicknames" type="xs:long" />
          <xs:element name="numemployeesperphonenumber" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="numemployeesperprogrammanager" type="xs:long" />
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbers" type="xs:long" />
          <xs:element name="numdepartments" type="xs:long" />
          <xs:element name="numemployeesperdept" type="xs:long" />
          <xs:element name="numitems" type="xs:long" />
          <xs:element name="numimagesperitem" type="xs:long" />
          <xs:element name="numcompany" type="xs:long" />
          <xs:element name="numdivisionsperco" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="itemid" type="xs:long" />
          <xs:element name="compid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="vpid" type="xs:long" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="pmid" type="xs:long" />
          <xs:element name="parkingspotid" type="xs:long" />
          <xs:element name="phones" type="xs:anyType" />
          <xs:element name="employees" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitya_embed_embed_tomany_" >
      <xs:sequence>
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="embed" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="style" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reclinerid" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="recliner" >
      <xs:sequence>
        <xs:element name="id" type="reclinerid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="style" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="guy" nillable="true" minOccurs="0" />
        <xs:element name="holder" type="beverageholder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="guy" >
      <xs:sequence>
        <xs:element name="height" type="xs:long" />
        <xs:element name="weight" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beverageholder" >
      <xs:sequence>
        <xs:element name="diameter" type="xs:long" />
        <xs:element name="depth" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testlazyembeddable" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="_sql" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitya_coll_stringxml" >
      <xs:sequence>
        <xs:element name="//containsacollectionofbasictypesserialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="nicknames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_mappedtoonecascadedelete" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="embed" type="embed_mappedtoonecascadedelete" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_single_coll" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="embed" type="embed_single_coll" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_coll_embed_toone" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="//containsacollectionofembed1toone//embed1toonedoesnothaveanelementcollectionorto-manyrelationshipsid" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="//@persistentcollection(elementembedded" type="embed_toone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="GeneratedName" type="zipcode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programmanager" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="manages" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="GeneratedName" type="contactinfo" nillable="true" minOccurs="0" />
        <xs:element name="jobinfos" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contactinfo" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="//bidirectionalphonenumbers" type="phonenumber" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="ecinfo" type="emergencycontactinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmloverentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="embed" type="annooverembed" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testassocoverridesxml" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase{">
         <xs:sequence>
          <xs:element name="_sql" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlassocoverembedb" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="eb" type="xmlassocoverentityb" nillable="true" minOccurs="0" />
        <xs:element name="meb" type="xmlassocoverentityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlassocoverentitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="embalist" type="xmlassocoverembed" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="embamap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="phnumber" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zipcode" >
      <xs:sequence>
        <xs:element name="zip" type="xs:string" />
        <xs:element name="plusfour" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressxml" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zipcode" type="zipcodexml" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="residences" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="nicknames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="project" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyowner" >
      <xs:sequence>
        <xs:element name="addr" type="address" nillable="true" minOccurs="0" />
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlassocoverembed" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="eb" type="xmlassocoverentityb" nillable="true" minOccurs="0" />
        <xs:element name="meb" type="xmlassocoverentityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zipcodexml" >
      <xs:sequence>
        <xs:element name="zip" type="xs:string" />
        <xs:element name="plusfour" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testattroverridesxml" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numpersons" type="xs:long" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="eid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicembedxml" >
      <xs:sequence>
        <xs:element name="intvalue" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parttimeemployee" >
      <xs:complexContent>
       <xs:extension base="abstractemployee">
         <xs:sequence>
          <xs:element name="wage" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlassocoverentityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ealist" type="xmlassocoverentitya" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyinfo" >
      <xs:sequence>
        <xs:element name="parcelnumber" type="xs:anyType" />
        <xs:element name="size" type="xs:anyType" />
        <xs:element name="tax" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testattroverrides" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numpersons" type="xs:long" />
          <xs:element name="numpropertiesperpersons" type="xs:long" />
          <xs:element name="eid" type="xs:long" />
          <xs:element name="pid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobinfo" >
      <xs:sequence>
        <xs:element name="jobdescription" type="xs:string" />
        <xs:element name="pm" type="programmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annooverembed" >
      <xs:sequence>
        <xs:element name="embed" type="xs:long" />
        <xs:element name="strembed" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emergencycontactinfo" >
      <xs:sequence>
        <xs:element name="fname" type="xs:string" />
        <xs:element name="lname" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="phonenumber" nillable="true" minOccurs="0" />
        <xs:element name="nicknames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerxml" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="addressxml" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testassocoverrides" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numphonenumbers" type="xs:long" />
          <xs:element name="numemployeesperphonenumber" type="xs:long" />
          <xs:element name="numphonenumbersperemployee" type="xs:long" />
          <xs:element name="numjobsperemployee" type="xs:long" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="phoneid" type="xs:long" />
          <xs:element name="addrid" type="xs:long" />
          <xs:element name="pmid" type="xs:long" />
          <xs:element name="peid" type="xs:long" />
          <xs:element name="pid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicentityxml" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="listintattroverembed" type="basicembedxml" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyrecord" >
      <xs:sequence>
        <xs:element name="owner" type="propertyowner" nillable="true" minOccurs="0" />
        <xs:element name="parcels" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractemployee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="projects" type="project" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department1_" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:anyType" />
        <xs:element name="empmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_coll_embed" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="embed" type="embed_coll_embed" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_mappedtoone_" >
      <xs:sequence>
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="embed" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderxml" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="cust" type="customerxml" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="images" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vicepresidentxml" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vicepresident" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="co" type="company1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_embed" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="embed" type="embed_embed" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeename3_" >
      <xs:sequence>
        <xs:element name="fname" type="xs:anyType" />
        <xs:element name="lname" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testembeddablexml" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="numembeddables" type="xs:long" />
          <xs:element name="numbasictypes" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="deptid" type="xs:long" />
          <xs:element name="empid" type="xs:long" />
          <xs:element name="compid" type="xs:long" />
          <xs:element name="divid" type="xs:long" />
          <xs:element name="vpid" type="xs:long" />
          <xs:element name="newdivid" type="xs:long" />
          <xs:element name="newvpid" type="xs:long" />
          <xs:element name="numitems" type="xs:long" />
          <xs:element name="itemid" type="xs:long" />
          <xs:element name="cid" type="xs:long" />
          <xs:element name="oid" type="xs:long" />
          <xs:element name="numimagesperitem" type="xs:long" />
          <xs:element name="numdepartments" type="xs:long" />
          <xs:element name="numemployeesperdept" type="xs:long" />
          <xs:element name="numcompany" type="xs:long" />
          <xs:element name="numdivisionsperco" type="xs:long" />
          <xs:element name="numcustomers" type="xs:long" />
          <xs:element name="numorderspercustomer" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company2_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="organization" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_embedxml" >
      <xs:sequence>
        <xs:element name="val1" type="xs:long" />
        <xs:element name="val2" type="xs:long" />
        <xs:element name="val3" type="xs:long" />
        <xs:element name="embed" type="embedxml" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="organization" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_embed_" >
      <xs:sequence>
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="embed" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_tomany_" >
      <xs:sequence>
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="embed" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_toone" >
      <xs:sequence>
        <xs:element name="name1" type="xs:string" />
        <xs:element name="name2" type="xs:string" />
        <xs:element name="name3" type="xs:string" />
        <xs:element name="b" type="entityb1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerxml" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="orders" type="orderxml" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed" >
      <xs:sequence>
        <xs:element name="val1" type="xs:long" />
        <xs:element name="val2" type="xs:long" />
        <xs:element name="val3" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeepk2_" >
      <xs:sequence>
        <xs:element name="bday" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_toone_" >
      <xs:sequence>
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="embed" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eparent" >
      <xs:sequence>
        <xs:element name="idparent" type="xs:anyType" />
        <xs:element name="childto" type="echild" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="egeneric" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="val" type="xs:long" />
        <xs:element name="strval" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department1" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:long" />
        <xs:element name="empmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_coll_map" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="embed" type="embed_coll_map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_" >
      <xs:sequence>
        <xs:element name="intval1" type="xs:anyType" />
        <xs:element name="intval2" type="xs:anyType" />
        <xs:element name="intval3" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
          <xs:element name="streetaddress,city,state" type="xs:string" />
          <xs:element name="" type="geocode" nillable="true" minOccurs="0" />
          <xs:element name="zip" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:long" />
        <xs:element name="embeds" type="embed" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="collectiondate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_embed_tomany" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="embed" type="embed_tomany" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="featureidxml" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="oid" type="xs:string" />
        <xs:element name="index" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company1_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="organization" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locationdetails" >
      <xs:sequence>
        <xs:element name="officenumber" type="xs:long" />
        <xs:element name="GeneratedName" type="parkingspot" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testupdateembeddedqueryresult" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parkingspot" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="garage" type="xs:string" />
        <xs:element name="assignedto" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_coll_embed_embedxml" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="embeds" type="embed_embedxml" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee1" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="department" type="department1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testembedded" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="isbn" type="xs:long" />
        <xs:element name="listings" type="listing" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="echild" >
      <xs:sequence>
        <xs:element name="idchild" type="xs:long" />
        <xs:element name="missing" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department3_" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:anyType" />
        <xs:element name="emps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_single_coll" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_coll_embed" >
      <xs:sequence>
        <xs:element name="val1" type="xs:long" />
        <xs:element name="val2" type="xs:long" />
        <xs:element name="val3" type="xs:long" />
        <xs:element name="embeds" type="embed" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_coll_embed_" >
      <xs:sequence>
        <xs:element name="embeds" type="xs:anyType" />
        <xs:element name="intval1" type="xs:anyType" />
        <xs:element name="intval2" type="xs:anyType" />
        <xs:element name="intval3" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programmanager" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="manages" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeexml" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="department" type="departmentxml" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitya" type="entitya_embed_mappedtoonecascadedelete" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="featurexml" >
      <xs:sequence>
        <xs:element name="id" type="featureidxml" nillable="true" minOccurs="0" />
        <xs:element name="attributes" type="attributexml" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_coll_string_" >
      <xs:sequence>
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="nicknames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_coll_embed_toone_" >
      <xs:sequence>
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="embed1s" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="geocode" >
      <xs:sequence>
        <xs:element name="latitude,longtitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_coll_embed_embed_" >
      <xs:sequence>
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="embeds" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="images" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listing" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="seller" nillable="true" minOccurs="0" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="comments" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="companyxml" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="organization" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testembeddedwithquery" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="department2_" >
      <xs:sequence>
        <xs:element name="deptid" type="xs:anyType" />
        <xs:element name="empmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item5" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="images" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya_coll_string" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="nicknames" type="xs:anyType" />
        <xs:element name="cr" type="xs:anyType" />
        <xs:element name="ts" type="xs:anyType" />
        <xs:element name="lobs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_coll_integer_" >
      <xs:sequence>
        <xs:element name="intval1" type="xs:anyType" />
        <xs:element name="intval2" type="xs:anyType" />
        <xs:element name="intval3" type="xs:anyType" />
        <xs:element name="otherintvals" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed_embed_tomany" >
      <xs:sequence>
        <xs:element name="val1" type="xs:long" />
        <xs:element name="val2" type="xs:long" />
        <xs:element name="val3" type="xs:long" />
        <xs:element name="embed" type="embed_tomany" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnonoargs" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="conf" type="xs:anyType" />
          <xs:element name="repos" type="xs:anyType" />
          <xs:element name="loader" type="xs:anyType" />
          <xs:element name="flags" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testembeddedenumsqlgeneration" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="flags" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependent4" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="parent" type="employee4" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory1" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="personid1" nillable="true" minOccurs="0" />
        <xs:element name="patient" type="person1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee5" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="empid" type="employeeid5" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid2" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emppk" type="employeeid2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="bid" type="bookid1" nillable="true" minOccurs="0" />
        <xs:element name="pages" type="page1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="library" type="library1" nillable="true" minOccurs="0" />
        <xs:element name="author" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee1" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="dependents" type="dependent1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="line1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="lid" type="lineid1" nillable="true" minOccurs="0" />
        <xs:element name="page" type="page1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personid4" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="library1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="books" type="book1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="location" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="pages" type="page" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="library" nillable="true" minOccurs="0" />
        <xs:element name="author" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person2" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:long" />
        <xs:element name="medical" type="medicalhistory2" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineid1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="linenum" type="xs:long" />
        <xs:element name="page" type="pageid1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent3" >
      <xs:sequence>
        <xs:element name="pid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="dependent" type="dependent3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent1xml" >
      <xs:sequence>
        <xs:element name="id" type="dependentid1xml" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee1xml" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person3" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="medical" type="medicalhistory3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee1xml" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="dependents" type="dependent1xml" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid1xml" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emppk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testderivedidentity" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependent5" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="emp" type="employee5" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmultiplelevelderivedidentity" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="library_name" type="xs:string" />
          <xs:element name="book_name" type="xs:string" />
          <xs:element name="num_pages" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="children" type="dependent4" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="page" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="GeneratedName" type="book" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid3" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emppk" type="xs:long" />
        <xs:element name="parentpk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personid1" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="empid" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="emptype" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory4" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="patient" type="person4" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent1" >
      <xs:sequence>
        <xs:element name="id" type="dependentid1" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid5" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beneficiary" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="annuityholderid" type="xs:string" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="relationship" type="xs:string" />
        <xs:element name="contacts" type="benecontact" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person1" >
      <xs:sequence>
        <xs:element name="id" type="personid1" nillable="true" minOccurs="0" />
        <xs:element name="medical" type="medicalhistory1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="library" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="books" type="book" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="location" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="benecontactid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="type" type="contacttype" nillable="true" minOccurs="0" />
        <xs:element name="beneficiarypk" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent5a" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="emp" type="employee5" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="patient" type="person2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personid3" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid1" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emppk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee2" >
      <xs:sequence>
        <xs:element name="empid" type="employeeid2" nillable="true" minOccurs="0" />
        <xs:element name="dependents" type="dependent2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="benecontact" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="benecontactid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="beneficiary" nillable="true" minOccurs="0" />
        <xs:element name="email" type="xs:string" />
        <xs:element name="phone" type="xs:string" />
        <xs:element name="lastup" type="xs:dateTime" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent3" >
      <xs:sequence>
        <xs:element name="id" type="dependentid3" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee3" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="parent3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid5" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emp" type="employeeid5" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory3" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="patient" type="person3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bookid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="library" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid2" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pageid1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="book" type="bookid1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee3" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="dependents" type="dependent3" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmultiplelevelderivedidentity1" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="library_name" type="xs:string" />
          <xs:element name="book_name" type="xs:string" />
          <xs:element name="num_pages" type="xs:long" />
          <xs:element name="num_lines" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependent2" >
      <xs:sequence>
        <xs:element name="id" type="dependentid2" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmapsidxml" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numdependentsperemployee" type="xs:long" />
          <xs:element name="numpersons" type="xs:long" />
          <xs:element name="emps1xml" type="xs:anyType" />
          <xs:element name="deps1xml" type="xs:anyType" />
          <xs:element name="eid1" type="xs:long" />
          <xs:element name="did1" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="phonenumber" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parent" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bookid1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="library" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pageid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="book" type="bookid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmappedbyid" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="numemployees" type="xs:long" />
          <xs:element name="numdependentsperemployee" type="xs:long" />
          <xs:element name="numpersons" type="xs:long" />
          <xs:element name="emps1" type="xs:anyType" />
          <xs:element name="deps1" type="xs:anyType" />
          <xs:element name="emps2" type="xs:anyType" />
          <xs:element name="deps2" type="xs:anyType" />
          <xs:element name="persons1" type="xs:anyType" />
          <xs:element name="medicals1" type="xs:anyType" />
          <xs:element name="persons2" type="xs:anyType" />
          <xs:element name="medicals2" type="xs:anyType" />
          <xs:element name="persons3" type="xs:anyType" />
          <xs:element name="medicals3" type="xs:anyType" />
          <xs:element name="persons4" type="xs:anyType" />
          <xs:element name="medicals4" type="xs:anyType" />
          <xs:element name="emps3" type="xs:anyType" />
          <xs:element name="depmap3" type="xs:anyType" />
          <xs:element name="dids3" type="xs:anyType" />
          <xs:element name="deps3" type="dependent3" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="eid1" type="xs:long" />
          <xs:element name="did1" type="xs:long" />
          <xs:element name="eid2" type="xs:long" />
          <xs:element name="did2" type="xs:long" />
          <xs:element name="eid3" type="xs:long" />
          <xs:element name="eid4" type="xs:long" />
          <xs:element name="did4" type="xs:long" />
          <xs:element name="did3" type="xs:long" />
          <xs:element name="pid1" type="xs:long" />
          <xs:element name="mid1" type="xs:long" />
          <xs:element name="pid2" type="xs:long" />
          <xs:element name="mid2" type="xs:long" />
          <xs:element name="pid3" type="xs:long" />
          <xs:element name="mid3" type="xs:long" />
          <xs:element name="pid4" type="xs:long" />
          <xs:element name="mid4" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="phnumber" type="xs:long" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="page1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pid" type="pageid1" nillable="true" minOccurs="0" />
        <xs:element name="book" type="book1" nillable="true" minOccurs="0" />
        <xs:element name="lines" type="line1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person4" >
      <xs:sequence>
        <xs:element name="id" type="personid4" nillable="true" minOccurs="0" />
        <xs:element name="medical" type="medicalhistory4" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdynamicstoragegenerator" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithenum" >
      <xs:sequence>
        <xs:element name="myenum" type="sampleenum" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testclone" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicenhancementsuite" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsubclassedbehavior" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testembeddableentitywithidannotation" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddableentitywithidannotation" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="seqno" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonoargs" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedinversetestinstance" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="managed2" type="managedinversetestinstance2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicsubclassinstance" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detachablepc" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="val" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="entity2" nillable="true" minOccurs="0" />
        <xs:element name="versionfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="no2noargs" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idowningclasstestentity" >
      <xs:sequence>
        <xs:element name="pk" type="embeddableentitywithidannotation" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseentity" >
      <xs:sequence>
        <xs:element name="_id" type="xs:long" />
        <xs:element name="_version" type="xs:long" />
        <xs:element name="_s" type="xs:string" />
        <xs:element name="_" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassclone" >
      <xs:complexContent>
       <xs:extension base="nonpcclone">
         <xs:sequence>
          <xs:element name="" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pcclone" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="no3noargs" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="backingfieldnamemismatchinstance" >
      <xs:sequence>
        <xs:element name="//sincewedon'thaveasetter_id" type="xs:long" />
        <xs:element name="_version" type="xs:long" />
        <xs:element name="_s" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedentity" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="_i" type="xs:long" />
          <xs:element name="_basic" type="basicsubclassinstance" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detachableversionedpc" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="val" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noclone" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonpcclone" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclasstestinstance" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedinversetestinstance2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="managed" type="managedinversetestinstance" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invoice" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="brandname" type="xs:string" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="lineitems" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc_b1m_map_jt" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bi1mjt" type="bi_1tom_map_jt" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:complexContent>
       <xs:extension base="mappedsuper">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bi_1tom_jt" >
      <xs:sequence>
        <xs:element name="bid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitycs" type="entityc_b1mjt" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablesupersub" >
      <xs:complexContent>
       <xs:extension base="embeddablesuper">
         <xs:sequence>
          <xs:element name="sub" type="embeddablesupersub" nillable="true" minOccurs="0" />
          <xs:element name="//#####sup" type="embeddablesuper" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityc_u1m_map_fk" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc_b11jt" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bi11jt" type="bi_1to1_jt" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc_u1mfk" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc_u1m_map_relkey_fk" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmethodqlquery" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uni_1tom_map_fk" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitycs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bi_1to1_jt" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//ajointableannotationisspecifiedontheowningsideoftheassociationentityc" type="entityc_b11jt" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testquerysqlcache" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="nthreads" type="xs:long" />
          <xs:element name="npeople" type="xs:long" />
          <xs:element name="niterations" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="named_query_with_positional_params" type="xs:string" />
        <xs:element name="named_query_with_named_params" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablesuper" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="trans" type="xs:long" />
        <xs:element name="clob" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedsuper" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="lastup" type="xs:dateTime" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="entityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uni_1tom_map_relkey_fk" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitycs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc_b1mfk" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bi1mfk" type="bi_1tom_fk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc_u11jt" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="invoice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uni_1tom_fk" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitycs" type="entityc_u1mfk" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="departmentid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uni_1to1_jt" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entityc" type="entityc_u11jt" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bi_1tom_map_relkey_jt" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitycs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmessagelistener" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcontainerspeccompatibilityoptions" >
      <xs:complexContent>
       <xs:extension base="containeremftest">
         <xs:sequence>
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="sqlcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityc_b1mjt" >
      <xs:sequence>
        <xs:element name="cid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bi1mjt" type="bi_1tom_jt" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testspeccompatibilityoptions" >
      <xs:complexContent>
       <xs:extension base="abstractcachedemftestcase">
         <xs:sequence>
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="sqlcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityc_b1m_map_relkey_jt" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bi1mjt" type="bi_1tom_map_relkey_jt" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnonprimarykeyqueryparameters" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="fulltime_employee_count" type="xs:long" />
          <xs:element name="parttime_employee_count" type="xs:long" />
          <xs:element name="lineitem_per_invoice" type="xs:long" />
          <xs:element name="dept_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="entitya" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uni_1tom_jt" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitycs" type="entityc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parttimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="hourlywage" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uni_mto1_jt" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="entityc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bi_1tom_fk" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitycs" type="entityc_b1mfk" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
        <xs:element name="dept" type="department" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdupnamedquery" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testembeddablesuperclass" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parttimeemployees" type="parttimeemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="fulltimeemployees" type="fulltimeemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invoicekey" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="brandname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bi_1tom_map_jt" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitycs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleentity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testxmlpersistencemetadataparser" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testvalidationfactory" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testvalidationmode" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbasicfieldnullity" >
      <xs:complexContent>
       <xs:extension base="abstractnullitytestcase">
         <xs:sequence>
          <xs:element name="dict" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractnullitytestcase" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="new" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobvalue" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="strval" type="xs:string" />
        <xs:element name="val" type="xs:long" />
        <xs:element name="s" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestampedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="noninsertablenonnullable" type="xs:dateTime" />
        <xs:element name="nonupdatablenonnullable" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testreadonlynullity" >
      <xs:complexContent>
       <xs:extension base="abstractnullitytestcase">
         <xs:sequence>
          <xs:element name="skip" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullvalues" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="nullable" type="xs:anyType" />
        <xs:element name="notnullable" type="xs:anyType" />
        <xs:element name="optional" type="xs:anyType" />
        <xs:element name="notoptional" type="xs:anyType" />
        <xs:element name="nullableblob" type="blobvalue" nillable="true" minOccurs="0" />
        <xs:element name="notnullableblob" type="blobvalue" nillable="true" minOccurs="0" />
        <xs:element name="optionalblob" type="blobvalue" nillable="true" minOccurs="0" />
        <xs:element name="notoptionalblob" type="blobvalue" nillable="true" minOccurs="0" />
        <xs:element name="uniquenullable" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="factworkassignment_" >
      <xs:sequence>
        <xs:element name="clocknumber" type="xs:anyType" />
        <xs:element name="compart" type="xs:anyType" />
        <xs:element name="currentrecord" type="xs:anyType" />
        <xs:element name="datacntrlnumber" type="xs:anyType" />
        <xs:element name="effenddt" type="xs:anyType" />
        <xs:element name="effstartdt" type="xs:anyType" />
        <xs:element name="effectiveenddate" type="xs:anyType" />
        <xs:element name="effectivestartdate" type="xs:anyType" />
        <xs:element name="employeecount" type="xs:anyType" />
        <xs:element name="hrorgkey" type="xs:anyType" />
        <xs:element name="jobkey" type="xs:anyType" />
        <xs:element name="managerkey" type="xs:anyType" />
        <xs:element name="orgoid" type="xs:anyType" />
        <xs:element name="paygroupkey" type="xs:anyType" />
        <xs:element name="payrollorgkey" type="xs:anyType" />
        <xs:element name="personkey" type="xs:anyType" />
        <xs:element name="personobjid" type="xs:anyType" />
        <xs:element name="personprofilekey" type="xs:anyType" />
        <xs:element name="primary" type="xs:anyType" />
        <xs:element name="salplankey" type="xs:anyType" />
        <xs:element name="secclrcd" type="xs:anyType" />
        <xs:element name="statuscode" type="xs:anyType" />
        <xs:element name="statusdesc" type="xs:anyType" />
        <xs:element name="workassgnmntnbr" type="xs:anyType" />
        <xs:element name="worklocationkey" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dimday" >
      <xs:sequence>
        <xs:element name="key" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="dayfullname" type="xs:string" />
        <xs:element name="qtrfullname" type="xs:string" />
        <xs:element name="monthfullname" type="xs:string" />
        <xs:element name="monthname" type="xs:string" />
        <xs:element name="year" type="xs:string" />
        <xs:element name="quarterinyearnumber" type="xs:long" />
        <xs:element name="yearcode" type="xs:string" />
        <xs:element name="quartercode" type="xs:string" />
        <xs:element name="monthcode" type="xs:string" />
        <xs:element name="monthinyearnumber" type="xs:long" />
        <xs:element name="currentmonthind" type="xs:long" />
        <xs:element name="currentqtrind" type="xs:long" />
        <xs:element name="currentyearind" type="xs:long" />
        <xs:element name="prevmonthind" type="xs:long" />
        <xs:element name="prevqtrind" type="xs:long" />
        <xs:element name="prevyearind" type="xs:long" />
        <xs:element name="currentmonthvsprevyearind" type="xs:long" />
        <xs:element name="currentqtrvsprevyearind" type="xs:long" />
        <xs:element name="weekinyear" type="xs:long" />
        <xs:element name="weekinyearfullnm" type="xs:string" />
        <xs:element name="dayinweek" type="xs:long" />
        <xs:element name="dayinmonth" type="xs:long" />
        <xs:element name="dayinquarter" type="xs:long" />
        <xs:element name="dayinyear" type="xs:long" />
        <xs:element name="eomind" type="xs:long" />
        <xs:element name="eoqind" type="xs:long" />
        <xs:element name="eoyind" type="xs:long" />
        <xs:element name="roll13monthind" type="xs:long" />
        <xs:element name="roll4yearsind" type="xs:long" />
        <xs:element name="roll5quartersind" type="xs:long" />
        <xs:element name="monthstrtdate" type="xs:long" />
        <xs:element name="monthenddate" type="xs:long" />
        <xs:element name="quarterstrtdate" type="xs:long" />
        <xs:element name="quarterenddate" type="xs:long" />
        <xs:element name="yearstrtdate" type="xs:long" />
        <xs:element name="yearenddate" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dimday_" >
      <xs:sequence>
        <xs:element name="currentmonthind" type="xs:anyType" />
        <xs:element name="currentmonthvsprevyearind" type="xs:anyType" />
        <xs:element name="currentqtrind" type="xs:anyType" />
        <xs:element name="currentqtrvsprevyearind" type="xs:anyType" />
        <xs:element name="currentyearind" type="xs:anyType" />
        <xs:element name="date" type="xs:anyType" />
        <xs:element name="dayfullname" type="xs:anyType" />
        <xs:element name="dayinmonth" type="xs:anyType" />
        <xs:element name="dayinquarter" type="xs:anyType" />
        <xs:element name="dayinweek" type="xs:anyType" />
        <xs:element name="dayinyear" type="xs:anyType" />
        <xs:element name="eomind" type="xs:anyType" />
        <xs:element name="eoqind" type="xs:anyType" />
        <xs:element name="eoyind" type="xs:anyType" />
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="monthcode" type="xs:anyType" />
        <xs:element name="monthenddate" type="xs:anyType" />
        <xs:element name="monthfullname" type="xs:anyType" />
        <xs:element name="monthinyearnumber" type="xs:anyType" />
        <xs:element name="monthname" type="xs:anyType" />
        <xs:element name="monthstrtdate" type="xs:anyType" />
        <xs:element name="prevmonthind" type="xs:anyType" />
        <xs:element name="prevqtrind" type="xs:anyType" />
        <xs:element name="prevyearind" type="xs:anyType" />
        <xs:element name="qtrfullname" type="xs:anyType" />
        <xs:element name="quartercode" type="xs:anyType" />
        <xs:element name="quarterenddate" type="xs:anyType" />
        <xs:element name="quarterinyearnumber" type="xs:anyType" />
        <xs:element name="quarterstrtdate" type="xs:anyType" />
        <xs:element name="roll13monthind" type="xs:anyType" />
        <xs:element name="roll4yearsind" type="xs:anyType" />
        <xs:element name="roll5quartersind" type="xs:anyType" />
        <xs:element name="weekinyear" type="xs:anyType" />
        <xs:element name="weekinyearfullnm" type="xs:anyType" />
        <xs:element name="year" type="xs:anyType" />
        <xs:element name="yearcode" type="xs:anyType" />
        <xs:element name="yearenddate" type="xs:anyType" />
        <xs:element name="yearstrtdate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="factworkassignment" >
      <xs:sequence>
        <xs:element name="orgoid" type="xs:string" />
        <xs:element name="effstartdt" type="xs:dateTime" />
        <xs:element name="effenddt" type="xs:dateTime" />
        <xs:element name="effectivestartdate" type="xs:long" />
        <xs:element name="effectiveenddate" type="xs:long" />
        <xs:element name="personkey" type="xs:long" />
        <xs:element name="personobjid" type="xs:string" />
        <xs:element name="primary" type="xs:long" />
        <xs:element name="employeecount" type="xs:long" />
        <xs:element name="statuscode" type="xs:string" />
        <xs:element name="statusdesc" type="xs:string" />
        <xs:element name="workassgnmntnbr" type="xs:string" />
        <xs:element name="worklocationkey" type="xs:long" />
        <xs:element name="hrorgkey" type="xs:long" />
        <xs:element name="payrollorgkey" type="xs:long" />
        <xs:element name="jobkey" type="xs:long" />
        <xs:element name="personprofilekey" type="xs:long" />
        <xs:element name="managerkey" type="xs:long" />
        <xs:element name="paygroupkey" type="xs:long" />
        <xs:element name="salplankey" type="xs:long" />
        <xs:element name="compart" type="xs:double" />
        <xs:element name="clocknumber" type="xs:string" />
        <xs:element name="datacntrlnumber" type="xs:string" />
        <xs:element name="secclrcd" type="xs:string" />
        <xs:element name="currentrecord" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcriteriamultiselectaliasing" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="critquery" type="xs:anyType" />
          <xs:element name="critquery" type="xs:string" />
          <xs:element name="docb" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="photo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="label" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order_" >
      <xs:sequence>
        <xs:element name="count" type="xs:anyType" />
        <xs:element name="customer" type="xs:anyType" />
        <xs:element name="delivered" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="lineitems" type="xs:anyType" />
        <xs:element name="orderts" type="xs:anyType" />
        <xs:element name="quantity" type="xs:anyType" />
        <xs:element name="totalcost" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="videostore_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="location" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="videoinventory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teststringcriteria" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="studentwaitlist" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manager_" >
      <xs:sequence>
        <xs:element name="department" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="salary" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcql" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contact_" >
      <xs:sequence>
        <xs:element name="address" type="xs:anyType" />
        <xs:element name="phones" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="empid" type="xs:long" />
        <xs:element name="eff" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer_" >
      <xs:sequence>
        <xs:element name="accountnum" type="xs:anyType" />
        <xs:element name="accounts" type="xs:anyType" />
        <xs:element name="address" type="xs:anyType" />
        <xs:element name="balanceowed" type="xs:anyType" />
        <xs:element name="creditrating" type="xs:anyType" />
        <xs:element name="filledordercount" type="xs:anyType" />
        <xs:element name="firstname" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="lastname" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="orders" type="xs:anyType" />
        <xs:element name="status" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="county" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="zipcode" type="xs:string" />
        <xs:element name="user" type="compuser" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="pid" type="xs:long" />
        <xs:element name="producttype" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="phones" type="phone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compuser" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="computername" type="xs:string" />
        <xs:element name="nicknames" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="userid" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manager" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="salary" type="xs:anyType" />
        <xs:element name="GeneratedName" type="department" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="publisher_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="magazinecollection" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="femaleuser" >
      <xs:complexContent>
       <xs:extension base="compuser">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="videostore" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="location" type="address" nillable="true" minOccurs="0" />
        <xs:element name="videoinventory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bloguser" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="pic" type="xs:anyType" />
        <xs:element name="s" type="xs:anyType" />
        <xs:element name="s" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="publisher" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="magazinecollection" type="magazine" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdatestringconversion" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
          <xs:element name="open_bracket" type="xs:string" />
          <xs:element name="close_bracket" type="xs:string" />
          <xs:element name="single_quote" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="c" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="totalcost" type="xs:double" />
        <xs:element name="count" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="lineitems" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="delivered" type="xs:anyType" />
        <xs:element name="orderts" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bloguser_" >
      <xs:sequence>
        <xs:element name="characters" type="xs:anyType" />
        <xs:element name="chars" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="pic" type="xs:anyType" />
        <xs:element name="username" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee_" >
      <xs:sequence>
        <xs:element name="contactinfo" type="xs:anyType" />
        <xs:element name="department" type="xs:anyType" />
        <xs:element name="empid" type="xs:anyType" />
        <xs:element name="frequentflierplan" type="xs:anyType" />
        <xs:element name="manager" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="rating" type="xs:anyType" />
        <xs:element name="salary" type="xs:anyType" />
        <xs:element name="spouse" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product_" >
      <xs:sequence>
        <xs:element name="pid" type="xs:anyType" />
        <xs:element name="producttype" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="cost" type="xs:double" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maleuser" >
      <xs:complexContent>
       <xs:extension base="compuser">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionhistory_" >
      <xs:sequence>
        <xs:element name="details" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="transdate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exempt" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="hire" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address_" >
      <xs:sequence>
        <xs:element name="city" type="xs:anyType" />
        <xs:element name="country" type="xs:anyType" />
        <xs:element name="county" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="state" type="xs:anyType" />
        <xs:element name="street" type="xs:anyType" />
        <xs:element name="user" type="xs:anyType" />
        <xs:element name="zipcode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtypesafecriteria" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
          <xs:element name="true_jpql" type="xs:string" />
          <xs:element name="false_jpql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="photos" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compuser_" >
      <xs:sequence>
        <xs:element name="address" type="xs:anyType" />
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="computername" type="xs:anyType" />
        <xs:element name="creditrating" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="nicknames" type="xs:anyType" />
        <xs:element name="userid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="photo_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="label" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testedit" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="curstatusid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="magazine" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="published" type="xs:dateTime" />
        <xs:element name="id" type="publisher" nillable="true" minOccurs="0" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcriteria" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="qb" type="xs:anyType" />
          <xs:element name="comparator" type="stringcomparison" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmetamodeltypesafecriteria" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
          <xs:element name="account_" type="account" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="address_" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="contact_" type="contact" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="course_" type="course" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="creditcard_" type="creditcard" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="customer_" type="customer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="department_" type="department" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="employee_" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="exempt_" type="exempt" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="item_" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="lineitem_" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="manager_" type="manager" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="movie_" type="movie" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="order_" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="person_" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="phone_" type="phone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="photo_" type="photo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="product_" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="semester_" type="semester" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="student_" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="transactionhistory_" type="transactionhistory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="videostore_" type="videostore" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d_" >
      <xs:sequence>
        <xs:element name="c" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringcomparison" >
      <xs:sequence>
        <xs:element name="_reserved" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone_" >
      <xs:sequence>
        <xs:element name="employees" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="vendor" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcriteriatestcase" >
      <xs:complexContent>
       <xs:extension base="junit.framework.testcase">
         <xs:sequence>
          <xs:element name="dict" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transaction_" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creditcard" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="transactionhistory" type="transactionhistory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="status" type="xs:long" />
        <xs:element name="balanceowed" type="xs:long" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="filledordercount" type="xs:long" />
        <xs:element name="accountnum" type="xs:long" />
        <xs:element name="accounts" type="account" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem_" >
      <xs:sequence>
        <xs:element name="cost" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="order" type="xs:anyType" />
        <xs:element name="price" type="xs:anyType" />
        <xs:element name="product" type="xs:anyType" />
        <xs:element name="quantity" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid_" >
      <xs:sequence>
        <xs:element name="effdate" type="xs:anyType" />
        <xs:element name="empid" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contractor_" >
      <xs:complexContent>
       <xs:extension base="person_">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="movie_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="title" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testremotequerycachecriteriaquery" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="department_" type="department" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="cb" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testquerybyexample" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
          <xs:element name="dict" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependent_" >
      <xs:sequence>
        <xs:element name="curstatusid" type="xs:anyType" />
        <xs:element name="emp" type="xs:anyType" />
        <xs:element name="enddate" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="request" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="status" type="xs:long" />
        <xs:element name="GeneratedName" type="account" nillable="true" minOccurs="0" />
        <xs:element name="requesttime" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maleuser_" >
      <xs:complexContent>
       <xs:extension base="compuser_">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="frequentflierplan" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="annualmiles" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c_" >
      <xs:sequence>
        <xs:element name="coll" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="list" type="xs:anyType" />
        <xs:element name="map" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="set" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionhistory" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="transdate" type="xs:anyType" />
        <xs:element name="details" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testembeddablecriteria" >
      <xs:complexContent>
       <xs:extension base="embeddabledomaintestcase">
         <xs:sequence>
          <xs:element name="test_count" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjpqlsubquery" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="femaleuser_" >
      <xs:complexContent>
       <xs:extension base="compuser_">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="frequentflierplan_" >
      <xs:sequence>
        <xs:element name="annualmiles" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creditcard_" >
      <xs:sequence>
        <xs:element name="customer" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="transactionhistory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmultiselect" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
          <xs:element name="initialized" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtypedresults" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="n_orders" type="xs:long" />
          <xs:element name="n_items_per_order" type="xs:long" />
          <xs:element name="order_dates" type="xs:string" />
          <xs:element name="df" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="producer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="producer_" >
      <xs:sequence>
        <xs:element name="item" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item_" >
      <xs:sequence>
        <xs:element name="order" type="xs:anyType" />
        <xs:element name="producer" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="filled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="items" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="shop" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shiprate" >
      <xs:sequence>
        <xs:element name="shiprateid" type="xs:long" />
        <xs:element name="billedasweight" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderproducer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="producer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shop" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foobar" >
      <xs:sequence>
        <xs:element name="fid" type="xs:long" />
        <xs:element name="bid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo_" >
      <xs:sequence>
        <xs:element name="fid" type="xs:anyType" />
        <xs:element name="fstring" type="xs:anyType" />
        <xs:element name="fint" type="xs:anyType" />
        <xs:element name="flong" type="xs:anyType" />
        <xs:element name="bar" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shop_" >
      <xs:sequence>
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="orders" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:sequence>
        <xs:element name="bid" type="xs:long" />
        <xs:element name="b" type="xs:long" />
        <xs:element name="b" type="xs:string" />
        <xs:element name="b" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
        <xs:element name="fid" type="xs:long" />
        <xs:element name="f" type="xs:string" />
        <xs:element name="f" type="xs:long" />
        <xs:element name="f" type="xs:long" />
        <xs:element name="GeneratedName" type="bar" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar_" >
      <xs:sequence>
        <xs:element name="bid" type="xs:anyType" />
        <xs:element name="bint" type="xs:anyType" />
        <xs:element name="bshort" type="xs:anyType" />
        <xs:element name="bstring" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="producer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order_" >
      <xs:sequence>
        <xs:element name="items" type="xs:anyType" />
        <xs:element name="filled" type="xs:anyType" />
        <xs:element name="date" type="xs:anyType" />
        <xs:element name="shop" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="deptno" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcriteriainitialization" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myuserentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="addresses" type="addressentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addresspk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="addressname" type="xs:string" />
        <xs:element name="userid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="addresspk" nillable="true" minOccurs="0" />
        <xs:element name="user" type="myuserentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student_" >
      <xs:sequence>
        <xs:element name="enrollment" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerdetails" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="status" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joindomaintestcase" >
      <xs:complexContent>
       <xs:extension base="abstractcriteriatestcase">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
          <xs:element name="auditor" type="xs:anyType" />
          <xs:element name="cb" type="xs:anyType" />
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractor" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="semester" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="vendor" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b_" >
      <xs:sequence>
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nicknames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testfetchjoin" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="nicknames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exempt_" >
      <xs:complexContent>
       <xs:extension base="employee_">
         <xs:sequence>
          <xs:element name="hiredate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsubqueries" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="semester_" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="photos" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithidclass" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="ssn" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="info" type="contact" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="department" nillable="true" minOccurs="0" />
        <xs:element name="spouse" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="manager" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="frequentflierplan" nillable="true" minOccurs="0" />
        <xs:element name="salary" type="xs:long" />
        <xs:element name="rating" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="balance" type="xs:long" />
        <xs:element name="loan" type="xs:anyType" />
        <xs:element name="owner" type="person" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a_" >
      <xs:sequence>
        <xs:element name="b" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="magazine_" >
      <xs:sequence>
        <xs:element name="datepublished" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="idpublisher" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="studentwaitlist" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department_" >
      <xs:sequence>
        <xs:element name="deptno" type="xs:anyType" />
        <xs:element name="employees" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testbytearray" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="cb" type="xs:anyType" />
          <xs:element name="pic" type="xs:string" />
          <xs:element name="chars" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjoincondition" >
      <xs:complexContent>
       <xs:extension base="joindomaintestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idtestclass" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="ssn" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtypesafecondexpression" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="movie" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdistinctcriteria" >
      <xs:complexContent>
       <xs:extension base="criteriatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriatest" >
      <xs:complexContent>
       <xs:extension base="abstractcriteriatestcase">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
          <xs:element name="auditor" type="xs:anyType" />
          <xs:element name="cb" type="xs:anyType" />
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="classes" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="enrollment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerfullname" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="set" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="list" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="coll" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account_" >
      <xs:sequence>
        <xs:element name="balance" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="loan" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="owner" type="xs:anyType" />
        <xs:element name="customer" type="xs:anyType" />
        <xs:element name="product" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="request_" >
      <xs:sequence>
        <xs:element name="status" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="account" type="xs:anyType" />
        <xs:element name="requesttime" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddabledomaintestcase" >
      <xs:complexContent>
       <xs:extension base="abstractcriteriatestcase">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
          <xs:element name="auditor" type="xs:anyType" />
          <xs:element name="cb" type="xs:anyType" />
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="classes" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="scheduledassignment" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="parent" type="scheduledassignment" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="scheduleday" nillable="true" minOccurs="0" />
        <xs:element name="caze" type="case" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="role" nillable="true" minOccurs="0" />
        <xs:element name="brokenrule" type="lookup" nillable="true" minOccurs="0" />
        <xs:element name="//somehow,removingthishasaneffectbrokencustomruleexplanation" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmathqueries" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnewentityasqueryparameter" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="id_projekt1" type="xs:string" />
          <xs:element name="id_projekt2" type="xs:string" />
          <xs:element name="member_count_projekt1" type="xs:long" />
          <xs:element name="member_count_projekt2" type="xs:long" />
          <xs:element name="member_count_total" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testqueryresultclassapi" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manyoneentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="rel" type="manyoneentity" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testescapedsinglequotesinjpql" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testqueryresults" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testquerypagination" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testquotednumbersinfilters2" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbpolymorphicquery" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lookup" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsubquery" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="querys" type="xs:string" />
          <xs:element name="querys_jpa20" type="xs:string" />
          <xs:element name="updates" type="xs:string" />
          <xs:element name="querys2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testqueryidofrelationdoesnotjoin" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="e3id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnamedqueries" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleentity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="amount" type="xs:double" />
        <xs:element name="delivered" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="lineitems" type="orderitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="orderts" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="magazine" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="published" type="xs:dateTime" />
        <xs:element name="id" type="publisher" nillable="true" minOccurs="0" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupingtestcase" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcomplexqueries" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tuplequerytest" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatastoreactions" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testqueryexcludingsubclasses" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjpaquerysubclassfunc" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmethodqlquery" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testqueryparameters" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="oemf" type="xs:anyType" />
          <xs:element name="test_count" type="xs:long" />
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="named_query_with_positional_params" type="xs:string" />
        <xs:element name="named_query_with_named_params" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testqueryescapecharacters" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinmemoryquerymatchescapes" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdistinctqueries" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testprojectionquerywithidenticalresult" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="use_txn" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtimeoutexception" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="entityclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testresultsetmapping" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="scheduleday" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testabstractschemaname" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basequerytest" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.common.utils.abstracttestcase">
         <xs:sequence>
          <xs:element name="_sysprops" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdupnamedquery" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testaccesspathsofsubqueries" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manyoneentitysub" >
      <xs:complexContent>
       <xs:extension base="manyoneentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="sub" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="empid" type="xs:long" />
        <xs:element name="eff" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testwildcardcount" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlistresultserialization" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testresultsetmapping" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjpqlmultiselecttypedresults" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="n_orders" type="xs:long" />
          <xs:element name="n_items_per_order" type="xs:long" />
          <xs:element name="order_dates" type="xs:string" />
          <xs:element name="df" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hardware" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="empno" type="xs:string" />
        <xs:element name="techowner" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnewlinesinqueries" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdoublequotedstringliteralinjpql" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="cid" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="accounts" type="account" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testqueryconvertpositionalparameters" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_em" type="xs:anyType" />
          <xs:element name="_id1" type="xs:long" />
          <xs:element name="_name1" type="xs:string" />
          <xs:element name="_val1" type="xs:string" />
          <xs:element name="_id2" type="xs:long" />
          <xs:element name="_name2" type="xs:string" />
          <xs:element name="_val2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjdbcescapedate" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="publisher" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="magazinecollection" type="magazine" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="case" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="scheduleday" nillable="true" minOccurs="0" />
        <xs:element name="scheduledassignments" type="scheduledassignment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="aid" type="xs:long" />
        <xs:element name="balance" type="xs:long" />
        <xs:element name="loan" type="xs:anyType" />
        <xs:element name="cust" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="complexf" >
      <xs:complexContent>
       <xs:extension base="complexe">
         <xs:sequence>
          <xs:element name="f" type="xs:string" />
          <xs:element name="f" type="xs:long" />
          <xs:element name="f" type="xs:dateTime" />
          <xs:element name="gs" type="xs:anyType" />
          <xs:element name="e" type="complexe" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="complexb" >
      <xs:complexContent>
       <xs:extension base="complexa">
         <xs:sequence>
          <xs:element name="b" type="xs:string" />
          <xs:element name="b" type="xs:long" />
          <xs:element name="b" type="xs:dateTime" />
          <xs:element name="cs" type="xs:anyType" />
          <xs:element name="a" type="complexa" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osoba" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="projekty" type="projekt" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest3" >
      <xs:complexContent>
       <xs:extension base="runtimetest2">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="field3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="modruntimetest2" >
      <xs:complexContent>
       <xs:extension base="modruntimetest1">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="field2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytest3" >
      <xs:complexContent>
       <xs:extension base="querytest2">
         <xs:sequence>
          <xs:element name="num2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="circularfkpc2" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="fkfield" type="circularfkpc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qtimeout" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="versionfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytest2" >
      <xs:complexContent>
       <xs:extension base="querytest1">
         <xs:sequence>
          <xs:element name="onetoone" type="querytest2" nillable="true" minOccurs="0" />
          <xs:element name="stringcollection" type="xs:anyType" />
          <xs:element name="onetomany" type="querytest2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="stringmap" type="xs:anyType" />
          <xs:element name="stringtomanymap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="complexg" >
      <xs:complexContent>
       <xs:extension base="complexe">
         <xs:sequence>
          <xs:element name="g" type="xs:string" />
          <xs:element name="g" type="xs:long" />
          <xs:element name="g" type="xs:dateTime" />
          <xs:element name="f" type="complexf" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="complexc" >
      <xs:complexContent>
       <xs:extension base="complexb">
         <xs:sequence>
          <xs:element name="c" type="xs:string" />
          <xs:element name="c" type="xs:long" />
          <xs:element name="c" type="xs:dateTime" />
          <xs:element name="ds" type="xs:anyType" />
          <xs:element name="b" type="complexb" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleappidpc" >
      <xs:sequence>
        <xs:element name="pk" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest2" >
      <xs:complexContent>
       <xs:extension base="runtimetest1">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="field2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="circularfkpc" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="fkfield" type="circularfkpc2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytest4" >
      <xs:sequence>
        <xs:element name="num3" type="xs:long" />
        <xs:element name="onetoone2" type="querytest2" nillable="true" minOccurs="0" />
        <xs:element name="onetoone3" type="querytest2" nillable="true" minOccurs="0" />
        <xs:element name="manytomany3" type="querytest2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modruntimetest1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="somefield" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="trans" type="xs:string" />
        <xs:element name="selfoneone" type="modruntimetest1" nillable="true" minOccurs="0" />
        <xs:element name="selfonemany" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projekt" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="osoby" type="osoba" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionalclasspc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="complexe" >
      <xs:complexContent>
       <xs:extension base="complexd">
         <xs:sequence>
          <xs:element name="e" type="xs:string" />
          <xs:element name="e" type="xs:long" />
          <xs:element name="e" type="xs:dateTime" />
          <xs:element name="fs" type="xs:anyType" />
          <xs:element name="d" type="complexd" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runtimetest4" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="runtimetest5s" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="complexa" >
      <xs:sequence>
        <xs:element name="a" type="xs:string" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="a" type="xs:dateTime" />
        <xs:element name="bs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="entity2" nillable="true" minOccurs="0" />
        <xs:element name="versionfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="complexd" >
      <xs:sequence>
        <xs:element name="d" type="xs:string" />
        <xs:element name="d" type="xs:long" />
        <xs:element name="d" type="xs:dateTime" />
        <xs:element name="es" type="xs:anyType" />
        <xs:element name="c" type="complexc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest5" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="runtimetest4" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compoundappidpc" >
      <xs:sequence>
        <xs:element name="pk1" type="xs:string" />
        <xs:element name="pk2" type="xs:long" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="somefield" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:double" />
        <xs:element name="field" type="xs:double" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:dateTime" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="objfield" type="xs:anyType" />
        <xs:element name="objfield" type="xs:anyType" />
        <xs:element name="charobjfield" type="xs:anyType" />
        <xs:element name="objfield" type="xs:double" />
        <xs:element name="objfield" type="xs:double" />
        <xs:element name="intobjfield" type="xs:anyType" />
        <xs:element name="objfield" type="xs:long" />
        <xs:element name="objfield" type="xs:long" />
        <xs:element name="//transactionalonlytransfield" type="transactionalclasspc" nillable="true" minOccurs="0" />
        <xs:element name="trans" type="xs:string" />
        <xs:element name="//relationsselfoneone" type="runtimetest1" nillable="true" minOccurs="0" />
        <xs:element name="selfonemany" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytest1" >
      <xs:sequence>
        <xs:element name="/**changedvariablenames:afamokeke*reason:theoldvarnamesarereservedmysomedb'snamelymysql.*/id" type="xs:long" />
        <xs:element name="five" type="xs:long" />
        <xs:element name="numb" type="xs:long" />
        <xs:element name="strong" type="xs:string" />
        <xs:element name="cfield" type="xs:string" />
        <xs:element name="boolt" type="xs:anyType" />
        <xs:element name="decar" type="xs:double" />
        <xs:element name="t" type="xs:anyType" />
        <xs:element name="datum" type="xs:dateTime" />
        <xs:element name="manytomany" type="querytest4" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testoutofboundsex" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="" type="lookup" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsimple" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
          <xs:element name="q" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbdeleteupdateimpl" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
          <xs:element name="runt1" type="runtimetest1" nillable="true" minOccurs="0" />
          <xs:element name="runt2" type="runtimetest2" nillable="true" minOccurs="0" />
          <xs:element name="ent" type="entity1" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crtrequisicaoentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="crtrequisicaochequepersentity" >
      <xs:complexContent>
       <xs:extension base="crtrequisicaoentity">
         <xs:sequence>
          <xs:element name="crtoperacaobyoperacaorecepcaoservcent" type="crtoperacaoentity" nillable="true" minOccurs="0" />
          <xs:element name="crtoperacaobyoperacaorequisicao" type="crtoperacaoentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsqlresultsetmapping" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crtoperacaoentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="datahora" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="role" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="lookup" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testquerylock" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="curstatusid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="empno" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testlocate" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbqueryinterface" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="some" type="xs:long" />
        <xs:element name="statusid" type="xs:long" />
        <xs:element name="hire" type="xs:dateTime" />
        <xs:element name="hiretime" type="xs:dateTime" />
        <xs:element name="hiretimestamp" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testqueryexpressionsplit" >
      <xs:complexContent>
       <xs:extension base="basequerytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test1x1orderbyresultcollection" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjpqlwithoutidentificationvariable" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedqueryentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testquerytimeout" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="dict" type="xs:anyType" />
          <xs:element name="//skiptestduetounsupported/untesteddbskiptests" type="xs:anyType" />
          <xs:element name="//skipsometestsduetonodbtriggerstocausedelaytimeoutexceptionsskipexceptiontests" type="xs:anyType" />
          <xs:element name="//skipsometestsduetonoselectquerytimeoutsbeinggeneratedbythedbnoselecttimeouts" type="xs:anyType" />
          <xs:element name="//defaultnativequerytouseforupdatetestingnativeupdatestr" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsubstring" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderitem" >
      <xs:sequence>
        <xs:element name="lid" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="cost" type="xs:double" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hungariannotationfieldduplicates" >
      <xs:sequence>
        <xs:element name="strfoobar" type="xs:string" />
        <xs:element name="intfoobar" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hungariannotationfields" >
      <xs:sequence>
        <xs:element name="mfoobar7" type="xs:long" />
        <xs:element name="mfoobar1" type="xs:string" />
        <xs:element name="strfoobar2" type="xs:string" />
        <xs:element name="intfoobar3" type="xs:anyType" />
        <xs:element name="lgfoobar4" type="xs:long" />
        <xs:element name="m_foobar5" type="xs:long" />
        <xs:element name="m_clzfoobar6" type="otherclass" nillable="true" minOccurs="0" />
        <xs:element name="m_foobar7" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testhungariannotationremoval" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="otherclass" >
      <xs:sequence>
        <xs:element name="m_intbarfoo1" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentgraph" >
      <xs:complexContent>
       <xs:extension base="abstractgraph<e>">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="people" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="ssn" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentrelation" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="/***relationisafirstclassobjectwithitsownidentifier.*/id" type="xs:long" />
        <xs:element name="/***arelationmusthaveanon-nullvertexassource.*/source" type="xs:anyType" />
        <xs:element name="/***arelationmayhaveanon-nullvertexastarget.*/target" type="xs:anyType" />
        <xs:element name="*thisleadstothewholemapbeingserializedasasingleblobofdata.*/attrs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="graph" >
      <xs:complexContent>
       <xs:extension base="set<e>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpersistentgraph" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="ssn" type="xs:long" />
          <xs:element name="person_names" type="xs:string" />
          <xs:element name="city_names" type="xs:string" />
          <xs:element name="attr_since" type="xs:string" />
          <xs:element name="since" type="xs:dateTime" />
          <xs:element name="attr_emotion" type="xs:string" />
          <xs:element name="s" type="xs:anyType" />
          <xs:element name="attr_distance" type="xs:string" />
          <xs:element name="attr_distance_value" type="xs:long" />
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="graph" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationgraph" >
      <xs:complexContent>
       <xs:extension base="persistentgraph<e>">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="relations" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractgraph" >
      <xs:complexContent>
       <xs:extension base="abstractset<e>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testrelationtohandlermaps" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testhandlertohandlermaps" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalmanytoone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="related" type="basicentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childclass" >
      <xs:complexContent>
       <xs:extension base="parentclass">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chainentitya" >
      <xs:sequence>
        <xs:element name="aid" type="xs:long" />
        <xs:element name="optlock" type="xs:anyType" />
        <xs:element name="chainentitybset" type="chainentityb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitybinverseeager" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitya" type="entityainverseeager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targetedifacerelationparent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="iface" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitycinverseeager" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="balance" type="xs:long" />
        <xs:element name="entityd" type="entitydinverseeager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lrsentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lrslist" type="basicentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="cid" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onemanyeagerchild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="onemanyeagerparent" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrententityleft" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="strdata" type="xs:string" />
        <xs:element name="rightentity" type="concurrententityright" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testoneonenulls" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="pid1" type="xs:long" />
          <xs:element name="pid2" type="xs:long" />
          <xs:element name="cid1" type="xs:long" />
          <xs:element name="cid2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadingonemanyparent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="cascadingonemanychild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="grandchild" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="child" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pphone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="people" type="pperson" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="rel" type="basicentity" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vcs" >
      <xs:sequence>
        <xs:element name="vcsid" type="xs:string" />
        <xs:element name="GeneratedName" type="e" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="vcs" type="vc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeyparent" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="cid" type="xs:string" />
        <xs:element name="GeneratedName" type="cm" nillable="true" minOccurs="0" />
        <xs:element name="ds" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleembeddable" >
      <xs:sequence>
        <xs:element name="embedded" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="handlertohandlermapinstance" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idorderedonemanyparent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="explicitchildren" type="idorderedonemanychild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="implicitchildren" type="idorderedonemanychild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="optlock" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testlrs" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjoinedmultiinheritancehierarchy" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testchainentities" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="/*	*setthismagicalnumberto3orlesstoavoidtheerror.	*/magical_number" type="xs:long" />
          <xs:element name="aid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjoinedinheritancehierarchy" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityainverseeager" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="listb" type="entitybinverseeager" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidiparent" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="onetomanychildren" type="bidichild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="onetoonechild" type="bidichild" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testconcurrentmap" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadingonemanychild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="cascadingonemanyparent" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tblchild" >
      <xs:sequence>
        <xs:element name="childid" type="xs:anyType" />
        <xs:element name="vrsnbr" type="xs:anyType" />
        <xs:element name="tblgrandchildren" type="tblgrandchild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="tblparent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmapcollectiontoblob" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmultiplesametypedembeddedwitheagerrelations" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmanyoneasid" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="dsid" type="xs:long" />
          <xs:element name="cid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="atext" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="acase" nillable="true" minOccurs="0" />
        <xs:element name="aevidents" type="aevident" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="acaseid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oneonechild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="oneoneparent" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vc" >
      <xs:sequence>
        <xs:element name="vcid" type="xs:string" />
        <xs:element name="//////ii" type="vcs" nillable="true" minOccurs="0" />
        <xs:element name="ds" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aevident" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="atext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="acase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="atext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablewithrelation" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="rel" type="multiplesametypedembedded" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeychild" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="mapkey" type="xs:string" />
        <xs:element name="parent" type="mapkeyparent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="amount" type="xs:double" />
        <xs:element name="delivered" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydinverseeager" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="logincount" type="xs:long" />
        <xs:element name="logoutcount" type="xs:long" />
        <xs:element name="email" type="xs:string" />
        <xs:element name="entityc" type="entitycinverseeager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="grandchilds" type="grandchild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testhandlertorelationmaps" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idorderedonemanychild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="explicitparent" type="idorderedonemanyparent" nillable="true" minOccurs="0" />
        <xs:element name="implicitparent" type="idorderedonemanyparent" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testonetomanywitheagerlazyfetch" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="testutil1xm_testrow_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationtohandlermapinstance" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="aftmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testeagerbidisql" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:long" />
          <xs:element name="id2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritancehierarchyconcrete" >
      <xs:complexContent>
       <xs:extension base="inheritancehierarchyabstract">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="value" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onemanylazychild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="onemanyeagerparent" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmanyeagersql" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manyonecompoundidownerid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="entityid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya2inverseeager" >
      <xs:complexContent>
       <xs:extension base="entityainverseeager">
         <xs:sequence>
          <xs:element name="name2" type="xs:string" />
          <xs:element name="listb" type="entitybinverseeager" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="handlertorelationmapinstance" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cm" >
      <xs:sequence>
        <xs:element name="cmid" type="xs:string" />
        <xs:element name="cs" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="e" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testjoinedinheritancehierarchywithcache" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testhandlercollections" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testparalleleagermap" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="c" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="a" type="xs:string" />
        <xs:element name="GeneratedName" type="vc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testo2orefcolumn" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitya1inverseeager" >
      <xs:complexContent>
       <xs:extension base="entityainverseeager">
         <xs:sequence>
          <xs:element name="name1" type="xs:string" />
          <xs:element name="listb" type="entitybinverseeager" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="util1xmrt" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidichild" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="onetomanyparent" type="bidiparent" nillable="true" minOccurs="0" />
        <xs:element name="onetooneparent" type="bidiparent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childchildclass" >
      <xs:complexContent>
       <xs:extension base="childclass">
         <xs:sequence>
          <xs:element name="name2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onemanyeagerparent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lazychildren" type="onemanylazychild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="eagerchildren" type="onemanyeagerchild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chainentityb" >
      <xs:sequence>
        <xs:element name="bid" type="xs:long" />
        <xs:element name="optlock" type="xs:anyType" />
        <xs:element name="//cascade" type="chainentityc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="grandchildclass" >
      <xs:complexContent>
       <xs:extension base="childchildclass">
         <xs:sequence>
          <xs:element name="someunloadedfield" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinversemanager" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testrelationorphanremoval" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="concurrententityright" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="strdata" type="xs:string" />
        <xs:element name="leftentitymap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pperson" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="phones" type="pphone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oneoneparent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="child" type="oneonechild" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtargetedifacerelations" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="handlercollectioninstance" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="collection" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datastoremanyoneidowner" >
      <xs:sequence>
        <xs:element name="id" type="datastorebasicentity" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="selfrel" type="datastoremanyoneidowner" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcascadingonemanywithforeignkey" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationtorelationmapinstance" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tblgrandchild" >
      <xs:sequence>
        <xs:element name="grandchildid" type="xs:anyType" />
        <xs:element name="vrsnbr" type="xs:anyType" />
        <xs:element name="GeneratedName" type="tblchild" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="childs" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testrelationfieldasprimarykeyandforeignkey" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentclass" >
      <xs:sequence>
        <xs:element name="items" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tblparent" >
      <xs:sequence>
        <xs:element name="parentid" type="xs:anyType" />
        <xs:element name="tblchildren" type="tblchild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testlazymanytoone" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chainentityc" >
      <xs:sequence>
        <xs:element name="cid" type="xs:long" />
        <xs:element name="optlock" type="xs:anyType" />
        <xs:element name="GeneratedName" type="chainentityb" nillable="true" minOccurs="0" />
        <xs:element name="chainentitybid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testincompleterelationship" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="client_id" type="xs:string" />
          <xs:element name="discounts" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplesametypedembedded" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="embed1" type="embeddablewithrelation" nillable="true" minOccurs="0" />
        <xs:element name="embed2" type="embeddablewithrelation" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manyonecompoundidowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="entityid" type="basicentity" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="selfrel" type="manyonecompoundidowner" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritancehierarchyabstract" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="parent" type="inheritancehierarchyabstract" nillable="true" minOccurs="0" />
        <xs:element name="children" type="inheritancehierarchyabstract" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manyoneidowner" >
      <xs:sequence>
        <xs:element name="id" type="basicentity" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="selfrel" type="manyoneidowner" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testinverseeagersql" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numcustomers" type="xs:long" />
          <xs:element name="numorderspercustomer" type="xs:long" />
          <xs:element name="_npeople" type="xs:long" />
          <xs:element name="_nphones" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="util1xmlf" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="unirightlzy" type="util1xmrt" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="unirightegr" type="util1xmrt" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datastorebasicentity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="rel" type="basicentity" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testrelationtorelationmaps" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbulkupdatesandembeddedfields" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testidorderedonemany" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="incompleterelationshipsubclass" >
      <xs:complexContent>
       <xs:extension base="incompleterelationshipparententity.">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lrsentityb" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitya" type="lrsentitya" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="incompleterelationshipparententity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:anyType" />
        <xs:element name="child" type="incompleterelationshipchildentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="incompleterelationshipchildentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lrsentitya" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="entitybs" type="lrsentityb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="e" >
      <xs:sequence>
        <xs:element name="eid" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="vcss" type="vcs" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="cms" type="cm" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testxmlcustomerorder" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="order_1_oid" type="xs:long" />
          <xs:element name="order_1_amount" type="xs:double" />
          <xs:element name="order_1_delivered" type="xs:anyType" />
          <xs:element name="order_2_oid" type="xs:long" />
          <xs:element name="order_2_amount" type="xs:double" />
          <xs:element name="order_2_delivered" type="xs:anyType" />
          <xs:element name="firsttestexecuted" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectfactory" >
      <xs:sequence>
        <xs:element name="_addrusa_" type="xs:anyType" />
        <xs:element name="_addrcan_" type="xs:anyType" />
        <xs:element name="_mailaddress_" type="xs:anyType" />
        <xs:element name="_addrgbr_" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="street" type="xs:anyType" />
        <xs:element name="city" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="canaddress" >
      <xs:complexContent>
       <xs:extension base="address">
         <xs:sequence>
          <xs:element name="province" type="xs:string" />
          <xs:element name="postalcode" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gbraddress" >
      <xs:complexContent>
       <xs:extension base="address">
         <xs:sequence>
          <xs:element name="county" type="xs:string" />
          <xs:element name="postcode" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="shortaddress" >
      <xs:complexContent>
       <xs:extension base="address">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usaaddress" >
      <xs:complexContent>
       <xs:extension base="address">
         <xs:sequence>
          <xs:element name="state" type="xs:string" />
          <xs:element name="zip" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="amount" type="xs:double" />
        <xs:element name="delivered" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="ship" type="address" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eaddress" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="cid" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="address" type="eaddress" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lecturer" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localizedtext" >
      <xs:sequence>
        <xs:element name="texten" type="xs:string" />
        <xs:element name="textde" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="optlock" type="xs:anyType" />
        <xs:element name="coursenumber" type="xs:string" />
        <xs:element name="normalattribute" type="xs:string" />
        <xs:element name="objective" type="localizedtext" nillable="true" minOccurs="0" />
        <xs:element name="title" type="localizedtext" nillable="true" minOccurs="0" />
        <xs:element name="lobcolumn" type="xs:string" />
        <xs:element name="lecturers" type="lecturer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdistinctjoin" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="center" type="entitya" nillable="true" minOccurs="0" />
        <xs:element name="linacs" type="entityc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedmappinglocationembeddedid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="basic10" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedmappinglocation" >
      <xs:sequence>
        <xs:element name="id" type="mixedmappinglocationembeddedid" nillable="true" minOccurs="0" />
        <xs:element name="basic1" type="xs:string" />
        <xs:element name="basic2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="service" type="entityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="services" type="entityb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmergecomplexkey" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="props" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accountinghierarchyrateopenjpakey" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="accountinghierarchy" type="xs:string" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accountinghierarchyrate" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="GeneratedName" type="accountinghierarchy" nillable="true" minOccurs="0" />
        <xs:element name="currentrate" type="xs:anyType" />
        <xs:element name="budgetrate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accountinghierarchy" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="shortdesc" type="xs:string" />
        <xs:element name="accratelist" type="accountinghierarchyrate" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testliteralinsql" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testonetomanysubquery" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="empno" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="dept" type="department" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee_" >
      <xs:sequence>
        <xs:element name="dept" type="xs:anyType" />
        <xs:element name="empno" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testjoinfetchwithquerydatacache" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbjoins" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="department_" >
      <xs:sequence>
        <xs:element name="deptno" type="xs:anyType" />
        <xs:element name="employee2s" type="xs:anyType" />
        <xs:element name="employees" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="deptno" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="employee2s" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persontest" >
      <xs:sequence>
        <xs:element name="primarykey" type="xs:string" />
        <xs:element name="GeneratedName" type="departmenttest" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testjoinleftfetch" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="departmenttest" >
      <xs:sequence>
        <xs:element name="primarykey" type="xs:string" />
        <xs:element name="persons" type="persontest" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iorderedentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlorderedmanytomanyentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="entities" type="inameentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderednameentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entities" type="iorderedentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderedonetomanyentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="entities" type="inameentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlunorderednameentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="icolumnentity" >
      <xs:complexContent>
       <xs:extension base="inameentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inameentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlorderedonetomanyentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="entities" type="inameentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlorderednameentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="columns" type="icolumnentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderedelemententity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="elements" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iorderedelements" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unorderednameentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderedmanytomanyentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="entities" type="inameentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlorderedelemententity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="elements" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testejbqueryinterface" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbpolymorphicquery" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbclauses" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbdeleteupdateimpl" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbulkupdate" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsetparameter" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="userid" type="xs:long" />
          <xs:element name="original_name" type="xs:string" />
          <xs:element name="original_age" type="xs:long" />
          <xs:element name="updated_name" type="xs:string" />
          <xs:element name="updated_age" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbqlfunction" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="userid1,userid2,userid3,userid4,userid5,userid6" type="xs:long" />
          <xs:element name="/***somedatabasestrimthewhitespacefromauponinsert.storeshannon'snamefor*assertslaterinthetestcase.*/expectedshannonname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjoinversionfield" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longversionentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shortversionentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primativeshortversionentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestampversionentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primativelongversionentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testversionfieldtype" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseentity" >
      <xs:sequence>
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childversionentity" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="author" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testindex" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="element_names" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinmemoryscalarexpressions" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="userid1,userid2,userid3,userid4,userid5,userid6" type="xs:long" />
          <xs:element name="/***somedatabasestrimthewhitespacefromauponinsert.storeshannon'snamefor*assertslaterinthetestcase.*/expectedshannonname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testentitytypeexpression" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="userid1,userid2,userid3,userid4,userid5,userid6" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testejbqlcondexpression" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="userid1,userid2,userid3,userid4,userid5" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjpqlscalarexpressions" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="userid1,userid2,userid3,userid4,userid5,userid6" type="xs:long" />
          <xs:element name="/***somedatabasestrimthewhitespacefromauponinsert.storeshannon'snamefor*assertslaterinthetestcase.*/expectedshannonname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="s1" type="xs:string" />
        <xs:element name="s2" type="xs:string" />
        <xs:element name="/*	*bydefault,openjpastorescharsasints,sotoforcetheuseof	*achar(1)field,youwouldneedtooverridethisprocessingvia	*adbdictionaryproperty:	*-dopenjpa.jdbc.dbdictionary" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testexternalvalues" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ent1" >
      <xs:sequence>
        <xs:element name="//primarykey:pk" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testbatchlimitexception" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="expectedfailedobject" type="ent1" nillable="true" minOccurs="0" />
          <xs:element name="expectedfailedobjectoracle" type="ent1" nillable="true" minOccurs="0" />
          <xs:element name="isoracle" type="xs:anyType" />
          <xs:element name="ispostgres" type="xs:anyType" />
          <xs:element name="expectedfailuremsg" type="xs:string" />
          <xs:element name="expectedfailuremsg18" type="xs:string" />
          <xs:element name="expectedfailuremsgoracle" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityd3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityi" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entityhs" type="entityh" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitye" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityi3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog2" >
      <xs:complexContent>
       <xs:extension base="animal2">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="secname" type="xs:string" />
        <xs:element name="collectionset" type="xs:anyType" />
        <xs:element name="collectiondelimset" type="xs:anyType" />
        <xs:element name="collectionmap" type="xs:anyType" />
        <xs:element name="delimcollectionmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdeliminheritance" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="pontiac" nillable="true" minOccurs="0" />
          <xs:element name="" type="chevrolet" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityd" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitycs" type="entityc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityi2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="entityi3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chevrolet" >
      <xs:complexContent>
       <xs:extension base="car">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdelimidseqgen" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="conf" type="xs:anyType" />
          <xs:element name="dict" type="xs:anyType" />
          <xs:element name="supportsnativesequence" type="xs:anyType" />
          <xs:element name="" type="entityb" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdelimidresultsetannotations" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="car" nillable="true" minOccurs="0" />
          <xs:element name="" type="pontiac" nillable="true" minOccurs="0" />
          <xs:element name="" type="chevrolet" nillable="true" minOccurs="0" />
          <xs:element name="" type="car2" nillable="true" minOccurs="0" />
          <xs:element name="" type="pontiac2" nillable="true" minOccurs="0" />
          <xs:element name="" type="chevrolet2" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityd2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="entityd3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityi2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ei3" type="entityi3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testxmldelimidresultsets" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="car" nillable="true" minOccurs="0" />
          <xs:element name="" type="pontiac" nillable="true" minOccurs="0" />
          <xs:element name="" type="chevrolet" nillable="true" minOccurs="0" />
          <xs:element name="" type="car2" nillable="true" minOccurs="0" />
          <xs:element name="" type="pontiac2" nillable="true" minOccurs="0" />
          <xs:element name="" type="chevrolet2" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testxmldelimitedjoinannotation" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="entityh" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityi" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityi2" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityi3" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityi4" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testxmldelimitedidentifiers" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="entitya" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chevrolet2" >
      <xs:complexContent>
       <xs:extension base="car2">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityi3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pontiac" >
      <xs:complexContent>
       <xs:extension base="car">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="secname" type="xs:string" />
        <xs:element name="delimset" type="xs:anyType" />
        <xs:element name="delimmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car2" >
      <xs:sequence>
        <xs:element name="//@idid" type="xs:long" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chevrolet" >
      <xs:complexContent>
       <xs:extension base="car">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testxmldeliminheritance" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="pontiac" nillable="true" minOccurs="0" />
          <xs:element name="" type="chevrolet" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pontiac2" >
      <xs:complexContent>
       <xs:extension base="car2">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityi" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ehs" type="entityh" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="color" type="xs:string" />
        <xs:element name="modelyear" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityi4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityh" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="secname" type="xs:string" />
        <xs:element name="eis" type="entityi" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="ei2" type="entityi2" nillable="true" minOccurs="0" />
        <xs:element name="map" type="xs:anyType" />
        <xs:element name="map2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testxmldelimidseqgen" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="conf" type="xs:anyType" />
          <xs:element name="dict" type="xs:anyType" />
          <xs:element name="supportsnativesequence" type="xs:anyType" />
          <xs:element name="" type="entityb" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityh" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="secname" type="xs:string" />
        <xs:element name="entityis" type="entityi" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="entityi2" nillable="true" minOccurs="0" />
        <xs:element name="map" type="xs:anyType" />
        <xs:element name="map2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityf" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="//note:delimitedcolumndefinitionisnotsupportedonsomedbs//todo:copyintoaseparateentityandconditionallyrunadifferenttestname" type="xs:string" />
        <xs:element name="nondelimname" type="xs:string" />
        <xs:element name="secname" type="xs:string" />
        <xs:element name="cset" type="xs:anyType" />
        <xs:element name="collectiondelimset" type="xs:anyType" />
        <xs:element name="cmap" type="xs:anyType" />
        <xs:element name="dcmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cat2" >
      <xs:complexContent>
       <xs:extension base="animal2">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityi4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityd" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entitycs" type="entityc" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityd4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitye" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityg" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="secname" type="xs:string" />
        <xs:element name="entityds" type="entityd" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="entityd2" nillable="true" minOccurs="0" />
        <xs:element name="map" type="xs:anyType" />
        <xs:element name="map2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityd3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnoschemamanualdelimidseqgen" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="conf" type="xs:anyType" />
          <xs:element name="dict" type="xs:anyType" />
          <xs:element name="supportsnativesequence" type="xs:anyType" />
          <xs:element name="" type="entitye" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnoschemamanualdelimid" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="" type="entityf" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityf" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="//note:delimitedcolumndefinitionisnotsupportedonsomedbs//todo:copyintoaseparateentityandconditionallyrunadifferenttestname" type="xs:string" />
        <xs:element name="nondelimname" type="xs:string" />
        <xs:element name="secname" type="xs:string" />
        <xs:element name="nscs" type="xs:anyType" />
        <xs:element name="nscds" type="xs:anyType" />
        <xs:element name="nscollmap" type="xs:anyType" />
        <xs:element name="delimcollectionmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnoschemamanualdelimitedjoinannotations" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="entityc" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityd" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityd2" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityd3" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityd4" nillable="true" minOccurs="0" />
          <xs:element name="conf" type="xs:anyType" />
          <xs:element name="dict" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityd2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="entityd3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmanualdelimitedjoinannotations" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="entityc" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityd" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityd2" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityd3" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityd4" nillable="true" minOccurs="0" />
          <xs:element name="conf" type="xs:anyType" />
          <xs:element name="dict" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="color" type="xs:string" />
        <xs:element name="modelyear" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmanualdeliminheritance" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="dog" nillable="true" minOccurs="0" />
          <xs:element name="" type="cat" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityd4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pontiac" >
      <xs:complexContent>
       <xs:extension base="car">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdelimitedjoinannotation" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="entityh" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityi" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityi2" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityi3" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityi4" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chevrolet2" >
      <xs:complexContent>
       <xs:extension base="car2">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmanualdelimidresultsetannotations" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="animal" nillable="true" minOccurs="0" />
          <xs:element name="" type="dog" nillable="true" minOccurs="0" />
          <xs:element name="" type="cat" nillable="true" minOccurs="0" />
          <xs:element name="" type="animal2" nillable="true" minOccurs="0" />
          <xs:element name="" type="dog2" nillable="true" minOccurs="0" />
          <xs:element name="" type="cat2" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityg" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmanualdelimidseqgen" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="conf" type="xs:anyType" />
          <xs:element name="dict" type="xs:anyType" />
          <xs:element name="supportsnativesequence" type="xs:anyType" />
          <xs:element name="" type="entitye" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmanualdelimid" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="" type="entityf" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdelimitedidentifiers" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="" type="entitya" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pontiac2" >
      <xs:complexContent>
       <xs:extension base="car2">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="secname" type="xs:string" />
        <xs:element name="entityds" type="entityd" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="entityd2" nillable="true" minOccurs="0" />
        <xs:element name="map" type="xs:anyType" />
        <xs:element name="map2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sampleenum" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testenumsinjpql" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testenumqueryconstructor" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytearrayholder" >
      <xs:sequence>
        <xs:element name="taskid" type="xs:long" />
        <xs:element name="//@lob//type1004size-1shouldbe1003tkiid" type="xs:anyType" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testenumsets" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumsetowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumfieldtype" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
        <xs:element name="enumfield" type="sampleenum" nillable="true" minOccurs="0" />
        <xs:element name="enumlist" type="sampleenum" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testbytearray" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
          <xs:element name="runtest" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmergeandpersistwithmanagedrelation" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
          <xs:element name="childid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpessimisticpnontranstopdirty" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testswitchconnection" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="defaultjndiname" type="xs:string" />
          <xs:element name="jndinames" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testoverridenonjtadatasource" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="defaultjndiname" type="xs:string" />
          <xs:element name="jndinames" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testopenjpaconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fgaddress" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fgdepartment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fgmanager" >
      <xs:complexContent>
       <xs:extension base="fgemployee">
         <xs:sequence>
          <xs:element name="employees" type="fgemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="mdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fgemployee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="dept" type="fgdepartment" nillable="true" minOccurs="0" />
        <xs:element name="address" type="fgaddress" nillable="true" minOccurs="0" />
        <xs:element name="manager" type="fgmanager" nillable="true" minOccurs="0" />
        <xs:element name="rating" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testfetchgroupstacks" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfetchgroupstacksxml" >
      <xs:complexContent>
       <xs:extension base="testfetchgroupstacks">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfetchgroups" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
          <xs:element name="emppermgr" type="xs:long" />
          <xs:element name="mgrcount" type="xs:long" />
          <xs:element name="empcount" type="xs:long" />
          <xs:element name="employeeset" type="fgemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="managerset" type="fgmanager" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="empdescriptionfieldstr" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemodenonedatacachetrue" >
      <xs:complexContent>
       <xs:extension base="testcachemodenone{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemodeenableselecteddatacachetrue" >
      <xs:complexContent>
       <xs:extension base="testcachemodeenableselective{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcachemodetestcase" >
      <xs:complexContent>
       <xs:extension base="abstractcachetestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemodeempty" >
      <xs:complexContent>
       <xs:extension base="abstractcachemodetestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
          <xs:element name="expectedincache" type="xs:anyType" />
          <xs:element name="expectednotincache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemodenonedatacachecustomized" >
      <xs:complexContent>
       <xs:extension base="testcachemodenone">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemodeall" >
      <xs:complexContent>
       <xs:extension base="abstractcachemodetestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
          <xs:element name="expectedincache" type="xs:anyType" />
          <xs:element name="expectednotincache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemodedisableselective" >
      <xs:complexContent>
       <xs:extension base="abstractcachemodetestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
          <xs:element name="expectedincache" type="xs:anyType" />
          <xs:element name="expectednotincache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemodedisableselectiveinheritance" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="params" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmluncacheableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uncacheableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlcacheableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="negatedcachableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childuncacheable" >
      <xs:complexContent>
       <xs:extension base="parentunspecifiedentity">
         <xs:sequence>
          <xs:element name="child" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentunspecifiedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unspecifiedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="negateduncacheableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcachemodenone" >
      <xs:complexContent>
       <xs:extension base="abstractcachemodetestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
          <xs:element name="expectedincache" type="xs:anyType" />
          <xs:element name="expectednotincache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmultiemfcachemodes" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datacachetestextension" >
      <xs:complexContent>
       <xs:extension base="concurrentdatacache">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemodeunspecifieddatacachetrue" >
      <xs:complexContent>
       <xs:extension base="abstractcachemodetestcase{">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
          <xs:element name="expectedincache" type="xs:anyType" />
          <xs:element name="expectednotincache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpropertycachemodeall" >
      <xs:complexContent>
       <xs:extension base="abstractcachemodetestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
          <xs:element name="expectedincache" type="xs:anyType" />
          <xs:element name="expectednotincache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemodeinvalid" >
      <xs:complexContent>
       <xs:extension base="abstractcachetestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemodeunspecified" >
      <xs:complexContent>
       <xs:extension base="abstractcachemodetestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
          <xs:element name="expectedincache" type="xs:anyType" />
          <xs:element name="expectednotincache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpropertycachemodeunspecified" >
      <xs:complexContent>
       <xs:extension base="abstractcachemodetestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
          <xs:element name="expectedincache" type="xs:anyType" />
          <xs:element name="expectednotincache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpropertycachemodeinvalid" >
      <xs:complexContent>
       <xs:extension base="abstractcachetestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpropertycachemodeenableselective" >
      <xs:complexContent>
       <xs:extension base="abstractcachemodetestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
          <xs:element name="expectedincache" type="xs:anyType" />
          <xs:element name="expectednotincache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpropertycachemodedisableselective" >
      <xs:complexContent>
       <xs:extension base="abstractcachemodetestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
          <xs:element name="expectedincache" type="xs:anyType" />
          <xs:element name="expectednotincache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemodealldatacachetrue" >
      <xs:complexContent>
       <xs:extension base="testcachemodeall">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcachemodealldatacachecustomized" >
      <xs:complexContent>
       <xs:extension base="testcachemodeall">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemodeenableselective" >
      <xs:complexContent>
       <xs:extension base="abstractcachemodetestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
          <xs:element name="expectedincache" type="xs:anyType" />
          <xs:element name="expectednotincache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcachetestcase" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="retrieve_mode_prop" type="xs:string" />
          <xs:element name="store_mode_prop" type="xs:string" />
          <xs:element name="emf" type="xs:anyType" />
          <xs:element name="persistenttypes" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpropertycachemodenone" >
      <xs:complexContent>
       <xs:extension base="abstractcachemodetestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
          <xs:element name="expectedincache" type="xs:anyType" />
          <xs:element name="expectednotincache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionalentitymanagerfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="libservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="libserviceimpl" >
      <xs:sequence>
        <xs:element name="txemf" type="transactionalentitymanagerfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testlibservice" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="txscope" type="xs:anyType" />
          <xs:element name="service" type="libservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="libtestingservice" >
      <xs:sequence>
        <xs:element name="em" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitfieldaccess" >
      <xs:sequence>
        <xs:element name="f1" type="xs:long" />
        <xs:element name="f2" type="xs:long" />
        <xs:element name="f3" type="xs:long" />
        <xs:element name="f4" type="implicitfieldaccessbase" nillable="true" minOccurs="0" />
        <xs:element name="f5" type="implicitfieldaccessbase" nillable="true" minOccurs="0" />
        <xs:element name="transientf6" type="implicitfieldaccessbase" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testvaluestrategies" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitfieldaccessmixed" >
      <xs:sequence>
        <xs:element name="f1" type="xs:long" />
        <xs:element name="f2" type="xs:long" />
        <xs:element name="f3" type="xs:long" />
        <xs:element name="f4" type="implicitfieldaccessbase" nillable="true" minOccurs="0" />
        <xs:element name="f5" type="implicitfieldaccessbase" nillable="true" minOccurs="0" />
        <xs:element name="transientf6" type="implicitfieldaccessbase" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitpropertyaccess" >
      <xs:sequence>
        <xs:element name="f1" type="xs:string" />
        <xs:element name="f2" type="xs:long" />
        <xs:element name="f3" type="xs:string" />
        <xs:element name="f4" type="xs:string" />
        <xs:element name="f5" type="implicitfieldaccessbase" nillable="true" minOccurs="0" />
        <xs:element name="f6" type="implicitfieldaccessbase" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mdrtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="manytoone" type="mdrtestentity" nillable="true" minOccurs="0" />
        <xs:element name="onetomany" type="mdrtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testclassmetadata" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_repos" type="xs:anyType" />
          <xs:element name="_metatest1" type="xs:anyType" />
          <xs:element name="_metatest2" type="xs:anyType" />
          <xs:element name="_metatest3" type="xs:anyType" />
          <xs:element name="_metatest5" type="xs:anyType" />
          <xs:element name="_metatest6" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfielddeclarationorder" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testxmlpersistencemetadataserializer" >
      <xs:complexContent>
       <xs:extension base="testclassmetadata">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraymember" >
      <xs:sequence>
        <xs:element name="array" type="xs:anyType" />
        <xs:element name="array" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpersistentclasses" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitfieldaccess_" >
      <xs:sequence>
        <xs:element name="f1" type="xs:anyType" />
        <xs:element name="f2" type="xs:anyType" />
        <xs:element name="f4" type="xs:anyType" />
        <xs:element name="f5" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmetadatarepository" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="pu_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnonpersistentfields" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_meta" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsequenceassigned" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfactorymethod" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_repos" type="xs:anyType" />
          <xs:element name="_metatest7" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitpropertyaccess_" >
      <xs:sequence>
        <xs:element name="f1" type="xs:anyType" />
        <xs:element name="f3" type="xs:anyType" />
        <xs:element name="f4" type="xs:anyType" />
        <xs:element name="f5" type="xs:anyType" />
        <xs:element name="f6" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testexternalvalues" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitfieldaccessmixed_" >
      <xs:sequence>
        <xs:element name="f1" type="xs:anyType" />
        <xs:element name="f2" type="xs:anyType" />
        <xs:element name="f4" type="xs:anyType" />
        <xs:element name="f5" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testquerytypealiasregistration" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="threads" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitpropertyaccessmixed_" >
      <xs:sequence>
        <xs:element name="f1" type="xs:anyType" />
        <xs:element name="f3" type="xs:anyType" />
        <xs:element name="f4" type="xs:anyType" />
        <xs:element name="f5" type="xs:anyType" />
        <xs:element name="f6" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitfieldaccesssubclass" >
      <xs:complexContent>
       <xs:extension base="implicitfieldaccessbase">
         <xs:sequence>
          <xs:element name="base" type="implicitfieldaccessbase" nillable="true" minOccurs="0" />
          <xs:element name="maprelationkeyembedded" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embed0" >
      <xs:sequence>
        <xs:element name="f1" type="xs:long" />
        <xs:element name="entity1" type="implicitfieldaccesssubclass" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitfieldaccessmappedsuperclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="createtime" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitfieldaccessbase" >
      <xs:complexContent>
       <xs:extension base="implicitfieldaccessmappedsuperclass">
         <xs:sequence>
          <xs:element name="f0" type="xs:string" />
          <xs:element name="primitive" type="xs:long" />
          <xs:element name="boxedint" type="xs:anyType" />
          <xs:element name="one2onerelation" type="explicitfieldaccess" nillable="true" minOccurs="0" />
          <xs:element name="collectionrelation" type="explicitfieldaccess" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="listrelation" type="explicitfieldaccess" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="setrelation" type="explicitfieldaccess" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="maprelationkeypc" type="xs:anyType" />
          <xs:element name="maprelationkeybasic" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitpropertyaccessmixed" >
      <xs:sequence>
        <xs:element name="f1" type="xs:string" />
        <xs:element name="f2" type="xs:long" />
        <xs:element name="f3" type="implicitfieldaccessbase" nillable="true" minOccurs="0" />
        <xs:element name="f4" type="xs:long" />
        <xs:element name="f5" type="xs:long" />
        <xs:element name="f6" type="implicitfieldaccessbase" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testorderby" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runtimetest1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="somefield" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:double" />
        <xs:element name="field" type="xs:double" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:dateTime" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="objfield" type="xs:anyType" />
        <xs:element name="objfield" type="xs:anyType" />
        <xs:element name="charobjfield" type="xs:anyType" />
        <xs:element name="objfield" type="xs:double" />
        <xs:element name="objfield" type="xs:double" />
        <xs:element name="intobjfield" type="xs:anyType" />
        <xs:element name="objfield" type="xs:long" />
        <xs:element name="objfield" type="xs:long" />
        <xs:element name="//transactionalonlytransfield" type="transactionalclasspc" nillable="true" minOccurs="0" />
        <xs:element name="trans" type="xs:string" />
        <xs:element name="//relationsselfoneone" type="runtimetest1" nillable="true" minOccurs="0" />
        <xs:element name="selfonemany" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metatest3" >
      <xs:complexContent>
       <xs:extension base="metatest2">
         <xs:sequence>
          <xs:element name="pcfield" type="xs:anyType" />
          <xs:element name="externalfield" type="xs:anyType" />
          <xs:element name="metafield" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metatest7" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="status" type="xs:anyType" />
        <xs:element name="intlongstatus" type="xs:anyType" />
        <xs:element name="intintegerstatus" type="xs:anyType" />
        <xs:element name="integerintegerstatus" type="xs:anyType" />
        <xs:element name="integerintstatus" type="xs:anyType" />
        <xs:element name="integerlongstatus" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbypcrel" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:string" />
        <xs:element name="toone" type="orderbypc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valuestrategypc" >
      <xs:sequence>
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="uuidhex" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ignoreupdate" type="xs:long" />
        <xs:element name="restrictupdate" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="sequence" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="externalvalues" >
      <xs:sequence>
        <xs:element name="toshort" type="xs:anyType" />
        <xs:element name="todouble" type="xs:anyType" />
        <xs:element name="tofloat" type="xs:long" />
        <xs:element name="tochar" type="xs:long" />
        <xs:element name="tostring" type="xs:long" />
        <xs:element name="toboolean" type="xs:double" />
        <xs:element name="tobyte" type="xs:double" />
        <xs:element name="toint" type="xs:anyType" />
        <xs:element name="tolong" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metatest2" >
      <xs:complexContent>
       <xs:extension base="metatest1">
         <xs:sequence>
          <xs:element name="field1" type="xs:anyType" />
          <xs:element name="field2" type="xs:anyType" />
          <xs:element name="field1" type="xs:anyType" />
          <xs:element name="field2" type="xs:anyType" />
          <xs:element name="field" type="metatest2" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldorderpcsubclass" >
      <xs:complexContent>
       <xs:extension base="fieldorderpc">
         <xs:sequence>
          <xs:element name="transientsub1" type="xs:string" />
          <xs:element name="sub2" type="xs:long" />
          <xs:element name="sub3" type="xs:double" />
          <xs:element name="unmanagedsubfield" type="xs:long" />
          <xs:element name="undeclaredsubfield" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbypcrelsub" >
      <xs:complexContent>
       <xs:extension base="orderbypcrel">
         <xs:sequence>
          <xs:element name="sub" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metatest6" >
      <xs:complexContent>
       <xs:extension base="metatest5">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbypc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="stringasc" type="xs:anyType" />
        <xs:element name="arraydesc" type="xs:long" />
        <xs:element name="orderbypkasc" type="xs:anyType" />
        <xs:element name="orderbystringdesc" type="xs:anyType" />
        <xs:element name="orderbystringandpkdesc" type="xs:anyType" />
        <xs:element name="onetomanyasc" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceassigned3" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldorderpc" >
      <xs:sequence>
        <xs:element name="transientfirstfield" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="thirdfield" type="xs:long" />
        <xs:element name="unmanagedfield" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="secondfield" type="xs:double" />
        <xs:element name="onetoonefield" type="fieldorderpc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest2" >
      <xs:complexContent>
       <xs:extension base="runtimetest1">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="field2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionalclasspc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metatest4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest3" >
      <xs:complexContent>
       <xs:extension base="runtimetest2">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="field3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequenceassigned" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="other" type="sequenceassigned" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metatest1" >
      <xs:sequence>
        <xs:element name="//theseshouldnotbepersistentfield" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="transienttransientfield" type="xs:anyType" />
        <xs:element name="field" type="metatest4" nillable="true" minOccurs="0" />
        <xs:element name="//@onetomany(mappedby" type="metatest4" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="metatest4arrayfieldfield" type="xs:anyType" />
        <xs:element name="wrapperfield" type="xs:long" />
        <xs:element name="field" type="xs:double" />
        <xs:element name="//persistentfields--seemetadatafield" type="xs:string" />
        <xs:element name="intwrapperfield" type="xs:anyType" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="metatest2" nillable="true" minOccurs="0" />
        <xs:element name="//@onetomany(mappedby" type="metatest2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="metatest2arrayfieldarrayfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metatest5" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceassigned2" >
      <xs:complexContent>
       <xs:extension base="sequenceassigned">
         <xs:sequence>
          <xs:element name="foo" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonpersistentfieldspc" >
      <xs:sequence>
        <xs:element name="persistentfield" type="xs:string" />
        <xs:element name="nonpersistentfield" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="interfacefield" type="xs:anyType" />
        <xs:element name="userobjectfield" type="xs:anyType" />
        <xs:element name="userinterfacefield" type="xs:anyType" />
        <xs:element name="explicitfield" type="xs:anyType" />
        <xs:element name="explicitinterfacefield" type="xs:anyType" />
        <xs:element name="explicituserobjectfield" type="xs:anyType" />
        <xs:element name="explicituserinterfacefield" type="xs:anyType" />
        <xs:element name="persistentfield" type="xs:anyType" />
        <xs:element name="persistentinterfacefield" type="xs:anyType" />
        <xs:element name="persistentuserobjectfield" type="xs:anyType" />
        <xs:element name="persistentuserinterfacefield" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitfieldaccessbase_" >
      <xs:complexContent>
       <xs:extension base="implicitfieldaccessmappedsuperclass_">
         <xs:sequence>
          <xs:element name="boxedint" type="xs:anyType" />
          <xs:element name="collectionrelation" type="xs:anyType" />
          <xs:element name="f0" type="xs:anyType" />
          <xs:element name="listrelation" type="xs:anyType" />
          <xs:element name="maprelationkeybasic" type="xs:anyType" />
          <xs:element name="maprelationkeypc" type="xs:anyType" />
          <xs:element name="one2onerelation" type="xs:anyType" />
          <xs:element name="primitiveint" type="xs:anyType" />
          <xs:element name="setrelation" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embed0_" >
      <xs:sequence>
        <xs:element name="entity1" type="xs:anyType" />
        <xs:element name="f1" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arraymember_" >
      <xs:sequence>
        <xs:element name="array" type="xs:anyType" />
        <xs:element name="array" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmetamodelwithenum" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embed1_" >
      <xs:sequence>
        <xs:element name="entity0" type="xs:anyType" />
        <xs:element name="f1" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitfieldaccessmappedsuperclass_" >
      <xs:sequence>
        <xs:element name="createtime" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed1" >
      <xs:sequence>
        <xs:element name="f1" type="xs:string" />
        <xs:element name="entity0" type="implicitfieldaccessbase" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitfieldaccesssubclass_" >
      <xs:complexContent>
       <xs:extension base="implicitfieldaccessbase_">
         <xs:sequence>
          <xs:element name="base" type="xs:anyType" />
          <xs:element name="maprelationkeyembedded" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmetamodel" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="model" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testexception" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="id_counter" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testparameterlogging" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="_regex" type="xs:string" />
          <xs:element name="id" type="xs:string" />
          <xs:element name="//startlogfactoryimplementation//thisissoboththetestandtheloggersharemessages" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testattachconstructedcopy" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detachmentonemanyparent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="detachmentonemanychild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdetachment" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnocascadeonetoonemerge" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="a_id" type="xs:long" />
          <xs:element name="b1_id" type="xs:long" />
          <xs:element name="b2_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdetachmentonemany" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="record" >
      <xs:sequence>
        <xs:element name="content" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdetach" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="root" type="dmcustomer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detachmentonemanychild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="detachmentonemanyparent" nillable="true" minOccurs="0" />
        <xs:element name="optlock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnocascadeonetomanymerge" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="a_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdetachlite" >
      <xs:complexContent>
       <xs:extension base="testdetach">
         <xs:sequence>
          <xs:element name="props" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdetachnostatefield" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testgetreferenceandimplicitdetachment" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testattachwithnochanges" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcascademerge" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="eng1" type="entityg" nillable="true" minOccurs="0" />
          <xs:element name="eng2" type="entityg" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dmcustomerinventory" >
      <xs:sequence>
        <xs:element name="idcounter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="item" type="dmitem" nillable="true" minOccurs="0" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="customer" type="dmcustomer" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplec" >
      <xs:sequence>
        <xs:element name="c_id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="simpleb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleb" >
      <xs:sequence>
        <xs:element name="b_id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="simplea" nillable="true" minOccurs="0" />
        <xs:element name="c_set" type="simplec" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dmcustomer" >
      <xs:sequence>
        <xs:element name="idcounter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="customerinventories" type="dmcustomerinventory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="cal" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleref" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodetachedstateentityfieldaccess" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:string" />
        <xs:element name="relationship" type="nodetachedstateentitypropertyaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodetachedstateentitypropertyaccess" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dmitem" >
      <xs:sequence>
        <xs:element name="idcounter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplea" >
      <xs:sequence>
        <xs:element name="a_id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ref" type="simpleref" nillable="true" minOccurs="0" />
        <xs:element name="b_set" type="simpleb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdetachedentitycascadepersist" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reswordentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="boolean" type="xs:long" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityverylongnames" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdynamicschemas" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityreservedwords" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="add" type="xs:anyType" />
        <xs:element name="application" type="xs:long" />
        <xs:element name="begin" type="xs:anyType" />
        <xs:element name="bigint" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="character" type="xs:string" />
        <xs:element name="conditional" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="decimal" type="xs:anyType" />
        <xs:element name="distinct" type="xs:dateTime" />
        <xs:element name="exception" type="xs:string" />
        <xs:element name="each" type="xs:long" />
        <xs:element name="from" type="xs:string" />
        <xs:element name="file" type="xs:anyType" />
        <xs:element name="grant" type="xs:string" />
        <xs:element name="global" type="xs:anyType" />
        <xs:element name="hour" type="xs:string" />
        <xs:element name="holdlock" type="xs:string" />
        <xs:element name="integer" type="xs:anyType" />
        <xs:element name="index" type="xs:long" />
        <xs:element name="join" type="xs:anyType" />
        <xs:element name="jar" type="xs:string" />
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="kill" type="xs:anyType" />
        <xs:element name="like" type="xs:anyType" />
        <xs:element name="loop" type="xs:anyType" />
        <xs:element name="minute" type="xs:long" />
        <xs:element name="merge" type="xs:dateTime" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="not" type="xs:anyType" />
        <xs:element name="outer" type="xs:dateTime" />
        <xs:element name="on" type="xs:string" />
        <xs:element name="primary" type="xs:anyType" />
        <xs:element name="purge" type="xs:long" />
        <xs:element name="quiesce" type="xs:anyType" />
        <xs:element name="quit" type="xs:string" />
        <xs:element name="restrict" type="xs:anyType" />
        <xs:element name="rename" type="xs:dateTime" />
        <xs:element name="select" type="xs:string" />
        <xs:element name="savepoint" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="trigger" type="xs:anyType" />
        <xs:element name="update" type="xs:long" />
        <xs:element name="until" type="xs:string" />
        <xs:element name="varchar" type="xs:string" />
        <xs:element name="variable" type="xs:anyType" />
        <xs:element name="wait" type="xs:anyType" />
        <xs:element name="where" type="xs:anyType" />
        <xs:element name="xml" type="xs:anyType" />
        <xs:element name="year" type="xs:long" />
        <xs:element name="years" type="xs:anyType" />
        <xs:element name="zerofill" type="xs:dateTime" />
        <xs:element name="zone" type="xs:string" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="boolean" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testreswordentity" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqllistenertestcase" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase,">
         <xs:sequence>
          <xs:element name="_nl" type="xs:string" />
          <xs:element name="sql" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistencetestcase" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="_emfs" type="xs:anyType" />
          <xs:element name="fresh_emf" type="xs:string" />
          <xs:element name="retain_data" type="xs:string" />
          <xs:element name="retaindataonteardown" type="xs:anyType" />
          <xs:element name="_fresh" type="xs:anyType" />
          <xs:element name="allow_failure_log" type="xs:string" />
          <xs:element name="allow_failure_ignore" type="xs:string" />
          <xs:element name="allow_failure_sys_prop" type="xs:string" />
          <xs:element name="allowfailureconfig" type="xs:string" />
          <xs:element name="/***markeryoupassto{@link#setup}toindicatethatthe*databasetablerowsshouldbecleared.*/clear_tables" type="xs:anyType" />
          <xs:element name="/***markeryoupassto{@link#setup}toindicatethatthe*databasetableshouldbedroppedandthenrecreated.*/drop_tables" type="xs:anyType" />
          <xs:element name="/***the{@link}instanceforthecurrenttestrun.*/" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classselector" >
      <xs:complexContent>
       <xs:extension base="org.apache.openjpa.persistence.test.singleemftestcase">
         <xs:sequence>
          <xs:element name="_supers" type="xs:anyType" />
          <xs:element name="_interfaces" type="xs:anyType" />
          <xs:element name="_annotations" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="allowfailure" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="combinatorialpersistencetestcase" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="helper" type="combinatorialtesthelper" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filteringjdbclistener" >
      <xs:complexContent>
       <xs:extension base="abstractjdbclistener">
         <xs:sequence>
          <xs:element name="/***setofsqlstatementswhichwillbefilteredoutbythislistener.*/_ignoredsql" type="xs:anyType" />
          <xs:element name="_sqlstatements" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="databaseplatform" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="combinatorialtesthelper" >
      <xs:sequence>
        <xs:element name="geneartor" type="combinationgenerator" nillable="true" minOccurs="0" />
        <xs:element name="propertykeys" type="xs:anyType" />
        <xs:element name="currentoption" type="xs:anyType" />
        <xs:element name="runtimekeys" type="xs:anyType" />
        <xs:element name="combos" type="xs:anyType" />
        <xs:element name="cursor" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpersistencetestcase" >
      <xs:complexContent>
       <xs:extension base="junit.framework.testcase">
         <xs:sequence>
          <xs:element name="fresh_emf" type="xs:string" />
          <xs:element name="retain_data" type="xs:string" />
          <xs:element name="retaindataonteardown" type="xs:anyType" />
          <xs:element name="_fresh" type="xs:anyType" />
          <xs:element name="testsdisabled" type="xs:anyType" />
          <xs:element name="allow_failure_log" type="xs:string" />
          <xs:element name="allow_failure_ignore" type="xs:string" />
          <xs:element name="allow_failure_sys_prop" type="xs:string" />
          <xs:element name="allowfailureconfig" type="xs:string" />
          <xs:element name="/***markeryoupassto{@link#setup}toindicatethatthedatabasetablerowsshouldbecleared.*/clear_tables" type="xs:anyType" />
          <xs:element name="/***markeryoupassto{@link#setup}toindicatethatthedatabasetableshouldbedroppedandthen*recreated.*/drop_tables" type="xs:anyType" />
          <xs:element name="/***the{@link}instanceforthecurrenttestrun.*/" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="containeremftest" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="clist" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="combinationgenerator" >
      <xs:sequence>
        <xs:element name="dimensions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaentityclassenum" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singleemftestcase" >
      <xs:complexContent>
       <xs:extension base="abstractcachedemftestcase,">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singleemtestcase" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcachedemftestcase" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="_emfs" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpersistenceproviderfilteringtestcase" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="persistenceunitname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjoinedinheritance" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="party" >
      <xs:sequence>
        <xs:element name="partyid" type="xs:long" />
        <xs:element name="status" type="xs:string" />
        <xs:element name="archivestatus" type="xs:string" />
        <xs:element name="create" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablesupersub" >
      <xs:complexContent>
       <xs:extension base="embeddablesuper">
         <xs:sequence>
          <xs:element name="sub" type="embeddablesupersub" nillable="true" minOccurs="0" />
          <xs:element name="sup" type="embeddablesuper" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultcallbacklistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotest2" >
      <xs:sequence>
        <xs:element name="pk1" type="xs:long" />
        <xs:element name="pk2" type="xs:string" />
        <xs:element name="version" type="xs:dateTime" />
        <xs:element name="basic" type="xs:string" />
        <xs:element name="inverseoneone" type="annotest1" nillable="true" minOccurs="0" />
        <xs:element name="onemanyowner" type="annotest1" nillable="true" minOccurs="0" />
        <xs:element name="manymany" type="annotest1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccess1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//thisentionallydoesnotmatchthegetternameval" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store1" >
      <xs:complexContent>
       <xs:extension base="party1">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="storename" type="xs:string" />
          <xs:element name="storedescription" type="xs:string" />
          <xs:element name="site" type="site1" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schedule" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="dob" type="xs:anyType" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="site" >
      <xs:complexContent>
       <xs:extension base="party">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="sitename" type="xs:string" />
          <xs:element name="sitedescription" type="xs:string" />
          <xs:element name="stores" type="store" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embedvalue" >
      <xs:sequence>
        <xs:element name="basic" type="xs:string" />
        <xs:element name="clob" type="xs:string" />
        <xs:element name="blob" type="xs:anyType" />
        <xs:element name="owner" type="embedowner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flightschedule" >
      <xs:complexContent>
       <xs:extension base="schedule">
         <xs:sequence>
          <xs:element name="flightnum" type="xs:long" />
          <xs:element name="planename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flat2" >
      <xs:complexContent>
       <xs:extension base="flat1">
         <xs:sequence>
          <xs:element name="basic2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datevalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablesuper" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="trans" type="xs:long" />
        <xs:element name="clob" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tableperclass2" >
      <xs:complexContent>
       <xs:extension base="tableperclass1">
         <xs:sequence>
          <xs:element name="basic2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotest3" >
      <xs:complexContent>
       <xs:extension base="annotest1">
         <xs:sequence>
          <xs:element name="basic2" type="xs:long" />
          <xs:element name="suboneone" type="annotest2" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longnamevalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedidclass" >
      <xs:sequence>
        <xs:element name="pk1" type="xs:long" />
        <xs:element name="pk2" type="xs:long" />
        <xs:element name="pk3" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="party1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="partyname" type="xs:string" />
        <xs:element name="status" type="xs:string" />
        <xs:element name="archivestatus" type="xs:string" />
        <xs:element name="create" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="callbackstorage" >
      <xs:sequence>
        <xs:element name="store" type="callbackstorage" nillable="true" minOccurs="0" />
        <xs:element name="clist" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embedowner" >
      <xs:sequence>
        <xs:element name="embed" type="embedvalue" nillable="true" minOccurs="0" />
        <xs:element name="basic" type="xs:string" />
        <xs:element name="pk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lifecheck" type="xs:long" />
        <xs:element name="synctime" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:complexContent>
       <xs:extension base="party">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="storename" type="xs:string" />
          <xs:element name="storedescription" type="xs:string" />
          <xs:element name="" type="site" nillable="true" minOccurs="0" />
          <xs:element name="siteid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="dailyrate" type="xs:long" />
          <xs:element name="term" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotest1" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="basic" type="xs:long" />
        <xs:element name="trans" type="xs:long" />
        <xs:element name="othertablebasic" type="xs:long" />
        <xs:element name="selfoneone" type="annotest1" nillable="true" minOccurs="0" />
        <xs:element name="pkjoinselfoneone" type="annotest1" nillable="true" minOccurs="0" />
        <xs:element name="oneone" type="annotest2" nillable="true" minOccurs="0" />
        <xs:element name="othertableoneone" type="annotest2" nillable="true" minOccurs="0" />
        <xs:element name="inverseowneroneone" type="annotest2" nillable="true" minOccurs="0" />
        <xs:element name="blob" type="xs:anyType" />
        <xs:element name="serial" type="xs:anyType" />
        <xs:element name="clob" type="xs:string" />
        <xs:element name="//un-annotatedenumshouldbepersistedbydefaultenumeration" type="xs:anyType" />
        <xs:element name="ordinalenumeration" type="xs:anyType" />
        <xs:element name="stringenumeration" type="xs:anyType" />
        <xs:element name="onemany" type="annotest2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="inverseowneronemany" type="annotest2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="manymany" type="annotest2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="inverseownermanymany" type="annotest2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="defaultmapkey" type="xs:anyType" />
        <xs:element name="namedmapkey" type="xs:anyType" />
        <xs:element name="inverseownermapkey" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedidentity" >
      <xs:sequence>
        <xs:element name="id" type="embeddedidclass" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="relation" type="embeddedidentity" nillable="true" minOccurs="0" />
        <xs:element name="mapoverriderelation" type="embeddedidentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="txrollbackentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tableperclass1" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="basic" type="xs:long" />
        <xs:element name="embed" type="embedvalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namevalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="site1" >
      <xs:complexContent>
       <xs:extension base="party1">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="sitename" type="xs:string" />
          <xs:element name="sitedescription" type="xs:string" />
          <xs:element name="stores" type="store1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embedvalue2" >
      <xs:sequence>
        <xs:element name="basic" type="xs:string" />
        <xs:element name="basic" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partyid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="partyname" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:string" />
        <xs:element name="strings" type="xs:anyType" />
        <xs:element name="pkrels" type="orderbyentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="stringrels" type="orderbyentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generator" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="pk2" type="xs:anyType" />
        <xs:element name="pk3" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flat1" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="basic" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="entity2" nillable="true" minOccurs="0" />
        <xs:element name="versionfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityddlistener2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namevalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lifecycleddentitysub" >
      <xs:complexContent>
       <xs:extension base="lifecycleddentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityddlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flightschedule" >
      <xs:complexContent>
       <xs:extension base="schedule">
         <xs:sequence>
          <xs:element name="flightnum" type="xs:long" />
          <xs:element name="planename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultcallbacklistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longnamevalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lifecycleddentity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="surname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lifecheck" type="xs:long" />
        <xs:element name="synctime" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="entity2" nillable="true" minOccurs="0" />
        <xs:element name="versionfield" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="txrollbackentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contractemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="dailyrate" type="xs:long" />
          <xs:element name="term" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datevalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schedule" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="dob" type="xs:anyType" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="pk" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="callbackstorage" >
      <xs:sequence>
        <xs:element name="store" type="callbackstorage" nillable="true" minOccurs="0" />
        <xs:element name="clist" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lifecycledd" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lifecycleddentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="surname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testejbembedded" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
          <xs:element name="clob" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testgenerators" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testenumerated" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pcoll_embedb" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="m2oc" type="pcoll_entityc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pcoll_entitystringeager" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="collectionofstrings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testflatinheritance" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtableperclassinheritance" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testembeddablesuperclass" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpersistentcollection" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pcoll_entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="embedcollection" type="pcoll_embedb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testannotationbasics" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pcoll_entitya1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="embedcollection" type="pcoll_entityb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pcoll_entitystringlazy" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="collectionofstrings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpropertyaccess" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pcoll_entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentityorderby" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmapkey" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testonetomany" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmappedsuperclass" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
          <xs:element name="pkey" type="xs:long" />
          <xs:element name="pstr" type="xs:string" />
          <xs:element name="ikey" type="xs:long" />
          <xs:element name="pid" type="partyid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testversion" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
          <xs:element name="oid" type="xs:anyType" />
          <xs:element name="oid1" type="xs:anyType" />
          <xs:element name="oid2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmanytomany" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testserializedlobs" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
          <xs:element name="" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationtestcase" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testembeddedid" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
          <xs:element name="_oid" type="embeddedidclass" nillable="true" minOccurs="0" />
          <xs:element name="_roid" type="embeddedidclass" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testonetoone" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deriveda" >
      <xs:complexContent>
       <xs:extension base="entitya">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmetadatacomplete" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="oemf" type="xs:anyType" />
          <xs:element name="entitya,entityb,deriveda,derivedb" type="xs:anyType" />
          <xs:element name="currenttest" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedb" >
      <xs:complexContent>
       <xs:extension base="entityb">
         <xs:sequence>
          <xs:element name="data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testddcallbackmethods" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testadvannot" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pcoll_entityb" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="m2oc" type="pcoll_entityc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentitylistenerannot" >
      <xs:complexContent>
       <xs:extension base="annotationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="containsmultsimpleentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="1" type="simpleentity" nillable="true" minOccurs="0" />
        <xs:element name="2" type="simpleentity" nillable="true" minOccurs="0" />
        <xs:element name="3" type="simpleentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmultforeignkeys" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="toplevel" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="contmultsecoll" type="containsmultsimpleentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="distributedcachetest" >
      <xs:complexContent>
       <xs:extension base="cachetest">
         <xs:sequence>
          <xs:element name="cache" type="xs:string" />
          <xs:element name="querycache" type="xs:string" />
          <xs:element name="provider" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcacheexclusions" >
      <xs:complexContent>
       <xs:extension base="abstractcachedemftestcase">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
          <xs:element name="item_names" type="xs:string" />
          <xs:element name="_tsep" type="xs:string" />
          <xs:element name="s" type="item" nillable="true" minOccurs="0" />
          <xs:element name="o1,o2" type="order" nillable="true" minOccurs="0" />
          <xs:element name="p" type="purchase" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjpqlrelationprojections" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_factory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachetestbroker" >
      <xs:complexContent>
       <xs:extension base="brokerimpl">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderedonemanychild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="orderedonemanyparent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="purchase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpcparametersinqueries" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_factory" type="xs:anyType" />
          <xs:element name="_eid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="embeddablemap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testautoincrementanddatacaching" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjpql2resultsandresultclasses" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_factory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachedmanager" >
      <xs:complexContent>
       <xs:extension base="cachedperson">
         <xs:sequence>
          <xs:element name="employees" type="cachedemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teststatistics" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="l2cached" type="xs:anyType" />
          <xs:element name="l1cached" type="xs:anyType" />
          <xs:element name="cls" type="xs:string" />
          <xs:element name="p" type="xs:anyType" />
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="cache" type="xs:anyType" />
          <xs:element name="stats" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpartitioneddatacache" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachedperson" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="firstname,lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachedemployee" >
      <xs:complexContent>
       <xs:extension base="cachedperson">
         <xs:sequence>
          <xs:element name="manager" type="cachedmanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbulkupdatesdatacacheeviction" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="props" type="xs:anyType" />
          <xs:element name="noevictprops" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadechild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testjpacache" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testresultshapes" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbulkjpqlanddatacache" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="oid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testclearablescheduler" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjpaembeddabledatacache" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="params" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testm2mindatacache" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identityidclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="purchase" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachetesthelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmutableparameters" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_factory" type="xs:anyType" />
          <xs:element name="_start" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderedonemanyparent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="orderedonemanychild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdistributedkododatacache" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="//wewantmorethan1instanceofeachtypeofclass.num_objects" type="xs:long" />
          <xs:element name="_runtime1soids" type="xs:anyType" />
          <xs:element name="_runtime2soids" type="xs:anyType" />
          <xs:element name="spec_oid" type="xs:anyType" />
          <xs:element name="_fetchgroupserial" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachedentitystatistics" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="eagerlist" type="cachedentitystatistics" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="lazylist" type="cachedentitystatistics" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="firstname,lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testuniteratedqueryresult" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_pmf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapembeddable" >
      <xs:sequence>
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testflushdatacache" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testqueryresultsize" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_pmf" type="xs:anyType" />
          <xs:element name="pm" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemultithreadedload" >
      <xs:complexContent>
       <xs:extension base="cacheloadtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testconcurrentdatacache" >
      <xs:complexContent>
       <xs:extension base="cachetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatacacheoptimisticlockrecovery" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="pk" type="xs:long" />
          <xs:element name="remotecommiteventstalecount" type="xs:long" />
          <xs:element name="staleoid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachetest" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="orig_name" type="xs:string" />
          <xs:element name="new_name" type="xs:string" />
          <xs:element name="orig_age" type="xs:long" />
          <xs:element name="orig_parent_name" type="xs:string" />
          <xs:element name="orig_parent_age" type="xs:long" />
          <xs:element name="timeoutfactory" type="xs:anyType" />
          <xs:element name="factory" type="xs:anyType" />
          <xs:element name="factory2" type="xs:anyType" />
          <xs:element name="repos" type="xs:anyType" />
          <xs:element name="oid" type="xs:anyType" />
          <xs:element name="parentoid" type="xs:anyType" />
          <xs:element name="oidwithclass" type="xs:anyType" />
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="a" type="cacheobjecta" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatacachestorelazyfk" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="p" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlockinstance" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="oplock" type="xs:long" />
        <xs:element name="str" type="xs:string" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializingconcurrentquerycache" >
      <xs:complexContent>
       <xs:extension base="concurrentquerycache">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="serializing_concurrent_query_cache" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatacachepcdatagenerator" >
      <xs:complexContent>
       <xs:extension base="testsjvmcache">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contactinfo" >
      <xs:sequence>
        <xs:element name="city,street,zip" type="xs:string" />
        <xs:element name="GeneratedName" type="phone" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="somethingelse" type="xs:string" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="owner" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="first,middle,last" type="xs:string" />
        <xs:element name="ci" type="contactinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheobjectb" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheobjectf" >
      <xs:complexContent>
       <xs:extension base="cacheobjecte">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selfreferencingcachetestobject" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
        <xs:element name="o" type="selfreferencingcachetestobject" nillable="true" minOccurs="0" />
        <xs:element name="embedded" type="cacheobjectachild1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attachf" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:string" />
        <xs:element name="fstr" type="xs:string" />
        <xs:element name="f" type="xs:long" />
        <xs:element name="fdbl" type="xs:double" />
        <xs:element name="e" type="attache" nillable="true" minOccurs="0" />
        <xs:element name="strings" type="xs:anyType" />
        <xs:element name="embeddedc" type="attachc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheobjectj" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
        <xs:element name="e" type="cacheobjecte" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attachb" >
      <xs:complexContent>
       <xs:extension base="attacha">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bstr" type="xs:string" />
          <xs:element name="b" type="xs:long" />
          <xs:element name="bdbl" type="xs:double" />
          <xs:element name="ds" type="xs:anyType" />
          <xs:element name="stringint" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheobjectachild1" >
      <xs:complexContent>
       <xs:extension base="cacheobjecta">
         <xs:sequence>
          <xs:element name="str1" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddingownerentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="members" type="embeddedentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attachc" >
      <xs:complexContent>
       <xs:extension base="attachb">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="cstr" type="xs:string" />
          <xs:element name="c" type="xs:long" />
          <xs:element name="cdbl" type="xs:double" />
          <xs:element name="//non-dfges" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runtimetest1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="somefield" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:double" />
        <xs:element name="field" type="xs:double" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:dateTime" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="objfield" type="xs:anyType" />
        <xs:element name="objfield" type="xs:anyType" />
        <xs:element name="charobjfield" type="xs:anyType" />
        <xs:element name="objfield" type="xs:double" />
        <xs:element name="objfield" type="xs:double" />
        <xs:element name="intobjfield" type="xs:anyType" />
        <xs:element name="objfield" type="xs:long" />
        <xs:element name="objfield" type="xs:long" />
        <xs:element name="//transactionalonlytransfield" type="transactionalclasspc" nillable="true" minOccurs="0" />
        <xs:element name="trans" type="xs:string" />
        <xs:element name="//relationsselfoneone" type="runtimetest1" nillable="true" minOccurs="0" />
        <xs:element name="selfonemany" type="runtimetest1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheobjectc" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheobjectg" >
      <xs:complexContent>
       <xs:extension base="cacheobjectf">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheobjectinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="m2mentitye" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entityf" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attache" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="estr" type="xs:string" />
        <xs:element name="e" type="xs:long" />
        <xs:element name="edbl" type="xs:double" />
        <xs:element name="b" type="attachb" nillable="true" minOccurs="0" />
        <xs:element name="f" type="attachf" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheobjectbchild1" >
      <xs:complexContent>
       <xs:extension base="cacheobjectb">
         <xs:sequence>
          <xs:element name="str1" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attacha" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="astr" type="xs:string" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="adbl" type="xs:double" />
        <xs:element name="array" type="xs:string" />
        <xs:element name="array" type="attache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheobjectachild2" >
      <xs:complexContent>
       <xs:extension base="cacheobjecta">
         <xs:sequence>
          <xs:element name="str2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheobjecta" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="relatedobj" type="cacheobjecta" nillable="true" minOccurs="0" />
        <xs:element name="/**@manytomany@jointable(name" type="xs:anyType" />
        <xs:element name="/**@manytomany@jointable(name" type="cacheobjecta" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/**@persistentcollection@containertable(name" type="cacheobjecta" nillable="true" minOccurs="0" />
        <xs:element name="/**@manytomany@jointable(name" type="xs:string" />
        <xs:element name="/**@manytomany@jointable(name" type="xs:double" />
        <xs:element name="/**@manytomany@jointable(name" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="relatedb" type="cacheobjectb" nillable="true" minOccurs="0" />
        <xs:element name="relatedinterface" type="cacheobjectinterface" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="appidcacheobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheobjecte" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flushdatacacheobject" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheobjectwithexternalizedfields" >
      <xs:sequence>
        <xs:element name="cls" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheobjectd" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionalclasspc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="m2mentityf" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="entitye" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedentity" >
      <xs:sequence>
        <xs:element name="marker" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attachd" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="dstr" type="xs:string" />
        <xs:element name="d" type="xs:long" />
        <xs:element name="ddbl" type="xs:double" />
        <xs:element name="a" type="attacha" nillable="true" minOccurs="0" />
        <xs:element name="//dfgbs" type="xs:anyType" />
        <xs:element name="pcstring" type="xs:anyType" />
        <xs:element name="bigintegerpcmap" type="xs:anyType" />
        <xs:element name="embeddede" type="attache" nillable="true" minOccurs="0" />
        <xs:element name="embeddeda" type="attacha" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheobjecth" >
      <xs:complexContent>
       <xs:extension base="cacheobjectg">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runtimetest2" >
      <xs:complexContent>
       <xs:extension base="runtimetest1">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="field2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatacachebehavesidentical" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="emfwithdatacache" type="xs:anyType" />
          <xs:element name="emfwithoutdatacache" type="xs:anyType" />
          <xs:element name="with_datacache" type="xs:anyType" />
          <xs:element name="consistent" type="xs:anyType" />
          <xs:element name="dirty" type="xs:anyType" />
          <xs:element name="refresh_from_datacache" type="xs:anyType" />
          <xs:element name="nolock" type="xs:anyType" />
          <xs:element name="entity_not_found_error" type="xs:anyType" />
          <xs:element name="no_error" type="xs:anyType" />
          <xs:element name="marker_datacache" type="xs:string" />
          <xs:element name="marker_database" type="xs:string" />
          <xs:element name="marker_cache" type="xs:string" />
          <xs:element name="marker_dirty_cache" type="xs:string" />
          <xs:element name="id_counter" type="xs:long" />
          <xs:element name="test_count" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadeparent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="child" type="cascadechild" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsjvmcache" >
      <xs:complexContent>
       <xs:extension base="cachetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlrucache" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="cachesize" type="xs:long" />
          <xs:element name="query" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teststatistics" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="stats" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testarrayfieldsindatacache" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="s" type="xs:string" />
          <xs:element name="s" type="xs:long" />
          <xs:element name="jpaoid" type="xs:anyType" />
          <xs:element name="internaloid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testbulkupdatesandversioncolumn" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheloadtest" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
          <xs:element name="threadcount" type="xs:long" />
          <xs:element name="erationcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testentitiesaskeys" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlocalcache" >
      <xs:complexContent>
       <xs:extension base="cachetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testembeddedcollection" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjpql2queries" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_factory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testqueryresulttypes" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdatacachestoremanager" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="p" type="xs:anyType" />
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="dsm" type="xs:anyType" />
          <xs:element name="dcm" type="xs:anyType" />
          <xs:element name="sm" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testorderbyindatacache" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="pid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplemanagedinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedinterfacesup" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmanagedinterfaces" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="managediface" >
      <xs:complexContent>
       <xs:extension base="managedinterfacesup">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mixedinterfaceimpl" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedinterfaceowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="iface" type="managedinterfacesup" nillable="true" minOccurs="0" />
        <xs:element name="embed" type="managedinterfaceembed" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonmappedinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedinterfaceembed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsimplemanagedinterface" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonmappedinterfaceimpl" >
      <xs:sequence>
        <xs:element name="mismatch" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmixedmappinglocation" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadesentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="none" type="cascadesentity" nillable="true" minOccurs="0" />
        <xs:element name="all" type="cascadesentity" nillable="true" minOccurs="0" />
        <xs:element name="dependent" type="cascadesentity" nillable="true" minOccurs="0" />
        <xs:element name="nonecollection" type="cascadesentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="allcollection" type="cascadesentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcascades" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="security1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="symbol" type="embed" nillable="true" minOccurs="0" />
        <xs:element name="country" type="country1" nillable="true" minOccurs="0" />
        <xs:element name="countryeager" type="country1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annoexceptionentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="exceptions" type="xs:anyType" />
        <xs:element name="//elementcollectiondoesnotworkwithexceptions.elemcollexceptions" type="xs:anyType" />
        <xs:element name="perscollexceptions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlexceptionentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="exceptions" type="xs:anyType" />
        <xs:element name="//elementcollectiondoesnotworkwithexceptionselemcollexceptions" type="xs:anyType" />
        <xs:element name="perscollexceptions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testxmlexceptionentity" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testannoexceptionentity" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="nodes" type="node" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testrecursiverelationships" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_l1nodes" type="xs:long" />
          <xs:element name="_l2nodes" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmloverridetooneentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="othero2o" type="xmloverridetooneentity" nillable="true" minOccurs="0" />
        <xs:element name="otherm2o" type="xmloverridetooneentity" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsimplexmlentity" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testxmloverrideentity" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplexmlentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtoonelazyxmloverride" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testschemaversionvalidation" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpersistenceunitwithoutxsd" >
      <xs:complexContent>
       <xs:extension base="abstractcachedemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmloverrideentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="picture" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadepersistentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="other" type="cascadepersistentity" nillable="true" minOccurs="0" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcascadepersist" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmulticascadepersist" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="edge" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="source" type="vertex" nillable="true" minOccurs="0" />
        <xs:element name="target" type="vertex" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pudentityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="strdata" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anembeddable" >
      <xs:sequence>
        <xs:element name="estrdata" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pudentitya02" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="strdata" type="xs:string" />
        <xs:element name="emb" type="embeddablewithrelationships" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnopudefaultcascadepersist" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablewithrelationships" >
      <xs:sequence>
        <xs:element name="colm2m" type="pudentityb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="colo2m" type="pudentityb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="m2o" type="pudentityb" nillable="true" minOccurs="0" />
        <xs:element name="o2o" type="pudentityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pudentityae01" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="strdata" type="xs:string" />
        <xs:element name="colm2m" type="pudentityb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="colo2m" type="pudentityb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="m2o" type="pudentityb" nillable="true" minOccurs="0" />
        <xs:element name="o2o" type="pudentityb" nillable="true" minOccurs="0" />
        <xs:element name="ane" type="anembeddable" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpudefaultcascadepersist" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pudentitya01" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="strdata" type="xs:string" />
        <xs:element name="colm2m" type="pudentityb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="colo2m" type="pudentityb" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="m2o" type="pudentityb" nillable="true" minOccurs="0" />
        <xs:element name="o2o" type="pudentityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vertex" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="outgoing" type="edge" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="incoming" type="edge" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="type" type="vertextype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vertextype" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="instances" type="vertex" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sharedname1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cashbaseentity" >
      <xs:complexContent>
       <xs:extension base="baseentity{">
         <xs:sequence>
          <xs:element name="createuser" type="xs:string" />
          <xs:element name="createtime" type="xs:dateTime" />
          <xs:element name="updateuser" type="xs:string" />
          <xs:element name="uptime" type="xs:dateTime" />
          <xs:element name="version" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmappedsuperclass" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idclasstestmsc" >
      <xs:sequence>
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclassentity" >
      <xs:complexContent>
       <xs:extension base="idclasstestmsc">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="somedata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tidclass" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testidclass" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperwithoutid" >
      <xs:sequence>
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedentityfrommappedsuperwithoutid" >
      <xs:complexContent>
       <xs:extension base="mappedsuperwithoutid">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="version" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="situationda" >
      <xs:complexContent>
       <xs:extension base="cashbaseentity">
         <xs:sequence>
          <xs:element name="cashboxperiodserial" type="xs:string" />
          <xs:element name="type" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuableitemda" >
      <xs:complexContent>
       <xs:extension base="cashbaseentity">
         <xs:sequence>
          <xs:element name="code" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="leafb1" >
      <xs:complexContent>
       <xs:extension base="entityb">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:complexContent>
       <xs:extension base="rootentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="leafc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="leafd2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="leafa" >
      <xs:complexContent>
       <xs:extension base="rootentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="msc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="leafb2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="leafd1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rootentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityd" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primitiveidmappedsuperclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pidjtsdmscleafc" >
      <xs:complexContent>
       <xs:extension base="pidjtsdmscmappedsuperclass">
         <xs:sequence>
          <xs:element name="leafcdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtsdmscleafd2" >
      <xs:complexContent>
       <xs:extension base="pidjtsdmscentityd">
         <xs:sequence>
          <xs:element name="leafd2data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtsdmscleafb1" >
      <xs:complexContent>
       <xs:extension base="pidjtsdmscentityb">
         <xs:sequence>
          <xs:element name="leafb1data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtsdmscmappedsuperclass" >
      <xs:complexContent>
       <xs:extension base="pidjtsdmscrootentity">
         <xs:sequence>
          <xs:element name="mappedsuperclassdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtsdmscentityd" >
      <xs:complexContent>
       <xs:extension base="pidjtsdmscmappedsuperclass">
         <xs:sequence>
          <xs:element name="entityddata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtsdmscleafd1" >
      <xs:complexContent>
       <xs:extension base="pidjtsdmscentityd">
         <xs:sequence>
          <xs:element name="leafd1data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtsdmscentityb" >
      <xs:complexContent>
       <xs:extension base="pidjtsdmscrootentity">
         <xs:sequence>
          <xs:element name="entitybdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtsdmscrootentity" >
      <xs:complexContent>
       <xs:extension base="primitiveidmappedsuperclass">
         <xs:sequence>
          <xs:element name="rootentitydata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtsdmscleafa" >
      <xs:complexContent>
       <xs:extension base="pidjtsdmscrootentity">
         <xs:sequence>
          <xs:element name="leafadata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtsdmscleafb2" >
      <xs:complexContent>
       <xs:extension base="pidjtsdmscentityb">
         <xs:sequence>
          <xs:element name="leafb2data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtcdmscentityd" >
      <xs:complexContent>
       <xs:extension base="pidjtcdmscmappedsuperclass">
         <xs:sequence>
          <xs:element name="entityddata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtcdmscmappedsuperclass" >
      <xs:complexContent>
       <xs:extension base="pidjtcdmscrootentity">
         <xs:sequence>
          <xs:element name="mappedsuperclassdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtcdmscleafd1" >
      <xs:complexContent>
       <xs:extension base="pidjtcdmscentityd">
         <xs:sequence>
          <xs:element name="leafd1data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtcdmscrootentity" >
      <xs:complexContent>
       <xs:extension base="primitiveidmappedsuperclass">
         <xs:sequence>
          <xs:element name="rootentitydata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtcdmscleafb2" >
      <xs:complexContent>
       <xs:extension base="pidjtcdmscentityb">
         <xs:sequence>
          <xs:element name="leafb2data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtcdmscleafc" >
      <xs:complexContent>
       <xs:extension base="pidjtcdmscmappedsuperclass">
         <xs:sequence>
          <xs:element name="leafcdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtcdmscleafd2" >
      <xs:complexContent>
       <xs:extension base="pidjtcdmscentityd">
         <xs:sequence>
          <xs:element name="leafd2data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtcdmscleafa" >
      <xs:complexContent>
       <xs:extension base="pidjtcdmscrootentity">
         <xs:sequence>
          <xs:element name="leafadata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtcdmscentityb" >
      <xs:complexContent>
       <xs:extension base="pidjtcdmscrootentity">
         <xs:sequence>
          <xs:element name="entitybdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtcdmscleafb1" >
      <xs:complexContent>
       <xs:extension base="pidjtcdmscentityb">
         <xs:sequence>
          <xs:element name="leafb1data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtidmscleafd1" >
      <xs:complexContent>
       <xs:extension base="pidjtidmscentityd">
         <xs:sequence>
          <xs:element name="leafd1data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtidmscmappedsuperclass" >
      <xs:complexContent>
       <xs:extension base="pidjtidmscrootentity">
         <xs:sequence>
          <xs:element name="mappedsuperclassdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtidmscleafc" >
      <xs:complexContent>
       <xs:extension base="pidjtidmscmappedsuperclass">
         <xs:sequence>
          <xs:element name="leafcdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtidmscentityb" >
      <xs:complexContent>
       <xs:extension base="pidjtidmscrootentity">
         <xs:sequence>
          <xs:element name="entitybdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtidmscleafb2" >
      <xs:complexContent>
       <xs:extension base="pidjtidmscentityb">
         <xs:sequence>
          <xs:element name="leafb2data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtidmscleafa" >
      <xs:complexContent>
       <xs:extension base="pidjtidmscrootentity">
         <xs:sequence>
          <xs:element name="leafadata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtidmscrootentity" >
      <xs:complexContent>
       <xs:extension base="primitiveidmappedsuperclass">
         <xs:sequence>
          <xs:element name="rootentitydata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtidmscleafd2" >
      <xs:complexContent>
       <xs:extension base="pidjtidmscentityd">
         <xs:sequence>
          <xs:element name="leafd2data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtidmscentityd" >
      <xs:complexContent>
       <xs:extension base="pidjtidmscmappedsuperclass">
         <xs:sequence>
          <xs:element name="entityddata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidjtidmscleafb1" >
      <xs:complexContent>
       <xs:extension base="pidjtidmscentityb">
         <xs:sequence>
          <xs:element name="leafb1data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstcdmscleafd2" >
      <xs:complexContent>
       <xs:extension base="pidstcdmscentityd">
         <xs:sequence>
          <xs:element name="leafd2data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstcdmscleafc" >
      <xs:complexContent>
       <xs:extension base="pidstcdmscmappedsuperclass">
         <xs:sequence>
          <xs:element name="leafcdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstcdmscrootentity" >
      <xs:complexContent>
       <xs:extension base="primitiveidmappedsuperclass">
         <xs:sequence>
          <xs:element name="rootentitydata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstcdmscmappedsuperclass" >
      <xs:complexContent>
       <xs:extension base="pidstcdmscrootentity">
         <xs:sequence>
          <xs:element name="mappedsuperclassdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstcdmscleafb1" >
      <xs:complexContent>
       <xs:extension base="pidstcdmscentityb">
         <xs:sequence>
          <xs:element name="leafb1data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstcdmscentityb" >
      <xs:complexContent>
       <xs:extension base="pidstcdmscrootentity">
         <xs:sequence>
          <xs:element name="entitybdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstcdmscleafd1" >
      <xs:complexContent>
       <xs:extension base="pidstcdmscentityd">
         <xs:sequence>
          <xs:element name="leafd1data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstcdmscentityd" >
      <xs:complexContent>
       <xs:extension base="pidstcdmscmappedsuperclass">
         <xs:sequence>
          <xs:element name="entityddata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstcdmscleafb2" >
      <xs:complexContent>
       <xs:extension base="pidstcdmscentityb">
         <xs:sequence>
          <xs:element name="leafb2data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstcdmscleafa" >
      <xs:complexContent>
       <xs:extension base="pidstcdmscrootentity">
         <xs:sequence>
          <xs:element name="leafadata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstidmscmappedsuperclass" >
      <xs:complexContent>
       <xs:extension base="pidstidmscrootentity">
         <xs:sequence>
          <xs:element name="mappedsuperclassdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstidmscleafd2" >
      <xs:complexContent>
       <xs:extension base="pidstidmscentityd">
         <xs:sequence>
          <xs:element name="leafd2data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstidmscrootentity" >
      <xs:complexContent>
       <xs:extension base="primitiveidmappedsuperclass">
         <xs:sequence>
          <xs:element name="rootentitydata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstidmscentityd" >
      <xs:complexContent>
       <xs:extension base="pidstidmscmappedsuperclass">
         <xs:sequence>
          <xs:element name="entityddata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstidmscleafc" >
      <xs:complexContent>
       <xs:extension base="pidstidmscmappedsuperclass">
         <xs:sequence>
          <xs:element name="leafcdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstidmscleafb1" >
      <xs:complexContent>
       <xs:extension base="pidstidmscentityb">
         <xs:sequence>
          <xs:element name="leafb1data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstidmscentityb" >
      <xs:complexContent>
       <xs:extension base="pidstidmscrootentity">
         <xs:sequence>
          <xs:element name="entitybdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstidmscleafd1" >
      <xs:complexContent>
       <xs:extension base="pidstidmscentityd">
         <xs:sequence>
          <xs:element name="leafd1data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstidmscleafa" >
      <xs:complexContent>
       <xs:extension base="pidstidmscrootentity">
         <xs:sequence>
          <xs:element name="leafadata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstidmscleafb2" >
      <xs:complexContent>
       <xs:extension base="pidstidmscentityb">
         <xs:sequence>
          <xs:element name="leafb2data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstsdmscentityd" >
      <xs:complexContent>
       <xs:extension base="pidstsdmscmappedsuperclass">
         <xs:sequence>
          <xs:element name="entityddata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstsdmscleafd2" >
      <xs:complexContent>
       <xs:extension base="pidstsdmscentityd">
         <xs:sequence>
          <xs:element name="leafd2data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstsdmscleafb1" >
      <xs:complexContent>
       <xs:extension base="pidstsdmscentityb">
         <xs:sequence>
          <xs:element name="leafb1data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstsdmscleafc" >
      <xs:complexContent>
       <xs:extension base="pidstsdmscmappedsuperclass">
         <xs:sequence>
          <xs:element name="leafcdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstsdmscleafd1" >
      <xs:complexContent>
       <xs:extension base="pidstsdmscentityd">
         <xs:sequence>
          <xs:element name="leafd1data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstsdmscmappedsuperclass" >
      <xs:complexContent>
       <xs:extension base="pidstsdmscrootentity">
         <xs:sequence>
          <xs:element name="mappedsuperclassdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstsdmscleafa" >
      <xs:complexContent>
       <xs:extension base="pidstsdmscrootentity">
         <xs:sequence>
          <xs:element name="leafadata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstsdmscrootentity" >
      <xs:complexContent>
       <xs:extension base="primitiveidmappedsuperclass">
         <xs:sequence>
          <xs:element name="rootentitydata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstsdmscentityb" >
      <xs:complexContent>
       <xs:extension base="pidstsdmscrootentity">
         <xs:sequence>
          <xs:element name="entitybdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pidstsdmscleafb2" >
      <xs:complexContent>
       <xs:extension base="pidstsdmscentityb">
         <xs:sequence>
          <xs:element name="leafb2data" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymapping" >
      <xs:sequence>
        <xs:element name="pidjtidmsc" type="xs:anyType" />
        <xs:element name="pidjtcdmsc" type="xs:anyType" />
        <xs:element name="pidjtsdmsc" type="xs:anyType" />
        <xs:element name="pidstidmsc" type="xs:anyType" />
        <xs:element name="pidstcdmsc" type="xs:anyType" />
        <xs:element name="pidstsdmsc" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcallbackentity" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjointablestrategy" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfindabstractclass" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseclass6" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassf" >
      <xs:complexContent>
       <xs:extension base="baseclass3">
         <xs:sequence>
          <xs:element name="classfname" type="xs:string" />
          <xs:element name="fieldsup" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseclass2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ptemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="hourlywage" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclassb" >
      <xs:complexContent>
       <xs:extension base="baseclass">
         <xs:sequence>
          <xs:element name="classbname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="computeruser" >
      <xs:sequence>
        <xs:element name="oid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sharedname2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managediface2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassj" >
      <xs:complexContent>
       <xs:extension base="abstractclass">
         <xs:sequence>
          <xs:element name="classjname" type="xs:string" />
          <xs:element name="version" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basecallback" >
      <xs:complexContent>
       <xs:extension base="xmlcallback">
         <xs:sequence>
          <xs:element name="transientpostpersistcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ftemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclassk" >
      <xs:complexContent>
       <xs:extension base="midclass3">
         <xs:sequence>
          <xs:element name="classkname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlcallback" >
      <xs:complexContent>
       <xs:extension base="xmlsupercallback">
         <xs:sequence>
          <xs:element name="transientprepersistcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclassg" >
      <xs:complexContent>
       <xs:extension base="baseclass4">
         <xs:sequence>
          <xs:element name="classgname" type="xs:string" />
          <xs:element name="fieldsup" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseclass3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassc" >
      <xs:complexContent>
       <xs:extension base="mappedsuper">
         <xs:sequence>
          <xs:element name="classcname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sharedname1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassi" >
      <xs:complexContent>
       <xs:extension base="abstractclass">
         <xs:sequence>
          <xs:element name="classiname" type="xs:string" />
          <xs:element name="version" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="midclass3" >
      <xs:complexContent>
       <xs:extension base="baseclass6">
         <xs:sequence>
          <xs:element name="midclass3name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseclass5" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="subclassh" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manager" >
      <xs:complexContent>
       <xs:extension base="ftemployee">
         <xs:sequence>
          <xs:element name="manageslist" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclasse" >
      <xs:complexContent>
       <xs:extension base="midclass">
         <xs:sequence>
          <xs:element name="classename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="managediface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implclassa" >
      <xs:sequence>
        <xs:element name="implclassaname" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="fieldsup" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassa" >
      <xs:complexContent>
       <xs:extension base="baseclass">
         <xs:sequence>
          <xs:element name="classaname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="vacationdays" type="xs:long" />
        <xs:element name="GeneratedName" type="manager" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="department" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="transientstr" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseclass4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassd" >
      <xs:complexContent>
       <xs:extension base="mappedsuper">
         <xs:sequence>
          <xs:element name="classdname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="midclass" >
      <xs:complexContent>
       <xs:extension base="baseclass2">
         <xs:sequence>
          <xs:element name="midclassname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlsupercallback" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="transientpostpersistcount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="departmentname" type="xs:string" />
        <xs:element name="department" type="manager" nillable="true" minOccurs="0" />
        <xs:element name="employeelist" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="regularuser" >
      <xs:complexContent>
       <xs:extension base="computeruser">
         <xs:sequence>
          <xs:element name="" type="admin" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="admin" >
      <xs:complexContent>
       <xs:extension base="computeruser">
         <xs:sequence>
          <xs:element name="regularusers" type="regularuser" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclassh" >
      <xs:complexContent>
       <xs:extension base="midclass2">
         <xs:sequence>
          <xs:element name="classhname" type="xs:string" />
          <xs:element name="fieldsup" type="xs:long" />
          <xs:element name="" type="baseclass5" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuper" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="midclass2" >
      <xs:complexContent>
       <xs:extension base="baseclass5">
         <xs:sequence>
          <xs:element name="midclass2name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="superclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="attr1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testabstractjoinedappid" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="superid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="supers" type="superclass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subid" >
      <xs:complexContent>
       <xs:extension base="superid">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclass" >
      <xs:complexContent>
       <xs:extension base="superclass">
         <xs:sequence>
          <xs:element name="attr2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclassl2" >
      <xs:complexContent>
       <xs:extension base="mappedsuperclassbase">
         <xs:sequence>
          <xs:element name="l2data" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsharedmappedsuperclassidvalue" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nogenentityl3sibling" >
      <xs:complexContent>
       <xs:extension base="nogenmappedsuperclassl2">
         <xs:sequence>
          <xs:element name="siblingl3data" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nogenmappedsuperclassl2" >
      <xs:complexContent>
       <xs:extension base="nogenmappedsuperclassbase">
         <xs:sequence>
          <xs:element name="l2data" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="englishparagraph" >
      <xs:complexContent>
       <xs:extension base="translatable">
         <xs:sequence>
          <xs:element name="content" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="germanparagraph" >
      <xs:complexContent>
       <xs:extension base="translatable">
         <xs:sequence>
          <xs:element name="content" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtableperclassinheritancewithabstractroot" >
      <xs:complexContent>
       <xs:extension base="		singleemftestcase">
         <xs:sequence>
          <xs:element name="unjoined_subclasses" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="translation" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="" type="translatable" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="frenchparagraph" >
      <xs:complexContent>
       <xs:extension base="translatable">
         <xs:sequence>
          <xs:element name="content" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="translatable" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="translations" type="translation" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nogenmappedsuperclassbase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testinheritancewithmscid" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="allentitygroups" type="xs:anyType" />
          <xs:element name="querylogic001acceptencemapping" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsharedunqualifiedclassnames" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nogenentityl3" >
      <xs:complexContent>
       <xs:extension base="nogenmappedsuperclassl2">
         <xs:sequence>
          <xs:element name="l3data" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="concretesubclass" >
      <xs:complexContent>
       <xs:extension base="abstractbase">
         <xs:sequence>
          <xs:element name="subclassdata" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityl3sibling" >
      <xs:complexContent>
       <xs:extension base="mappedsuperclassl2">
         <xs:sequence>
          <xs:element name="siblingl3data" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractor" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="ctrprop1" type="xs:string" />
          <xs:element name="dept" type="department" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="deptprop1" type="xs:string" />
        <xs:element name="ctrs" type="contractor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testinheritancetypejoinedquery" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="numptemployees" type="xs:long" />
          <xs:element name="numftemployees" type="xs:long" />
          <xs:element name="numcontractors" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parttimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="ptempprop1" type="xs:string" />
          <xs:element name="dept" type="department" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fulltimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="ftempprop1" type="xs:string" />
          <xs:element name="dept" type="department" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjointableonetomany" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="umlclass" >
      <xs:complexContent>
       <xs:extension base="umltype">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="umltype" >
      <xs:complexContent>
       <xs:extension base="umlnamed">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="ownerpackage" type="umlpackage" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="umlpackage" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ownedtype" type="umltype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmapsidwithautogeneratedkey" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="disabled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="umlprimitivetype" >
      <xs:complexContent>
       <xs:extension base="umltype">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="umlnamed" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sharedname2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractbase" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityl3" >
      <xs:complexContent>
       <xs:extension base="mappedsuperclassl2">
         <xs:sequence>
          <xs:element name="l3data" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinheritancewithdatacache" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="props" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclassbase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdefaultinheritancestrategy" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmultiplemappedsuperclasshierarchy" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmappedsuperclass" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testidentitywithsingletablestrategy" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="" type="admin" nillable="true" minOccurs="0" />
          <xs:element name="user" type="regularuser" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testserialization" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embed" >
      <xs:sequence>
        <xs:element name="symbol" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="issue428entity" >
      <xs:sequence>
        <xs:element name="field" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummypersistencecapeable" >
      <xs:sequence>
        <xs:element name="pcinheritedfieldcount" type="xs:long" />
        <xs:element name="pcfieldnames" type="xs:string" />
        <xs:element name="pcfieldtypes" type="xs:anyType" />
        <xs:element name="pcfieldflags" type="xs:anyType" />
        <xs:element name="pcpcsuper" type="xs:anyType" />
        <xs:element name="transientpcversioninit" type="xs:anyType" />
        <xs:element name="transientpc" type="xs:anyType" />
        <xs:element name="transientpcdetachedstate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpersistenceunitconfig" >
      <xs:complexContent>
       <xs:extension base="persistencetestcase">
         <xs:sequence>
          <xs:element name="persistencexmlresource" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subject" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="//persistentfieldsname" type="xs:string" />
        <xs:element name="books" type="book" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="weeks_time_ms" type="xs:long" />
        <xs:element name="oid" type="xs:long" />
        <xs:element name="//persistentfieldstitle" type="xs:string" />
        <xs:element name="due" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="borrower" nillable="true" minOccurs="0" />
        <xs:element name="subjects" type="subject" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="volunteer" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="hours_per_week" type="xs:long" />
        <xs:element name="GeneratedName" type="borrower" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="borrower" >
      <xs:sequence>
        <xs:element name="oid" type="xs:long" />
        <xs:element name="//persistentfieldsname" type="xs:string" />
        <xs:element name="books" type="book" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="volunteer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="manager" type="fulltimeemployee" nillable="true" minOccurs="0" />
          <xs:element name="" type="company" nillable="true" minOccurs="0" />
          <xs:element name="title" type="xs:string" />
          <xs:element name="hire" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:complexContent>
       <xs:extension base="iemployee>">
         <xs:sequence>
          <xs:element name="idcounter" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="" type="address" nillable="true" minOccurs="0" />
          <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="idcounter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="home" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="orders" type="productorder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="shipping" type="address" nillable="true" minOccurs="0" />
          <xs:element name="billing" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="idcounter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="streetaddress" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="postalcode" type="xs:string" />
        <xs:element name="phonenumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:complexContent>
       <xs:extension base="icompany>">
         <xs:sequence>
          <xs:element name="idcounter" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="image" type="xs:anyType" />
          <xs:element name="price" type="xs:double" />
          <xs:element name="distributors" type="company" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="idcounter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="productorder" >
      <xs:complexContent>
       <xs:extension base="ilineitem>">
         <xs:sequence>
          <xs:element name="idcounter" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="items" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="order" type="xs:dateTime" />
          <xs:element name="shipped" type="xs:dateTime" />
          <xs:element name="" type="customer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjoinedcompanymodel" >
      <xs:complexContent>
       <xs:extension base="companymodeltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parttimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="wage" type="xs:double" />
          <xs:element name="weeklyhours" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iemployee" >
      <xs:complexContent>
       <xs:extension base="iperson">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iparttimeemployee" >
      <xs:complexContent>
       <xs:extension base="iemployee">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iproductorder" >
      <xs:complexContent>
       <xs:extension base="ilineitem>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbasiccompanymodel" >
      <xs:complexContent>
       <xs:extension base="companymodeltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="orders" type="productorder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="shipping" type="address" nillable="true" minOccurs="0" />
          <xs:element name="billing" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:complexContent>
       <xs:extension base="iemployee>">
         <xs:sequence>
          <xs:element name="idcounter" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="" type="address" nillable="true" minOccurs="0" />
          <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fulltimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="manager" type="fulltimeemployee" nillable="true" minOccurs="0" />
          <xs:element name="" type="company" nillable="true" minOccurs="0" />
          <xs:element name="title" type="xs:string" />
          <xs:element name="hire" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:complexContent>
       <xs:extension base="icompany>">
         <xs:sequence>
          <xs:element name="idcounter" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="image" type="xs:anyType" />
          <xs:element name="price" type="xs:double" />
          <xs:element name="distributors" type="company" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="idcounter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="streetaddress" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="postalcode" type="xs:string" />
        <xs:element name="phonenumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="idcounter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="home" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="idcounter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parttimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="wage" type="xs:double" />
          <xs:element name="weeklyhours" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="productorder" >
      <xs:complexContent>
       <xs:extension base="ilineitem>">
         <xs:sequence>
          <xs:element name="idcounter" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="items" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="order" type="xs:dateTime" />
          <xs:element name="shipped" type="xs:dateTime" />
          <xs:element name="" type="customer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="ids" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:complexContent>
       <xs:extension base="iemployee>">
         <xs:sequence>
          <xs:element name="ids" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="" type="address" nillable="true" minOccurs="0" />
          <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="manager" type="fulltimeemployee" nillable="true" minOccurs="0" />
          <xs:element name="" type="company" nillable="true" minOccurs="0" />
          <xs:element name="title" type="xs:string" />
          <xs:element name="hire" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parttimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="wage" type="xs:double" />
          <xs:element name="weeklyhours" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="orders" type="productorder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="shipping" type="address" nillable="true" minOccurs="0" />
          <xs:element name="billing" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="ids" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="home" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="ids" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="streetaddress" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="postalcode" type="xs:string" />
        <xs:element name="phonenumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="productorder" >
      <xs:complexContent>
       <xs:extension base="ilineitem>">
         <xs:sequence>
          <xs:element name="ids" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="items" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="order" type="xs:dateTime" />
          <xs:element name="shipped" type="xs:dateTime" />
          <xs:element name="" type="customer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testidclasscompanymodel" >
      <xs:complexContent>
       <xs:extension base="companymodeltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:complexContent>
       <xs:extension base="icompany>">
         <xs:sequence>
          <xs:element name="ids" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="image" type="xs:anyType" />
          <xs:element name="price" type="xs:double" />
          <xs:element name="distributors" type="company" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="icustomer" >
      <xs:complexContent>
       <xs:extension base="iperson">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="icompany" >
      <xs:complexContent>
       <xs:extension base="iemployee>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iperson" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="orders" type="productorder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="shipping" type="address" nillable="true" minOccurs="0" />
          <xs:element name="billing" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="idcounter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="streetaddress" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="postalcode" type="xs:string" />
        <xs:element name="phonenumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:complexContent>
       <xs:extension base="icompany>">
         <xs:sequence>
          <xs:element name="idcounter" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="image" type="xs:anyType" />
          <xs:element name="price" type="xs:double" />
          <xs:element name="distributors" type="company" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="manager" type="fulltimeemployee" nillable="true" minOccurs="0" />
          <xs:element name="" type="company" nillable="true" minOccurs="0" />
          <xs:element name="title" type="xs:string" />
          <xs:element name="hire" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlazycompanymodel" >
      <xs:complexContent>
       <xs:extension base="companymodeltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="idcounter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="home" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parttimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="wage" type="xs:double" />
          <xs:element name="weeklyhours" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="productorder" >
      <xs:complexContent>
       <xs:extension base="ilineitem>">
         <xs:sequence>
          <xs:element name="idcounter" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="items" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="order" type="xs:dateTime" />
          <xs:element name="shipped" type="xs:dateTime" />
          <xs:element name="" type="customer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="idcounter" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:complexContent>
       <xs:extension base="iemployee>">
         <xs:sequence>
          <xs:element name="idcounter" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="" type="address" nillable="true" minOccurs="0" />
          <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ilineitem" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="companymodeltest" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
          <xs:element name="factoryclasses" type="xs:anyType" />
          <xs:element name="impls" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iaddress" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iproduct" >
      <xs:complexContent>
       <xs:extension base="icompany>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ifulltimeemployee" >
      <xs:complexContent>
       <xs:extension base="iemployee">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testgeneratedvalues" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_dict" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dogtable2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="domestic" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testmultipleschemanames" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtablegeneratormultithreaded" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="alloc_size" type="xs:long" />
          <xs:element name="initial" type="xs:long" />
          <xs:element name="loops" type="xs:long" />
          <xs:element name="threads" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitye2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valuecache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="domestic" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dogtable" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="domestic" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dogtable3" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="domestic" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customseq" >
      <xs:sequence>
        <xs:element name="i" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnativeseqgenerator" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="conf" type="xs:anyType" />
          <xs:element name="dict" type="xs:anyType" />
          <xs:element name="" type="entitye2" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generatedvalues" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="//@generatedvalue(strategy" type="xs:long" />
        <xs:element name="uuidhex" type="xs:string" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="uuidt4hex" type="xs:string" />
        <xs:element name="uuidt4" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtablegeneratoruseschemanameprop" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtablegeneratormultithreadedinitialization" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="props" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testentitywithgeneratedvalueandpostpersist" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="cache" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dogtable4" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="domestic" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtablegenerator" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithgeneratedvalueandpostpersist" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="bingo" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="cache" type="valuecache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog2" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="domestic" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testlifecycleeventmanager" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="anentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtcpremoteclasschanges" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="num_objects" type="xs:long" />
          <xs:element name="_fetchgroupserial" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runtimetest4" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="runtimetest5s" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionalclasspc" >
      <xs:sequence>
        <xs:element name="field" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest1" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="somefield" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:double" />
        <xs:element name="field" type="xs:double" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:long" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="field" type="xs:dateTime" />
        <xs:element name="field" type="xs:anyType" />
        <xs:element name="objfield" type="xs:anyType" />
        <xs:element name="objfield" type="xs:anyType" />
        <xs:element name="charobjfield" type="xs:anyType" />
        <xs:element name="objfield" type="xs:double" />
        <xs:element name="objfield" type="xs:double" />
        <xs:element name="intobjfield" type="xs:anyType" />
        <xs:element name="objfield" type="xs:long" />
        <xs:element name="objfield" type="xs:long" />
        <xs:element name="//transactionalonlytransfield" type="transactionalclasspc" nillable="true" minOccurs="0" />
        <xs:element name="trans" type="xs:string" />
        <xs:element name="//relationsselfoneone" type="runtimetest1" nillable="true" minOccurs="0" />
        <xs:element name="selfonemany" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="duration" >
      <xs:sequence>
        <xs:element name="_name" type="xs:string" />
        <xs:element name="_started" type="xs:anyType" />
        <xs:element name="_running" type="xs:anyType" />
        <xs:element name="//millis_starttime" type="xs:long" />
        <xs:element name="//millis_stoptime" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runtimetest2" >
      <xs:complexContent>
       <xs:extension base="runtimetest1">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="field2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="remoteeventbase" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="ro" type="xs:anyType" />
          <xs:element name="datacatch" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtcpremoteeventsduration" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="//fyifor1000objectswithmysql--1005transactions,//dotransactions()takes45secondsnum_objects" type="xs:long" />
          <xs:element name="num_to_average" type="xs:long" />
          <xs:element name="num_concurrent" type="xs:long" />
          <xs:element name="_fetchgroupserial" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtcpremoterecovery" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="num_objects" type="xs:long" />
          <xs:element name="_fetchgroupserial" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testorphanedkeyaction" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="_oid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfakeremoteevents" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="/**themostrecentlysetprovider,andalocktocontrolaccesstoit.this*isratherhacky.*/currentproviderlock" type="xs:anyType" />
          <xs:element name="currentprovider" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postremovecallbackentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="transientpostremovetime" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jmsremoteeventstest" >
      <xs:complexContent>
       <xs:extension base="remoteeventbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtcpremoteevents" >
      <xs:complexContent>
       <xs:extension base="remoteeventbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbeforecommit" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="ae" type="anentity" nillable="true" minOccurs="0" />
          <xs:element name="pkid" type="xs:long" />
          <xs:element name="dict" type="xs:anyType" />
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testevents" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="transactionlistener" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpostremove" >
      <xs:complexContent>
       <xs:extension base="containertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlocalremoteevents" >
      <xs:complexContent>
       <xs:extension base="remoteeventbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtcpremoterecoverytransmitadds" >
      <xs:complexContent>
       <xs:extension base="abstracttestcase">
         <xs:sequence>
          <xs:element name="num_objects" type="xs:long" />
          <xs:element name="_fetchgroupserial" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testconnectionretainmodewarning" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
          <xs:element name="messages" type="xs:anyType" />
          <xs:element name="_loc" type="localizer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="lobfield" type="xs:string" />
        <xs:element name="blobfield" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testblobs" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_populatedid" type="xs:long" />
          <xs:element name="_nulllobid" type="xs:long" />
          <xs:element name="_nullblobid" type="xs:long" />
          <xs:element name="_nullbothid" type="xs:long" />
          <xs:element name="qb" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobcolumnentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="smalllob" type="xs:anyType" />
        <xs:element name="oldlob" type="xs:anyType" />
        <xs:element name="medlob" type="xs:anyType" />
        <xs:element name="longlob" type="xs:anyType" />
        <xs:element name="defaultlob" type="xs:anyType" />
        <xs:element name="definedlob" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testblobcolumntype" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_firstrun" type="xs:anyType" />
          <xs:element name="//onlytestwithmysql_runtest" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testclobcolumntype" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="_firstrun" type="xs:anyType" />
          <xs:element name="//onlytestwithmysql_runtest" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clobcolumnentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="smalllob" type="xs:string" />
        <xs:element name="medlob" type="xs:string" />
        <xs:element name="longlob" type="xs:string" />
        <xs:element name="defaultlob" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="imember" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delayedproxycollectionstestcase" >
      <xs:complexContent>
       <xs:extension base="sqllistenertestcase">
         <xs:sequence>
          <xs:element name="_ignoremethods" type="xs:anyType" />
          <xs:element name="_delaymethods" type="xs:anyType" />
          <xs:element name="_ignoreinterfaces" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="userident" type="useridentity" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="accounts" type="iaccount" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdelayedlinkedlistproxydetachlite" >
      <xs:complexContent>
       <xs:extension base="testdelayedlinkedlistproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdelayedlinkedlistproxy" >
      <xs:complexContent>
       <xs:extension base="delayedproxycollectionstestcase">
         <xs:sequence>
          <xs:element name="_pclist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="useridentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="member" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="iemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="locations" type="location" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="certifications" type="certification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="awards" type="award" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
        <xs:element name="dept" type="idepartment" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="certification" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="level" type="xs:string" />
        <xs:element name="cert" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iuseridentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="iemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="locations" type="location" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="certifications" type="certification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="awards" type="award" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="useridentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="member" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdelayedhashsetproxy" >
      <xs:complexContent>
       <xs:extension base="delayedproxycollectionstestcase">
         <xs:sequence>
          <xs:element name="_pclist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
        <xs:element name="dept" type="idepartment" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="userident" type="useridentity" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdelayedhashsetproxydetachlite" >
      <xs:complexContent>
       <xs:extension base="testdelayedhashsetproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="member" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="accounts" type="iaccount" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="userident" type="useridentity" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="iemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="locations" type="location" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="certifications" type="certification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="awards" type="award" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="accounts" type="iaccount" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="useridentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="member" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdelayedpriorityqueueproxydetachlite" >
      <xs:complexContent>
       <xs:extension base="testdelayedpriorityqueueproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
        <xs:element name="dept" type="idepartment" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdelayedpriorityqueueproxy" >
      <xs:complexContent>
       <xs:extension base="delayedproxycollectionstestcase">
         <xs:sequence>
          <xs:element name="_pclist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdelayedtreesetproxy" >
      <xs:complexContent>
       <xs:extension base="delayedproxycollectionstestcase">
         <xs:sequence>
          <xs:element name="_pclist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdelayedtreesetproxydetachlite" >
      <xs:complexContent>
       <xs:extension base="testdelayedtreesetproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="member" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="accounts" type="iaccount" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="useridentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="member" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="userident" type="useridentity" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
        <xs:element name="dept" type="idepartment" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="iemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="locations" type="location" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="certifications" type="certification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="awards" type="award" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iemployee" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="award" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="awdname" type="xs:string" />
        <xs:element name="awdtype" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iaccount" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdelayedarraylistproxy" >
      <xs:complexContent>
       <xs:extension base="delayedproxycollectionstestcase">
         <xs:sequence>
          <xs:element name="_pclist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdelayedarraylistproxydetachlite" >
      <xs:complexContent>
       <xs:extension base="testdelayedarraylistproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="member" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="accounts" type="iaccount" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="useridentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="member" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="userident" type="useridentity" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
        <xs:element name="dept" type="idepartment" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="iemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="locations" type="location" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="certifications" type="certification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="awards" type="award" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="iemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="locations" type="location" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="certifications" type="certification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="awards" type="award" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdelayedvectorproxydetachlite" >
      <xs:complexContent>
       <xs:extension base="testdelayedvectorproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="member" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="accounts" type="iaccount" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdelayedvectorproxy" >
      <xs:complexContent>
       <xs:extension base="delayedproxycollectionstestcase">
         <xs:sequence>
          <xs:element name="_pclist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="userident" type="useridentity" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
        <xs:element name="dept" type="idepartment" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="useridentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="member" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="member" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="accounts" type="iaccount" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="iemployee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="locations" type="location" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="products" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="certifications" type="certification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="awards" type="award" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
        <xs:element name="dept" type="idepartment" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="useridentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="member" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdelayedlinkedhashsetproxy" >
      <xs:complexContent>
       <xs:extension base="delayedproxycollectionstestcase">
         <xs:sequence>
          <xs:element name="_pclist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="userident" type="useridentity" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdelayedlinkedhashsetproxydetachlite" >
      <xs:complexContent>
       <xs:extension base="testdelayedlinkedhashsetproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idepartment" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentityserialize" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdetachmerge" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testproxycollection" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fixedannuity" >
      <xs:complexContent>
       <xs:extension base="annuity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="rate" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configrable" >
      <xs:complexContent>
       <xs:extension base="serializable{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contacttype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="irider" >
      <xs:complexContent>
       <xs:extension base="iannuityobject">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ifixedannuity" >
      <xs:complexContent>
       <xs:extension base="iannuity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iannuityobject" >
      <xs:complexContent>
       <xs:extension base="identifiable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="annuitypersistebleobject">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="firstname" type="xs:string" />
          <xs:element name="lastname" type="xs:string" />
          <xs:element name="governmentid" type="xs:string" />
          <xs:element name="ofbirth" type="xs:dateTime" />
          <xs:element name="timeofbirth" type="xs:dateTime" />
          <xs:element name="picture" type="xs:anyType" />
          <xs:element name="contact" type="icontact" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="payor" >
      <xs:complexContent>
       <xs:extension base="annuitypersistebleobject">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annuity" >
      <xs:complexContent>
       <xs:extension base="annuitypersistebleobject">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="lastpaidamt" type="xs:double" />
          <xs:element name="accountnumber" type="xs:string" />
          <xs:element name="amount" type="xs:double" />
          <xs:element name="annuityholderid" type="xs:string" />
          <xs:element name="payouts" type="ipayout" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="riders" type="irider" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="payors" type="ipayor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="comments" type="xs:anyType" />
          <xs:element name="approvedat" type="xs:dateTime" />
          <xs:element name="previous" type="annuity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iannuity" >
      <xs:complexContent>
       <xs:extension base="iannuityobject">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iperson" >
      <xs:complexContent>
       <xs:extension base="iannuityobject">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annuitypersistebleobject" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="lastup" type="xs:dateTime" />
        <xs:element name="config" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterizable" >
      <xs:complexContent>
       <xs:extension base="serializable{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringparameterizable" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="params" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiable" >
      <xs:complexContent>
       <xs:extension base="configrable<string,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="equityannuity" >
      <xs:complexContent>
       <xs:extension base="annuity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="fundnames" type="xs:string" />
          <xs:element name="indexrate" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ipayout" >
      <xs:complexContent>
       <xs:extension base="iannuityobject{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annuityholdercategory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iannuityholder" >
      <xs:complexContent>
       <xs:extension base="iperson">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iequityannuity" >
      <xs:complexContent>
       <xs:extension base="iannuity{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ipersisteble" >
      <xs:complexContent>
       <xs:extension base="identifiable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:complexContent>
       <xs:extension base="annuitypersistebleobject">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="the" type="address" nillable="true" minOccurs="0" />
          <xs:element name="email" type="xs:string" />
          <xs:element name="phone" type="xs:string" />
          <xs:element name="" type="contacttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="payout" >
      <xs:complexContent>
       <xs:extension base="annuitypersistebleobject">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="taxableamount" type="xs:anyType" />
          <xs:element name="startdate" type="xs:anyType" />
          <xs:element name="enddate" type="xs:anyType" />
          <xs:element name="annuity" type="iannuity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="icontact" >
      <xs:complexContent>
       <xs:extension base="iannuityobject">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="line1" type="xs:string" />
        <xs:element name="line2" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zipcode" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ipayor" >
      <xs:complexContent>
       <xs:extension base="iannuityobject{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpapersisteble" >
      <xs:complexContent>
       <xs:extension base="ipersisteble,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annuitytype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iaddress" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annuityholder" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="category" type="annuityholdercategory" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ridertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rider" >
      <xs:complexContent>
       <xs:extension base="annuitypersistebleobject">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="rule" type="xs:string" />
          <xs:element name="effective" type="xs:dateTime" />
          <xs:element name="type" type="ridertype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="items" type="concreteentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concreteentity" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="field" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="treenode" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="childern" type="treenode" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcompataggregatefunctions" >
      <xs:complexContent>
       <xs:extension base="testaggregatefunctions">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testaggregatefunctions" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="max" type="xs:long" />
          <xs:element name="min" type="xs:long" />
          <xs:element name="sum" type="xs:long" />
          <xs:element name="numericaggregatefunctions" type="xs:string" />
          <xs:element name="aggregatefunctions" type="xs:string" />
          <xs:element name="numericattributes" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aggentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="pval" type="xs:long" />
        <xs:element name="val" type="xs:long" />
        <xs:element name="pval" type="xs:long" />
        <xs:element name="intval" type="xs:anyType" />
        <xs:element name="pval" type="xs:long" />
        <xs:element name="val" type="xs:long" />
        <xs:element name="pval" type="xs:double" />
        <xs:element name="val" type="xs:double" />
        <xs:element name="pdblval" type="xs:double" />
        <xs:element name="dblval" type="xs:double" />
        <xs:element name="val" type="xs:string" />
        <xs:element name="utildate" type="xs:anyType" />
        <xs:element name="sqldate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggentity_" >
      <xs:sequence>
        <xs:element name="pshortval" type="xs:anyType" />
        <xs:element name="shortval" type="xs:anyType" />
        <xs:element name="pintval" type="xs:anyType" />
        <xs:element name="intval" type="xs:anyType" />
        <xs:element name="plongval" type="xs:anyType" />
        <xs:element name="longval" type="xs:anyType" />
        <xs:element name="pfloatval" type="xs:anyType" />
        <xs:element name="floatval" type="xs:anyType" />
        <xs:element name="pdblval" type="xs:anyType" />
        <xs:element name="dblval" type="xs:anyType" />
        <xs:element name="stringval" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="GeneratedName" type="artist" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="idparent" type="xs:long" />
        <xs:element name="child_ref" type="xs:string" />
        <xs:element name="child" type="pchild" nillable="true" minOccurs="0" />
        <xs:element name="childbi" type="pchildbi" nillable="true" minOccurs="0" />
        <xs:element name="children" type="pchild" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pchild" >
      <xs:sequence>
        <xs:element name="idchild" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="basic" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:complexContent>
       <xs:extension base="abstractthing">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsecondarytable" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmetadatainheritancecomparator" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractthing" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="abstractthing">
         <xs:sequence>
          <xs:element name="cs" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="as" type="a" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="painter" >
      <xs:complexContent>
       <xs:extension base="artist">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="paitersforportrait" type="painter" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testgetmetadata" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="artist" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pchildbi" >
      <xs:sequence>
        <xs:element name="idchild" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="basic" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
        <xs:element name="num" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jira2780reversecustomizer" >
      <xs:complexContent>
       <xs:extension base="propertiesreversecustomizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjira2780reversecustomizer" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jira2780enum" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user2018" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="openjpa2018test" >
      <xs:complexContent>
       <xs:extension base="singleemtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testgetproperty" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testspecificationconfiguration" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemarshallerendtoend" >
      <xs:complexContent>
       <xs:extension base="abstractcachedemftestcase">
         <xs:sequence>
          <xs:element name="store_props" type="xs:anyType" />
          <xs:element name="load_props" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbadautodetachproperty" >
      <xs:complexContent>
       <xs:extension base="abstractpersistencetestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testqueryproperties" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="props" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcachemarshaller" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="cm" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testqueryhints" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="query" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdynamicconfiguration" >
      <xs:complexContent>
       <xs:extension base="singleemftestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testbadjdbcurl" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="good_url" type="xs:string" />
          <xs:element name="good_driver" type="xs:string" />
          <xs:element name="good_datasource" type="xs:string" />
          <xs:element name="bad_driver" type="xs:string" />
          <xs:element name="bad_url_protocol" type="xs:string" />
          <xs:element name="bad_url_subprotocol" type="xs:string" />
          <xs:element name="bad_conn_props" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testautodetachproperty" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="emf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
</xs:schema> 