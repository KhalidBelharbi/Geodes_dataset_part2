ClassDiagram.Class>> ElectionOfficer =>=>=> RelationalSchema.Table>> electionofficer;
ClassDiagram.Class>> VotedList =>=>=> RelationalSchema.Table>> votedlist;
ClassDiagram.Class>> NominatedCandidate =>=>=> RelationalSchema.Table>> nominatedcandidate;
ClassDiagram.Class>> RegisteredSocietyVoters =>=>=> RelationalSchema.Table>> registeredsocietyvoters;
ClassDiagram.Class>> ElectionResult =>=>=> RelationalSchema.Table>> electionresult;
ClassDiagram.Class>> CooperativeSociety =>=>=> RelationalSchema.Table>> cooperativesociety;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Attribut>> ElectionOfficer.id:int =>=>=> RelationalSchema.Column>> electionofficer.id PRIMARY KEY;
ClassDiagram.Attribut>> ElectionOfficer.firstname:String =>=>=> RelationalSchema.Column>> electionofficer.firstname;
ClassDiagram.Attribut>> ElectionOfficer.lastname:String =>=>=> RelationalSchema.Column>> electionofficer.lastname;
ClassDiagram.Attribut>> ElectionOfficer.//@pattern(regexp:String =>=>=> RelationalSchema.Column>> electionofficer.//@pattern(regexp;
ClassDiagram.Attribut>> ElectionOfficer.gender:String =>=>=> RelationalSchema.Column>> electionofficer.gender;
ClassDiagram.Attribut>> ElectionOfficer.mobileno:long =>=>=> RelationalSchema.Column>> electionofficer.mobileno;
ClassDiagram.Attribut>> ElectionOfficer.//@pattern(regexp:String =>=>=> RelationalSchema.Column>> electionofficer.//@pattern(regexp;
ClassDiagram.Attribut>> ElectionOfficer.address1:String =>=>=> RelationalSchema.Column>> electionofficer.address1;
ClassDiagram.Attribut>> ElectionOfficer.//@column(name:String =>=>=> RelationalSchema.Column>> electionofficer.//@column(name;
ClassDiagram.Attribut>> ElectionOfficer.pincode:int =>=>=> RelationalSchema.Column>> electionofficer.pincode;
ClassDiagram.Attribut>> VotedList.//serialno.id:int =>=>=> RelationalSchema.Column>> votedlist.//serialno.id PRIMARY KEY;
ClassDiagram.Attribut>> VotedList.time:Date =>=>=> RelationalSchema.Column>> votedlist.time;
ClassDiagram.Attribut>> NominatedCandidate.//@onetoone(targetentity:int =>=>=> RelationalSchema.Column>> nominatedcandidate.//@onetoone(targetentity PRIMARY KEY;
ClassDiagram.Attribut>> NominatedCandidate.//@pattern(regexp:String =>=>=> RelationalSchema.Column>> nominatedcandidate.//@pattern(regexp;
ClassDiagram.Attribut>> RegisteredSocietyVoters.voterid:Integer =>=>=> RelationalSchema.Column>> registeredsocietyvoters.voterid PRIMARY KEY;
ClassDiagram.Attribut>> RegisteredSocietyVoters.voteridcardno:String =>=>=> RelationalSchema.Column>> registeredsocietyvoters.voteridcardno;
ClassDiagram.Attribut>> RegisteredSocietyVoters.firstname:String =>=>=> RelationalSchema.Column>> registeredsocietyvoters.firstname;
ClassDiagram.Attribut>> RegisteredSocietyVoters.lastname:String =>=>=> RelationalSchema.Column>> registeredsocietyvoters.lastname;
ClassDiagram.Attribut>> RegisteredSocietyVoters.gender:String =>=>=> RelationalSchema.Column>> registeredsocietyvoters.gender;
ClassDiagram.Attribut>> RegisteredSocietyVoters.password:String =>=>=> RelationalSchema.Column>> registeredsocietyvoters.password;
ClassDiagram.Attribut>> RegisteredSocietyVoters.reservationcategory:String =>=>=> RelationalSchema.Column>> registeredsocietyvoters.reservationcategory;
ClassDiagram.Attribut>> RegisteredSocietyVoters.mobileno:String =>=>=> RelationalSchema.Column>> registeredsocietyvoters.mobileno;
ClassDiagram.Attribut>> RegisteredSocietyVoters.emailid:String =>=>=> RelationalSchema.Column>> registeredsocietyvoters.emailid;
ClassDiagram.Attribut>> RegisteredSocietyVoters.address1:String =>=>=> RelationalSchema.Column>> registeredsocietyvoters.address1;
ClassDiagram.Attribut>> RegisteredSocietyVoters.address2:String =>=>=> RelationalSchema.Column>> registeredsocietyvoters.address2;
ClassDiagram.Attribut>> RegisteredSocietyVoters.mandal:String =>=>=> RelationalSchema.Column>> registeredsocietyvoters.mandal;
ClassDiagram.Attribut>> RegisteredSocietyVoters.district:String =>=>=> RelationalSchema.Column>> registeredsocietyvoters.district;
ClassDiagram.Attribut>> RegisteredSocietyVoters.//@size(min:Integer =>=>=> RelationalSchema.Column>> registeredsocietyvoters.//@size(min;
ClassDiagram.Attribut>> RegisteredSocietyVoters.castedvote:boolean =>=>=> RelationalSchema.Column>> registeredsocietyvoters.castedvote;
ClassDiagram.Attribut>> ElectionResult.id:int =>=>=> RelationalSchema.Column>> electionresult.id PRIMARY KEY;
ClassDiagram.Attribut>> ElectionResult.//@size(min:String =>=>=> RelationalSchema.Column>> electionresult.//@size(min;
ClassDiagram.Attribut>> ElectionResult.//@size(min:String =>=>=> RelationalSchema.Column>> electionresult.//@size(min;
ClassDiagram.Attribut>> ElectionResult.societyname:String =>=>=> RelationalSchema.Column>> electionresult.societyname;
ClassDiagram.Attribut>> ElectionResult.address:String =>=>=> RelationalSchema.Column>> electionresult.address;
ClassDiagram.Attribut>> ElectionResult.totalsocietyvotes:Integer =>=>=> RelationalSchema.Column>> electionresult.totalsocietyvotes;
ClassDiagram.Attribut>> ElectionResult.totalpolledvotes:Integer =>=>=> RelationalSchema.Column>> electionresult.totalpolledvotes;
ClassDiagram.Attribut>> ElectionResult.totalpollingpercentage:float =>=>=> RelationalSchema.Column>> electionresult.totalpollingpercentage;
ClassDiagram.Attribut>> ElectionResult.totalcandidatesvotes:Integer =>=>=> RelationalSchema.Column>> electionresult.totalcandidatesvotes;
ClassDiagram.Attribut>> ElectionResult.candidatevotespercentage:float =>=>=> RelationalSchema.Column>> electionresult.candidatevotespercentage;
ClassDiagram.Attribut>> ElectionResult.result:String =>=>=> RelationalSchema.Column>> electionresult.result;
ClassDiagram.Attribut>> CooperativeSociety.id:int =>=>=> RelationalSchema.Column>> cooperativesociety.id PRIMARY KEY;
ClassDiagram.Attribut>> CooperativeSociety.societyname:String =>=>=> RelationalSchema.Column>> cooperativesociety.societyname;
ClassDiagram.Attribut>> CooperativeSociety.headofsociety:String =>=>=> RelationalSchema.Column>> cooperativesociety.headofsociety;
ClassDiagram.Attribut>> CooperativeSociety.village:String =>=>=> RelationalSchema.Column>> cooperativesociety.village;
ClassDiagram.Attribut>> CooperativeSociety.mandal:String =>=>=> RelationalSchema.Column>> cooperativesociety.mandal;
ClassDiagram.Attribut>> CooperativeSociety.district:String =>=>=> RelationalSchema.Column>> cooperativesociety.district;
ClassDiagram.Attribut>> CooperativeSociety.pincode:String =>=>=> RelationalSchema.Column>> cooperativesociety.pincode;
ClassDiagram.Attribut>> User.userid:Integer =>=>=> RelationalSchema.Column>> user.userid PRIMARY KEY;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.contactno:String =>=>=> RelationalSchema.Column>> user.contactno;
One-To-One relationship between ClassDiagram.Class>>ElectionOfficer  to ClassDiagram.Class>>registeredsocietyvoters represented by ClassDiagram.Atrribute>>voters;
One-To-Many relationship from ClassDiagram.Class>>ElectionOfficer  to ClassDiagram.Class>>List<NominatedCandidate>;
One-To-Many relationship from ClassDiagram.Class>>ElectionOfficer  to ClassDiagram.Class>>List<RegisteredSocietyVoters>;
One-To-One relationship between ClassDiagram.Class>>VotedList  to ClassDiagram.Class>>registeredsocietyvoters represented by ClassDiagram.Atrribute>>//@column(name;
One-To-One relationship between ClassDiagram.Class>>VotedList  to ClassDiagram.Class>>cooperativesociety represented by ClassDiagram.Atrribute>>society;
One-To-One relationship between ClassDiagram.Class>>VotedList  to ClassDiagram.Class>>nominatedcandidate represented by ClassDiagram.Atrribute>>candidates;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>nominatedcandidate represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>electionresult represented by ClassDiagram.Atrribute>>GeneratedName;
