ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Geo =>=>=> RelationalSchema.Table>> geo;
ClassDiagram.Class>> Permission =>=>=> RelationalSchema.Table>> permission;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> RefreshToken =>=>=> RelationalSchema.Table>> refreshtoken;
ClassDiagram.Class>> VerificationToken =>=>=> RelationalSchema.Table>> verificationtoken;
ClassDiagram.Class>> ApplicationSetings =>=>=> RelationalSchema.Table>> applicationsetings;
ClassDiagram.Class>> ApplicationLog =>=>=> RelationalSchema.Table>> applicationlog;
ClassDiagram.Class>> BuiltWith =>=>=> RelationalSchema.Table>> builtwith;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.username:String =>=>=> RelationalSchema.Column>> person.username;
ClassDiagram.Attribut>> Person.phone:Long =>=>=> RelationalSchema.Column>> person.phone;
ClassDiagram.Attribut>> Person.emailprimary:String =>=>=> RelationalSchema.Column>> person.emailprimary;
ClassDiagram.Attribut>> Person.emailsecondary:String =>=>=> RelationalSchema.Column>> person.emailsecondary;
ClassDiagram.Attribut>> Person.gender:GenderEnum =>=>=> RelationalSchema.Column>> person.gender;
ClassDiagram.Attribut>> Person.age:int =>=>=> RelationalSchema.Column>> person.age;
ClassDiagram.Attribut>> Person.password:String =>=>=> RelationalSchema.Column>> person.password;
ClassDiagram.Attribut>> Person.dob:LocalDate =>=>=> RelationalSchema.Column>> person.dob;
ClassDiagram.Attribut>> Person.isadult:Boolean =>=>=> RelationalSchema.Column>> person.isadult;
ClassDiagram.Attribut>> Address.serialversionuid:long =>=>=> RelationalSchema.Column>> address.serialversionuid;
ClassDiagram.Attribut>> Address.street:String =>=>=> RelationalSchema.Column>> address.street;
ClassDiagram.Attribut>> Address.suite:String =>=>=> RelationalSchema.Column>> address.suite;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.zipcode:String =>=>=> RelationalSchema.Column>> address.zipcode;
ClassDiagram.Attribut>> Geo.serialversionuid:long =>=>=> RelationalSchema.Column>> geo.serialversionuid;
ClassDiagram.Attribut>> Geo.lat:String =>=>=> RelationalSchema.Column>> geo.lat;
ClassDiagram.Attribut>> Geo.lng:String =>=>=> RelationalSchema.Column>> geo.lng;
ClassDiagram.Attribut>> Permission.serialversionuid:long =>=>=> RelationalSchema.Column>> permission.serialversionuid;
ClassDiagram.Attribut>> Permission.name:String =>=>=> RelationalSchema.Column>> permission.name;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.isaccountnonexpired:boolean =>=>=> RelationalSchema.Column>> user.isaccountnonexpired;
ClassDiagram.Attribut>> User.isaccountnonlocked:boolean =>=>=> RelationalSchema.Column>> user.isaccountnonlocked;
ClassDiagram.Attribut>> User.iscredentialsnonexpired:boolean =>=>=> RelationalSchema.Column>> user.iscredentialsnonexpired;
ClassDiagram.Attribut>> User.isenabled:boolean =>=>=> RelationalSchema.Column>> user.isenabled;
ClassDiagram.Attribut>> Role.serialversionuid:long =>=>=> RelationalSchema.Column>> role.serialversionuid;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> RefreshToken.serialversionuid:long =>=>=> RelationalSchema.Column>> refreshtoken.serialversionuid;
ClassDiagram.Attribut>> RefreshToken.token:String =>=>=> RelationalSchema.Column>> refreshtoken.token;
ClassDiagram.Attribut>> RefreshToken.username:String =>=>=> RelationalSchema.Column>> refreshtoken.username;
ClassDiagram.Attribut>> VerificationToken.serialversionuid:long =>=>=> RelationalSchema.Column>> verificationtoken.serialversionuid;
ClassDiagram.Attribut>> VerificationToken.token:String =>=>=> RelationalSchema.Column>> verificationtoken.token;
ClassDiagram.Attribut>> VerificationToken.expirydate:Instant =>=>=> RelationalSchema.Column>> verificationtoken.expirydate;
ClassDiagram.Attribut>> VerificationToken.status:VerificationTokenEnum =>=>=> RelationalSchema.Column>> verificationtoken.status;
ClassDiagram.Attribut>> ApplicationSetings.serialversionuid:long =>=>=> RelationalSchema.Column>> applicationsetings.serialversionuid;
ClassDiagram.Attribut>> ApplicationSetings.appkey:String =>=>=> RelationalSchema.Column>> applicationsetings.appkey;
ClassDiagram.Attribut>> ApplicationSetings.appvalue:String =>=>=> RelationalSchema.Column>> applicationsetings.appvalue;
ClassDiagram.Attribut>> ApplicationLog.//defaultserialversionidserialversionuid:long =>=>=> RelationalSchema.Column>> applicationlog.//defaultserialversionidserialversionuid;
ClassDiagram.Attribut>> ApplicationLog.event:ApplicationLogEnum =>=>=> RelationalSchema.Column>> applicationlog.event;
ClassDiagram.Attribut>> ApplicationLog.details:String =>=>=> RelationalSchema.Column>> applicationlog.details;
ClassDiagram.Attribut>> BuiltWith.//defaultserialversionidserialversionuid:long =>=>=> RelationalSchema.Column>> builtwith.//defaultserialversionidserialversionuid;
ClassDiagram.Attribut>> BuiltWith.name:String =>=>=> RelationalSchema.Column>> builtwith.name;
ClassDiagram.Attribut>> BuiltWith.version:String =>=>=> RelationalSchema.Column>> builtwith.version;
ClassDiagram.Attribut>> BuiltWith.description:String =>=>=> RelationalSchema.Column>> builtwith.description;
ClassDiagram.Attribut>> BuiltWith.link:String =>=>=> RelationalSchema.Column>> builtwith.link;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Address  to ClassDiagram.Class>>geo represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Address  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Geo  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>list<role>: sbat_auth_role_user(user_id:User [PK] #FK to User,role_id:list<role> [PK] #FK to list<role>);
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>list<permission>: sbat_auth_permission_role(role_id:Role [PK] #FK to Role,permission_id:list<permission> [PK] #FK to list<permission>);
One-To-One relationship between ClassDiagram.Class>>VerificationToken  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
