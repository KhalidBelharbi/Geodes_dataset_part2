ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Movie =>=>=> RelationalSchema.Table>> movie;
ClassDiagram.Class>> Books =>=>=> RelationalSchema.Table>> books;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.email:String =>=>=> RelationalSchema.Column>> person.email;
ClassDiagram.Attribut>> Person.mobilenumber:String =>=>=> RelationalSchema.Column>> person.mobilenumber;
ClassDiagram.Attribut>> Person.gender:GenderEnum =>=>=> RelationalSchema.Column>> person.gender;
ClassDiagram.Attribut>> Person.age:int =>=>=> RelationalSchema.Column>> person.age;
ClassDiagram.Attribut>> Person.dob:Date =>=>=> RelationalSchema.Column>> person.dob;
ClassDiagram.Attribut>> Person.isadult:Boolean =>=>=> RelationalSchema.Column>> person.isadult;
ClassDiagram.Attribut>> Movie.serialversionuid:long =>=>=> RelationalSchema.Column>> movie.serialversionuid;
ClassDiagram.Attribut>> Movie.moviedetails:String =>=>=> RelationalSchema.Column>> movie.moviedetails;
ClassDiagram.Attribut>> Books.serialversionuid:long =>=>=> RelationalSchema.Column>> books.serialversionuid;
ClassDiagram.Attribut>> Books.title:String =>=>=> RelationalSchema.Column>> books.title;
ClassDiagram.Attribut>> Address.serialversionuid:long =>=>=> RelationalSchema.Column>> address.serialversionuid;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.zipcode:String =>=>=> RelationalSchema.Column>> address.zipcode;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>List<Books>;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>List<Movie>;
Many-To-One relationship from ClassDiagram.Class>>Movie  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>//bi-directionalrelationship;
One-To-One relationship between ClassDiagram.Class>>Address  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>GeneratedName;
