ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> Fine =>=>=> RelationalSchema.Table>> fine;
ClassDiagram.Class>> BookLoan =>=>=> RelationalSchema.Table>> bookloan;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> BookAuthor =>=>=> RelationalSchema.Table>> bookauthor;
ClassDiagram.Class>> Borrower =>=>=> RelationalSchema.Table>> borrower;
ClassDiagram.Attribut>> Author.author_id:int =>=>=> RelationalSchema.Column>> author.author_id PRIMARY KEY;
ClassDiagram.Attribut>> Author.name:String =>=>=> RelationalSchema.Column>> author.name;
ClassDiagram.Attribut>> Fine.fineid:int =>=>=> RelationalSchema.Column>> fine.fineid PRIMARY KEY;
ClassDiagram.Attribut>> Fine.fineamount:String =>=>=> RelationalSchema.Column>> fine.fineamount;
ClassDiagram.Attribut>> Fine.paid:boolean =>=>=> RelationalSchema.Column>> fine.paid;
ClassDiagram.Attribut>> BookLoan.loanid:int =>=>=> RelationalSchema.Column>> bookloan.loanid PRIMARY KEY;
ClassDiagram.Attribut>> BookLoan.out:Date =>=>=> RelationalSchema.Column>> bookloan.out;
ClassDiagram.Attribut>> BookLoan.in:Date =>=>=> RelationalSchema.Column>> bookloan.in;
ClassDiagram.Attribut>> BookLoan.due:Date =>=>=> RelationalSchema.Column>> bookloan.due;
ClassDiagram.Attribut>> Book.isbn:String =>=>=> RelationalSchema.Column>> book.isbn PRIMARY KEY;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> Book.available:boolean =>=>=> RelationalSchema.Column>> book.available;
ClassDiagram.Attribut>> BookAuthor./***/serialversionuid:long =>=>=> RelationalSchema.Column>> bookauthor./***/serialversionuid;
ClassDiagram.Attribut>> BookAuthor.GeneratedName:Author =>=>=> RelationalSchema.Column>> bookauthor.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> BookAuthor.GeneratedName:Book =>=>=> RelationalSchema.Column>> bookauthor.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Borrower.cardid:int =>=>=> RelationalSchema.Column>> borrower.cardid PRIMARY KEY;
ClassDiagram.Attribut>> Borrower.ssn:String =>=>=> RelationalSchema.Column>> borrower.ssn;
ClassDiagram.Attribut>> Borrower.bname:String =>=>=> RelationalSchema.Column>> borrower.bname;
ClassDiagram.Attribut>> Borrower.address:String =>=>=> RelationalSchema.Column>> borrower.address;
ClassDiagram.Attribut>> Borrower.phone:String =>=>=> RelationalSchema.Column>> borrower.phone;
One-To-Many relationship from ClassDiagram.Class>>Author  to ClassDiagram.Class>>List<BookAuthor>;
One-To-One relationship between ClassDiagram.Class>>Fine  to ClassDiagram.Class>>bookloan represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>BookLoan  to ClassDiagram.Class>>book represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>BookLoan  to ClassDiagram.Class>>borrower represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>BookLoan  to ClassDiagram.Class>>fine represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>List<BookAuthor>;
One-To-Many relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>List<BookLoan>;
Many-To-One relationship from ClassDiagram.Class>>BookAuthor  to ClassDiagram.Class>>author represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>BookAuthor  to ClassDiagram.Class>>book represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Borrower  to ClassDiagram.Class>>List<BookLoan>;
