<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="warframestatsservicetest" >
      <xs:sequence>
        <xs:element name="apiprovider" type="warframestatusapiprovider" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfwarticlestest" >
      <xs:complexContent>
       <xs:extension base="wfwapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfwapiprovider" >
      <xs:sequence>
        <xs:element name="wfwapi" type="warframewikiapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsweaponstest" >
      <xs:complexContent>
       <xs:extension base="wfsapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfsrivenstest" >
      <xs:complexContent>
       <xs:extension base="wfsapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfsworldstatetest" >
      <xs:complexContent>
       <xs:extension base="wfsapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfsdropstest" >
      <xs:complexContent>
       <xs:extension base="wfsapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfsapiprovider" >
      <xs:sequence>
        <xs:element name="wfsapi" type="warframestatusapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmitemstest" >
      <xs:complexContent>
       <xs:extension base="wfmapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfmitemtest" >
      <xs:complexContent>
       <xs:extension base="wfmapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfmorderstest" >
      <xs:complexContent>
       <xs:extension base="wfmapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfmapiprovider" >
      <xs:sequence>
        <xs:element name="wfmapi" type="warframemarketapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmstatisticstest" >
      <xs:complexContent>
       <xs:extension base="wfmapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osumodsresolvertest" >
      <xs:sequence>
        <xs:element name="resolver" type="osumodsresolver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osumoderesolvertest" >
      <xs:sequence>
        <xs:element name="resolver" type="osumoderesolver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osureplaytest" >
      <xs:complexContent>
       <xs:extension base="osuapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osuapiprovider" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="osuapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmapstest" >
      <xs:complexContent>
       <xs:extension base="osuapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osumatchtest" >
      <xs:complexContent>
       <xs:extension base="osuapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osuuserrecenttest" >
      <xs:complexContent>
       <xs:extension base="osuapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osuuserbesttest" >
      <xs:complexContent>
       <xs:extension base="osuapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osuusertest" >
      <xs:complexContent>
       <xs:extension base="osuapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osuscoretest" >
      <xs:complexContent>
       <xs:extension base="osuapiprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="feedresolvertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noderesolvertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestampresolvertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permissionresolvertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="moduleresolvertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="findertest" >
      <xs:sequence>
        <xs:element name="object__tostringarray" type="xs:anyType" />
        <xs:element name="array" type="xs:string" />
        <xs:element name="stringcollection" type="xs:anyType" />
        <xs:element name="array" type="xs:anyType" />
        <xs:element name="objectcollection" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="functionstest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tokenbuckettest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eventdispatchertest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="eventdispatcher" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formattertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commandreactiontest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commandoptiondescriptortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commandoptionstest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="get_beatmaps_b_252002" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="get_match_mp_51405592" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="get_user_best_u_2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="get_scores_b_252002" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="get_user_recent_u_1883865" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="drops" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="weapons" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="worldstate2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="worldstate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rivens" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="worldstate3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="get_items_akbronco_prime_blueprint_orders" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="get_items_akbronco_prime_blueprint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="get_items_akbronco_prime_blueprint_statistics" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="get_items" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_3_0__alter_activity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v3_1_8__create_ign" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_8_0__create_osu_score" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_9_6__alter_game_map" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v3_1_7__init_mysql" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_7_0__alter_permission" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_1_2__create_osu_user" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v5_0_18__alter_game_tables" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_0_4__alter_feed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_8_1__alter_osu_beatmap" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_9_0__alter_tribute_member" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_1_1__create_osu_beatmap" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v3_1_14__create_feed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_3_1__create_inactivity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_5_1__create_tribute" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_9_3__alter_osu_beatmap" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v4_2_0__create_auto_role" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="logback" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messagecleaner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiembed" >
      <xs:sequence>
        <xs:element name="emote_back" type="xs:string" />
        <xs:element name="emote_cancel" type="xs:string" />
        <xs:element name="emote_first" type="xs:string" />
        <xs:element name="emote_next" type="xs:string" />
        <xs:element name="emote_last" type="xs:string" />
        <xs:element name="/***the{@link}topostthis{@linkmultiembed}inwhen{@link#display()}iscalled.*/channel" type="xs:anyType" />
        <xs:element name="/***theonly{@link}thatisallowedtointeractwiththis{@linkmultiembed}.*/" type="xs:anyType" />
        <xs:element name="/***theicontouseinthefooterforpaging(canbe{@codenull}).*/footericonurl" type="xs:string" />
        <xs:element name="/***the{@linkembedbuilder}instancestouseforrenderingindividualpages.*/embeds" type="xs:anyType" />
        <xs:element name="/***the{@link}touse.*/" type="eventdispatcher" nillable="true" minOccurs="0" />
        <xs:element name="/***acallbackforwhenthis{@linkmultiembed}isfirstdisplayed.*/callback" type="xs:anyType" />
        <xs:element name="container" type="xs:anyType" />
        <xs:element name="currentpage" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pickerembed" >
      <xs:sequence>
        <xs:element name="/***themaximumnumberofitemssupportedby{@linkpickerembed}.*/max" type="xs:long" />
        <xs:element name="emote_number" type="xs:string" />
        <xs:element name="/***the{@link}topostthis{@linkpickerembed}inwhen{@link#display()}iscalled.*/channel" type="xs:anyType" />
        <xs:element name="/***theonly{@link}thatisallowedtointeractwiththis{@linkpageableembed}.*/" type="xs:anyType" />
        <xs:element name="/***the{@link}touse.*thedescriptionandfieldswillbereplaced.*/" type="xs:anyType" />
        <xs:element name="/***a{@linklist}ofupto{@value#max}itemsfortheusertochoosefrom.*/items" type="xs:anyType" />
        <xs:element name="fieldnamerenderer" type="xs:anyType" />
        <xs:element name="fieldvaluerenderer" type="xs:anyType" />
        <xs:element name="/***the{@link}touse.*/" type="eventdispatcher" nillable="true" minOccurs="0" />
        <xs:element name="/***callbackforwhenanitemwaschosen.*/callback" type="xs:anyType" />
        <xs:element name="/***callbackforwhennoitemwaschosenwithinoneminute.*/timeoutcallback" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messagelinesplitter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="confirmationdecorator" >
      <xs:sequence>
        <xs:element name="/***the{@link}thisdecoratorshouldattachto.*/" type="xs:anyType" />
        <xs:element name="/***theonly{@link}thatisallowedtointeractwiththedecoratedmessage.*/" type="xs:anyType" />
        <xs:element name="/***the{@link}touse.*/" type="eventdispatcher" nillable="true" minOccurs="0" />
        <xs:element name="*/confirmationcallback" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pageableembed" >
      <xs:sequence>
        <xs:element name="//useapagesizethatis<" type="xs:long" />
        <xs:element name="//useasmallerpagesizeforsinglecolumncontentblock_page_size" type="xs:long" />
        <xs:element name="emote_back" type="xs:string" />
        <xs:element name="emote_cancel" type="xs:string" />
        <xs:element name="emote_first" type="xs:string" />
        <xs:element name="emote_next" type="xs:string" />
        <xs:element name="emote_last" type="xs:string" />
        <xs:element name="/***the{@link}topostthis{@linkpageableembed}inwhen{@link#display()}iscalled.*/channel" type="xs:anyType" />
        <xs:element name="/***theonly{@link}thatisallowedtointeractwiththis{@linkpageableembed}.*/" type="xs:anyType" />
        <xs:element name="/***theicontouseinthefooterforpaging(canbe{@codenull}).*/footericonurl" type="xs:string" />
        <xs:element name="/***an{@link}withpotentiallymorefieldsthancanbedisplayedatonce.*/embed" type="xs:anyType" />
        <xs:element name="/***the{@link}touse.*/" type="eventdispatcher" nillable="true" minOccurs="0" />
        <xs:element name="/***acallbackforwhenthis{@linkpageableembed}isfirstdisplayed.*/callback" type="xs:anyType" />
        <xs:element name="template" type="xs:anyType" />
        <xs:element name="container" type="xs:anyType" />
        <xs:element name="currentpage" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazymultiembed" >
      <xs:sequence>
        <xs:element name="emote_back" type="xs:string" />
        <xs:element name="emote_cancel" type="xs:string" />
        <xs:element name="emote_first" type="xs:string" />
        <xs:element name="emote_next" type="xs:string" />
        <xs:element name="emote_last" type="xs:string" />
        <xs:element name="/***the{@link}topostthis{@linklazymultiembed}inwhen{@link#display()}iscalled.*/channel" type="xs:anyType" />
        <xs:element name="/***theonly{@link}thatisallowedtointeractwiththis{@linklazymultiembed}.*/" type="xs:anyType" />
        <xs:element name="/***theicontouseinthefooterforpaging(canbe{@codenull}).*/footericonurl" type="xs:string" />
        <xs:element name="/***theitemstouseasabasisforcreating{@linkembedbuilder}instancesforindividualpages.*/items" type="xs:anyType" />
        <xs:element name="embedbuilderfunction" type="xs:anyType" />
        <xs:element name="/***the{@link}touse.*/" type="eventdispatcher" nillable="true" minOccurs="0" />
        <xs:element name="/***acallbackforwhenthis{@linklazymultiembed}isfirstdisplayed.*/callback" type="xs:anyType" />
        <xs:element name="container" type="xs:anyType" />
        <xs:element name="currentpage" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commandoptions" >
      <xs:sequence>
        <xs:element name="/***containsalistofalloptions,flags,mentionsandargumentsasrawstrings.*/arguments" type="xs:anyType" />
        <xs:element name="argument" type="xs:anyType" />
        <xs:element name="options" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commandreaction" >
      <xs:sequence>
        <xs:element name="/***theunicodeforthisemoji.*/unicode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commandoptiondescriptor" >
      <xs:sequence>
        <xs:element name="/***thefullsyntaxforthiscommandoption(required).*/syntax" type="xs:string" />
        <xs:element name="/***ashortdescriptionofthiscommandoption(required).*/description" type="xs:string" />
        <xs:element name="/***thekeywordforthiscommandoption(required).*/keyword" type="xs:string" />
        <xs:element name="aliases" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commandpatterns" >
      <xs:sequence>
        <xs:element name="/***aregularexpressionpatternthatmatchesvalidkeywords.*keywordsmaycontainslowercaselettersandselectspecialcharacters.*tovalidatecommandkeywords,pleasealsocheckthatthekeyworddoesnotmatch{@link#option}.*thisregularexpressionpatterndoesnotcontainanygroupsapartfromthefullmatch.*/keyword" type="xs:string" />
        <xs:element name="*notethatthisregularexpressionpatternwillmatchanythingprependedwithanoptionflag.*/option" type="xs:string" />
        <xs:element name="/***aregularexpressionpatternthatmatchesvalidmentionsforusers,members,channelsandroles.*thisregularexpressionpatternscontainsonegroupforthementionedid.*notethatthisregularexpressionpatternwillnotmatchmentionsprependedwithanoptionflag.*/mention" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eventdispatcher" >
      <xs:sequence>
        <xs:element name="subscriptions" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tokenbucket" >
      <xs:sequence>
        <xs:element name="averagerate" type="xs:long" />
        <xs:element name="burstsize" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="tokens" type="xs:long" />
        <xs:element name="uts" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="functions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formatter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="finder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="application" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="morsedecodecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="morseencoder" >
      <xs:sequence>
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="morseencodecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deobfuscatecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="obfuscatecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="obfuscator" >
      <xs:sequence>
        <xs:element name="map" type="xs:anyType" />
        <xs:element name="pam" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="htmlunescapecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="htmlescapecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="smallcapscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="map" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lowercommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uppercommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reversecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="urlencodecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="urldecodecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="debugcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="debugpermissioncommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="findrolecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="findusercommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="findchannelcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="findnodecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="findpermissioncommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="findcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="findgamecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="findmodulecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osuactivitylistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="ignservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="feedservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="osuservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="eventdispatcher" nillable="true" minOccurs="0" />
        <xs:element name="updatequeue" type="xs:anyType" />
        <xs:element name="its" type="xs:anyType" />
        <xs:element name="uts" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuasyncservice" >
      <xs:sequence>
        <xs:element name="backlog" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osupruneservice" >
      <xs:sequence>
        <xs:element name="beatmaprepository" type="osubeatmaprepository" nillable="true" minOccurs="0" />
        <xs:element name="beatmapsetrepository" type="osubeatmapsetrepository" nillable="true" minOccurs="0" />
        <xs:element name="difficultyrepository" type="osubeatmapdifficultyrepository" nillable="true" minOccurs="0" />
        <xs:element name="scorerepository" type="osuscorerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osumatchservice" >
      <xs:sequence>
        <xs:element name="requestcache" type="xs:anyType" />
        <xs:element name="api" type="osuapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuserrecentservice" >
      <xs:sequence>
        <xs:element name="requestcache" type="xs:anyType" />
        <xs:element name="api" type="osuapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuservice" >
      <xs:sequence>
        <xs:element name="game" type="gamedata" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="beatmapsearchservice" type="osubeatmapsearchservice" nillable="true" minOccurs="0" />
        <xs:element name="beatmapservice" type="osubeatmapservice" nillable="true" minOccurs="0" />
        <xs:element name="scoresservice" type="osuscoreservice" nillable="true" minOccurs="0" />
        <xs:element name="userservice" type="osuuserservice" nillable="true" minOccurs="0" />
        <xs:element name="userbestservice" type="osuuserbestservice" nillable="true" minOccurs="0" />
        <xs:element name="usereventservice" type="osuusereventservice" nillable="true" minOccurs="0" />
        <xs:element name="userrecentservice" type="osuuserrecentservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmapsearchservice" >
      <xs:sequence>
        <xs:element name="_cached_part" type="xs:anyType" />
        <xs:element name="_query_part" type="xs:anyType" />
        <xs:element name="_sort_part" type="xs:anyType" />
        <xs:element name="repository" type="osubeatmapviewrepository" nillable="true" minOccurs="0" />
        <xs:element name="beatmapservice" type="osubeatmapservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuserbestservice" >
      <xs:sequence>
        <xs:element name="requestcache" type="xs:anyType" />
        <xs:element name="api" type="osuapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuserservice" >
      <xs:sequence>
        <xs:element name="requestcache" type="xs:anyType" />
        <xs:element name="cache" type="xs:anyType" />
        <xs:element name="api" type="osuapi" nillable="true" minOccurs="0" />
        <xs:element name="repository" type="osuuserrepository" nillable="true" minOccurs="0" />
        <xs:element name="asyncservice" type="osuasyncservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuusereventservice" >
      <xs:sequence>
        <xs:element name="requestcache" type="xs:anyType" />
        <xs:element name="api" type="osuapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osureplayservice" >
      <xs:sequence>
        <xs:element name="requestcache" type="xs:anyType" />
        <xs:element name="api" type="osuapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmapfetchservice" >
      <xs:sequence>
        <xs:element name="asyncservice" type="osuasyncservice" nillable="true" minOccurs="0" />
        <xs:element name="beatmapservice" type="osubeatmapservice" nillable="true" minOccurs="0" />
        <xs:element name="startdate" type="xs:anyType" />
        <xs:element name="nextdate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuscoreservice" >
      <xs:sequence>
        <xs:element name="requestcache" type="xs:anyType" />
        <xs:element name="cache" type="xs:anyType" />
        <xs:element name="api" type="osuapi" nillable="true" minOccurs="0" />
        <xs:element name="repository" type="osuscorerepository" nillable="true" minOccurs="0" />
        <xs:element name="asyncservice" type="osuasyncservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmapservice" >
      <xs:sequence>
        <xs:element name="requestcache" type="xs:anyType" />
        <xs:element name="cache" type="xs:anyType" />
        <xs:element name="api" type="osuapi" nillable="true" minOccurs="0" />
        <xs:element name="repository" type="osubeatmaprepository" nillable="true" minOccurs="0" />
        <xs:element name="beatmapsetrepository" type="osubeatmapsetrepository" nillable="true" minOccurs="0" />
        <xs:element name="difficultyrepository" type="osubeatmapdifficultyrepository" nillable="true" minOccurs="0" />
        <xs:element name="scoreservice" type="osuscoreservice" nillable="true" minOccurs="0" />
        <xs:element name="asyncservice" type="osuasyncservice" nillable="true" minOccurs="0" />
        <xs:element name="pruneservice" type="osupruneservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuserresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<osuuserresolver.osuuserormember>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osumodsresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<osumod[]>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osuresolvers" >
      <xs:sequence>
        <xs:element name="beatmap" type="osubeatmapresolver" nillable="true" minOccurs="0" />
        <xs:element name="mode" type="osumoderesolver" nillable="true" minOccurs="0" />
        <xs:element name="mods" type="osumodsresolver" nillable="true" minOccurs="0" />
        <xs:element name="user" type="osuuserresolver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmapresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<osubeatmap>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osumoderesolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<osumode>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="booleanadapter" >
      <xs:complexContent>
       <xs:extension base="typeadapter<boolean>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dateadapter" >
      <xs:complexContent>
       <xs:extension base="typeadapter<date>">
         <xs:sequence>
          <xs:element name="dateformatter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaulttypeadapterfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapi" >
      <xs:sequence>
        <xs:element name="ratelimit" type="tokenbucket" nillable="true" minOccurs="0" />
        <xs:element name="replayratelimit" type="tokenbucket" nillable="true" minOccurs="0" />
        <xs:element name="httpclient" type="xs:anyType" />
        <xs:element name="token" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapiprovider" >
      <xs:sequence>
        <xs:element name="api" type="osuapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapiuserrecent" >
      <xs:sequence>
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="score" type="xs:anyType" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="count50" type="xs:anyType" />
        <xs:element name="count100" type="xs:anyType" />
        <xs:element name="count300" type="xs:anyType" />
        <xs:element name="countmiss" type="xs:anyType" />
        <xs:element name="countkatu" type="xs:anyType" />
        <xs:element name="countgeki" type="xs:anyType" />
        <xs:element name="perfect" type="xs:anyType" />
        <xs:element name="mods" type="xs:anyType" />
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="rank" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapimatch" >
      <xs:sequence>
        <xs:element name="match" type="osuapimatchmatch" nillable="true" minOccurs="0" />
        <xs:element name="games" type="osuapimatchgame" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapiuserbest" >
      <xs:sequence>
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="scoreid" type="xs:long" />
        <xs:element name="score" type="xs:anyType" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="count50" type="xs:anyType" />
        <xs:element name="count100" type="xs:anyType" />
        <xs:element name="count300" type="xs:anyType" />
        <xs:element name="countmiss" type="xs:anyType" />
        <xs:element name="countkatu" type="xs:anyType" />
        <xs:element name="countgeki" type="xs:anyType" />
        <xs:element name="perfect" type="xs:anyType" />
        <xs:element name="mods" type="xs:anyType" />
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="rank" type="xs:string" />
        <xs:element name="pp" type="xs:double" />
        <xs:element name="replayavailable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapimatchmatch" >
      <xs:sequence>
        <xs:element name="matchid" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="starttime" type="xs:dateTime" />
        <xs:element name="endtime" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapiuserevent" >
      <xs:sequence>
        <xs:element name="displayhtml" type="xs:string" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="beatmapsetid" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="epicfactor" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapibeatmap" >
      <xs:sequence>
        <xs:element name="approved" type="xs:anyType" />
        <xs:element name="submit" type="xs:dateTime" />
        <xs:element name="approved" type="xs:dateTime" />
        <xs:element name="lastup" type="xs:dateTime" />
        <xs:element name="artist" type="xs:string" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="beatmapsetid" type="xs:anyType" />
        <xs:element name="bpm" type="xs:double" />
        <xs:element name="creatorname" type="xs:string" />
        <xs:element name="creatorid" type="xs:anyType" />
        <xs:element name="difficultyrating" type="xs:double" />
        <xs:element name="difficultyaim" type="xs:double" />
        <xs:element name="difficultyspeed" type="xs:double" />
        <xs:element name="difficultysize" type="xs:double" />
        <xs:element name="difficultyoverall" type="xs:double" />
        <xs:element name="difficultyapproach" type="xs:double" />
        <xs:element name="difficultydrain" type="xs:double" />
        <xs:element name="hitlength" type="xs:anyType" />
        <xs:element name="source" type="xs:string" />
        <xs:element name="genre" type="xs:anyType" />
        <xs:element name="language" type="xs:anyType" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="totallength" type="xs:anyType" />
        <xs:element name="version" type="xs:string" />
        <xs:element name="filemd5" type="xs:string" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="tags" type="xs:string" />
        <xs:element name="favouritecount" type="xs:anyType" />
        <xs:element name="rating" type="xs:double" />
        <xs:element name="playcount" type="xs:anyType" />
        <xs:element name="passcount" type="xs:anyType" />
        <xs:element name="countnormal" type="xs:anyType" />
        <xs:element name="countslider" type="xs:anyType" />
        <xs:element name="countspinner" type="xs:anyType" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="downloadunavailable" type="xs:anyType" />
        <xs:element name="audiounavailable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapimatchgame" >
      <xs:sequence>
        <xs:element name="gameid" type="xs:anyType" />
        <xs:element name="starttime" type="xs:dateTime" />
        <xs:element name="endtime" type="xs:dateTime" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="matchtype" type="xs:anyType" />
        <xs:element name="scoringtype" type="xs:anyType" />
        <xs:element name="teamtype" type="xs:anyType" />
        <xs:element name="mods" type="xs:anyType" />
        <xs:element name="scores" type="osuapimatchgamescore" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapireplay" >
      <xs:sequence>
        <xs:element name="content" type="xs:string" />
        <xs:element name="encoding" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapimatchgamescore" >
      <xs:sequence>
        <xs:element name="slot" type="xs:anyType" />
        <xs:element name="team" type="xs:anyType" />
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="score" type="xs:anyType" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="rank" type="xs:string" />
        <xs:element name="count50" type="xs:anyType" />
        <xs:element name="count100" type="xs:anyType" />
        <xs:element name="count300" type="xs:anyType" />
        <xs:element name="countmiss" type="xs:anyType" />
        <xs:element name="countkatu" type="xs:anyType" />
        <xs:element name="countgeki" type="xs:anyType" />
        <xs:element name="perfect" type="xs:anyType" />
        <xs:element name="pass" type="xs:anyType" />
        <xs:element name="mods" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapiscore" >
      <xs:sequence>
        <xs:element name="scoreid" type="xs:long" />
        <xs:element name="score" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="count300" type="xs:anyType" />
        <xs:element name="count100" type="xs:anyType" />
        <xs:element name="count50" type="xs:anyType" />
        <xs:element name="countmiss" type="xs:anyType" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="countkatu" type="xs:anyType" />
        <xs:element name="countgeki" type="xs:anyType" />
        <xs:element name="perfect" type="xs:anyType" />
        <xs:element name="mods" type="xs:anyType" />
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="rank" type="xs:string" />
        <xs:element name="pp" type="xs:double" />
        <xs:element name="replayavailable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapiuser" >
      <xs:sequence>
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="join" type="xs:dateTime" />
        <xs:element name="count300" type="xs:anyType" />
        <xs:element name="count100" type="xs:anyType" />
        <xs:element name="count50" type="xs:anyType" />
        <xs:element name="playcount" type="xs:anyType" />
        <xs:element name="rankedscore" type="xs:long" />
        <xs:element name="totalscore" type="xs:long" />
        <xs:element name="pprank" type="xs:anyType" />
        <xs:element name="level" type="xs:double" />
        <xs:element name="ppraw" type="xs:double" />
        <xs:element name="accuracy" type="xs:double" />
        <xs:element name="countrankss" type="xs:anyType" />
        <xs:element name="countrankssh" type="xs:anyType" />
        <xs:element name="countranks" type="xs:anyType" />
        <xs:element name="countranksh" type="xs:anyType" />
        <xs:element name="countranka" type="xs:anyType" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="totalsecondsplayed" type="xs:anyType" />
        <xs:element name="ppcountryrank" type="xs:anyType" />
        <xs:element name="events" type="osuapiuserevent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapigetscoresrequest" >
      <xs:sequence>
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="user" type="xs:string" />
        <xs:element name="usertype" type="osuusertype" nillable="true" minOccurs="0" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="mods" type="xs:anyType" />
        <xs:element name="limit" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapigetuserbestrequest" >
      <xs:sequence>
        <xs:element name="user" type="xs:string" />
        <xs:element name="usertype" type="osuusertype" nillable="true" minOccurs="0" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="limit" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapigetmatchrequest" >
      <xs:sequence>
        <xs:element name="matchid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuusertype" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapigetuserrequest" >
      <xs:sequence>
        <xs:element name="user" type="xs:string" />
        <xs:element name="usertype" type="osuusertype" nillable="true" minOccurs="0" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="eventdays" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapigetreplayrequest" >
      <xs:sequence>
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="user" type="xs:string" />
        <xs:element name="usertype" type="osuusertype" nillable="true" minOccurs="0" />
        <xs:element name="mods" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapirequest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapigetbeatmapsrequest" >
      <xs:sequence>
        <xs:element name="since" type="xs:dateTime" />
        <xs:element name="beatmapsetid" type="xs:anyType" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="user" type="xs:string" />
        <xs:element name="usertype" type="osuusertype" nillable="true" minOccurs="0" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="includeconvertedbeatmaps" type="xs:anyType" />
        <xs:element name="beatmaphash" type="xs:string" />
        <xs:element name="limit" type="xs:anyType" />
        <xs:element name="mods" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osujson" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuapigetuserrecentrequest" >
      <xs:sequence>
        <xs:element name="user" type="xs:string" />
        <xs:element name="usertype" type="osuusertype" nillable="true" minOccurs="0" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="limit" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmapviewdata" >
      <xs:sequence>
        <xs:element name="approved" type="xs:anyType" />
        <xs:element name="submitdate" type="xs:long" />
        <xs:element name="approveddate" type="xs:long" />
        <xs:element name="lastupdate" type="xs:long" />
        <xs:element name="artist" type="xs:string" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="beatmapsetid" type="xs:anyType" />
        <xs:element name="bpm" type="xs:double" />
        <xs:element name="creatorname" type="xs:string" />
        <xs:element name="creatorid" type="xs:anyType" />
        <xs:element name="/***stardifficulty*/difficultyrating" type="xs:double" />
        <xs:element name="difficultyaim" type="xs:double" />
        <xs:element name="difficultyspeed" type="xs:double" />
        <xs:element name="/***circlesize(cs)*/difficultysize" type="xs:double" />
        <xs:element name="/***overalldifficulty(od)*/difficultyoverall" type="xs:double" />
        <xs:element name="/***approachrate(ar)*/difficultyapproach" type="xs:double" />
        <xs:element name="/***hpdrainrate(hp)*/difficultydrain" type="xs:double" />
        <xs:element name="hitlength" type="xs:anyType" />
        <xs:element name="source" type="xs:string" />
        <xs:element name="genre" type="xs:anyType" />
        <xs:element name="language" type="xs:anyType" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="totallength" type="xs:anyType" />
        <xs:element name="version" type="xs:string" />
        <xs:element name="filemd5" type="xs:string" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="convertedmode" type="xs:anyType" />
        <xs:element name="mods" type="xs:anyType" />
        <xs:element name="tags" type="xs:string" />
        <xs:element name="favouritecount" type="xs:anyType" />
        <xs:element name="rating" type="xs:double" />
        <xs:element name="playcount" type="xs:anyType" />
        <xs:element name="passcount" type="xs:anyType" />
        <xs:element name="countnormal" type="xs:anyType" />
        <xs:element name="countslider" type="xs:anyType" />
        <xs:element name="countspinner" type="xs:anyType" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="maxpp" type="xs:double" />
        <xs:element name="downloadunavailable" type="xs:anyType" />
        <xs:element name="audiounavailable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuscoredata" >
      <xs:sequence>
        <xs:element name="scoreid" type="xs:long" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="mods" type="xs:anyType" />
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="score" type="xs:anyType" />
        <xs:element name="count300" type="xs:anyType" />
        <xs:element name="count100" type="xs:anyType" />
        <xs:element name="count50" type="xs:anyType" />
        <xs:element name="countmiss" type="xs:anyType" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="countkatu" type="xs:anyType" />
        <xs:element name="countgeki" type="xs:anyType" />
        <xs:element name="perfect" type="xs:anyType" />
        <xs:element name="date" type="xs:long" />
        <xs:element name="rank" type="xs:string" />
        <xs:element name="pp" type="xs:double" />
        <xs:element name="replayavailable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmapdifficultyid" >
      <xs:sequence>
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="mods" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmapdifficultydata" >
      <xs:sequence>
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="mods" type="xs:anyType" />
        <xs:element name="/***stardifficulty*/difficultyrating" type="xs:double" />
        <xs:element name="difficultyaim" type="xs:double" />
        <xs:element name="difficultyspeed" type="xs:double" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="maxpp" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmapdifficultyrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<osubeatmapdifficultydata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osubeatmaprepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<osubeatmapdata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osubeatmapsetrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<osubeatmapsetdata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osubeatmapsetdata" >
      <xs:sequence>
        <xs:element name="beatmapsetid" type="xs:anyType" />
        <xs:element name="approved" type="xs:anyType" />
        <xs:element name="submitdate" type="xs:long" />
        <xs:element name="approveddate" type="xs:long" />
        <xs:element name="lastupdate" type="xs:long" />
        <xs:element name="artist" type="xs:string" />
        <xs:element name="creatorname" type="xs:string" />
        <xs:element name="creatorid" type="xs:anyType" />
        <xs:element name="source" type="xs:string" />
        <xs:element name="genre" type="xs:anyType" />
        <xs:element name="language" type="xs:anyType" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="tags" type="xs:string" />
        <xs:element name="downloadunavailable" type="xs:anyType" />
        <xs:element name="audiounavailable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmapdatawrapper" >
      <xs:sequence>
        <xs:element name="beatmap" type="osubeatmapdata" nillable="true" minOccurs="0" />
        <xs:element name="beatmapset" type="osubeatmapsetdata" nillable="true" minOccurs="0" />
        <xs:element name="difficulty" type="osubeatmapdifficultydata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuserid" >
      <xs:sequence>
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="mode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuserrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<osuuserdata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osuscoreid" >
      <xs:sequence>
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="mods" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuscorerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<osuscoredata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osubeatmapviewrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<osubeatmapviewdata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osubeatmapdata" >
      <xs:sequence>
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="beatmapsetid" type="xs:anyType" />
        <xs:element name="bpm" type="xs:double" />
        <xs:element name="/***circlesize(cs)*/difficultysize" type="xs:double" />
        <xs:element name="/***overalldifficulty(od)*/difficultyoverall" type="xs:double" />
        <xs:element name="/***approachrate(ar)*/difficultyapproach" type="xs:double" />
        <xs:element name="/***hpdrainrate(hp)*/difficultydrain" type="xs:double" />
        <xs:element name="hitlength" type="xs:anyType" />
        <xs:element name="totallength" type="xs:anyType" />
        <xs:element name="version" type="xs:string" />
        <xs:element name="filemd5" type="xs:string" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="favouritecount" type="xs:anyType" />
        <xs:element name="rating" type="xs:double" />
        <xs:element name="playcount" type="xs:anyType" />
        <xs:element name="passcount" type="xs:anyType" />
        <xs:element name="countnormal" type="xs:anyType" />
        <xs:element name="countslider" type="xs:anyType" />
        <xs:element name="countspinner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuserdata" >
      <xs:sequence>
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="joindate" type="xs:long" />
        <xs:element name="count300" type="xs:anyType" />
        <xs:element name="count100" type="xs:anyType" />
        <xs:element name="count50" type="xs:anyType" />
        <xs:element name="playcount" type="xs:anyType" />
        <xs:element name="rankedscore" type="xs:long" />
        <xs:element name="totalscore" type="xs:long" />
        <xs:element name="pprank" type="xs:anyType" />
        <xs:element name="level" type="xs:double" />
        <xs:element name="ppraw" type="xs:double" />
        <xs:element name="accuracy" type="xs:double" />
        <xs:element name="countrankss" type="xs:anyType" />
        <xs:element name="countrankssh" type="xs:anyType" />
        <xs:element name="countranks" type="xs:anyType" />
        <xs:element name="countranksh" type="xs:anyType" />
        <xs:element name="countranka" type="xs:anyType" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="totalsecondsplayed" type="xs:anyType" />
        <xs:element name="ppcountryrank" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuusermapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osumapperutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuserrecentmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuusereventmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuserbestmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuscoremapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osumatchmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmapmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osureplaymapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuteam" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuscoringtype" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuserrecent" >
      <xs:sequence>
        <xs:element name="user" type="xs:string" />
        <xs:element name="usertype" type="osuusertype" nillable="true" minOccurs="0" />
        <xs:element name="mode" type="osumode" nillable="true" minOccurs="0" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="score" type="xs:anyType" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="count50" type="xs:anyType" />
        <xs:element name="count100" type="xs:anyType" />
        <xs:element name="count300" type="xs:anyType" />
        <xs:element name="countmiss" type="xs:anyType" />
        <xs:element name="countkatu" type="xs:anyType" />
        <xs:element name="countgeki" type="xs:anyType" />
        <xs:element name="perfect" type="xs:anyType" />
        <xs:element name="mods" type="osumod" nillable="true" minOccurs="0" />
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="date" type="xs:long" />
        <xs:element name="rank" type="osurank" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osumod" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="none" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuenum" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osustatus" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osumatch" >
      <xs:sequence>
        <xs:element name="matchid" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="starttime" type="xs:long" />
        <xs:element name="endtime" type="xs:long" />
        <xs:element name="games" type="osugame" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmap" >
      <xs:sequence>
        <xs:element name="approved" type="osustatus" nillable="true" minOccurs="0" />
        <xs:element name="submitdate" type="xs:long" />
        <xs:element name="approveddate" type="xs:long" />
        <xs:element name="lastupdate" type="xs:long" />
        <xs:element name="artist" type="xs:string" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="beatmapsetid" type="xs:anyType" />
        <xs:element name="bpm" type="xs:double" />
        <xs:element name="creatorname" type="xs:string" />
        <xs:element name="creatorid" type="xs:anyType" />
        <xs:element name="difficultyrating" type="xs:double" />
        <xs:element name="difficultyaim" type="xs:double" />
        <xs:element name="difficultyspeed" type="xs:double" />
        <xs:element name="difficultysize" type="xs:double" />
        <xs:element name="difficultyoverall" type="xs:double" />
        <xs:element name="difficultyapproach" type="xs:double" />
        <xs:element name="difficultydrain" type="xs:double" />
        <xs:element name="hitlength" type="xs:anyType" />
        <xs:element name="source" type="xs:string" />
        <xs:element name="genre" type="osugenre" nillable="true" minOccurs="0" />
        <xs:element name="language" type="osulanguage" nillable="true" minOccurs="0" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="totallength" type="xs:anyType" />
        <xs:element name="version" type="xs:string" />
        <xs:element name="filemd5" type="xs:string" />
        <xs:element name="mode" type="osumode" nillable="true" minOccurs="0" />
        <xs:element name="convertedmode" type="osumode" nillable="true" minOccurs="0" />
        <xs:element name="mods" type="osumod" nillable="true" minOccurs="0" />
        <xs:element name="tags" type="xs:string" />
        <xs:element name="favouritecount" type="xs:anyType" />
        <xs:element name="rating" type="xs:double" />
        <xs:element name="playcount" type="xs:anyType" />
        <xs:element name="passcount" type="xs:anyType" />
        <xs:element name="countnormal" type="xs:anyType" />
        <xs:element name="countslider" type="xs:anyType" />
        <xs:element name="countspinner" type="xs:anyType" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="maxpp" type="xs:double" />
        <xs:element name="downloadunavailable" type="xs:anyType" />
        <xs:element name="audiounavailable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osumatchtype" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osurank" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osugenre" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osumode" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuteamtype" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuserevent" >
      <xs:sequence>
        <xs:element name="displayhtml" type="xs:string" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="beatmapsetid" type="xs:anyType" />
        <xs:element name="date" type="xs:long" />
        <xs:element name="epicfactor" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osulanguage" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osureplay" >
      <xs:sequence>
        <xs:element name="mode" type="osumode" nillable="true" minOccurs="0" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="user" type="xs:string" />
        <xs:element name="usertype" type="osuusertype" nillable="true" minOccurs="0" />
        <xs:element name="mods" type="osumod" nillable="true" minOccurs="0" />
        <xs:element name="content" type="xs:string" />
        <xs:element name="encoding" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuscore" >
      <xs:sequence>
        <xs:element name="scoreid" type="xs:long" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="mode" type="osumode" nillable="true" minOccurs="0" />
        <xs:element name="mods" type="osumod" nillable="true" minOccurs="0" />
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="score" type="xs:anyType" />
        <xs:element name="count300" type="xs:anyType" />
        <xs:element name="count100" type="xs:anyType" />
        <xs:element name="count50" type="xs:anyType" />
        <xs:element name="countmiss" type="xs:anyType" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="countkatu" type="xs:anyType" />
        <xs:element name="countgeki" type="xs:anyType" />
        <xs:element name="perfect" type="xs:anyType" />
        <xs:element name="date" type="xs:long" />
        <xs:element name="rank" type="osurank" nillable="true" minOccurs="0" />
        <xs:element name="pp" type="xs:double" />
        <xs:element name="replayavailable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osugame" >
      <xs:sequence>
        <xs:element name="gameid" type="xs:anyType" />
        <xs:element name="starttime" type="xs:long" />
        <xs:element name="endtime" type="xs:long" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="mode" type="osumode" nillable="true" minOccurs="0" />
        <xs:element name="matchtype" type="osumatchtype" nillable="true" minOccurs="0" />
        <xs:element name="scoringtype" type="osuscoringtype" nillable="true" minOccurs="0" />
        <xs:element name="teamtype" type="osuteamtype" nillable="true" minOccurs="0" />
        <xs:element name="mods" type="osumod" nillable="true" minOccurs="0" />
        <xs:element name="scores" type="osugamescore" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osugamescore" >
      <xs:sequence>
        <xs:element name="slot" type="xs:anyType" />
        <xs:element name="team" type="osuteam" nillable="true" minOccurs="0" />
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="score" type="xs:anyType" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="//always"0"rank" type="xs:string" />
        <xs:element name="count50" type="xs:anyType" />
        <xs:element name="count100" type="xs:anyType" />
        <xs:element name="count300" type="xs:anyType" />
        <xs:element name="countmiss" type="xs:anyType" />
        <xs:element name="countkatu" type="xs:anyType" />
        <xs:element name="countgeki" type="xs:anyType" />
        <xs:element name="perfect" type="xs:anyType" />
        <xs:element name="pass" type="xs:anyType" />
        <xs:element name="mods" type="osumod" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuser" >
      <xs:sequence>
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="mode" type="osumode" nillable="true" minOccurs="0" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="joindate" type="xs:long" />
        <xs:element name="count300" type="xs:anyType" />
        <xs:element name="count100" type="xs:anyType" />
        <xs:element name="count50" type="xs:anyType" />
        <xs:element name="playcount" type="xs:anyType" />
        <xs:element name="rankedscore" type="xs:long" />
        <xs:element name="totalscore" type="xs:long" />
        <xs:element name="pprank" type="xs:anyType" />
        <xs:element name="level" type="xs:double" />
        <xs:element name="ppraw" type="xs:double" />
        <xs:element name="accuracy" type="xs:double" />
        <xs:element name="countrankss" type="xs:anyType" />
        <xs:element name="countrankssh" type="xs:anyType" />
        <xs:element name="countranks" type="xs:anyType" />
        <xs:element name="countranksh" type="xs:anyType" />
        <xs:element name="countranka" type="xs:anyType" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="totalsecondsplayed" type="xs:anyType" />
        <xs:element name="ppcountryrank" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osuuserbest" >
      <xs:sequence>
        <xs:element name="user" type="xs:string" />
        <xs:element name="usertype" type="osuusertype" nillable="true" minOccurs="0" />
        <xs:element name="mode" type="osumode" nillable="true" minOccurs="0" />
        <xs:element name="beatmapid" type="xs:anyType" />
        <xs:element name="scoreid" type="xs:long" />
        <xs:element name="score" type="xs:anyType" />
        <xs:element name="maxcombo" type="xs:anyType" />
        <xs:element name="count50" type="xs:anyType" />
        <xs:element name="count100" type="xs:anyType" />
        <xs:element name="count300" type="xs:anyType" />
        <xs:element name="countmiss" type="xs:anyType" />
        <xs:element name="countkatu" type="xs:anyType" />
        <xs:element name="countgeki" type="xs:anyType" />
        <xs:element name="perfect" type="xs:anyType" />
        <xs:element name="mods" type="osumod" nillable="true" minOccurs="0" />
        <xs:element name="userid" type="xs:anyType" />
        <xs:element name="date" type="xs:long" />
        <xs:element name="rank" type="osurank" nillable="true" minOccurs="0" />
        <xs:element name="pp" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osustatscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osueventscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osudiagcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="weight" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osuscorescommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osurecentfeedcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="feedsetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osuleaderboardcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="emote_number" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osucommandutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="osubeatmapcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osurecentcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osueventsfeedcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="feedsetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="osubestcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="boosterscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="syndicatecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dropscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rivencommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wikicommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alertscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="weaponcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bountiescommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cyclecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conclavecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pricecheckcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbookcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fissurescommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nightwavecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="newscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="barocommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="anomaliescommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unstuckcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="invasionscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="darvocommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simariscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constructioncommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arbitrationcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortiecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unexpandedarticle" >
      <xs:sequence>
        <xs:element name="title" type="xs:string" />
        <xs:element name="url" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unexpandedlistarticleresultset" >
      <xs:sequence>
        <xs:element name="items" type="unexpandedarticle" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="basepath" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warframewikiapi" >
      <xs:sequence>
        <xs:element name="//noratelimitrestrictionsdocumentationfound-limitto1/hourratelimit" type="tokenbucket" nillable="true" minOccurs="0" />
        <xs:element name="httpclient" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfwapirequest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfwjson" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfwarticlerequest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsjson" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsrivensrequest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsapirequest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsdropsrequest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsworldstaterequest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsweaponsrequest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warframestatusapi" >
      <xs:sequence>
        <xs:element name="//noratelimitrestrictionsdocumentationfound-limitto1/minpercachedendpointratelimitdrops" type="tokenbucket" nillable="true" minOccurs="0" />
        <xs:element name="ratelimitrivens" type="tokenbucket" nillable="true" minOccurs="0" />
        <xs:element name="ratelimitweapons" type="tokenbucket" nillable="true" minOccurs="0" />
        <xs:element name="ratelimitworldstate" type="tokenbucket" nillable="true" minOccurs="0" />
        <xs:element name="httpclient" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsformatter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="offsetdatetimeadapter" >
      <xs:complexContent>
       <xs:extension base="typeadapter<offsetdatetime>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfsncefloatadapter" >
      <xs:complexContent>
       <xs:extension base="typeadapter<float>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfsintegeradapter" >
      <xs:complexContent>
       <xs:extension base="typeadapter<integer>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfsdrop" >
      <xs:sequence>
        <xs:element name="item" type="xs:string" />
        <xs:element name="place" type="xs:string" />
        <xs:element name="rarity" type="xs:string" />
        <xs:element name="chance" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsfalloff" >
      <xs:sequence>
        <xs:element name="start" type="xs:double" />
        <xs:element name="end" type="xs:double" />
        <xs:element name="reduction" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfscomponent" >
      <xs:sequence>
        <xs:element name="uniquename" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="itemcount" type="xs:anyType" />
        <xs:element name="imagename" type="xs:string" />
        <xs:element name="tradable" type="xs:anyType" />
        <xs:element name="drops" type="wfsdrop" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsdrop" >
      <xs:sequence>
        <xs:element name="location" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="rarity" type="xs:string" />
        <xs:element name="chance" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsareaattack" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="falloff" type="wfsfalloff" nillable="true" minOccurs="0" />
        <xs:element name="impact" type="xs:double" />
        <xs:element name="puncture" type="xs:double" />
        <xs:element name="slash" type="xs:double" />
        <xs:element name="heat" type="xs:double" />
        <xs:element name="cold" type="xs:double" />
        <xs:element name="electric" type="xs:double" />
        <xs:element name="toxin" type="xs:double" />
        <xs:element name="gas" type="xs:double" />
        <xs:element name="viral" type="xs:double" />
        <xs:element name="corrosive" type="xs:double" />
        <xs:element name="blast" type="xs:double" />
        <xs:element name="magnetic" type="xs:double" />
        <xs:element name="radiation" type="xs:double" />
        <xs:element name="truedamage" type="xs:double" />
        <xs:element name="voiddamage" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfspatchlog" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="date" type="xs:anyType" />
        <xs:element name="url" type="xs:string" />
        <xs:element name="imgurl" type="xs:string" />
        <xs:element name="additions" type="xs:string" />
        <xs:element name="changes" type="xs:string" />
        <xs:element name="fixes" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsweapon" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="uniquename" type="xs:string" />
        <xs:element name="damagepershot" type="xs:double" />
        <xs:element name="totaldamage" type="xs:double" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="criticalchance" type="xs:double" />
        <xs:element name="criticalmultiplier" type="xs:double" />
        <xs:element name="procchance" type="xs:double" />
        <xs:element name="firerate" type="xs:double" />
        <xs:element name="masteryreq" type="xs:anyType" />
        <xs:element name="productcategory" type="xs:string" />
        <xs:element name="slot" type="xs:anyType" />
        <xs:element name="accuracy" type="xs:double" />
        <xs:element name="omegaattenuation" type="xs:double" />
        <xs:element name="noise" type="xs:string" />
        <xs:element name="trigger" type="xs:string" />
        <xs:element name="magazinesize" type="xs:anyType" />
        <xs:element name="reloadtime" type="xs:double" />
        <xs:element name="multishot" type="xs:anyType" />
        <xs:element name="buildprice" type="xs:anyType" />
        <xs:element name="buildtime" type="xs:anyType" />
        <xs:element name="skipbuildtimeprice" type="xs:anyType" />
        <xs:element name="buildquantity" type="xs:anyType" />
        <xs:element name="consumeonbuild" type="xs:anyType" />
        <xs:element name="components" type="wfscomponent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="imagename" type="xs:string" />
        <xs:element name="category" type="xs:string" />
        <xs:element name="tradable" type="xs:anyType" />
        <xs:element name="patchlogs" type="wfspatchlog" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="ammo" type="xs:anyType" />
        <xs:element name="areaattack" type="wfsareaattack" nillable="true" minOccurs="0" />
        <xs:element name="damage" type="xs:string" />
        <xs:element name="damagetypes" type="xs:anyType" />
        <xs:element name="flight" type="xs:anyType" />
        <xs:element name="marketcost" type="xs:anyType" />
        <xs:element name="polarities" type="xs:string" />
        <xs:element name="stancepolarity" type="xs:string" />
        <xs:element name="projectile" type="xs:string" />
        <xs:element name="tags" type="xs:string" />
        <xs:element name="wikiathumbnail" type="xs:string" />
        <xs:element name="wikiaurl" type="xs:string" />
        <xs:element name="disposition" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsnews" >
      <xs:sequence>
        <xs:element name="message" type="xs:string" />
        <xs:element name="link" type="xs:string" />
        <xs:element name="date" type="xs:anyType" />
        <xs:element name="eta" type="xs:string" />
        <xs:element name="as" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsconstructionprogress" >
      <xs:sequence>
        <xs:element name="fomorianprogress" type="xs:string" />
        <xs:element name="razorbackprogress" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsglobalupgrade" >
      <xs:sequence>
        <xs:element name="desc" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsinvasionreward" >
      <xs:sequence>
        <xs:element name="item" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfscambioncycle" >
      <xs:sequence>
        <xs:element name="activation" type="xs:anyType" />
        <xs:element name="expiry" type="xs:anyType" />
        <xs:element name="active" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsnightwave" >
      <xs:sequence>
        <xs:element name="activechallenges" type="wfsactivechallenge" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsevent" >
      <xs:sequence>
        <xs:element name="as" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsactivechallenge" >
      <xs:sequence>
        <xs:element name="activation" type="xs:anyType" />
        <xs:element name="expiry" type="xs:anyType" />
        <xs:element name="isdaily" type="xs:anyType" />
        <xs:element name="iselite" type="xs:anyType" />
        <xs:element name="desc" type="xs:string" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="reputation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsvoidtrader" >
      <xs:sequence>
        <xs:element name="activation" type="xs:anyType" />
        <xs:element name="active" type="xs:anyType" />
        <xs:element name="location" type="xs:string" />
        <xs:element name="inventory" type="wfsinventory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="expiry" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfssentientoutposts" >
      <xs:sequence>
        <xs:element name="mission" type="wfssentientoutpostsmission" nillable="true" minOccurs="0" />
        <xs:element name="activation" type="xs:anyType" />
        <xs:element name="expiry" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsinvasion" >
      <xs:sequence>
        <xs:element name="node" type="xs:string" />
        <xs:element name="desc" type="xs:string" />
        <xs:element name="attackingfaction" type="xs:string" />
        <xs:element name="attackerreward" type="wfsinvasionreward" nillable="true" minOccurs="0" />
        <xs:element name="defendingfaction" type="xs:string" />
        <xs:element name="defenderreward" type="wfsinvasionreward" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfssentientoutpostsmission" >
      <xs:sequence>
        <xs:element name="node" type="xs:string" />
        <xs:element name="faction" type="xs:string" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfssortie" >
      <xs:sequence>
        <xs:element name="boss" type="xs:string" />
        <xs:element name="expiry" type="xs:anyType" />
        <xs:element name="variants" type="wfssortievariant" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsvalliscycle" >
      <xs:sequence>
        <xs:element name="short" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsalert" >
      <xs:sequence>
        <xs:element name="activation" type="xs:anyType" />
        <xs:element name="expiry" type="xs:anyType" />
        <xs:element name="mission" type="wfsalertmission" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsconclavechallenge" >
      <xs:sequence>
        <xs:element name="activation" type="xs:anyType" />
        <xs:element name="expiry" type="xs:anyType" />
        <xs:element name="mode" type="xs:string" />
        <xs:element name="rootchallenge" type="xs:anyType" />
        <xs:element name="as" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsjob" >
      <xs:sequence>
        <xs:element name="rewardpool" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="enemylevels" type="xs:anyType" />
        <xs:element name="standingstages" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsfissure" >
      <xs:sequence>
        <xs:element name="node" type="xs:string" />
        <xs:element name="missiontype" type="xs:string" />
        <xs:element name="enemy" type="xs:string" />
        <xs:element name="tier" type="xs:string" />
        <xs:element name="tiernum" type="xs:anyType" />
        <xs:element name="expiry" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsinventory" >
      <xs:sequence>
        <xs:element name="item" type="xs:string" />
        <xs:element name="ducats" type="xs:anyType" />
        <xs:element name="credits" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfssyndicatemissions" >
      <xs:sequence>
        <xs:element name="expiry" type="xs:anyType" />
        <xs:element name="syndicate" type="xs:string" />
        <xs:element name="nodes" type="xs:anyType" />
        <xs:element name="jobs" type="wfsjob" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsarbitration" >
      <xs:sequence>
        <xs:element name="node" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="enemy" type="xs:string" />
        <xs:element name="expiry" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfssimaris" >
      <xs:sequence>
        <xs:element name="as" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfscetuscycle" >
      <xs:sequence>
        <xs:element name="short" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsalertmissionreward" >
      <xs:sequence>
        <xs:element name="as" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfssortievariant" >
      <xs:sequence>
        <xs:element name="node" type="xs:string" />
        <xs:element name="missiontype" type="xs:string" />
        <xs:element name="modifier" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsdailydeal" >
      <xs:sequence>
        <xs:element name="item" type="xs:string" />
        <xs:element name="expiry" type="xs:anyType" />
        <xs:element name="activation" type="xs:anyType" />
        <xs:element name="originalprice" type="xs:anyType" />
        <xs:element name="saleprice" type="xs:anyType" />
        <xs:element name="total" type="xs:anyType" />
        <xs:element name="sold" type="xs:anyType" />
        <xs:element name="eta" type="xs:string" />
        <xs:element name="discount" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsalertmission" >
      <xs:sequence>
        <xs:element name="description" type="xs:string" />
        <xs:element name="node" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="faction" type="xs:string" />
        <xs:element name="reward" type="wfsalertmissionreward" nillable="true" minOccurs="0" />
        <xs:element name="minenemylevel" type="xs:anyType" />
        <xs:element name="maxenemylevel" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsworldstate" >
      <xs:sequence>
        <xs:element name="timestamp" type="xs:anyType" />
        <xs:element name="news" type="wfsnews" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="events" type="wfsevent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="alerts" type="wfsalert" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="sortie" type="wfssortie" nillable="true" minOccurs="0" />
        <xs:element name="syndicatemissions" type="wfssyndicatemissions" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="fissures" type="wfsfissure" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="globalupgrades" type="wfsglobalupgrade" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="invasions" type="wfsinvasion" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="voidtrader" type="wfsvoidtrader" nillable="true" minOccurs="0" />
        <xs:element name="dailydeals" type="wfsdailydeal" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="simaris" type="wfssimaris" nillable="true" minOccurs="0" />
        <xs:element name="conclavechallenges" type="wfsconclavechallenge" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="cetuscycle" type="wfscetuscycle" nillable="true" minOccurs="0" />
        <xs:element name="cambioncycle" type="wfscambioncycle" nillable="true" minOccurs="0" />
        <xs:element name="constructionprogress" type="wfsconstructionprogress" nillable="true" minOccurs="0" />
        <xs:element name="valliscycle" type="wfsvalliscycle" nillable="true" minOccurs="0" />
        <xs:element name="nightwave" type="wfsnightwave" nillable="true" minOccurs="0" />
        <xs:element name="arbitration" type="wfsarbitration" nillable="true" minOccurs="0" />
        <xs:element name="sentientoutposts" type="wfssentientoutposts" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsrivendata" >
      <xs:sequence>
        <xs:element name="itemtype" type="xs:string" />
        <xs:element name="compatibility" type="xs:string" />
        <xs:element name="rerolled" type="xs:anyType" />
        <xs:element name="avg" type="xs:double" />
        <xs:element name="stddev" type="xs:double" />
        <xs:element name="min" type="xs:anyType" />
        <xs:element name="max" type="xs:anyType" />
        <xs:element name="pop" type="xs:anyType" />
        <xs:element name="median" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsriven" >
      <xs:sequence>
        <xs:element name="rerolled" type="wfsrivendata" nillable="true" minOccurs="0" />
        <xs:element name="unrolled" type="wfsrivendata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmjson" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmapirequest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmitemsrequest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmordersrequest" >
      <xs:sequence>
        <xs:element name="itemurlname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmitemrequest" >
      <xs:sequence>
        <xs:element name="itemurlname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmstatisticsrequest" >
      <xs:sequence>
        <xs:element name="itemurlname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warframemarketapi" >
      <xs:sequence>
        <xs:element name="ratelimit" type="tokenbucket" nillable="true" minOccurs="0" />
        <xs:element name="httpclient" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="offsetdatetimeadapter" >
      <xs:complexContent>
       <xs:extension base="typeadapter<offsetdatetime>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfmitemsresponse" >
      <xs:sequence>
        <xs:element name="payload" type="wfmitemspayload" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmitemname" >
      <xs:sequence>
        <xs:element name="itemname" type="xs:string" />
        <xs:element name="thumb" type="xs:string" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="urlname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmitemspayload" >
      <xs:sequence>
        <xs:element name="items" type="wfmitemname" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmitemresponse" >
      <xs:sequence>
        <xs:element name="payload" type="wfmitempayload" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmdrop" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="link" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmitemset" >
      <xs:sequence>
        <xs:element name="itemsinset" type="wfmitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmiteminformation" >
      <xs:sequence>
        <xs:element name="itemname" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="wikilink" type="xs:string" />
        <xs:element name="drop" type="wfmdrop" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmitempayload" >
      <xs:sequence>
        <xs:element name="item" type="wfmitemset" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="setroot" type="xs:anyType" />
        <xs:element name="masterylevel" type="xs:anyType" />
        <xs:element name="subicon" type="xs:string" />
        <xs:element name="en" type="wfmiteminformation" nillable="true" minOccurs="0" />
        <xs:element name="iconformat" type="xs:string" />
        <xs:element name="urlname" type="xs:string" />
        <xs:element name="thumb" type="xs:string" />
        <xs:element name="ducats" type="xs:anyType" />
        <xs:element name="icon" type="xs:string" />
        <xs:element name="tradingtax" type="xs:anyType" />
        <xs:element name="tags" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmuser" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="lastseen" type="xs:anyType" />
        <xs:element name="reputationbonus" type="xs:anyType" />
        <xs:element name="reputation" type="xs:anyType" />
        <xs:element name="region" type="xs:string" />
        <xs:element name="status" type="xs:string" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="avatar" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmorder" >
      <xs:sequence>
        <xs:element name="visible" type="xs:anyType" />
        <xs:element name="quantity" type="xs:anyType" />
        <xs:element name="creationdate" type="xs:anyType" />
        <xs:element name="user" type="wfmuser" nillable="true" minOccurs="0" />
        <xs:element name="lastupdate" type="xs:anyType" />
        <xs:element name="platinum" type="xs:anyType" />
        <xs:element name="ordertype" type="xs:string" />
        <xs:element name="region" type="xs:string" />
        <xs:element name="platform" type="xs:string" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmorderspayload" >
      <xs:sequence>
        <xs:element name="orders" type="wfmorder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmordersresponse" >
      <xs:sequence>
        <xs:element name="payload" type="wfmorderspayload" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmstatisticspayload" >
      <xs:sequence>
        <xs:element name="closed" type="wfmstatisticsclosed" nillable="true" minOccurs="0" />
        <xs:element name="live" type="wfmstatisticslive" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmstatisticsclosedentry" >
      <xs:sequence>
        <xs:element name="datetime" type="xs:anyType" />
        <xs:element name="volume" type="xs:anyType" />
        <xs:element name="minprice" type="xs:anyType" />
        <xs:element name="maxprice" type="xs:anyType" />
        <xs:element name="openprice" type="xs:anyType" />
        <xs:element name="closedprice" type="xs:anyType" />
        <xs:element name="avgprice" type="xs:double" />
        <xs:element name="waprice" type="xs:double" />
        <xs:element name="//note:nottruemedian!median" type="xs:double" />
        <xs:element name="donchtop" type="xs:anyType" />
        <xs:element name="donchbot" type="xs:anyType" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmstatisticsclosed" >
      <xs:sequence>
        <xs:element name="last48hours" type="wfmstatisticsclosedentry" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="last90days" type="wfmstatisticsclosedentry" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmstatisticslive" >
      <xs:sequence>
        <xs:element name="last48hours" type="wfmstatisticsliveentry" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="last90days" type="wfmstatisticsliveentry" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmstatisticsliveentry" >
      <xs:sequence>
        <xs:element name="datetime" type="xs:anyType" />
        <xs:element name="volume" type="xs:anyType" />
        <xs:element name="minprice" type="xs:anyType" />
        <xs:element name="maxprice" type="xs:anyType" />
        <xs:element name="avgprice" type="xs:double" />
        <xs:element name="waprice" type="xs:double" />
        <xs:element name="//note:nottruemedian!median" type="xs:double" />
        <xs:element name="ordertype" type="xs:string" />
        <xs:element name="movingavg" type="xs:double" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmstatisticsresponse" >
      <xs:sequence>
        <xs:element name="payload" type="wfmstatisticspayload" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmorderdataservice" >
      <xs:sequence>
        <xs:element name="readcache" type="xs:anyType" />
        <xs:element name="api" type="warframemarketapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmstatisticsdataservice" >
      <xs:sequence>
        <xs:element name="readcache" type="xs:anyType" />
        <xs:element name="api" type="warframemarketapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warframemarketapiprovider" >
      <xs:sequence>
        <xs:element name="api" type="warframemarketapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfmitemnamedataservice" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="readcache" type="xs:anyType" />
        <xs:element name="api" type="warframemarketapi" nillable="true" minOccurs="0" />
        <xs:element name="backup" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsrivendataservice" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="readcache" type="xs:anyType" />
        <xs:element name="api" type="warframestatusapi" nillable="true" minOccurs="0" />
        <xs:element name="backup" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsworldstatedataservice" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="readcache" type="xs:anyType" />
        <xs:element name="api" type="warframestatusapi" nillable="true" minOccurs="0" />
        <xs:element name="backup" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warframestatusapiprovider" >
      <xs:sequence>
        <xs:element name="api" type="warframestatusapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsweapondataservice" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="readcache" type="xs:anyType" />
        <xs:element name="api" type="warframestatusapi" nillable="true" minOccurs="0" />
        <xs:element name="backup" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsdropdataservice" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="readcache" type="xs:anyType" />
        <xs:element name="api" type="warframestatusapi" nillable="true" minOccurs="0" />
        <xs:element name="backup" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warframewikiapiprovider" >
      <xs:sequence>
        <xs:element name="api" type="warframewikiapi" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfwarticledataservice" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="readcache" type="xs:anyType" />
        <xs:element name="api" type="warframewikiapi" nillable="true" minOccurs="0" />
        <xs:element name="backup" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warframemarketservice" >
      <xs:sequence>
        <xs:element name="itemnamedataservice" type="wfmitemnamedataservice" nillable="true" minOccurs="0" />
        <xs:element name="orderdataservice" type="wfmorderdataservice" nillable="true" minOccurs="0" />
        <xs:element name="statisticsdataservice" type="wfmstatisticsdataservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warframewikiservice" >
      <xs:sequence>
        <xs:element name="articledataservice" type="wfwarticledataservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warframestatusservice" >
      <xs:sequence>
        <xs:element name="dropdataservice" type="wfsdropdataservice" nillable="true" minOccurs="0" />
        <xs:element name="rivendataservice" type="wfsrivendataservice" nillable="true" minOccurs="0" />
        <xs:element name="weapondataservice" type="wfsweapondataservice" nillable="true" minOccurs="0" />
        <xs:element name="worldstatedataservice" type="wfsworldstatedataservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfssyndicatefactionresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<string>">
         <xs:sequence>
          <xs:element name="factions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfsbountiesfactionresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<string>">
         <xs:sequence>
          <xs:element name="factions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfmitemnameresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<wfmitemname>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfsweaponnameresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<wfsweapon>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="warframeresolvers" >
      <xs:sequence>
        <xs:element name="article" type="wfwarticleresolver" nillable="true" minOccurs="0" />
        <xs:element name="bounties_faction" type="wfsbountiesfactionresolver" nillable="true" minOccurs="0" />
        <xs:element name="drop" type="wfsdropresolver" nillable="true" minOccurs="0" />
        <xs:element name="item" type="wfmitemnameresolver" nillable="true" minOccurs="0" />
        <xs:element name="syndicate_faction" type="wfssyndicatefactionresolver" nillable="true" minOccurs="0" />
        <xs:element name="riven" type="wfsrivennameresolver" nillable="true" minOccurs="0" />
        <xs:element name="weapon" type="wfsweaponnameresolver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wfsdropresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<wfsdrop>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfwarticleresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<unexpandedarticle>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wfsrivennameresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<wfsriven>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ghostpingmessagelistener" >
      <xs:sequence>
        <xs:element name="immunity" type="node" nillable="true" minOccurs="0" />
        <xs:element name="mentions" type="xs:anyType" />
        <xs:element name="GeneratedName" type="moduleservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="permissionservice" nillable="true" minOccurs="0" />
        <xs:element name="receivedcache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inactivityunsetonlinecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivityunsetmessagecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivitysetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivityunsetplayingcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivitysetmessagecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivitysetplayingcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivitygetonlinecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivityunsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivitygetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivitycommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivitygetmessagecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivitygetplayingcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivitysetonlinecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivityservice" >
      <xs:sequence>
        <xs:element name="activity_type_online" type="xs:anyType" />
        <xs:element name="activity_type_message" type="xs:anyType" />
        <xs:element name="activity_type_playing" type="xs:anyType" />
        <xs:element name="repository" type="inactivityrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inactivityrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<inactivitydata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inactivitydata" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="days" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inactivityid" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="feedcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="feedsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="feedunsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="feedgetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="all" type="flagresolver" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="feeddata" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="channel" type="xs:long" />
        <xs:element name="uts" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="feedrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<feeddata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="feedid" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="feedservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="feedrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activitydataservice" >
      <xs:sequence>
        <xs:element name="writecache" type="xs:anyType" />
        <xs:element name="readcache" type="xs:anyType" />
        <xs:element name="repository" type="activityrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activityrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<activitydata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activitydata" >
      <xs:sequence>
        <xs:element name="user" type="xs:long" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="source" type="xs:long" />
        <xs:element name="uts" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activityid" >
      <xs:sequence>
        <xs:element name="user" type="xs:long" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="source" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activitysetonlinecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activityreportcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activityunsetonlinecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activitygetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activitysetawaycommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activitygetmessagecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activitygetplayingcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activitycommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activityunsetawaycommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activityunsetplayingcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activitysetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activityunsetmessagecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activitygetonlinecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activitygetawaycommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activitysetmessagecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activitysetplayingcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activityunsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activitymessagelistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="activityservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activityonlinelistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="activityservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activityplayinglistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="activityservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="gameservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activityservice" >
      <xs:sequence>
        <xs:element name="activity_type_online" type="xs:anyType" />
        <xs:element name="activity_type_message" type="xs:anyType" />
        <xs:element name="activity_type_playing" type="xs:anyType" />
        <xs:element name="activity_type_away" type="xs:anyType" />
        <xs:element name="dataservice" type="activitydataservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tributeservice" >
      <xs:sequence>
        <xs:element name="contributed" type="xs:anyType" />
        <xs:element name="not_contributed" type="xs:anyType" />
        <xs:element name="memberrepository" type="tributememberrepository" nillable="true" minOccurs="0" />
        <xs:element name="rolerepository" type="tributerolerepository" nillable="true" minOccurs="0" />
        <xs:element name="timeoutrepository" type="tributetimeoutrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tributerolerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<tributeroledata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributeroledata" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="role" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tributememberid" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="member" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tributetimeoutrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<tributetimeoutdata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributetimeoutdata" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="timeout" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tributememberdata" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="member" type="xs:long" />
        <xs:element name="start" type="xs:long" />
        <xs:element name="delay" type="xs:long" />
        <xs:element name="flag" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tributememberrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<tributememberdata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributerolelistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="tributeservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="feedservice" nillable="true" minOccurs="0" />
        <xs:element name="lastupdate" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tributedelayunsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributestartsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributegetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributetimeoutfeedcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="feedsetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributestartcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributesetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributeunsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributestartgetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributedelaysetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributetimeoutunsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributerolecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributetimeoutsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributetimeoutcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributerolegetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributedelaygetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributestartunsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributereportcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributerolesetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributedelaycommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributetimeoutgetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tributeroleunsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoroleid" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoroledata" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="role" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autorolerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<autoroledata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoroleunsetplayscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autorolesetplayscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoroleunsetvoicecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autorolesetvoicecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autorolegetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autorolecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoroleunsetjoincommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autorolesetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoroleunsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autorolesetveterancommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autorolesetjoincommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoroleunsetplayingcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autorolesetplayingcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoroleunsetveterancommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoroleveteranlistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="autoroleservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="permissionservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autorolevoicelistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="autoroleservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="permissionservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autorolegamelistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="autoroleservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="permissionservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autorolejoinlistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="autoroleservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="permissionservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoroleservice" >
      <xs:sequence>
        <xs:element name="repository" type="autorolerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ignservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="ignrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ignid" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="user" type="xs:long" />
        <xs:element name="game" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ignrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<igndata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="igndata" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="user" type="xs:long" />
        <xs:element name="game" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ignunsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ignmissingcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="igngetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="igncommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ignsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="nameresolver" type="stringresolver" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statuscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="guildsfeedcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="feedsetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="guildscommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="guildsleavecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="guildlistener" >
      <xs:sequence>
        <xs:element name="dblservice" type="discordbotlistservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="feedservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gamecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gamedataservice" >
      <xs:sequence>
        <xs:element name="writecache" type="xs:anyType" />
        <xs:element name="readcache" type="xs:anyType" />
        <xs:element name="repository" type="gamerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gameidmapdata" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="icon" type="xs:string" />
        <xs:element name="multi" type="xs:anyType" />
        <xs:element name="reject" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gameidmaprepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<gameidmapdata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gamerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<gamedata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gamenamemaprepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<gamenamemapdata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gamenamemapdata" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gamedata" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="icon" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gameservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="gamedataservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="gamenamemaprepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="gameidmaprepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shutdowncommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permissionservice" >
      <xs:sequence>
        <xs:element name="server" type="xs:anyType" />
        <xs:element name="permission" type="xs:anyType" />
        <xs:element name="role" type="xs:anyType" />
        <xs:element name="user" type="xs:anyType" />
        <xs:element name="channel" type="xs:anyType" />
        <xs:element name="channel_permission" type="xs:anyType" />
        <xs:element name="channel_role" type="xs:anyType" />
        <xs:element name="channel_user" type="xs:anyType" />
        <xs:element name="GeneratedName" type="permissionrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permissiongetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permissiondebugcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permissionallowcommand" >
      <xs:complexContent>
       <xs:extension base="permissionsetcommand">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permissioncommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permissionoverridescommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permissionresetcommand" >
      <xs:complexContent>
       <xs:extension base="permissionsetcommand">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permissionsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="verb" type="xs:string" />
          <xs:element name="override" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permissiondenycommand" >
      <xs:complexContent>
       <xs:extension base="permissionsetcommand">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permissionoptions" >
      <xs:sequence>
        <xs:element name="all_flag" type="flagresolver" nillable="true" minOccurs="0" />
        <xs:element name="event" type="commandevent" nillable="true" minOccurs="0" />
        <xs:element name="noderequired" type="xs:anyType" />
        <xs:element name="multiplenodes" type="xs:anyType" />
        <xs:element name="callback" type="permissionoptions" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="guild" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="channel" type="xs:anyType" />
        <xs:element name="GeneratedName" type="node" nillable="true" minOccurs="0" />
        <xs:element name="nodes" type="node" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permissionid" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="channel" type="xs:long" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="node" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permissionrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<permissiondata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permissiondata" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="channel" type="xs:long" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="node" type="xs:string" />
        <xs:element name="flag" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="helpcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="moduleservice" >
      <xs:sequence>
        <xs:element name="flag_active" type="xs:anyType" />
        <xs:element name="flag_inactive" type="xs:anyType" />
        <xs:element name="GeneratedName" type="modulerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modulegetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="moduleactivatecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="modulecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="moduledeactivatecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="moduleid" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="module" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="moduledata" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="module" type="xs:string" />
        <xs:element name="flag" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modulerepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<moduledata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="prefixgetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="prefixcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="prefixsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="prefixresolver" type="stringresolver" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="prefixunsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="prefixdata" >
      <xs:sequence>
        <xs:element name="guild" type="xs:long" />
        <xs:element name="prefix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="prefixrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<prefixdata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="prefixservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="prefixrepository" nillable="true" minOccurs="0" />
        <xs:element name="defaultprefix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pingcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="geobotcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="" type="reportcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setmemberlastmessagecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="activitysetmessagecommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getmemberlastplayedcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="activitygetplayingcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setmembercommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsetmemberjoinedcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="tributestartunsetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsetmemberlastonlinecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="activityunsetonlinecommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setmemberjoinedcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="tributestartsetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setmemberlastplayedcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="activitysetplayingcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getmemberlastmessagecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="activitygetmessagecommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsetmembercommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setmemberlastonlinecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="activitysetonlinecommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsetmemberlastplayedcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="activityunsetplayingcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getmembercommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getmemberjoinedcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="tributestartgetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getmemberlastonlinecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="activitygetonlinecommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsetmemberlastmessagecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="activityunsetmessagecommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reportcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getroleadmincommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removeroleadmincommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removerolemembercommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removerolecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getrolemembercommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getroleinitiatecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="tributerolegetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removeroleinitiatecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="tributeroleunsetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getrolecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addrolemembercommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addrolemodcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addroleinitiatecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="tributerolesetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getrolemodcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removerolemodcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addroleadmincommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addrolecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setcontributioncommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="tributesetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getcontributioncommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="tributegetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsetcontributioncommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="tributeunsetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsetcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsettimeoutcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getgametimeoutcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="inactivitygetplayingcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getgamecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="settimeoutlastonlinecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="inactivitysetonlinecommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gettimeoutcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsettimeoutcontributioncommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="tributetimeoutunsetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gettimeoutlastonlinecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="inactivitygetonlinecommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="settimeoutcontributioncommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="tributetimeoutsetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsettimeoutlastmessagecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="inactivityunsetmessagecommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gettimeoutcontributioncommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="tributetimeoutgetcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setgamecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsettimeoutlastonlinecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="inactivityunsetonlinecommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsetgamecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="settimeoutcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="settimeoutlastmessagecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="inactivitysetmessagecommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gettimeoutlastmessagecommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="inactivitygetmessagecommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsetgametimeoutcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="inactivityunsetplayingcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setgametimeoutcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
          <xs:element name="delegate" type="inactivitysetplayingcommand" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getcommand" >
      <xs:complexContent>
       <xs:extension base="command">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="docsgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discordbotlistservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="token" type="xs:string" />
        <xs:element name="api" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionservice" >
      <xs:sequence>
        <xs:element name="version" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="apiresponse" >
      <xs:sequence>
        <xs:element name="/***heresulofheapicall.*willbe{@codenull}ifno{@link#isok()},alhough{@codenull}cansillbeavalidresul.*/resul" type="xs:anyType" />
        <xs:element name="/***the{@link}ifonewascaught.*willbe{@codenull}ifnot{@link#iserror()}orno{@link}wascaught.*/" type="xs:anyType" />
        <xs:element name="/***returns{@codetrue}iftherequestwasratelimitedandthusnotprocessed.*returns{@codefalse}if{@link#isok()}or{@link#iserror()}.*/ratelimited" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="healthlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eventlistenerimpl" >
      <xs:complexContent>
       <xs:extension base="eventdispatcher">
         <xs:sequence>
          <xs:element name="applicationcontext" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="feed" >
      <xs:sequence>
        <xs:element name="type" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="owneronly" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="module" >
      <xs:sequence>
        <xs:element name="/***thenameofthemodule.*alsoactsasthekeyvaluetoidentifyamodule.*/name" type="xs:string" />
        <xs:element name="/***whetherthismoduleisenabledbydefault.*/enabledbydefault" type="xs:anyType" />
        <xs:element name="/***whetherthismoduleisalwaysactivateandcannotbedeactivated.*/alwaysenabled" type="xs:anyType" />
        <xs:element name="/***adescriptionofthismoduleforuseindocumentation.*containsgithubmarkdown.*/description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permissions" >
      <xs:sequence>
        <xs:element name="none" type="xs:anyType" />
        <xs:element name="talk" type="xs:anyType" />
        <xs:element name="react" type="xs:anyType" />
        <xs:element name="bot_embed" type="xs:anyType" />
        <xs:element name="bot_embed_ext" type="xs:anyType" />
        <xs:element name="bot_full" type="xs:anyType" />
        <xs:element name="everyone" type="xs:anyType" />
        <xs:element name="manage_nicknames" type="xs:anyType" />
        <xs:element name="manage_roles" type="xs:anyType" />
        <xs:element name="manage_server" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="node" type="xs:string" />
        <xs:element name="GeneratedName" type="module" nillable="true" minOccurs="0" />
        <xs:element name="defaults" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locatable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdaprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flagresolver" >
      <xs:sequence>
        <xs:element name="options" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optionresolver" >
      <xs:complexContent>
       <xs:extension base="flagresolver">
         <xs:sequence>
          <xs:element name="typename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="guildresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<guild>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="roleresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<role>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="memberresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<member>">
         <xs:sequence>
          <xs:element name="includebots" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="moduleresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<module>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gameresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<gamedata>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="voicechannelresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<voicechannel>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resolvers" >
      <xs:sequence>
        <xs:element name="channel" type="textchannelresolver" nillable="true" minOccurs="0" />
        <xs:element name="duration" type="durationresolver" nillable="true" minOccurs="0" />
        <xs:element name="feed" type="feedresolver" nillable="true" minOccurs="0" />
        <xs:element name="game" type="gameresolver" nillable="true" minOccurs="0" />
        <xs:element name="guild" type="guildresolver" nillable="true" minOccurs="0" />
        <xs:element name="guild_flag" type="guildflagresolver" nillable="true" minOccurs="0" />
        <xs:element name="member" type="memberresolver" nillable="true" minOccurs="0" />
        <xs:element name="member_or_bot" type="memberresolver" nillable="true" minOccurs="0" />
        <xs:element name="module" type="moduleresolver" nillable="true" minOccurs="0" />
        <xs:element name="node" type="noderesolver" nillable="true" minOccurs="0" />
        <xs:element name="permission" type="permissionresolver" nillable="true" minOccurs="0" />
        <xs:element name="role" type="roleresolver" nillable="true" minOccurs="0" />
        <xs:element name="timestamp" type="timestampresolver" nillable="true" minOccurs="0" />
        <xs:element name="voice_channel" type="voicechannelresolver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noderesolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<node>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permissionresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<permission>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="durationresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<long>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="textchannelresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<textchannel>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="guildflagresolver" >
      <xs:complexContent>
       <xs:extension base="flagresolver">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="feedresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<feed>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestampresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<offsetdatetime>">
         <xs:sequence>
          <xs:element name="sample" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringresolver" >
      <xs:complexContent>
       <xs:extension base="optionresolver<string>">
         <xs:sequence>
          <xs:element name="descriptor" type="commandoptiondescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commandlistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="commandcontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commandevent" >
      <xs:sequence>
        <xs:element name="dm_flag" type="xs:anyType" />
        <xs:element name="rm_flag" type="xs:anyType" />
        <xs:element name="context" type="commandcontext" nillable="true" minOccurs="0" />
        <xs:element name="event" type="xs:anyType" />
        <xs:element name="options" type="commandoptions" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="command" >
      <xs:sequence>
        <xs:element name="descriptor" type="commanddescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commanddescriptor" >
      <xs:sequence>
        <xs:element name="/***thekeywordforthiscommand(required).*/keyword" type="xs:string" />
        <xs:element name="aliases" type="xs:string" />
        <xs:element name="children" type="command" nillable="true" minOccurs="0" />
        <xs:element name="/***whetherornotthiscommandcanonlybeexecutedbythebotowner({@codefalse}bydefault).*/owneronly" type="xs:anyType" />
        <xs:element name="/***whetherornotthiscommandcanonlybeexecutedviaguildtextmessage({@codetrue}bydefault).*thisoptionprohibitstheuseofthiscommandviadirectmessage.*/guildonly" type="xs:anyType" />
        <xs:element name="/***thepermissionforthiscommand({@codenull}bydefault).*/" type="node" nillable="true" minOccurs="0" />
        <xs:element name="minimumbots" type="xs:anyType" />
        <xs:element name="/***ashortdescriptionofthiscommand(required).*/description" type="xs:string" />
        <xs:element name="options" type="commandoptiondescriptor" nillable="true" minOccurs="0" />
        <xs:element name="/***amoredetaileddescriptionofthiscommand.*/details" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commandcontext" >
      <xs:complexContent>
       <xs:extension base="locatable>">
         <xs:sequence>
          <xs:element name="lockdown" type="xs:anyType" />
          <xs:element name="ownerid" type="xs:string" />
          <xs:element name="serverid" type="xs:string" />
          <xs:element name="serverinvite" type="xs:string" />
          <xs:element name="commands" type="xs:anyType" />
          <xs:element name="" type="eventdispatcher" nillable="true" minOccurs="0" />
          <xs:element name="" type="activityservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="autoroleservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="feedservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="gameservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="ignservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="inactivityservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="moduleservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="permissionservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="prefixservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="tributeservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="versionservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
</xs:schema> 