
osubeatmapviewdata(approved:Integer, submitdate:Long, approveddate:Long, lastupdate:Long, artist:String, beatmapid:Integer [PK], beatmapsetid:Integer, bpm:Double, creatorname:String, creatorid:Integer, /***stardifficulty*/difficultyrating:Double, difficultyaim:Double, difficultyspeed:Double, /***circlesize(cs)*/difficultysize:Double, /***overalldifficulty(od)*/difficultyoverall:Double, /***approachrate(ar)*/difficultyapproach:Double, /***hpdrainrate(hp)*/difficultydrain:Double, hitlength:Integer, source:String, genre:Integer, language:Integer, title:String, totallength:Integer, version:String, filemd5:String, mode:Integer, convertedmode:Integer, mods:Integer, tags:String, favouritecount:Integer, rating:Double, playcount:Integer, passcount:Integer, countnormal:Integer, countslider:Integer, countspinner:Integer, maxcombo:Integer, maxpp:Double, downloadunavailable:Boolean, audiounavailable:Boolean);

osuscoredata(scoreid:Long, beatmapid:Integer [PK], mode:Integer [PK], mods:Integer [PK], userid:Integer, username:String, score:Integer, count300:Integer, count100:Integer, count50:Integer, countmiss:Integer, maxcombo:Integer, countkatu:Integer, countgeki:Integer, perfect:Boolean, date:Long, rank:String, pp:Double, replayavailable:Boolean);

osubeatmapdifficultydata(beatmapid:Integer [PK], mode:Integer [PK], mods:Integer [PK], /***stardifficulty*/difficultyrating:Double, difficultyaim:Double, difficultyspeed:Double, maxcombo:Integer, maxpp:Double);

osubeatmapsetdata(beatmapsetid:Integer [PK], approved:Integer, submitdate:Long, approveddate:Long, lastupdate:Long, artist:String, creatorname:String, creatorid:Integer, source:String, genre:Integer, language:Integer, title:String, tags:String, downloadunavailable:Boolean, audiounavailable:Boolean);

osubeatmapdata(beatmapid:Integer [PK], beatmapsetid:Integer, bpm:Double, /***circlesize(cs)*/difficultysize:Double, /***overalldifficulty(od)*/difficultyoverall:Double, /***approachrate(ar)*/difficultyapproach:Double, /***hpdrainrate(hp)*/difficultydrain:Double, hitlength:Integer, totallength:Integer, version:String, filemd5:String, mode:Integer, favouritecount:Integer, rating:Double, playcount:Integer, passcount:Integer, countnormal:Integer, countslider:Integer, countspinner:Integer);

osuuserdata(userid:Integer [PK], mode:Integer [PK], username:String, joindate:Long, count300:Integer, count100:Integer, count50:Integer, playcount:Integer, rankedscore:Long, totalscore:Long, pprank:Integer, level:Double, ppraw:Double, accuracy:Double, countrankss:Integer, countrankssh:Integer, countranks:Integer, countranksh:Integer, countranka:Integer, country:String, totalsecondsplayed:Integer, ppcountryrank:Integer);

inactivitydata(guild:Long [PK], type:Byte [PK], id:Long [PK], days:Integer);

feeddata(guild:Long [PK], type:String [PK], id:Long [PK], channel:Long, uts:Long);

activitydata(user:Long [PK], type:Byte [PK], id:Long [PK], source:Long [PK], uts:Long);

tributeroledata(guild:Long [PK], role:Long);

tributetimeoutdata(guild:Long [PK], timeout:Long);

tributememberdata(guild:Long [PK], member:Long [PK], start:Long, delay:Long, flag:Byte);

autoroledata(guild:Long [PK], type:String [PK], id:Long [PK], role:Long);

igndata(guild:Long [PK], user:Long [PK], game:Long [PK], name:String);

gameidmapdata(id:Long [PK], name:String, icon:String, multi:Boolean, reject:Boolean);

gamenamemapdata(name:String [PK], id:Long);

gamedata(id:Long [PK], name:String, icon:String);

permissiondata(guild:Long [PK], channel:Long [PK], type:Byte [PK], id:Long [PK], node:String [PK], flag:Byte);

moduledata(guild:Long [PK], module:String [PK], flag:Byte);

prefixdata(guild:Long [PK], prefix:String);


** PROGRAM TYPE: JPA+Hibernate(Hybrid)