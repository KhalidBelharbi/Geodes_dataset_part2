ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Payment =>=>=> RelationalSchema.Table>> payment;
ClassDiagram.Class>> Inventory =>=>=> RelationalSchema.Table>> inventory;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> AccountProfiles =>=>=> RelationalSchema.Table>> accountprofiles;
ClassDiagram.Class>> Admin =>=>=> RelationalSchema.Table>> admin;
ClassDiagram.Class>> OrderProducts =>=>=> RelationalSchema.Table>> orderproducts;
ClassDiagram.Class>> Store =>=>=> RelationalSchema.Table>> store;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> CartProducts =>=>=> RelationalSchema.Table>> cartproducts;
ClassDiagram.Class>> Runner =>=>=> RelationalSchema.Table>> runner;
ClassDiagram.Class>> ProductImg =>=>=> RelationalSchema.Table>> productimg;
ClassDiagram.Class>> ShoppingCart =>=>=> RelationalSchema.Table>> shoppingcart;
ClassDiagram.Attribut>> Order.id:long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.orderdate:LocalDateTime =>=>=> RelationalSchema.Column>> order.orderdate;
ClassDiagram.Attribut>> Order.orderstatus:int =>=>=> RelationalSchema.Column>> order.orderstatus;
ClassDiagram.Attribut>> Order.//todo:addrelationtopaymenttablepaymentid:int =>=>=> RelationalSchema.Column>> order.//todo:addrelationtopaymenttablepaymentid;
ClassDiagram.Attribut>> Order.//todo:addrelationtodeliverytabledeliveryid:int =>=>=> RelationalSchema.Column>> order.//todo:addrelationtodeliverytabledeliveryid;
ClassDiagram.Attribut>> Order.totalcost:BigDecimal =>=>=> RelationalSchema.Column>> order.totalcost;
ClassDiagram.Attribut>> Payment.id:long =>=>=> RelationalSchema.Column>> payment.id PRIMARY KEY;
ClassDiagram.Attribut>> Payment.payment_type:String =>=>=> RelationalSchema.Column>> payment.payment_type;
ClassDiagram.Attribut>> Payment.amount:float =>=>=> RelationalSchema.Column>> payment.amount;
ClassDiagram.Attribut>> Payment.card_num:int =>=>=> RelationalSchema.Column>> payment.card_num;
ClassDiagram.Attribut>> Payment.payment_:Date =>=>=> RelationalSchema.Column>> payment.payment_;
ClassDiagram.Attribut>> Payment.cust_name:String =>=>=> RelationalSchema.Column>> payment.cust_name;
ClassDiagram.Attribut>> Payment.cust_id:long =>=>=> RelationalSchema.Column>> payment.cust_id;
ClassDiagram.Attribut>> Inventory.id:long =>=>=> RelationalSchema.Column>> inventory.id PRIMARY KEY;
ClassDiagram.Attribut>> Inventory.quantity:long =>=>=> RelationalSchema.Column>> inventory.quantity;
ClassDiagram.Attribut>> Inventory.brand:String =>=>=> RelationalSchema.Column>> inventory.brand;
ClassDiagram.Attribut>> Inventory.count:String =>=>=> RelationalSchema.Column>> inventory.count;
ClassDiagram.Attribut>> Department.id:long =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> Product.id:long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.product_brand:String =>=>=> RelationalSchema.Column>> product.product_brand;
ClassDiagram.Attribut>> Product.product_name:String =>=>=> RelationalSchema.Column>> product.product_name;
ClassDiagram.Attribut>> Product.product_description:String =>=>=> RelationalSchema.Column>> product.product_description;
ClassDiagram.Attribut>> Product.price:BigDecimal =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> AccountProfiles.id:long =>=>=> RelationalSchema.Column>> accountprofiles.id PRIMARY KEY;
ClassDiagram.Attribut>> AccountProfiles.firstname:String =>=>=> RelationalSchema.Column>> accountprofiles.firstname;
ClassDiagram.Attribut>> AccountProfiles.lastname:String =>=>=> RelationalSchema.Column>> accountprofiles.lastname;
ClassDiagram.Attribut>> AccountProfiles.email:String =>=>=> RelationalSchema.Column>> accountprofiles.email;
ClassDiagram.Attribut>> AccountProfiles.address:String =>=>=> RelationalSchema.Column>> accountprofiles.address;
ClassDiagram.Attribut>> AccountProfiles.payment:String =>=>=> RelationalSchema.Column>> accountprofiles.payment;
ClassDiagram.Attribut>> AccountProfiles.phone:long =>=>=> RelationalSchema.Column>> accountprofiles.phone;
ClassDiagram.Attribut>> Admin.id:long =>=>=> RelationalSchema.Column>> admin.id PRIMARY KEY;
ClassDiagram.Attribut>> Admin.user_name:String =>=>=> RelationalSchema.Column>> admin.user_name;
ClassDiagram.Attribut>> Admin.name:String =>=>=> RelationalSchema.Column>> admin.name;
ClassDiagram.Attribut>> Admin.password:String =>=>=> RelationalSchema.Column>> admin.password;
ClassDiagram.Attribut>> OrderProducts.id:long =>=>=> RelationalSchema.Column>> orderproducts.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderProducts.count:int =>=>=> RelationalSchema.Column>> orderproducts.count;
ClassDiagram.Attribut>> Store.id:long =>=>=> RelationalSchema.Column>> store.id PRIMARY KEY;
ClassDiagram.Attribut>> Store.store_name:String =>=>=> RelationalSchema.Column>> store.store_name;
ClassDiagram.Attribut>> Store.street_address:String =>=>=> RelationalSchema.Column>> store.street_address;
ClassDiagram.Attribut>> Store.city:String =>=>=> RelationalSchema.Column>> store.city;
ClassDiagram.Attribut>> Store.state:String =>=>=> RelationalSchema.Column>> store.state;
ClassDiagram.Attribut>> Store.zip:String =>=>=> RelationalSchema.Column>> store.zip;
ClassDiagram.Attribut>> Customer.id:long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.username:String =>=>=> RelationalSchema.Column>> customer.username;
ClassDiagram.Attribut>> Customer.firstname:String =>=>=> RelationalSchema.Column>> customer.firstname;
ClassDiagram.Attribut>> Customer.middlename:String =>=>=> RelationalSchema.Column>> customer.middlename;
ClassDiagram.Attribut>> Customer.lastname:String =>=>=> RelationalSchema.Column>> customer.lastname;
ClassDiagram.Attribut>> Customer.dob:LocalDateTime =>=>=> RelationalSchema.Column>> customer.dob;
ClassDiagram.Attribut>> Customer.//usermaynotwanttoregisterpassword:String =>=>=> RelationalSchema.Column>> customer.//usermaynotwanttoregisterpassword;
ClassDiagram.Attribut>> Customer.telno:String =>=>=> RelationalSchema.Column>> customer.telno;
ClassDiagram.Attribut>> Customer.email:String =>=>=> RelationalSchema.Column>> customer.email;
ClassDiagram.Attribut>> Customer.address1:String =>=>=> RelationalSchema.Column>> customer.address1;
ClassDiagram.Attribut>> Customer.address2:String =>=>=> RelationalSchema.Column>> customer.address2;
ClassDiagram.Attribut>> CartProducts.id:long =>=>=> RelationalSchema.Column>> cartproducts.id PRIMARY KEY;
ClassDiagram.Attribut>> CartProducts.count:int =>=>=> RelationalSchema.Column>> cartproducts.count;
ClassDiagram.Attribut>> Runner.id:long =>=>=> RelationalSchema.Column>> runner.id PRIMARY KEY;
ClassDiagram.Attribut>> Runner.name:String =>=>=> RelationalSchema.Column>> runner.name;
ClassDiagram.Attribut>> Runner.phone:String =>=>=> RelationalSchema.Column>> runner.phone;
ClassDiagram.Attribut>> Runner.password:String =>=>=> RelationalSchema.Column>> runner.password;
ClassDiagram.Attribut>> ProductImg.id:long =>=>=> RelationalSchema.Column>> productimg.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductImg.imgpath:String =>=>=> RelationalSchema.Column>> productimg.imgpath;
ClassDiagram.Attribut>> ProductImg.desc:String =>=>=> RelationalSchema.Column>> productimg.desc;
ClassDiagram.Attribut>> ShoppingCart.id:long =>=>=> RelationalSchema.Column>> shoppingcart.id PRIMARY KEY;
ClassDiagram.Attribut>> ShoppingCart.totalcost:BigDecimal =>=>=> RelationalSchema.Column>> shoppingcart.totalcost;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>List<OrderProducts>;
Many-To-One relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>store represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Product  to ClassDiagram.Class>>department represented by ClassDiagram.Atrribute>>dept;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>store represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<ProductImg>;
Many-To-One relationship from ClassDiagram.Class>>OrderProducts  to ClassDiagram.Class>>order represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>OrderProducts  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>List<Department>;
One-To-Many relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>List<Product>;
Many-To-One relationship from ClassDiagram.Class>>CartProducts  to ClassDiagram.Class>>shoppingcart represented by ClassDiagram.Atrribute>>cart;
Many-To-One relationship from ClassDiagram.Class>>CartProducts  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductImg  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>prod;
Many-To-One relationship from ClassDiagram.Class>>ShoppingCart  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>ShoppingCart  to ClassDiagram.Class>>List<CartProducts>;
