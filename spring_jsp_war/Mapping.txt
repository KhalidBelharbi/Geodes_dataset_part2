ClassDiagram.Class>> Editorial =>=>=> RelationalSchema.Table>> editorial;
ClassDiagram.Class>> AutorHerencia =>=>=> RelationalSchema.Table>> autorherencia;
ClassDiagram.Class>> PersonaHerencia =>=>=> RelationalSchema.Table>> personaherencia;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Libro =>=>=> RelationalSchema.Table>> libro;
ClassDiagram.Class>> Autor =>=>=> RelationalSchema.Table>> autor;
ClassDiagram.Class>> Usuario =>=>=> RelationalSchema.Table>> usuario;
ClassDiagram.Class>> Usuario2 =>=>=> RelationalSchema.Table>> usuario2;
ClassDiagram.Class>> Perfil =>=>=> RelationalSchema.Table>> perfil;
ClassDiagram.Class>> DirectorHerencia =>=>=> RelationalSchema.Table>> directorherencia;
ClassDiagram.Attribut>> Editorial.serialversionuid:long =>=>=> RelationalSchema.Column>> editorial.serialversionuid;
ClassDiagram.Attribut>> Editorial.ideditorial:int =>=>=> RelationalSchema.Column>> editorial.ideditorial PRIMARY KEY;
ClassDiagram.Attribut>> Editorial.nombre:String =>=>=> RelationalSchema.Column>> editorial.nombre;
ClassDiagram.Attribut>> Editorial.pais:String =>=>=> RelationalSchema.Column>> editorial.pais;
ClassDiagram.Attribut>> AutorHerencia.serialversionuid:long =>=>=> RelationalSchema.Column>> autorherencia.serialversionuid;
ClassDiagram.Attribut>> AutorHerencia.idautor:String =>=>=> RelationalSchema.Column>> autorherencia.idautor;
ClassDiagram.Attribut>> PersonaHerencia.serialversionuid:long =>=>=> RelationalSchema.Column>> personaherencia.serialversionuid;
ClassDiagram.Attribut>> PersonaHerencia.//@id//@generatedvalue(strategy:int =>=>=> RelationalSchema.Column>> personaherencia.//@id//@generatedvalue(strategy;
ClassDiagram.Attribut>> PersonaHerencia.//@column(nullable:String =>=>=> RelationalSchema.Column>> personaherencia.//@column(nullable;
ClassDiagram.Attribut>> PersonaHerencia.primerapellido:String =>=>=> RelationalSchema.Column>> personaherencia.primerapellido;
ClassDiagram.Attribut>> PersonaHerencia.segundoapellido:String =>=>=> RelationalSchema.Column>> personaherencia.segundoapellido;
ClassDiagram.Attribut>> PersonaHerencia.//@temporal(temporaltype.)fechanacimiento:Date =>=>=> RelationalSchema.Column>> personaherencia.//@temporal(temporaltype.)fechanacimiento;
ClassDiagram.Attribut>> PersonaHerencia.lugarnacimiento:String =>=>=> RelationalSchema.Column>> personaherencia.lugarnacimiento;
ClassDiagram.Attribut>> Role.serialversionuid:long =>=>=> RelationalSchema.Column>> role.serialversionuid;
ClassDiagram.Attribut>> Role.id:Long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.user_id:Long =>=>=> RelationalSchema.Column>> role.user_id;
ClassDiagram.Attribut>> Role.role:String =>=>=> RelationalSchema.Column>> role.role;
ClassDiagram.Attribut>> Libro.serialversionuid:long =>=>=> RelationalSchema.Column>> libro.serialversionuid;
ClassDiagram.Attribut>> Libro.idlibro:Integer =>=>=> RelationalSchema.Column>> libro.idlibro PRIMARY KEY;
ClassDiagram.Attribut>> Libro.titulo:String =>=>=> RelationalSchema.Column>> libro.titulo;
ClassDiagram.Attribut>> Libro.portada:String =>=>=> RelationalSchema.Column>> libro.portada;
ClassDiagram.Attribut>> Autor.serialversionuid:long =>=>=> RelationalSchema.Column>> autor.serialversionuid;
ClassDiagram.Attribut>> Autor.idautor:int =>=>=> RelationalSchema.Column>> autor.idautor PRIMARY KEY;
ClassDiagram.Attribut>> Autor.nombre:String =>=>=> RelationalSchema.Column>> autor.nombre;
ClassDiagram.Attribut>> Autor.primerapellido:String =>=>=> RelationalSchema.Column>> autor.primerapellido;
ClassDiagram.Attribut>> Autor.segundoapellido:String =>=>=> RelationalSchema.Column>> autor.segundoapellido;
ClassDiagram.Attribut>> Autor.fechanacimiento:Date =>=>=> RelationalSchema.Column>> autor.fechanacimiento;
ClassDiagram.Attribut>> Autor.lugarnacimiento:String =>=>=> RelationalSchema.Column>> autor.lugarnacimiento;
ClassDiagram.Attribut>> Usuario.serialversionuid:long =>=>=> RelationalSchema.Column>> usuario.serialversionuid;
ClassDiagram.Attribut>> Usuario.id:Long =>=>=> RelationalSchema.Column>> usuario.id PRIMARY KEY;
ClassDiagram.Attribut>> Usuario.username:String =>=>=> RelationalSchema.Column>> usuario.username;
ClassDiagram.Attribut>> Usuario.password:String =>=>=> RelationalSchema.Column>> usuario.password;
ClassDiagram.Attribut>> Usuario.enabled:Boolean =>=>=> RelationalSchema.Column>> usuario.enabled;
ClassDiagram.Attribut>> Usuario2.serialversionuid:long =>=>=> RelationalSchema.Column>> usuario2.serialversionuid;
ClassDiagram.Attribut>> Usuario2.idusuario2:Integer =>=>=> RelationalSchema.Column>> usuario2.idusuario2 PRIMARY KEY;
ClassDiagram.Attribut>> Usuario2.username:String =>=>=> RelationalSchema.Column>> usuario2.username;
ClassDiagram.Attribut>> Usuario2.nombre:String =>=>=> RelationalSchema.Column>> usuario2.nombre;
ClassDiagram.Attribut>> Usuario2.email:String =>=>=> RelationalSchema.Column>> usuario2.email;
ClassDiagram.Attribut>> Usuario2.password:String =>=>=> RelationalSchema.Column>> usuario2.password;
ClassDiagram.Attribut>> Usuario2.estatus:String =>=>=> RelationalSchema.Column>> usuario2.estatus;
ClassDiagram.Attribut>> Usuario2.fecharegistro:Date =>=>=> RelationalSchema.Column>> usuario2.fecharegistro;
ClassDiagram.Attribut>> Perfil.serialversionuid:long =>=>=> RelationalSchema.Column>> perfil.serialversionuid;
ClassDiagram.Attribut>> Perfil.idperfil:Integer =>=>=> RelationalSchema.Column>> perfil.idperfil PRIMARY KEY;
ClassDiagram.Attribut>> Perfil.perfil:String =>=>=> RelationalSchema.Column>> perfil.perfil;
ClassDiagram.Attribut>> DirectorHerencia.serialversionuid:long =>=>=> RelationalSchema.Column>> directorherencia.serialversionuid;
ClassDiagram.Attribut>> DirectorHerencia.iddirector:String =>=>=> RelationalSchema.Column>> directorherencia.iddirector;
One-To-Many relationship from ClassDiagram.Class>>Editorial  to ClassDiagram.Class>>List<Libro>;
Many-To-One relationship from ClassDiagram.Class>>Libro  to ClassDiagram.Class>>editorial represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Libro  to ClassDiagram.Class>>autor represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Autor  to ClassDiagram.Class>>List<Libro>;
One-To-Many relationship from ClassDiagram.Class>>Usuario  to ClassDiagram.Class>>List<Role>;
Many-To-Many relationship between ClassDiagram.Class>>Usuario2  and ClassDiagram.Class>>list<perfil>: usuario2perfil(idusuario2:Usuario2 [PK] #FK to Usuario2,idperfil:list<perfil> [PK] #FK to list<perfil>);
