ClassDiagram.Class>> Celebration =>=>=> RelationalSchema.Table>> celebration;
ClassDiagram.Class>> Location =>=>=> RelationalSchema.Table>> location;
ClassDiagram.Class>> Timeinfo =>=>=> RelationalSchema.Table>> timeinfo;
ClassDiagram.Class>> Invite =>=>=> RelationalSchema.Table>> invite;
ClassDiagram.Class>> Motto =>=>=> RelationalSchema.Table>> motto;
ClassDiagram.Class>> Tag =>=>=> RelationalSchema.Table>> tag;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Paidobject =>=>=> RelationalSchema.Table>> paidobject;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Attribut>> Celebration.serialversionuid:long =>=>=> RelationalSchema.Column>> celebration.serialversionuid;
ClassDiagram.Attribut>> Celebration.c_id:int =>=>=> RelationalSchema.Column>> celebration.c_id PRIMARY KEY;
ClassDiagram.Attribut>> Celebration.cname:String =>=>=> RelationalSchema.Column>> celebration.cname;
ClassDiagram.Attribut>> Celebration.fkuserorganizer:int =>=>=> RelationalSchema.Column>> celebration.fkuserorganizer;
ClassDiagram.Attribut>> Location.serialversionuid:long =>=>=> RelationalSchema.Column>> location.serialversionuid;
ClassDiagram.Attribut>> Location.location_id:int =>=>=> RelationalSchema.Column>> location.location_id PRIMARY KEY;
ClassDiagram.Attribut>> Location.capacity:int =>=>=> RelationalSchema.Column>> location.capacity;
ClassDiagram.Attribut>> Location.publicity:Object =>=>=> RelationalSchema.Column>> location.publicity;
ClassDiagram.Attribut>> Timeinfo.serialversionuid:long =>=>=> RelationalSchema.Column>> timeinfo.serialversionuid;
ClassDiagram.Attribut>> Timeinfo.ts_id:int =>=>=> RelationalSchema.Column>> timeinfo.ts_id PRIMARY KEY;
ClassDiagram.Attribut>> Timeinfo.createtime:Date =>=>=> RelationalSchema.Column>> timeinfo.createtime;
ClassDiagram.Attribut>> Timeinfo.uptime:Date =>=>=> RelationalSchema.Column>> timeinfo.uptime;
ClassDiagram.Attribut>> Invite.serialversionuid:long =>=>=> RelationalSchema.Column>> invite.serialversionuid;
ClassDiagram.Attribut>> Invite.id:InvitePK =>=>=> RelationalSchema.Column>> invite.id;
ClassDiagram.Attribut>> Invite.participatin:Object =>=>=> RelationalSchema.Column>> invite.participatin;
ClassDiagram.Attribut>> Motto.serialversionuid:long =>=>=> RelationalSchema.Column>> motto.serialversionuid;
ClassDiagram.Attribut>> Motto.mottoname:String =>=>=> RelationalSchema.Column>> motto.mottoname PRIMARY KEY;
ClassDiagram.Attribut>> Tag.serialversionuid:long =>=>=> RelationalSchema.Column>> tag.serialversionuid;
ClassDiagram.Attribut>> Tag.tagname:String =>=>=> RelationalSchema.Column>> tag.tagname PRIMARY KEY;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.person_personid:int =>=>=> RelationalSchema.Column>> user.person_personid PRIMARY KEY;
ClassDiagram.Attribut>> User.oauth:Object =>=>=> RelationalSchema.Column>> user.oauth;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.organizedcelebrations:HashSet<Celebration> =>=>=> RelationalSchema.Column>> user.organizedcelebrations;
ClassDiagram.Attribut>> User.friends:HashSet<User> =>=>=> RelationalSchema.Column>> user.friends;
ClassDiagram.Attribut>> Paidobject.serialversionuid:long =>=>=> RelationalSchema.Column>> paidobject.serialversionuid;
ClassDiagram.Attribut>> Paidobject.poid:int =>=>=> RelationalSchema.Column>> paidobject.poid PRIMARY KEY;
ClassDiagram.Attribut>> Paidobject.amount:int =>=>=> RelationalSchema.Column>> paidobject.amount;
ClassDiagram.Attribut>> Paidobject.name:String =>=>=> RelationalSchema.Column>> paidobject.name;
ClassDiagram.Attribut>> Paidobject.price:double =>=>=> RelationalSchema.Column>> paidobject.price;
ClassDiagram.Attribut>> Paidobject.reflink:String =>=>=> RelationalSchema.Column>> paidobject.reflink;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.personid:int =>=>=> RelationalSchema.Column>> person.personid PRIMARY KEY;
ClassDiagram.Attribut>> Person.email:String =>=>=> RelationalSchema.Column>> person.email;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.pseodo:String =>=>=> RelationalSchema.Column>> person.pseodo;
ClassDiagram.Attribut>> Category.serialversionuid:long =>=>=> RelationalSchema.Column>> category.serialversionuid;
ClassDiagram.Attribut>> Category.categoryid:int =>=>=> RelationalSchema.Column>> category.categoryid PRIMARY KEY;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> Address.serialversionuid:long =>=>=> RelationalSchema.Column>> address.serialversionuid;
ClassDiagram.Attribut>> Address.address_id:int =>=>=> RelationalSchema.Column>> address.address_id PRIMARY KEY;
ClassDiagram.Attribut>> Address.country:String =>=>=> RelationalSchema.Column>> address.country;
ClassDiagram.Attribut>> Address.number:int =>=>=> RelationalSchema.Column>> address.number;
ClassDiagram.Attribut>> Address.postcode:int =>=>=> RelationalSchema.Column>> address.postcode;
ClassDiagram.Attribut>> Address.street:String =>=>=> RelationalSchema.Column>> address.street;
Many-To-One relationship from ClassDiagram.Class>>Celebration  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>//uni-directionalmany-to-oneassociationto;
Many-To-One relationship from ClassDiagram.Class>>Celebration  to ClassDiagram.Class>>location represented by ClassDiagram.Atrribute>>//uni-directionalmany-to-oneassociationto;
Many-To-One relationship from ClassDiagram.Class>>Celebration  to ClassDiagram.Class>>motto represented by ClassDiagram.Atrribute>>//uni-directionalmany-to-oneassociationto;
Many-To-One relationship from ClassDiagram.Class>>Celebration  to ClassDiagram.Class>>timeinfo represented by ClassDiagram.Atrribute>>//uni-directionalmany-to-oneassociationto;
Many-To-One relationship from ClassDiagram.Class>>Location  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>//uni-directionalmany-to-oneassociationto;
Many-To-Many relationship between ClassDiagram.Class>>Location  and ClassDiagram.Class>>set<tag>: location_tag(locations_location_id:Location [PK] #FK to Location,tags_tagname:set<tag> [PK] #FK to set<tag>);
Many-To-One relationship from ClassDiagram.Class>>Location  to ClassDiagram.Class>>timeinfo represented by ClassDiagram.Atrribute>>//uni-directionalmany-to-oneassociationto;
Many-To-One relationship from ClassDiagram.Class>>Invite  to ClassDiagram.Class>>celebration represented by ClassDiagram.Atrribute>>//uni-directionalmany-to-oneassociationto;
Many-To-Many relationship between ClassDiagram.Class>>Motto  and ClassDiagram.Class>>set<tag>: motto_tag(fk_mt_mottoname:Motto [PK] #FK to Motto,tags_tagname:set<tag> [PK] #FK to set<tag>);
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>//uni-directionalone-to-oneassociationto;
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>timeinfo represented by ClassDiagram.Atrribute>>//uni-directionalmany-to-oneassociationto;
Many-To-One relationship from ClassDiagram.Class>>Paidobject  to ClassDiagram.Class>>celebration represented by ClassDiagram.Atrribute>>//uni-directionalmany-to-oneassociationto;
