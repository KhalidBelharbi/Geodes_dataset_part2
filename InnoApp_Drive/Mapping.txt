ClassDiagram.Class>> Client =>=>=> RelationalSchema.Table>> client;
ClassDiagram.Class>> Fournisseur =>=>=> RelationalSchema.Table>> fournisseur;
ClassDiagram.Class>> Magasin =>=>=> RelationalSchema.Table>> magasin;
ClassDiagram.Class>> Categorie =>=>=> RelationalSchema.Table>> categorie;
ClassDiagram.Class>> Produit =>=>=> RelationalSchema.Table>> produit;
ClassDiagram.Class>> Commande =>=>=> RelationalSchema.Table>> commande;
ClassDiagram.Class>> Rayon =>=>=> RelationalSchema.Table>> rayon;
ClassDiagram.Class>> Fournir =>=>=> RelationalSchema.Table>> fournir;
ClassDiagram.Class>> Stocker =>=>=> RelationalSchema.Table>> stocker;
ClassDiagram.Class>> LigneCommande =>=>=> RelationalSchema.Table>> lignecommande;
ClassDiagram.Attribut>> Client.idcli:int =>=>=> RelationalSchema.Column>> client.idcli PRIMARY KEY;
ClassDiagram.Attribut>> Client.nomcli:String =>=>=> RelationalSchema.Column>> client.nomcli;
ClassDiagram.Attribut>> Client.prenomcli:String =>=>=> RelationalSchema.Column>> client.prenomcli;
ClassDiagram.Attribut>> Client.emailcli:String =>=>=> RelationalSchema.Column>> client.emailcli;
ClassDiagram.Attribut>> Client.telcli:String =>=>=> RelationalSchema.Column>> client.telcli;
ClassDiagram.Attribut>> Client.pointcli:String =>=>=> RelationalSchema.Column>> client.pointcli;
ClassDiagram.Attribut>> Fournisseur.id:long =>=>=> RelationalSchema.Column>> fournisseur.id PRIMARY KEY;
ClassDiagram.Attribut>> Fournisseur.nom:String =>=>=> RelationalSchema.Column>> fournisseur.nom;
ClassDiagram.Attribut>> Fournisseur.tel:int =>=>=> RelationalSchema.Column>> fournisseur.tel;
ClassDiagram.Attribut>> Magasin.idmag:int =>=>=> RelationalSchema.Column>> magasin.idmag PRIMARY KEY;
ClassDiagram.Attribut>> Magasin.nommag:String =>=>=> RelationalSchema.Column>> magasin.nommag;
ClassDiagram.Attribut>> Magasin.adressemag:String =>=>=> RelationalSchema.Column>> magasin.adressemag;
ClassDiagram.Attribut>> Magasin.villemag:String =>=>=> RelationalSchema.Column>> magasin.villemag;
ClassDiagram.Attribut>> Magasin.cpmagasin:String =>=>=> RelationalSchema.Column>> magasin.cpmagasin;
ClassDiagram.Attribut>> Magasin.telmag:String =>=>=> RelationalSchema.Column>> magasin.telmag;
ClassDiagram.Attribut>> Categorie.//proprietesidcat:int =>=>=> RelationalSchema.Column>> categorie.//proprietesidcat PRIMARY KEY;
ClassDiagram.Attribut>> Categorie.libellecat:String =>=>=> RelationalSchema.Column>> categorie.libellecat;
ClassDiagram.Attribut>> Produit.idp:int =>=>=> RelationalSchema.Column>> produit.idp PRIMARY KEY;
ClassDiagram.Attribut>> Produit.libellep:String =>=>=> RelationalSchema.Column>> produit.libellep;
ClassDiagram.Attribut>> Produit.prixunitairep:float =>=>=> RelationalSchema.Column>> produit.prixunitairep;
ClassDiagram.Attribut>> Produit.prixkgp:float =>=>=> RelationalSchema.Column>> produit.prixkgp;
ClassDiagram.Attribut>> Produit.nutriscorep:String =>=>=> RelationalSchema.Column>> produit.nutriscorep;
ClassDiagram.Attribut>> Produit.photop:Blob =>=>=> RelationalSchema.Column>> produit.photop;
ClassDiagram.Attribut>> Produit.labelp:String =>=>=> RelationalSchema.Column>> produit.labelp;
ClassDiagram.Attribut>> Produit.formatp:String =>=>=> RelationalSchema.Column>> produit.formatp;
ClassDiagram.Attribut>> Produit.conditionnementp:String =>=>=> RelationalSchema.Column>> produit.conditionnementp;
ClassDiagram.Attribut>> Commande.idcmd:int =>=>=> RelationalSchema.Column>> commande.idcmd PRIMARY KEY;
ClassDiagram.Attribut>> Commande.cmd:Date =>=>=> RelationalSchema.Column>> commande.cmd;
ClassDiagram.Attribut>> Rayon.//proprietesidray:int =>=>=> RelationalSchema.Column>> rayon.//proprietesidray PRIMARY KEY;
ClassDiagram.Attribut>> Rayon.libelleray:String =>=>=> RelationalSchema.Column>> rayon.libelleray;
ClassDiagram.Attribut>> Fournir.codef:FournirId =>=>=> RelationalSchema.Column>> fournir.codef;
ClassDiagram.Attribut>> Fournir.qtefp:int =>=>=> RelationalSchema.Column>> fournir.qtefp;
ClassDiagram.Attribut>> Fournir.f:Date =>=>=> RelationalSchema.Column>> fournir.f;
ClassDiagram.Attribut>> Stocker.//proprietes:StockerId =>=>=> RelationalSchema.Column>> stocker.//proprietes;
ClassDiagram.Attribut>> Stocker.qtesp:int =>=>=> RelationalSchema.Column>> stocker.qtesp;
ClassDiagram.Attribut>> LigneCommande.ligneid:LigneCommandeId =>=>=> RelationalSchema.Column>> lignecommande.ligneid;
ClassDiagram.Attribut>> LigneCommande.qtecp:int =>=>=> RelationalSchema.Column>> lignecommande.qtecp;
One-To-Many relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>Set<Commande>;
One-To-Many relationship from ClassDiagram.Class>>Magasin  to ClassDiagram.Class>>Set<Commande>;
One-To-Many relationship from ClassDiagram.Class>>Magasin  to ClassDiagram.Class>>Map<Produit,Stocker>;
Many-To-One relationship from ClassDiagram.Class>>Categorie  to ClassDiagram.Class>>rayon represented by ClassDiagram.Atrribute>>cat;
One-To-Many relationship from ClassDiagram.Class>>Categorie  to ClassDiagram.Class>>Set<Produit>;
Many-To-One relationship from ClassDiagram.Class>>Produit  to ClassDiagram.Class>>Categorie represented by ClassDiagram.Atrribute>>p;
One-To-Many relationship from ClassDiagram.Class>>Produit  to ClassDiagram.Class>>Map<Commande,LigneCommande>;
One-To-Many relationship from ClassDiagram.Class>>Produit  to ClassDiagram.Class>>Map<Magasin,Stocker>;
One-To-Many relationship from ClassDiagram.Class>>Commande  to ClassDiagram.Class>>Map<Produit,LigneCommande>;
Many-To-One relationship from ClassDiagram.Class>>Commande  to ClassDiagram.Class>>Client represented by ClassDiagram.Atrribute>>cmd;
Many-To-One relationship from ClassDiagram.Class>>Commande  to ClassDiagram.Class>>Magasin represented by ClassDiagram.Atrribute>>cmd;
One-To-Many relationship from ClassDiagram.Class>>Rayon  to ClassDiagram.Class>>Set<Categorie>;
Many-To-One relationship from ClassDiagram.Class>>Fournir  to ClassDiagram.Class>>Produit represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>Fournir  to ClassDiagram.Class>>Magasin represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>Fournir  to ClassDiagram.Class>>Fournisseur represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>Stocker  to ClassDiagram.Class>>Produit represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>Stocker  to ClassDiagram.Class>>Magasin represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>LigneCommande  to ClassDiagram.Class>>Commande represented by ClassDiagram.Atrribute>>//relations;
Many-To-One relationship from ClassDiagram.Class>>LigneCommande  to ClassDiagram.Class>>Produit represented by ClassDiagram.Atrribute>>s;
