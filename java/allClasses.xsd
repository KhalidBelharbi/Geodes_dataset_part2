<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="test_21tableperclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_20discriminator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_23subclasstable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_22join" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_13_manytomany" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_12_mappedby" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_09_onetoonemapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_14_cascade" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_10_onetomanymapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_11_onetomanymappingreverse" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_collections" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_fetch_types" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_05_primarykeys" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_embedded" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_41_projections" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_40_criteria" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_32_namedqueries" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_30_queries" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test_31_querieswithparams" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateutils" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fourwheeler20discriminator" >
      <xs:complexContent>
       <xs:extension base="vehicle20discriminator">
         <xs:sequence>
          <xs:element name="steeringwheel" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="twowheeler20discriminator" >
      <xs:complexContent>
       <xs:extension base="vehicle20discriminator">
         <xs:sequence>
          <xs:element name="steeringhandle" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vehicle20discriminator" >
      <xs:sequence>
        <xs:element name="vehicleid" type="xs:long" />
        <xs:element name="vehiclename" type="xs:string" />
        <xs:element name="licensenumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fourwheeler23subclasstable" >
      <xs:complexContent>
       <xs:extension base="vehicle23subclasstable">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="steeringwheel" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vehicle23subclasstable" >
      <xs:sequence>
        <xs:element name="vehiclename" type="xs:string" />
        <xs:element name="licensenumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twowheeler23subclasstable" >
      <xs:complexContent>
       <xs:extension base="vehicle23subclasstable">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="steeringhandle" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fourwheeler21tableperclass" >
      <xs:complexContent>
       <xs:extension base="vehicle21tableperclass">
         <xs:sequence>
          <xs:element name="steeringwheel" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="twowheeler21tableperclass" >
      <xs:complexContent>
       <xs:extension base="vehicle21tableperclass">
         <xs:sequence>
          <xs:element name="steeringhandle" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vehicle21tableperclass" >
      <xs:sequence>
        <xs:element name="vehicleid" type="xs:long" />
        <xs:element name="vehiclename" type="xs:string" />
        <xs:element name="licensenumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicle22join" >
      <xs:sequence>
        <xs:element name="vehicleid" type="xs:long" />
        <xs:element name="vehiclename" type="xs:string" />
        <xs:element name="licensenumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twowheeler22join" >
      <xs:complexContent>
       <xs:extension base="vehicle22join">
         <xs:sequence>
          <xs:element name="//@id@generatedvalue(strategy" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fourwheeler22join" >
      <xs:complexContent>
       <xs:extension base="vehicle22join">
         <xs:sequence>
          <xs:element name="steeringwheel" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="userdetails01" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="username" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicle14cascade" >
      <xs:sequence>
        <xs:element name="vehicleid" type="xs:long" />
        <xs:element name="vehiclename" type="xs:string" />
        <xs:element name="user" type="userdetails14cascade" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetails12mappedby" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="//canbesetforgetterusername" type="xs:string" />
        <xs:element name="vehicle" type="vehicle12mappedby" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicle12mappedby" >
      <xs:sequence>
        <xs:element name="vehicleid" type="xs:long" />
        <xs:element name="vehiclename" type="xs:string" />
        <xs:element name="user" type="userdetails12mappedby" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetails14cascade" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="//canbesetforgetterusername" type="xs:string" />
        <xs:element name="vehicle" type="vehicle14cascade" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetails13manytomany" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="//canbesetforgetterusername" type="xs:string" />
        <xs:element name="vehicles" type="vehicle13manytomany" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicle13manytomany" >
      <xs:sequence>
        <xs:element name="vehicleid" type="xs:long" />
        <xs:element name="vehiclename" type="xs:string" />
        <xs:element name="users" type="userdetails13manytomany" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicle09" >
      <xs:sequence>
        <xs:element name="vehicleid" type="xs:long" />
        <xs:element name="vehiclename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetails09onetoonemapping" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="//canbesetforgetterusername" type="xs:string" />
        <xs:element name="vehicle" type="vehicle09" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicle11reversemapping" >
      <xs:sequence>
        <xs:element name="vehicleid" type="xs:long" />
        <xs:element name="vehiclename" type="xs:string" />
        <xs:element name="user" type="userdetails11onetomanymappingreverse" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetails10onetomanymapping" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="//canbesetforgetterusername" type="xs:string" />
        <xs:element name="vehicle" type="vehicle10" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicle10" >
      <xs:sequence>
        <xs:element name="vehicleid" type="xs:long" />
        <xs:element name="vehiclename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetails11onetomanymappingreverse" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="//canbesetforgetterusername" type="xs:string" />
        <xs:element name="vehicle" type="vehicle11reversemapping" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="pincode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetailsembedded" >
      <xs:complexContent>
       <xs:extension base="userdetailsbase">
         <xs:sequence>
          <xs:element name="//useidifprimarykeysisobject//id//loginnameuserid//or//@id@generatedvalue(strategy" type="address" nillable="true" minOccurs="0" />
          <xs:element name="officeaddress" type="address2" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address2" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="pincode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetailsbase" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="//canbesetforgetterusername" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetailspk" >
      <xs:complexContent>
       <xs:extension base="userdetailsbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="userdetailsannotation" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="//@basic()surename" type="xs:string" />
        <xs:element name="joined" type="xs:dateTime" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetails" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="//@basic()surename" type="xs:string" />
        <xs:element name="joined" type="xs:dateTime" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="//@lob//usecloborblobfieldindbdescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetailscriteria" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="//@basic()surename" type="xs:string" />
        <xs:element name="joined" type="xs:dateTime" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="//@lob//usecloborblobfieldindbdescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetailscollection" >
      <xs:complexContent>
       <xs:extension base="userdetailsbase">
         <xs:sequence>
          <xs:element name="//bagsemantic//bagsemanticwithid//@elementcollection//default-lazycollectionofadresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="//setsemantic//@collectionid//notsupportforset.exceptionoccurredsetofadresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="//listsemanticwithpositionlistofadresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="mapofadresses" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="userdetailsfetchtypeslazy" >
      <xs:complexContent>
       <xs:extension base="userdetailsbase">
         <xs:sequence>
          <xs:element name="//@elementcollection//default-lazycollectionofadresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="pincode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetailsfetchtypeseager" >
      <xs:complexContent>
       <xs:extension base="userdetailsbase">
         <xs:sequence>
          <xs:element name="//@elementcollection//default-lazycollectionofadresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateutils" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="total" type="xs:long" />
        <xs:element name="goal" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate.cfg" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlitetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlitedialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
</xs:schema> 