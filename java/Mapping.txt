ClassDiagram.Class>> FourWheeler20Discriminator =>=>=> RelationalSchema.Table>> fourwheeler20discriminator;
ClassDiagram.Class>> TwoWheeler20Discriminator =>=>=> RelationalSchema.Table>> twowheeler20discriminator;
ClassDiagram.Class>> Vehicle20Discriminator =>=>=> RelationalSchema.Table>> vehicle20discriminator;
ClassDiagram.Class>> FourWheeler23SubclassTable =>=>=> RelationalSchema.Table>> fourwheeler23subclasstable;
ClassDiagram.Class>> TwoWheeler23SubclassTable =>=>=> RelationalSchema.Table>> twowheeler23subclasstable;
ClassDiagram.Class>> FourWheeler21TablePerClass =>=>=> RelationalSchema.Table>> fourwheeler21tableperclass;
ClassDiagram.Class>> TwoWheeler21TablePerClass =>=>=> RelationalSchema.Table>> twowheeler21tableperclass;
ClassDiagram.Class>> Vehicle21TablePerClass =>=>=> RelationalSchema.Table>> vehicle21tableperclass;
ClassDiagram.Class>> Vehicle22Join =>=>=> RelationalSchema.Table>> vehicle22join;
ClassDiagram.Class>> TwoWheeler22Join =>=>=> RelationalSchema.Table>> twowheeler22join;
ClassDiagram.Class>> FourWheeler22Join =>=>=> RelationalSchema.Table>> fourwheeler22join;
ClassDiagram.Class>> UserDetails01 =>=>=> RelationalSchema.Table>> userdetails01;
ClassDiagram.Class>> Vehicle14Cascade =>=>=> RelationalSchema.Table>> vehicle14cascade;
ClassDiagram.Class>> UserDetails12MappedBy =>=>=> RelationalSchema.Table>> userdetails12mappedby;
ClassDiagram.Class>> Vehicle12MappedBy =>=>=> RelationalSchema.Table>> vehicle12mappedby;
ClassDiagram.Class>> UserDetails14Cascade =>=>=> RelationalSchema.Table>> userdetails14cascade;
ClassDiagram.Class>> UserDetails13ManyToMany =>=>=> RelationalSchema.Table>> userdetails13manytomany;
ClassDiagram.Class>> Vehicle13ManyToMany =>=>=> RelationalSchema.Table>> vehicle13manytomany;
ClassDiagram.Class>> Vehicle09 =>=>=> RelationalSchema.Table>> vehicle09;
ClassDiagram.Class>> UserDetails09OneToOneMapping =>=>=> RelationalSchema.Table>> userdetails09onetoonemapping;
ClassDiagram.Class>> Vehicle11ReverseMapping =>=>=> RelationalSchema.Table>> vehicle11reversemapping;
ClassDiagram.Class>> UserDetails10OneToManyMapping =>=>=> RelationalSchema.Table>> userdetails10onetomanymapping;
ClassDiagram.Class>> Vehicle10 =>=>=> RelationalSchema.Table>> vehicle10;
ClassDiagram.Class>> UserDetails11OneToManyMappingReverse =>=>=> RelationalSchema.Table>> userdetails11onetomanymappingreverse;
ClassDiagram.Class>> UserDetailsEmbedded =>=>=> RelationalSchema.Table>> userdetailsembedded;
ClassDiagram.Class>> UserDetailsPK =>=>=> RelationalSchema.Table>> userdetailspk;
ClassDiagram.Class>> UserDetailsAnnotation =>=>=> RelationalSchema.Table>> userdetailsannotation;
ClassDiagram.Class>> UserDetails =>=>=> RelationalSchema.Table>> userdetails;
ClassDiagram.Class>> UserDetailsCriteria =>=>=> RelationalSchema.Table>> userdetailscriteria;
ClassDiagram.Class>> UserDetailsCollection =>=>=> RelationalSchema.Table>> userdetailscollection;
ClassDiagram.Class>> UserDetailsFetchTypesLazy =>=>=> RelationalSchema.Table>> userdetailsfetchtypeslazy;
ClassDiagram.Class>> UserDetailsFetchTypesEager =>=>=> RelationalSchema.Table>> userdetailsfetchtypeseager;
ClassDiagram.Attribut>> FourWheeler20Discriminator.steeringwheel:String =>=>=> RelationalSchema.Column>> fourwheeler20discriminator.steeringwheel;
ClassDiagram.Attribut>> TwoWheeler20Discriminator.steeringhandle:String =>=>=> RelationalSchema.Column>> twowheeler20discriminator.steeringhandle;
ClassDiagram.Attribut>> Vehicle20Discriminator.vehicleid:int =>=>=> RelationalSchema.Column>> vehicle20discriminator.vehicleid PRIMARY KEY;
ClassDiagram.Attribut>> Vehicle20Discriminator.vehiclename:String =>=>=> RelationalSchema.Column>> vehicle20discriminator.vehiclename;
ClassDiagram.Attribut>> Vehicle20Discriminator.licensenumber:String =>=>=> RelationalSchema.Column>> vehicle20discriminator.licensenumber;
ClassDiagram.Attribut>> FourWheeler23SubclassTable.id:int =>=>=> RelationalSchema.Column>> fourwheeler23subclasstable.id PRIMARY KEY;
ClassDiagram.Attribut>> FourWheeler23SubclassTable.steeringwheel:String =>=>=> RelationalSchema.Column>> fourwheeler23subclasstable.steeringwheel;
ClassDiagram.Attribut>> TwoWheeler23SubclassTable.id:int =>=>=> RelationalSchema.Column>> twowheeler23subclasstable.id PRIMARY KEY;
ClassDiagram.Attribut>> TwoWheeler23SubclassTable.steeringhandle:String =>=>=> RelationalSchema.Column>> twowheeler23subclasstable.steeringhandle;
ClassDiagram.Attribut>> FourWheeler21TablePerClass.steeringwheel:String =>=>=> RelationalSchema.Column>> fourwheeler21tableperclass.steeringwheel;
ClassDiagram.Attribut>> TwoWheeler21TablePerClass.steeringhandle:String =>=>=> RelationalSchema.Column>> twowheeler21tableperclass.steeringhandle;
ClassDiagram.Attribut>> Vehicle21TablePerClass.vehicleid:int =>=>=> RelationalSchema.Column>> vehicle21tableperclass.vehicleid PRIMARY KEY;
ClassDiagram.Attribut>> Vehicle21TablePerClass.vehiclename:String =>=>=> RelationalSchema.Column>> vehicle21tableperclass.vehiclename;
ClassDiagram.Attribut>> Vehicle21TablePerClass.licensenumber:String =>=>=> RelationalSchema.Column>> vehicle21tableperclass.licensenumber;
ClassDiagram.Attribut>> Vehicle22Join.vehicleid:int =>=>=> RelationalSchema.Column>> vehicle22join.vehicleid PRIMARY KEY;
ClassDiagram.Attribut>> Vehicle22Join.vehiclename:String =>=>=> RelationalSchema.Column>> vehicle22join.vehiclename;
ClassDiagram.Attribut>> Vehicle22Join.licensenumber:String =>=>=> RelationalSchema.Column>> vehicle22join.licensenumber;
ClassDiagram.Attribut>> TwoWheeler22Join.//@id@generatedvalue(strategy:String =>=>=> RelationalSchema.Column>> twowheeler22join.//@id@generatedvalue(strategy;
ClassDiagram.Attribut>> FourWheeler22Join.steeringwheel:String =>=>=> RelationalSchema.Column>> fourwheeler22join.steeringwheel;
ClassDiagram.Attribut>> UserDetails01.userid:int =>=>=> RelationalSchema.Column>> userdetails01.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserDetails01.username:String =>=>=> RelationalSchema.Column>> userdetails01.username;
ClassDiagram.Attribut>> Vehicle14Cascade.vehicleid:int =>=>=> RelationalSchema.Column>> vehicle14cascade.vehicleid PRIMARY KEY;
ClassDiagram.Attribut>> Vehicle14Cascade.vehiclename:String =>=>=> RelationalSchema.Column>> vehicle14cascade.vehiclename;
ClassDiagram.Attribut>> UserDetails12MappedBy.userid:int =>=>=> RelationalSchema.Column>> userdetails12mappedby.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserDetails12MappedBy.//canbesetforgetterusername:String =>=>=> RelationalSchema.Column>> userdetails12mappedby.//canbesetforgetterusername;
ClassDiagram.Attribut>> Vehicle12MappedBy.vehicleid:int =>=>=> RelationalSchema.Column>> vehicle12mappedby.vehicleid PRIMARY KEY;
ClassDiagram.Attribut>> Vehicle12MappedBy.vehiclename:String =>=>=> RelationalSchema.Column>> vehicle12mappedby.vehiclename;
ClassDiagram.Attribut>> UserDetails14Cascade.userid:int =>=>=> RelationalSchema.Column>> userdetails14cascade.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserDetails14Cascade.//canbesetforgetterusername:String =>=>=> RelationalSchema.Column>> userdetails14cascade.//canbesetforgetterusername;
ClassDiagram.Attribut>> UserDetails13ManyToMany.userid:int =>=>=> RelationalSchema.Column>> userdetails13manytomany.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserDetails13ManyToMany.//canbesetforgetterusername:String =>=>=> RelationalSchema.Column>> userdetails13manytomany.//canbesetforgetterusername;
ClassDiagram.Attribut>> Vehicle13ManyToMany.vehicleid:int =>=>=> RelationalSchema.Column>> vehicle13manytomany.vehicleid PRIMARY KEY;
ClassDiagram.Attribut>> Vehicle13ManyToMany.vehiclename:String =>=>=> RelationalSchema.Column>> vehicle13manytomany.vehiclename;
ClassDiagram.Attribut>> Vehicle09.vehicleid:int =>=>=> RelationalSchema.Column>> vehicle09.vehicleid PRIMARY KEY;
ClassDiagram.Attribut>> Vehicle09.vehiclename:String =>=>=> RelationalSchema.Column>> vehicle09.vehiclename;
ClassDiagram.Attribut>> UserDetails09OneToOneMapping.userid:int =>=>=> RelationalSchema.Column>> userdetails09onetoonemapping.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserDetails09OneToOneMapping.//canbesetforgetterusername:String =>=>=> RelationalSchema.Column>> userdetails09onetoonemapping.//canbesetforgetterusername;
ClassDiagram.Attribut>> Vehicle11ReverseMapping.vehicleid:int =>=>=> RelationalSchema.Column>> vehicle11reversemapping.vehicleid PRIMARY KEY;
ClassDiagram.Attribut>> Vehicle11ReverseMapping.vehiclename:String =>=>=> RelationalSchema.Column>> vehicle11reversemapping.vehiclename;
ClassDiagram.Attribut>> UserDetails10OneToManyMapping.userid:int =>=>=> RelationalSchema.Column>> userdetails10onetomanymapping.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserDetails10OneToManyMapping.//canbesetforgetterusername:String =>=>=> RelationalSchema.Column>> userdetails10onetomanymapping.//canbesetforgetterusername;
ClassDiagram.Attribut>> Vehicle10.vehicleid:int =>=>=> RelationalSchema.Column>> vehicle10.vehicleid PRIMARY KEY;
ClassDiagram.Attribut>> Vehicle10.vehiclename:String =>=>=> RelationalSchema.Column>> vehicle10.vehiclename;
ClassDiagram.Attribut>> UserDetails11OneToManyMappingReverse.userid:int =>=>=> RelationalSchema.Column>> userdetails11onetomanymappingreverse.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserDetails11OneToManyMappingReverse.//canbesetforgetterusername:String =>=>=> RelationalSchema.Column>> userdetails11onetomanymappingreverse.//canbesetforgetterusername;
ClassDiagram.Attribut>> UserDetailsEmbedded.//useidifprimarykeysisobject//id//loginnameuserid//or//@id@generatedvalue(strategy:Address =>=>=> RelationalSchema.Column>> userdetailsembedded.//useidifprimarykeysisobject//id//loginnameuserid//or//@id@generatedvalue(strategy;
ClassDiagram.Attribut>> UserDetailsEmbedded.officeaddress:Address2 =>=>=> RelationalSchema.Column>> userdetailsembedded.officeaddress;
ClassDiagram.Attribut>> UserDetailsAnnotation.userid:int =>=>=> RelationalSchema.Column>> userdetailsannotation.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserDetailsAnnotation.username:String =>=>=> RelationalSchema.Column>> userdetailsannotation.username;
ClassDiagram.Attribut>> UserDetailsAnnotation.//@basic()surename:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> UserDetailsAnnotation.joined:Date =>=>=> RelationalSchema.Column>> userdetailsannotation.joined;
ClassDiagram.Attribut>> UserDetailsAnnotation.address:String =>=>=> RelationalSchema.Column>> userdetailsannotation.address;
ClassDiagram.Attribut>> UserDetailsAnnotation.description:String =>=>=> RelationalSchema.Column>> userdetailsannotation.description;
ClassDiagram.Attribut>> UserDetails.userid:int =>=>=> RelationalSchema.Column>> userdetails.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserDetails.username:String =>=>=> RelationalSchema.Column>> userdetails.username;
ClassDiagram.Attribut>> UserDetails.//@basic()surename:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> UserDetails.joined:Date =>=>=> RelationalSchema.Column>> userdetails.joined;
ClassDiagram.Attribut>> UserDetails.address:String =>=>=> RelationalSchema.Column>> userdetails.address;
ClassDiagram.Attribut>> UserDetails.//@lob//usecloborblobfieldindbdescription:String =>=>=> RelationalSchema.Column>> userdetails.//@lob//usecloborblobfieldindbdescription;
ClassDiagram.Attribut>> UserDetailsCriteria.userid:int =>=>=> RelationalSchema.Column>> userdetailscriteria.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserDetailsCriteria.username:String =>=>=> RelationalSchema.Column>> userdetailscriteria.username;
ClassDiagram.Attribut>> UserDetailsCriteria.//@basic()surename:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> UserDetailsCriteria.joined:Date =>=>=> RelationalSchema.Column>> userdetailscriteria.joined;
ClassDiagram.Attribut>> UserDetailsCriteria.address:String =>=>=> RelationalSchema.Column>> userdetailscriteria.address;
ClassDiagram.Attribut>> UserDetailsCriteria.//@lob//usecloborblobfieldindbdescription:String =>=>=> RelationalSchema.Column>> userdetailscriteria.//@lob//usecloborblobfieldindbdescription;
ClassDiagram.Attribut>> UserDetailsCollection.//bagsemantic//bagsemanticwithid//@elementcollection//default-lazycollectionofadresses:Collection<Address> =>=>=> RelationalSchema.Column>> userdetailscollection.//bagsemantic//bagsemanticwithid//@elementcollection//default-lazycollectionofadresses;
ClassDiagram.Attribut>> UserDetailsCollection.//setsemantic//@collectionid//notsupportforset.exceptionoccurredsetofadresses:Set<Address> =>=>=> RelationalSchema.Column>> userdetailscollection.//setsemantic//@collectionid//notsupportforset.exceptionoccurredsetofadresses;
ClassDiagram.Attribut>> UserDetailsCollection.//listsemanticwithpositionlistofadresses:List<Address> =>=>=> RelationalSchema.Column>> userdetailscollection.//listsemanticwithpositionlistofadresses;
ClassDiagram.Attribut>> UserDetailsCollection.mapofadresses:Map<Integer,Address> =>=>=> RelationalSchema.Column>> userdetailscollection.mapofadresses;
ClassDiagram.Attribut>> UserDetailsFetchTypesLazy.//@elementcollection//default-lazycollectionofadresses:Collection<Address> =>=>=> RelationalSchema.Column>> userdetailsfetchtypeslazy.//@elementcollection//default-lazycollectionofadresses;
ClassDiagram.Attribut>> UserDetailsFetchTypesEager.//@elementcollection//default-lazycollectionofadresses:Collection<Address> =>=>=> RelationalSchema.Column>> userdetailsfetchtypeseager.//@elementcollection//default-lazycollectionofadresses;
Many-To-One relationship from ClassDiagram.Class>>Vehicle14Cascade  to ClassDiagram.Class>>userdetails14cascade represented by ClassDiagram.Atrribute>>user;
One-To-Many relationship from ClassDiagram.Class>>UserDetails12MappedBy  to ClassDiagram.Class>>Collection<Vehicle12MappedBy>;
Many-To-One relationship from ClassDiagram.Class>>Vehicle12MappedBy  to ClassDiagram.Class>>userdetails12mappedby represented by ClassDiagram.Atrribute>>user;
One-To-Many relationship from ClassDiagram.Class>>UserDetails14Cascade  to ClassDiagram.Class>>Collection<Vehicle14Cascade>;
collection<vehicle13manytomany>: userdetails13manytomany_collection<vehicle13manytomany>(userdetails13manytomanyID:userdetails13manytomany [PK] #FK to userdetails13manytomany,collection<vehicle13manytomany>ID:collection<vehicle13manytomany> [PK] #FK to collection<vehicle13manytomany>);
One-To-One relationship between ClassDiagram.Class>>UserDetails09OneToOneMapping  to ClassDiagram.Class>>vehicle09 represented by ClassDiagram.Atrribute>>vehicle;
Many-To-One relationship from ClassDiagram.Class>>Vehicle11ReverseMapping  to ClassDiagram.Class>>userdetails11onetomanymappingreverse represented by ClassDiagram.Atrribute>>user;
One-To-Many relationship from ClassDiagram.Class>>UserDetails10OneToManyMapping  to ClassDiagram.Class>>Collection<Vehicle10>;
One-To-Many relationship from ClassDiagram.Class>>UserDetails11OneToManyMappingReverse  to ClassDiagram.Class>>Collection<Vehicle11ReverseMapping>;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Vehicle20Discriminator   Descriminator>>VEHICLE_TYPE: String ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Vehicle21TablePerClass  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Vehicle22Join  ;
