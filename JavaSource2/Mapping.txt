ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Config =>=>=> RelationalSchema.Table>> config;
ClassDiagram.Class>> BaseEntity =>=>=> RelationalSchema.Table>> baseentity;
ClassDiagram.Attribut>> Role./***角色名称*/name:String =>=>=> RelationalSchema.Column>> role./***角色名称*/name;
ClassDiagram.Attribut>> Role./***角色描述*/comment:String =>=>=> RelationalSchema.Column>> role./***角色描述*/comment;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.nick:String =>=>=> RelationalSchema.Column>> user.nick;
ClassDiagram.Attribut>> User./***加密的盐*/salt:String =>=>=> RelationalSchema.Column>> user./***加密的盐*/salt;
ClassDiagram.Attribut>> User./***密码*fixme注意任何时候不能返回到前台，必要时候安全相关字段放另外一个表*/password:String =>=>=> RelationalSchema.Column>> user./***密码*fixme注意任何时候不能返回到前台，必要时候安全相关字段放另外一个表*/password;
ClassDiagram.Attribut>> Config.serialversionuid:long =>=>=> RelationalSchema.Column>> config.serialversionuid;
ClassDiagram.Attribut>> Config.name,description,value:String =>=>=> RelationalSchema.Column>> config.name,description,value;
ClassDiagram.Attribut>> BaseEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> baseentity.serialversionuid;
ClassDiagram.Attribut>> BaseEntity.id:long =>=>=> RelationalSchema.Column>> baseentity.id PRIMARY KEY;
ClassDiagram.Attribut>> BaseEntity.createtime:Date =>=>=> RelationalSchema.Column>> baseentity.createtime;
ClassDiagram.Attribut>> BaseEntity.uptime:Date =>=>=> RelationalSchema.Column>> baseentity.uptime;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>list<role>: link_user_role(user_id:User [PK] #FK to User,role_id:list<role> [PK] #FK to list<role>);
Many-To-One relationship from ClassDiagram.Class>>Config  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>/***创建者*/creator;
