ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> Reviewer =>=>=> RelationalSchema.Table>> reviewer;
ClassDiagram.Class>> Publisher =>=>=> RelationalSchema.Table>> publisher;
ClassDiagram.Attribut>> Book.id:Long =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.isbn:String =>=>=> RelationalSchema.Column>> book.isbn;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> Book.description:String =>=>=> RelationalSchema.Column>> book.description;
ClassDiagram.Attribut>> Author.id:Long =>=>=> RelationalSchema.Column>> author.id PRIMARY KEY;
ClassDiagram.Attribut>> Author.firstname:String =>=>=> RelationalSchema.Column>> author.firstname;
ClassDiagram.Attribut>> Author.lastname:String =>=>=> RelationalSchema.Column>> author.lastname;
ClassDiagram.Attribut>> Reviewer.id:Long =>=>=> RelationalSchema.Column>> reviewer.id PRIMARY KEY;
ClassDiagram.Attribut>> Reviewer.firstname:String =>=>=> RelationalSchema.Column>> reviewer.firstname;
ClassDiagram.Attribut>> Reviewer.lastname:String =>=>=> RelationalSchema.Column>> reviewer.lastname;
ClassDiagram.Attribut>> Publisher.id:Long =>=>=> RelationalSchema.Column>> publisher.id PRIMARY KEY;
ClassDiagram.Attribut>> Publisher.name:String =>=>=> RelationalSchema.Column>> publisher.name;
Many-To-One relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>author represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>publisher represented by ClassDiagram.Atrribute>>GeneratedName;
list<reviewer>: book_list<reviewer>(bookID:book [PK] #FK to book,list<reviewer>ID:list<reviewer> [PK] #FK to list<reviewer>);
One-To-Many relationship from ClassDiagram.Class>>Author  to ClassDiagram.Class>>List<Book>;
