ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Booking =>=>=> RelationalSchema.Table>> booking;
ClassDiagram.Attribut>> Person.idperson:int =>=>=> RelationalSchema.Column>> person.idperson PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.surname:String =>=>=> RelationalSchema.Column>> person.surname;
ClassDiagram.Attribut>> Booking.idbooking:int =>=>=> RelationalSchema.Column>> booking.idbooking PRIMARY KEY;
ClassDiagram.Attribut>> Booking.bookingnumber:String =>=>=> RelationalSchema.Column>> booking.bookingnumber;
ClassDiagram.Attribut>> Booking.booking:Date =>=>=> RelationalSchema.Column>> booking.booking;
ClassDiagram.Attribut>> Booking.movie:String =>=>=> RelationalSchema.Column>> booking.movie;
ClassDiagram.Attribut>> Booking.place:int =>=>=> RelationalSchema.Column>> booking.place;
ClassDiagram.Attribut>> Booking.price:double =>=>=> RelationalSchema.Column>> booking.price;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>List<Booking>;
Many-To-One relationship from ClassDiagram.Class>>Booking  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>client;
