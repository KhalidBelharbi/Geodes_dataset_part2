ClassDiagram.Class>> ApplicationData =>=>=> RelationalSchema.Table>> applicationdata;
ClassDiagram.Class>> ReportInterval =>=>=> RelationalSchema.Table>> reportinterval;
ClassDiagram.Class>> Application =>=>=> RelationalSchema.Table>> application;
ClassDiagram.Class>> ReportTemplate =>=>=> RelationalSchema.Table>> reporttemplate;
ClassDiagram.Class>> OperatingSystem =>=>=> RelationalSchema.Table>> operatingsystem;
ClassDiagram.Class>> ReportPeriod =>=>=> RelationalSchema.Table>> reportperiod;
ClassDiagram.Class>> State =>=>=> RelationalSchema.Table>> state;
ClassDiagram.Class>> ServerReport =>=>=> RelationalSchema.Table>> serverreport;
ClassDiagram.Class>> ServerType =>=>=> RelationalSchema.Table>> servertype;
ClassDiagram.Class>> Token =>=>=> RelationalSchema.Table>> token;
ClassDiagram.Class>> Organisation =>=>=> RelationalSchema.Table>> organisation;
ClassDiagram.Class>> TechnicalApplication =>=>=> RelationalSchema.Table>> technicalapplication;
ClassDiagram.Class>> Server =>=>=> RelationalSchema.Table>> server;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Tape =>=>=> RelationalSchema.Table>> tape;
ClassDiagram.Class>> Assignment =>=>=> RelationalSchema.Table>> assignment;
ClassDiagram.Class>> ImportProgressLog =>=>=> RelationalSchema.Table>> importprogresslog;
ClassDiagram.Class>> ReportReportingPeriod =>=>=> RelationalSchema.Table>> reportreportingperiod;
ClassDiagram.Class>> Platform =>=>=> RelationalSchema.Table>> platform;
ClassDiagram.Class>> AutomaticExecutionLog =>=>=> RelationalSchema.Table>> automaticexecutionlog;
ClassDiagram.Class>> GroupRole =>=>=> RelationalSchema.Table>> grouprole;
ClassDiagram.Class>> BusinessAssignment =>=>=> RelationalSchema.Table>> businessassignment;
ClassDiagram.Class>> Environment =>=>=> RelationalSchema.Table>> environment;
ClassDiagram.Class>> ManualExecutionLog =>=>=> RelationalSchema.Table>> manualexecutionlog;
ClassDiagram.Class>> ReportGenerationInterval =>=>=> RelationalSchema.Table>> reportgenerationinterval;
ClassDiagram.Attribut>> ApplicationData.id:int =>=>=> RelationalSchema.Column>> applicationdata.id PRIMARY KEY;
ClassDiagram.Attribut>> ApplicationData.application:String =>=>=> RelationalSchema.Column>> applicationdata.application;
ClassDiagram.Attribut>> Application.organisationid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Application.assignmentid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Application.businessassignmentid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ServerReport.GeneratedName:Logger =>=>=> RelationalSchema.Column>> serverreport.GeneratedName;
ClassDiagram.Attribut>> ServerReport.server_report_interval_daily:String =>=>=> RelationalSchema.Column>> serverreport.server_report_interval_daily;
ClassDiagram.Attribut>> ServerReport.server_report_interval_weekly:String =>=>=> RelationalSchema.Column>> serverreport.server_report_interval_weekly;
ClassDiagram.Attribut>> ServerReport.server_report_run_until_date:String =>=>=> RelationalSchema.Column>> serverreport.server_report_run_until_date;
ClassDiagram.Attribut>> ServerReport.applicationids:List<Integer> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ServerReport.//:java.util.Date =>=>=> RelationalSchema.Column>> serverreport.//;
ClassDiagram.Attribut>> ServerReport.suspended:boolean =>=>=> RelationalSchema.Column>> serverreport.suspended;
ClassDiagram.Attribut>> ServerReport.lastrundate:java.util.Date =>=>=> RelationalSchema.Column>> serverreport.lastrundate;
ClassDiagram.Attribut>> ServerReport.lastrunfeedback:String =>=>=> RelationalSchema.Column>> serverreport.lastrunfeedback;
ClassDiagram.Attribut>> ServerReport.reportgenerationervalid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ServerReport.reportgenerationdayid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ServerReport.reportreportingperiodid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ServerReport.reportervalid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ServerReport.reportperiodid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ServerReport.reporttemplateid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ServerReport.createdby:String =>=>=> RelationalSchema.Column>> serverreport.createdby;
ClassDiagram.Attribut>> ServerReport.updatedby:String =>=>=> RelationalSchema.Column>> serverreport.updatedby;
ClassDiagram.Attribut>> ServerReport.servername:String =>=>=> RelationalSchema.Column>> serverreport.servername;
ClassDiagram.Attribut>> ServerReport.email:String =>=>=> RelationalSchema.Column>> serverreport.email;
ClassDiagram.Attribut>> ServerReport.serverdescription:String =>=>=> RelationalSchema.Column>> serverreport.serverdescription;
ClassDiagram.Attribut>> ServerReport.excludedserversids:List<Integer> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Token.token:String =>=>=> RelationalSchema.Column>> token.token;
ClassDiagram.Attribut>> Token.username:String =>=>=> RelationalSchema.Column>> token.username;
ClassDiagram.Attribut>> Token.fullname:String =>=>=> RelationalSchema.Column>> token.fullname;
ClassDiagram.Attribut>> Token.commaseparatedroles:String =>=>=> RelationalSchema.Column>> token.commaseparatedroles;
ClassDiagram.Attribut>> Token.updatedate:java.util.Date =>=>=> RelationalSchema.Column>> token.updatedate;
ClassDiagram.Attribut>> Token.organisationid:int =>=>=> RelationalSchema.Column>> token.organisationid;
ClassDiagram.Attribut>> Token.roles:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Organisation.used:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Organisation.referrersinfos:List<ReferrersInfo> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Organisation.servers:List<Server> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Organisation.domain:String =>=>=> RelationalSchema.Column>> organisation.domain;
ClassDiagram.Attribut>> Organisation.providerurl:String =>=>=> RelationalSchema.Column>> organisation.providerurl;
ClassDiagram.Attribut>> TechnicalApplication.contactperson:String =>=>=> RelationalSchema.Column>> technicalapplication.contactperson;
ClassDiagram.Attribut>> Server.excluded:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Server.applicationid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Server.applicationname:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.GeneratedName:Logger =>=>=> RelationalSchema.Column>> user.GeneratedName;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.fullname:String =>=>=> RelationalSchema.Column>> user.fullname;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.organisation:String =>=>=> RelationalSchema.Column>> user.organisation;
ClassDiagram.Attribut>> User.commaseparatedroles:String =>=>=> RelationalSchema.Column>> user.commaseparatedroles;
ClassDiagram.Attribut>> User.roles:Collection<UserRole> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Assignment.organisationid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Assignment.contactperson:String =>=>=> RelationalSchema.Column>> assignment.contactperson;
ClassDiagram.Attribut>> ImportProgressLog.id:int =>=>=> RelationalSchema.Column>> importprogresslog.id PRIMARY KEY;
ClassDiagram.Attribut>> ImportProgressLog.executor:String =>=>=> RelationalSchema.Column>> importprogresslog.executor;
ClassDiagram.Attribut>> ImportProgressLog.file:String =>=>=> RelationalSchema.Column>> importprogresslog.file;
ClassDiagram.Attribut>> ImportProgressLog.start:Date =>=>=> RelationalSchema.Column>> importprogresslog.start;
ClassDiagram.Attribut>> ImportProgressLog.finish:Date =>=>=> RelationalSchema.Column>> importprogresslog.finish;
ClassDiagram.Attribut>> ImportProgressLog.status:ImportState =>=>=> RelationalSchema.Column>> importprogresslog.status;
ClassDiagram.Attribut>> ImportProgressLog.message:String =>=>=> RelationalSchema.Column>> importprogresslog.message;
ClassDiagram.Attribut>> ImportProgressLog.hangingtoolong:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> AutomaticExecutionLog.id:int =>=>=> RelationalSchema.Column>> automaticexecutionlog.id PRIMARY KEY;
ClassDiagram.Attribut>> AutomaticExecutionLog.user:String =>=>=> RelationalSchema.Column>> automaticexecutionlog.user;
ClassDiagram.Attribut>> AutomaticExecutionLog.organisation:String =>=>=> RelationalSchema.Column>> automaticexecutionlog.organisation;
ClassDiagram.Attribut>> AutomaticExecutionLog.report:String =>=>=> RelationalSchema.Column>> automaticexecutionlog.report;
ClassDiagram.Attribut>> AutomaticExecutionLog.GeneratedName:Date =>=>=> RelationalSchema.Column>> automaticexecutionlog.GeneratedName;
ClassDiagram.Attribut>> GroupRole.id:int =>=>=> RelationalSchema.Column>> grouprole.id PRIMARY KEY;
ClassDiagram.Attribut>> GroupRole.name:String =>=>=> RelationalSchema.Column>> grouprole.name;
ClassDiagram.Attribut>> GroupRole.admin:boolean =>=>=> RelationalSchema.Column>> grouprole.admin;
ClassDiagram.Attribut>> GroupRole.importer:boolean =>=>=> RelationalSchema.Column>> grouprole.importer;
ClassDiagram.Attribut>> GroupRole.reportsetup:boolean =>=>=> RelationalSchema.Column>> grouprole.reportsetup;
ClassDiagram.Attribut>> BusinessAssignment.organisationid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Environment.organisationid:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ManualExecutionLog.id:int =>=>=> RelationalSchema.Column>> manualexecutionlog.id PRIMARY KEY;
ClassDiagram.Attribut>> ManualExecutionLog.user:String =>=>=> RelationalSchema.Column>> manualexecutionlog.user;
ClassDiagram.Attribut>> ManualExecutionLog.organisation:String =>=>=> RelationalSchema.Column>> manualexecutionlog.organisation;
ClassDiagram.Attribut>> ManualExecutionLog.report:String =>=>=> RelationalSchema.Column>> manualexecutionlog.report;
ClassDiagram.Attribut>> ManualExecutionLog.GeneratedName:Date =>=>=> RelationalSchema.Column>> manualexecutionlog.GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Application  to ClassDiagram.Class>>organisation represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Application  to ClassDiagram.Class>>assignment represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Application  to ClassDiagram.Class>>businessassignment represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>OperatingSystem  to ClassDiagram.Class>>List<Server>;
One-To-Many relationship from ClassDiagram.Class>>State  to ClassDiagram.Class>>List<Server>;
Many-To-Many relationship between ClassDiagram.Class>>ServerReport  and ClassDiagram.Class>>application: sur_server_report_to_application(fk_server_report_id:ServerReport [PK] #FK to ServerReport,fk_application_id:application [PK] #FK to application);
Many-To-One relationship from ClassDiagram.Class>>ServerReport  to ClassDiagram.Class>>reportgenerationinterval represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ServerReport  to ClassDiagram.Class>>reportreportingperiod represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ServerReport  to ClassDiagram.Class>>reportinterval represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ServerReport  to ClassDiagram.Class>>reportperiod represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ServerReport  to ClassDiagram.Class>>reporttemplate represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>ServerReport  and ClassDiagram.Class>>list<server>: sur_server_report_to_application(fk_server_report_id:ServerReport [PK] #FK to ServerReport,fk_application_id:application [PK] #FK to application);sur_server_removed_from_server_report(fk_server_report_id:ServerReport [PK] #FK to ServerReport,fk_server_id:list<server> [PK] #FK to list<server>);
One-To-Many relationship from ClassDiagram.Class>>ServerType  to ClassDiagram.Class>>List<Server>;
One-To-Many relationship from ClassDiagram.Class>>Organisation  to ClassDiagram.Class>>List<Server>;
One-To-Many relationship from ClassDiagram.Class>>Organisation  to ClassDiagram.Class>>List<Application>;
One-To-Many relationship from ClassDiagram.Class>>Organisation  to ClassDiagram.Class>>List<Environment>;
One-To-Many relationship from ClassDiagram.Class>>TechnicalApplication  to ClassDiagram.Class>>List<Server>;
Many-To-One relationship from ClassDiagram.Class>>Server  to ClassDiagram.Class>>application represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Tape  to ClassDiagram.Class>>organisation represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Tape  to ClassDiagram.Class>>environment represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Tape  to ClassDiagram.Class>>application represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Assignment  to ClassDiagram.Class>>organisation represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Platform  to ClassDiagram.Class>>List<Server>;
Many-To-One relationship from ClassDiagram.Class>>BusinessAssignment  to ClassDiagram.Class>>organisation represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Environment  to ClassDiagram.Class>>List<Server>;
Many-To-One relationship from ClassDiagram.Class>>Environment  to ClassDiagram.Class>>organisation represented by ClassDiagram.Atrribute>>GeneratedName;
