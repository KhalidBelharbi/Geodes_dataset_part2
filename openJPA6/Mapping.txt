ClassDiagram.Class>> Place =>=>=> RelationalSchema.Table>> place;
ClassDiagram.Class>> AllFieldTypes =>=>=> RelationalSchema.Table>> allfieldtypes;
ClassDiagram.Attribut>> Place.serialversionuid:long =>=>=> RelationalSchema.Column>> place.serialversionuid;
ClassDiagram.Attribut>> Place.location:String =>=>=> RelationalSchema.Column>> place.location PRIMARY KEY;
ClassDiagram.Attribut>> AllFieldTypes.serialversionuid:long =>=>=> RelationalSchema.Column>> allfieldtypes.serialversionuid;
ClassDiagram.Attribut>> AllFieldTypes.//@basictypesfield:short =>=>=> RelationalSchema.Column>> allfieldtypes.//@basictypesfield;
ClassDiagram.Attribut>> AllFieldTypes.field:int =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:boolean =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:long =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:float =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:char =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:double =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:byte =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Short =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Integer =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Boolean =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Long =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Float =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Character =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Double =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.wfield:Byte =>=>=> RelationalSchema.Column>> allfieldtypes.wfield;
ClassDiagram.Attribut>> AllFieldTypes.field:BigInteger =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:BigDecimal =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:String =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:Date =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.field:Calendar =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.sqldatefield:java.sql.Date =>=>=> RelationalSchema.Column>> allfieldtypes.sqldatefield;
ClassDiagram.Attribut>> AllFieldTypes.sqltimefield:java.sql.Time =>=>=> RelationalSchema.Column>> allfieldtypes.sqltimefield;
ClassDiagram.Attribut>> AllFieldTypes.sqltimestampfield:java.sql.Timestamp =>=>=> RelationalSchema.Column>> allfieldtypes.sqltimestampfield;
ClassDiagram.Attribut>> AllFieldTypes.lob:byte =>=>=> RelationalSchema.Column>> allfieldtypes.lob;
ClassDiagram.Attribut>> AllFieldTypes.wlob:Byte =>=>=> RelationalSchema.Column>> allfieldtypes.wlob;
ClassDiagram.Attribut>> AllFieldTypes.lob:char =>=>=> RelationalSchema.Column>> allfieldtypes.lob;
ClassDiagram.Attribut>> AllFieldTypes.wlob:Character =>=>=> RelationalSchema.Column>> allfieldtypes.wlob;
ClassDiagram.Attribut>> AllFieldTypes.enumfield:EnumType =>=>=> RelationalSchema.Column>> allfieldtypes.enumfield;
ClassDiagram.Attribut>> AllFieldTypes.field:Serializable =>=>=> RelationalSchema.Column>> allfieldtypes.field;
ClassDiagram.Attribut>> AllFieldTypes.//additionaltypessetofstrings:Set<String> =>=>=> RelationalSchema.Column>> allfieldtypes.//additionaltypessetofstrings;
ClassDiagram.Attribut>> AllFieldTypes.arrayofs:String =>=>=> RelationalSchema.Column>> allfieldtypes.arrayofs;
ClassDiagram.Attribut>> AllFieldTypes.arrayofs:int =>=>=> RelationalSchema.Column>> allfieldtypes.arrayofs;
One-To-One relationship between ClassDiagram.Class>>AllFieldTypes  to ClassDiagram.Class>>allfieldtypes represented by ClassDiagram.Atrribute>>//one-to-oneandone-to-manyrelationstoselfselfoneone;
One-To-Many relationship from ClassDiagram.Class>>AllFieldTypes  to ClassDiagram.Class>>List<AllFieldTypes>;
