ClassDiagram.Class>> Member =>=>=> RelationalSchema.Table>> member;
ClassDiagram.Class>> ReceiveAgree =>=>=> RelationalSchema.Table>> receiveagree;
ClassDiagram.Class>> IdParent =>=>=> RelationalSchema.Table>> idparent;
ClassDiagram.Class>> Child =>=>=> RelationalSchema.Table>> child;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Movie =>=>=> RelationalSchema.Table>> movie;
ClassDiagram.Class>> Album =>=>=> RelationalSchema.Table>> album;
ClassDiagram.Attribut>> Member.memberno:Long =>=>=> RelationalSchema.Column>> member.memberno PRIMARY KEY;
ClassDiagram.Attribut>> Member.memberid:String =>=>=> RelationalSchema.Column>> member.memberid;
ClassDiagram.Attribut>> ReceiveAgree.receiveno:Long =>=>=> RelationalSchema.Column>> receiveagree.receiveno PRIMARY KEY;
ClassDiagram.Attribut>> ReceiveAgree.receiveagreedivcd:String =>=>=> RelationalSchema.Column>> receiveagree.receiveagreedivcd;
ClassDiagram.Attribut>> ReceiveAgree.receveagreeyn:String =>=>=> RelationalSchema.Column>> receiveagree.receveagreeyn;
ClassDiagram.Attribut>> IdParent.id1:String =>=>=> RelationalSchema.Column>> idparent.id1 PRIMARY KEY;
ClassDiagram.Attribut>> IdParent.id2:String =>=>=> RelationalSchema.Column>> idparent.id2 PRIMARY KEY;
ClassDiagram.Attribut>> IdParent.name:String =>=>=> RelationalSchema.Column>> idparent.name;
ClassDiagram.Attribut>> Child.id:Long =>=>=> RelationalSchema.Column>> child.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.id:Long =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.name:String =>=>=> RelationalSchema.Column>> item.name;
ClassDiagram.Attribut>> Item.price:int =>=>=> RelationalSchema.Column>> item.price;
ClassDiagram.Attribut>> Movie.director:String =>=>=> RelationalSchema.Column>> movie.director;
ClassDiagram.Attribut>> Movie.actor:String =>=>=> RelationalSchema.Column>> movie.actor;
ClassDiagram.Attribut>> Album.artist:String =>=>=> RelationalSchema.Column>> album.artist;
One-To-Many relationship from ClassDiagram.Class>>Member  to ClassDiagram.Class>>List<ReceiveAgree>;
Many-To-One relationship from ClassDiagram.Class>>ReceiveAgree  to ClassDiagram.Class>>member represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Child  to ClassDiagram.Class>>idparent represented by ClassDiagram.Atrribute>>parent_id1;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Item   Descriminator>>dtype: String ;
