ClassDiagram.Class>> HearingPart =>=>=> RelationalSchema.Table>> hearingpart;
ClassDiagram.Class>> Room =>=>=> RelationalSchema.Table>> room;
ClassDiagram.Class>> UserTransaction =>=>=> RelationalSchema.Table>> usertransaction;
ClassDiagram.Class>> HearingType =>=>=> RelationalSchema.Table>> hearingtype;
ClassDiagram.Class>> CaseType =>=>=> RelationalSchema.Table>> casetype;
ClassDiagram.Class>> SessionType =>=>=> RelationalSchema.Table>> sessiontype;
ClassDiagram.Class>> ActivityLog =>=>=> RelationalSchema.Table>> activitylog;
ClassDiagram.Class>> Problem =>=>=> RelationalSchema.Table>> problem;
ClassDiagram.Class>> UserTransactionData =>=>=> RelationalSchema.Table>> usertransactiondata;
ClassDiagram.Class>> StatusConfig =>=>=> RelationalSchema.Table>> statusconfig;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> RoomType =>=>=> RelationalSchema.Table>> roomtype;
ClassDiagram.Class>> Hearing =>=>=> RelationalSchema.Table>> hearing;
ClassDiagram.Class>> Session =>=>=> RelationalSchema.Table>> session;
ClassDiagram.Attribut>> HearingPart.id:UUID =>=>=> RelationalSchema.Column>> hearingpart.id PRIMARY KEY;
ClassDiagram.Attribut>> HearingPart.sessionid:UUID =>=>=> RelationalSchema.Column>> hearingpart.sessionid;
ClassDiagram.Attribut>> HearingPart.isdeleted:boolean =>=>=> RelationalSchema.Column>> hearingpart.isdeleted;
ClassDiagram.Attribut>> HearingPart.createdat:OffsetDateTime =>=>=> RelationalSchema.Column>> hearingpart.createdat;
ClassDiagram.Attribut>> HearingPart.modifiedat:OffsetDateTime =>=>=> RelationalSchema.Column>> hearingpart.modifiedat;
ClassDiagram.Attribut>> HearingPart.createdby:String =>=>=> RelationalSchema.Column>> hearingpart.createdby;
ClassDiagram.Attribut>> HearingPart.modifiedby:String =>=>=> RelationalSchema.Column>> hearingpart.modifiedby;
ClassDiagram.Attribut>> HearingPart.start:OffsetDateTime =>=>=> RelationalSchema.Column>> hearingpart.start;
ClassDiagram.Attribut>> HearingPart.hearingid:UUID =>=>=> RelationalSchema.Column>> hearingpart.hearingid;
ClassDiagram.Attribut>> Room.id:UUID =>=>=> RelationalSchema.Column>> room.id PRIMARY KEY;
ClassDiagram.Attribut>> Room.name:String =>=>=> RelationalSchema.Column>> room.name;
ClassDiagram.Attribut>> UserTransaction.id:UUID =>=>=> RelationalSchema.Column>> usertransaction.id PRIMARY KEY;
ClassDiagram.Attribut>> UserTransaction.status:UserTransactionStatus =>=>=> RelationalSchema.Column>> usertransaction.status;
ClassDiagram.Attribut>> UserTransaction.rulesprocessingstatus:UserTransactionRulesProcessingStatus =>=>=> RelationalSchema.Column>> usertransaction.rulesprocessingstatus;
ClassDiagram.Attribut>> UserTransaction.startedat:OffsetDateTime =>=>=> RelationalSchema.Column>> usertransaction.startedat;
ClassDiagram.Attribut>> ActivityLog.id:UUID =>=>=> RelationalSchema.Column>> activitylog.id PRIMARY KEY;
ClassDiagram.Attribut>> ActivityLog.usertransactionid:UUID =>=>=> RelationalSchema.Column>> activitylog.usertransactionid;
ClassDiagram.Attribut>> ActivityLog.entityid:UUID =>=>=> RelationalSchema.Column>> activitylog.entityid;
ClassDiagram.Attribut>> ActivityLog.entityname:String =>=>=> RelationalSchema.Column>> activitylog.entityname;
ClassDiagram.Attribut>> ActivityLog.status:ActivityStatus =>=>=> RelationalSchema.Column>> activitylog.status;
ClassDiagram.Attribut>> ActivityLog.description:String =>=>=> RelationalSchema.Column>> activitylog.description;
ClassDiagram.Attribut>> ActivityLog.createdby:String =>=>=> RelationalSchema.Column>> activitylog.createdby;
ClassDiagram.Attribut>> ActivityLog.createdat:OffsetDateTime =>=>=> RelationalSchema.Column>> activitylog.createdat;
ClassDiagram.Attribut>> Problem.//thisismd5hash,notuuid!itistohandlethedeterministicnatureofourrulesid:String =>=>=> RelationalSchema.Column>> problem.//thisismd5hash,notuuid!itistohandlethedeterministicnatureofourrulesid PRIMARY KEY;
ClassDiagram.Attribut>> Problem.usertransactionid:UUID =>=>=> RelationalSchema.Column>> problem.usertransactionid;
ClassDiagram.Attribut>> Problem.type:String =>=>=> RelationalSchema.Column>> problem.type;
ClassDiagram.Attribut>> Problem.severity:String =>=>=> RelationalSchema.Column>> problem.severity;
ClassDiagram.Attribut>> Problem.message:String =>=>=> RelationalSchema.Column>> problem.message;
ClassDiagram.Attribut>> Problem.createdat:OffsetDateTime =>=>=> RelationalSchema.Column>> problem.createdat;
ClassDiagram.Attribut>> Problem.references:List<ProblemReference> =>=>=> RelationalSchema.Column>> problem.references;
ClassDiagram.Attribut>> UserTransactionData.id:UUID =>=>=> RelationalSchema.Column>> usertransactiondata.id PRIMARY KEY;
ClassDiagram.Attribut>> UserTransactionData.entity:String =>=>=> RelationalSchema.Column>> usertransactiondata.entity;
ClassDiagram.Attribut>> UserTransactionData.entityid:UUID =>=>=> RelationalSchema.Column>> usertransactiondata.entityid;
ClassDiagram.Attribut>> UserTransactionData.beforedata:String =>=>=> RelationalSchema.Column>> usertransactiondata.beforedata;
ClassDiagram.Attribut>> UserTransactionData.action:String =>=>=> RelationalSchema.Column>> usertransactiondata.action;
ClassDiagram.Attribut>> UserTransactionData.counteraction:String =>=>=> RelationalSchema.Column>> usertransactiondata.counteraction;
ClassDiagram.Attribut>> UserTransactionData.counteractionorder:int =>=>=> RelationalSchema.Column>> usertransactiondata.counteractionorder;
ClassDiagram.Attribut>> UserTransactionData.usertransactionid:UUID =>=>=> RelationalSchema.Column>> usertransactiondata.usertransactionid;
ClassDiagram.Attribut>> StatusConfig.GeneratedName:Status =>=>=> RelationalSchema.Column>> statusconfig.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> StatusConfig.canbelisted:boolean =>=>=> RelationalSchema.Column>> statusconfig.canbelisted;
ClassDiagram.Attribut>> StatusConfig.canbeunlisted:boolean =>=>=> RelationalSchema.Column>> statusconfig.canbeunlisted;
ClassDiagram.Attribut>> StatusConfig.countinutilization:boolean =>=>=> RelationalSchema.Column>> statusconfig.countinutilization;
ClassDiagram.Attribut>> StatusConfig.canbevacated:boolean =>=>=> RelationalSchema.Column>> statusconfig.canbevacated;
ClassDiagram.Attribut>> StatusConfig.canbeadjourned:boolean =>=>=> RelationalSchema.Column>> statusconfig.canbeadjourned;
ClassDiagram.Attribut>> StatusConfig.canbewithdrawn:boolean =>=>=> RelationalSchema.Column>> statusconfig.canbewithdrawn;
ClassDiagram.Attribut>> Person.id:UUID =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.persontype:String =>=>=> RelationalSchema.Column>> person.persontype;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.username:String =>=>=> RelationalSchema.Column>> person.username;
ClassDiagram.Attribut>> Hearing.entity_name:String =>=>=> RelationalSchema.Column>> hearing.entity_name;
ClassDiagram.Attribut>> Hearing.id:UUID =>=>=> RelationalSchema.Column>> hearing.id PRIMARY KEY;
ClassDiagram.Attribut>> Hearing.casenumber:String =>=>=> RelationalSchema.Column>> hearing.casenumber;
ClassDiagram.Attribut>> Hearing.casetitle:String =>=>=> RelationalSchema.Column>> hearing.casetitle;
ClassDiagram.Attribut>> Hearing.GeneratedName:Duration =>=>=> RelationalSchema.Column>> hearing.GeneratedName;
ClassDiagram.Attribut>> Hearing.numberofsessions:int =>=>=> RelationalSchema.Column>> hearing.numberofsessions;
ClassDiagram.Attribut>> Hearing.ismultisession:boolean =>=>=> RelationalSchema.Column>> hearing.ismultisession;
ClassDiagram.Attribut>> Hearing.schedulestart:OffsetDateTime =>=>=> RelationalSchema.Column>> hearing.schedulestart;
ClassDiagram.Attribut>> Hearing.scheduleend:OffsetDateTime =>=>=> RelationalSchema.Column>> hearing.scheduleend;
ClassDiagram.Attribut>> Hearing.communicationfacilitator:String =>=>=> RelationalSchema.Column>> hearing.communicationfacilitator;
ClassDiagram.Attribut>> Hearing.GeneratedName:Priority =>=>=> RelationalSchema.Column>> hearing.GeneratedName;
ClassDiagram.Attribut>> Hearing.isdeleted:boolean =>=>=> RelationalSchema.Column>> hearing.isdeleted;
ClassDiagram.Attribut>> Hearing.createdat:OffsetDateTime =>=>=> RelationalSchema.Column>> hearing.createdat;
ClassDiagram.Attribut>> Hearing.modifiedat:OffsetDateTime =>=>=> RelationalSchema.Column>> hearing.modifiedat;
ClassDiagram.Attribut>> Hearing.createdby:String =>=>=> RelationalSchema.Column>> hearing.createdby;
ClassDiagram.Attribut>> Hearing.modifiedby:String =>=>=> RelationalSchema.Column>> hearing.modifiedby;
ClassDiagram.Attribut>> Session.id:UUID =>=>=> RelationalSchema.Column>> session.id PRIMARY KEY;
ClassDiagram.Attribut>> Session.start:OffsetDateTime =>=>=> RelationalSchema.Column>> session.start;
ClassDiagram.Attribut>> Session.GeneratedName:Duration =>=>=> RelationalSchema.Column>> session.GeneratedName;
ClassDiagram.Attribut>> Session.createdat:OffsetDateTime =>=>=> RelationalSchema.Column>> session.createdat;
ClassDiagram.Attribut>> Session.modifiedat:OffsetDateTime =>=>=> RelationalSchema.Column>> session.modifiedat;
ClassDiagram.Attribut>> Session.createdby:String =>=>=> RelationalSchema.Column>> session.createdby;
ClassDiagram.Attribut>> Session.modifiedby:String =>=>=> RelationalSchema.Column>> session.modifiedby;
Many-To-One relationship from ClassDiagram.Class>>HearingPart  to ClassDiagram.Class>>session represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>HearingPart  to ClassDiagram.Class>>hearing represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>HearingPart  to ClassDiagram.Class>>statusconfig represented by ClassDiagram.Atrribute>>status;
One-To-Many relationship from ClassDiagram.Class>>Room  to ClassDiagram.Class>>List<Session>;
Many-To-One relationship from ClassDiagram.Class>>Room  to ClassDiagram.Class>>roomtype represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>UserTransaction  to ClassDiagram.Class>>List<UserTransactionData>;
Many-To-Many relationship between ClassDiagram.Class>>HearingType  and ClassDiagram.Class>>set<casetype>: hearing_type_case_type(hearing_type_code:HearingType [PK] #FK to HearingType,case_type_code:set<casetype> [PK] #FK to set<casetype>);
One-To-Many relationship from ClassDiagram.Class>>SessionType  to ClassDiagram.Class>>Set<Session>;
Many-To-Many relationship between ClassDiagram.Class>>SessionType  and ClassDiagram.Class>>set<casetype>: case_type_session_type(session_type_code:SessionType [PK] #FK to SessionType,case_type_code:set<casetype> [PK] #FK to set<casetype>);
Many-To-Many relationship between ClassDiagram.Class>>SessionType  and ClassDiagram.Class>>set<hearingtype>: case_type_session_type(session_type_code:SessionType [PK] #FK to SessionType,case_type_code:set<casetype> [PK] #FK to set<casetype>);hearing_type_session_type(session_type_code:SessionType [PK] #FK to SessionType,hearing_type_code:set<hearingtype> [PK] #FK to set<hearingtype>);
Many-To-One relationship from ClassDiagram.Class>>UserTransactionData  to ClassDiagram.Class>>usertransaction represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>List<Session>;
One-To-Many relationship from ClassDiagram.Class>>RoomType  to ClassDiagram.Class>>Set<Room>;
Many-To-One relationship from ClassDiagram.Class>>Hearing  to ClassDiagram.Class>>casetype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Hearing  to ClassDiagram.Class>>hearingtype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Hearing  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>reservedjudge;
One-To-Many relationship from ClassDiagram.Class>>Hearing  to ClassDiagram.Class>>List<HearingPart>;
Many-To-One relationship from ClassDiagram.Class>>Hearing  to ClassDiagram.Class>>statusconfig represented by ClassDiagram.Atrribute>>status;
Many-To-One relationship from ClassDiagram.Class>>Session  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Session  to ClassDiagram.Class>>room represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Session  to ClassDiagram.Class>>List<HearingPart>;
Many-To-One relationship from ClassDiagram.Class>>Session  to ClassDiagram.Class>>sessiontype represented by ClassDiagram.Atrribute>>GeneratedName;
