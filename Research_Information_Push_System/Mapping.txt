ClassDiagram.Class>> Boy =>=>=> RelationalSchema.Table>> boy;
ClassDiagram.Class>> Girl =>=>=> RelationalSchema.Table>> girl;
ClassDiagram.Class>> Subject =>=>=> RelationalSchema.Table>> subject;
ClassDiagram.Class>> Paper =>=>=> RelationalSchema.Table>> paper;
ClassDiagram.Class>> Activity =>=>=> RelationalSchema.Table>> activity;
ClassDiagram.Class>> OperationLog =>=>=> RelationalSchema.Table>> operationlog;
ClassDiagram.Class>> Dict =>=>=> RelationalSchema.Table>> dict;
ClassDiagram.Class>> Dept =>=>=> RelationalSchema.Table>> dept;
ClassDiagram.Class>> Notice =>=>=> RelationalSchema.Table>> notice;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Cfg =>=>=> RelationalSchema.Table>> cfg;
ClassDiagram.Class>> FileInfo =>=>=> RelationalSchema.Table>> fileinfo;
ClassDiagram.Class>> LoginLog =>=>=> RelationalSchema.Table>> loginlog;
ClassDiagram.Class>> Task =>=>=> RelationalSchema.Table>> task;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Menu =>=>=> RelationalSchema.Table>> menu;
ClassDiagram.Class>> Relation =>=>=> RelationalSchema.Table>> relation;
ClassDiagram.Class>> TaskLog =>=>=> RelationalSchema.Table>> tasklog;
ClassDiagram.Class>> MessageSender =>=>=> RelationalSchema.Table>> messagesender;
ClassDiagram.Class>> MessageTemplate =>=>=> RelationalSchema.Table>> messagetemplate;
ClassDiagram.Class>> Message =>=>=> RelationalSchema.Table>> message;
ClassDiagram.Class>> SocialAccount =>=>=> RelationalSchema.Table>> socialaccount;
ClassDiagram.Attribut>> Boy.name:String =>=>=> RelationalSchema.Column>> boy.name;
ClassDiagram.Attribut>> Boy.age:Integer =>=>=> RelationalSchema.Column>> boy.age;
ClassDiagram.Attribut>> Boy.birthday:String =>=>=> RelationalSchema.Column>> boy.birthday;
ClassDiagram.Attribut>> Boy.hasgirfriend:Boolean =>=>=> RelationalSchema.Column>> boy.hasgirfriend;
ClassDiagram.Attribut>> Girl.name:String =>=>=> RelationalSchema.Column>> girl.name;
ClassDiagram.Attribut>> Girl.age:Integer =>=>=> RelationalSchema.Column>> girl.age;
ClassDiagram.Attribut>> Girl.birthday:Date =>=>=> RelationalSchema.Column>> girl.birthday;
ClassDiagram.Attribut>> Girl.hasboyfriend:Boolean =>=>=> RelationalSchema.Column>> girl.hasboyfriend;
ClassDiagram.Attribut>> Subject.name:String =>=>=> RelationalSchema.Column>> subject.name;
ClassDiagram.Attribut>> Subject.//@manytoone(targetentity:Long =>=>=> RelationalSchema.Column>> subject.//@manytoone(targetentity;
ClassDiagram.Attribut>> Paper.title:String =>=>=> RelationalSchema.Column>> paper.title;
ClassDiagram.Attribut>> Paper.org:String =>=>=> RelationalSchema.Column>> paper.org;
ClassDiagram.Attribut>> Paper.author:String =>=>=> RelationalSchema.Column>> paper.author;
ClassDiagram.Attribut>> Paper.comment:String =>=>=> RelationalSchema.Column>> paper.comment;
ClassDiagram.Attribut>> Paper.url:String =>=>=> RelationalSchema.Column>> paper.url;
ClassDiagram.Attribut>> Activity.name:String =>=>=> RelationalSchema.Column>> activity.name;
ClassDiagram.Attribut>> Activity.url:String =>=>=> RelationalSchema.Column>> activity.url;
ClassDiagram.Attribut>> Activity.begintime:Date =>=>=> RelationalSchema.Column>> activity.begintime;
ClassDiagram.Attribut>> Activity.endtime:Date =>=>=> RelationalSchema.Column>> activity.endtime;
ClassDiagram.Attribut>> OperationLog.id:Long =>=>=> RelationalSchema.Column>> operationlog.id PRIMARY KEY;
ClassDiagram.Attribut>> OperationLog.logtype:String =>=>=> RelationalSchema.Column>> operationlog.logtype;
ClassDiagram.Attribut>> OperationLog.logname:String =>=>=> RelationalSchema.Column>> operationlog.logname;
ClassDiagram.Attribut>> OperationLog.userid:Integer =>=>=> RelationalSchema.Column>> operationlog.userid;
ClassDiagram.Attribut>> OperationLog.classname:String =>=>=> RelationalSchema.Column>> operationlog.classname;
ClassDiagram.Attribut>> OperationLog.method:String =>=>=> RelationalSchema.Column>> operationlog.method;
ClassDiagram.Attribut>> OperationLog.createtime:Date =>=>=> RelationalSchema.Column>> operationlog.createtime;
ClassDiagram.Attribut>> OperationLog.succeed:String =>=>=> RelationalSchema.Column>> operationlog.succeed;
ClassDiagram.Attribut>> OperationLog.message:String =>=>=> RelationalSchema.Column>> operationlog.message;
ClassDiagram.Attribut>> Dict.pid:Long =>=>=> RelationalSchema.Column>> dict.pid;
ClassDiagram.Attribut>> Dict.value:String =>=>=> RelationalSchema.Column>> dict.value;
ClassDiagram.Attribut>> Dict.name:String =>=>=> RelationalSchema.Column>> dict.name;
ClassDiagram.Attribut>> Dept.num:Integer =>=>=> RelationalSchema.Column>> dept.num;
ClassDiagram.Attribut>> Dept.pid:Long =>=>=> RelationalSchema.Column>> dept.pid;
ClassDiagram.Attribut>> Dept.pids:String =>=>=> RelationalSchema.Column>> dept.pids;
ClassDiagram.Attribut>> Dept.simplename:String =>=>=> RelationalSchema.Column>> dept.simplename;
ClassDiagram.Attribut>> Dept.fullname:String =>=>=> RelationalSchema.Column>> dept.fullname;
ClassDiagram.Attribut>> Dept.tips:String =>=>=> RelationalSchema.Column>> dept.tips;
ClassDiagram.Attribut>> Dept.version:Integer =>=>=> RelationalSchema.Column>> dept.version;
ClassDiagram.Attribut>> Notice.title:String =>=>=> RelationalSchema.Column>> notice.title;
ClassDiagram.Attribut>> Notice.type:Integer =>=>=> RelationalSchema.Column>> notice.type;
ClassDiagram.Attribut>> Notice.content:String =>=>=> RelationalSchema.Column>> notice.content;
ClassDiagram.Attribut>> User.avatar:String =>=>=> RelationalSchema.Column>> user.avatar;
ClassDiagram.Attribut>> User.account:String =>=>=> RelationalSchema.Column>> user.account;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.salt:String =>=>=> RelationalSchema.Column>> user.salt;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.birthday:Date =>=>=> RelationalSchema.Column>> user.birthday;
ClassDiagram.Attribut>> User.sex:Integer =>=>=> RelationalSchema.Column>> user.sex;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.phone:String =>=>=> RelationalSchema.Column>> user.phone;
ClassDiagram.Attribut>> User.roleid:String =>=>=> RelationalSchema.Column>> user.roleid;
ClassDiagram.Attribut>> User.deptid:Long =>=>=> RelationalSchema.Column>> user.deptid;
ClassDiagram.Attribut>> User.status:Integer =>=>=> RelationalSchema.Column>> user.status;
ClassDiagram.Attribut>> User.version:Integer =>=>=> RelationalSchema.Column>> user.version;
ClassDiagram.Attribut>> Cfg.cfgname:String =>=>=> RelationalSchema.Column>> cfg.cfgname;
ClassDiagram.Attribut>> Cfg.cfgvalue:String =>=>=> RelationalSchema.Column>> cfg.cfgvalue;
ClassDiagram.Attribut>> Cfg.cfgdesc:String =>=>=> RelationalSchema.Column>> cfg.cfgdesc;
ClassDiagram.Attribut>> FileInfo.originalfilename:String =>=>=> RelationalSchema.Column>> fileinfo.originalfilename;
ClassDiagram.Attribut>> FileInfo.realfilename:String =>=>=> RelationalSchema.Column>> fileinfo.realfilename;
ClassDiagram.Attribut>> FileInfo.ablatepath:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> LoginLog.id:Integer =>=>=> RelationalSchema.Column>> loginlog.id PRIMARY KEY;
ClassDiagram.Attribut>> LoginLog.logname:String =>=>=> RelationalSchema.Column>> loginlog.logname;
ClassDiagram.Attribut>> LoginLog.userid:Integer =>=>=> RelationalSchema.Column>> loginlog.userid;
ClassDiagram.Attribut>> LoginLog.succeed:String =>=>=> RelationalSchema.Column>> loginlog.succeed;
ClassDiagram.Attribut>> LoginLog.message:String =>=>=> RelationalSchema.Column>> loginlog.message;
ClassDiagram.Attribut>> LoginLog.ip:String =>=>=> RelationalSchema.Column>> loginlog.ip;
ClassDiagram.Attribut>> LoginLog.createtime:Date =>=>=> RelationalSchema.Column>> loginlog.createtime;
ClassDiagram.Attribut>> Task.name:String =>=>=> RelationalSchema.Column>> task.name;
ClassDiagram.Attribut>> Task.jobgroup:String =>=>=> RelationalSchema.Column>> task.jobgroup;
ClassDiagram.Attribut>> Task.jobclass:String =>=>=> RelationalSchema.Column>> task.jobclass;
ClassDiagram.Attribut>> Task.note:String =>=>=> RelationalSchema.Column>> task.note;
ClassDiagram.Attribut>> Task.cron:String =>=>=> RelationalSchema.Column>> task.cron;
ClassDiagram.Attribut>> Task.concurrent:boolean =>=>=> RelationalSchema.Column>> task.concurrent;
ClassDiagram.Attribut>> Task.data:String =>=>=> RelationalSchema.Column>> task.data;
ClassDiagram.Attribut>> Task.execat:Date =>=>=> RelationalSchema.Column>> task.execat;
ClassDiagram.Attribut>> Task.execresult:String =>=>=> RelationalSchema.Column>> task.execresult;
ClassDiagram.Attribut>> Task.disabled:boolean =>=>=> RelationalSchema.Column>> task.disabled;
ClassDiagram.Attribut>> Role.num:Integer =>=>=> RelationalSchema.Column>> role.num;
ClassDiagram.Attribut>> Role.pid:Long =>=>=> RelationalSchema.Column>> role.pid;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> Role.deptid:Long =>=>=> RelationalSchema.Column>> role.deptid;
ClassDiagram.Attribut>> Role.tips:String =>=>=> RelationalSchema.Column>> role.tips;
ClassDiagram.Attribut>> Role.version:Integer =>=>=> RelationalSchema.Column>> role.version;
ClassDiagram.Attribut>> Menu.code:String =>=>=> RelationalSchema.Column>> menu.code;
ClassDiagram.Attribut>> Menu.pcode:String =>=>=> RelationalSchema.Column>> menu.pcode;
ClassDiagram.Attribut>> Menu.pcodes:String =>=>=> RelationalSchema.Column>> menu.pcodes;
ClassDiagram.Attribut>> Menu.name:String =>=>=> RelationalSchema.Column>> menu.name;
ClassDiagram.Attribut>> Menu.icon:String =>=>=> RelationalSchema.Column>> menu.icon;
ClassDiagram.Attribut>> Menu.url:String =>=>=> RelationalSchema.Column>> menu.url;
ClassDiagram.Attribut>> Menu.num:Integer =>=>=> RelationalSchema.Column>> menu.num;
ClassDiagram.Attribut>> Menu.levels:Integer =>=>=> RelationalSchema.Column>> menu.levels;
ClassDiagram.Attribut>> Menu.ismenu:Integer =>=>=> RelationalSchema.Column>> menu.ismenu;
ClassDiagram.Attribut>> Menu.tips:String =>=>=> RelationalSchema.Column>> menu.tips;
ClassDiagram.Attribut>> Menu.status:Integer =>=>=> RelationalSchema.Column>> menu.status;
ClassDiagram.Attribut>> Menu.isopen:Integer =>=>=> RelationalSchema.Column>> menu.isopen;
ClassDiagram.Attribut>> Relation.id:Long =>=>=> RelationalSchema.Column>> relation.id PRIMARY KEY;
ClassDiagram.Attribut>> Relation.menuid:Long =>=>=> RelationalSchema.Column>> relation.menuid;
ClassDiagram.Attribut>> Relation.roleid:Long =>=>=> RelationalSchema.Column>> relation.roleid;
ClassDiagram.Attribut>> TaskLog.exe_failure_result:int =>=>=> RelationalSchema.Column>> tasklog.exe_failure_result;
ClassDiagram.Attribut>> TaskLog.exe_success_result:int =>=>=> RelationalSchema.Column>> tasklog.exe_success_result;
ClassDiagram.Attribut>> TaskLog.id:Long =>=>=> RelationalSchema.Column>> tasklog.id PRIMARY KEY;
ClassDiagram.Attribut>> TaskLog.idtask:Long =>=>=> RelationalSchema.Column>> tasklog.idtask;
ClassDiagram.Attribut>> TaskLog.name:String =>=>=> RelationalSchema.Column>> tasklog.name;
ClassDiagram.Attribut>> TaskLog.execat:Date =>=>=> RelationalSchema.Column>> tasklog.execat;
ClassDiagram.Attribut>> TaskLog.execsuccess:int =>=>=> RelationalSchema.Column>> tasklog.execsuccess;
ClassDiagram.Attribut>> TaskLog.jobexception:String =>=>=> RelationalSchema.Column>> tasklog.jobexception;
ClassDiagram.Attribut>> MessageSender.name:String =>=>=> RelationalSchema.Column>> messagesender.name;
ClassDiagram.Attribut>> MessageSender.classname:String =>=>=> RelationalSchema.Column>> messagesender.classname;
ClassDiagram.Attribut>> MessageSender.tplcode:String =>=>=> RelationalSchema.Column>> messagesender.tplcode;
ClassDiagram.Attribut>> MessageTemplate.code:String =>=>=> RelationalSchema.Column>> messagetemplate.code;
ClassDiagram.Attribut>> MessageTemplate.title:String =>=>=> RelationalSchema.Column>> messagetemplate.title;
ClassDiagram.Attribut>> MessageTemplate.content:String =>=>=> RelationalSchema.Column>> messagetemplate.content;
ClassDiagram.Attribut>> MessageTemplate.cond:String =>=>=> RelationalSchema.Column>> messagetemplate.cond;
ClassDiagram.Attribut>> MessageTemplate.idmessagesender:Long =>=>=> RelationalSchema.Column>> messagetemplate.idmessagesender;
ClassDiagram.Attribut>> MessageTemplate.type:Integer =>=>=> RelationalSchema.Column>> messagetemplate.type;
ClassDiagram.Attribut>> Message.tplcode:String =>=>=> RelationalSchema.Column>> message.tplcode;
ClassDiagram.Attribut>> Message.content:String =>=>=> RelationalSchema.Column>> message.content;
ClassDiagram.Attribut>> Message.receiver:String =>=>=> RelationalSchema.Column>> message.receiver;
ClassDiagram.Attribut>> Message.type:Integer =>=>=> RelationalSchema.Column>> message.type;
ClassDiagram.Attribut>> Message.state:Integer =>=>=> RelationalSchema.Column>> message.state;
ClassDiagram.Attribut>> SocialAccount.username:String =>=>=> RelationalSchema.Column>> socialaccount.username;
ClassDiagram.Attribut>> SocialAccount.website:String =>=>=> RelationalSchema.Column>> socialaccount.website;
Many-To-Many relationship between ClassDiagram.Class>>Paper  and ClassDiagram.Class>>set<long>: paper_subject(paper_id:Paper [PK] #FK to Paper,subject_id:set<long> [PK] #FK to set<long>);
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<subject>: user_subject(user_id:User [PK] #FK to User,subject_id:set<subject> [PK] #FK to set<subject>);
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>account: user_subject(user_id:User [PK] #FK to User,subject_id:set<subject> [PK] #FK to set<subject>);user_social_account(user_id:User [PK] #FK to User,social_account_id:account [PK] #FK to account);
Many-To-One relationship from ClassDiagram.Class>>MessageTemplate  to ClassDiagram.Class>>messagesender represented by ClassDiagram.Atrribute>>id;
