ClassDiagram.Class>> CompanySize =>=>=> RelationalSchema.Table>> companysize;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Countries =>=>=> RelationalSchema.Table>> countries;
ClassDiagram.Class>> Industry =>=>=> RelationalSchema.Table>> industry;
ClassDiagram.Class>> Job =>=>=> RelationalSchema.Table>> job;
ClassDiagram.Attribut>> CompanySize.id:long =>=>=> RelationalSchema.Column>> companysize.id PRIMARY KEY;
ClassDiagram.Attribut>> CompanySize.value:String =>=>=> RelationalSchema.Column>> companysize.value;
ClassDiagram.Attribut>> Role.id:Long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> Company.id:long =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Company.companyname:String =>=>=> RelationalSchema.Column>> company.companyname;
ClassDiagram.Attribut>> Company.website:String =>=>=> RelationalSchema.Column>> company.website;
ClassDiagram.Attribut>> Company.about:String =>=>=> RelationalSchema.Column>> company.about;
ClassDiagram.Attribut>> Company.city:String =>=>=> RelationalSchema.Column>> company.city;
ClassDiagram.Attribut>> Company.location:int =>=>=> RelationalSchema.Column>> company.location;
ClassDiagram.Attribut>> Company.industryid:int =>=>=> RelationalSchema.Column>> company.industryid;
ClassDiagram.Attribut>> Company.numbere:int =>=>=> RelationalSchema.Column>> company.numbere;
ClassDiagram.Attribut>> Company.transient:Industry =>=>=> RelationalSchema.Column>> company.transient;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.passwordconfirm:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Countries.id:long =>=>=> RelationalSchema.Column>> countries.id;
ClassDiagram.Attribut>> Countries.name:String =>=>=> RelationalSchema.Column>> countries.name;
ClassDiagram.Attribut>> Countries.company:Set<Company> =>=>=> RelationalSchema.Column>> countries.company;
ClassDiagram.Attribut>> Industry.id:long =>=>=> RelationalSchema.Column>> industry.id PRIMARY KEY;
ClassDiagram.Attribut>> Industry.industryname:String =>=>=> RelationalSchema.Column>> industry.industryname;
ClassDiagram.Attribut>> Job.id:long =>=>=> RelationalSchema.Column>> job.id;
ClassDiagram.Attribut>> Job.position:String =>=>=> RelationalSchema.Column>> job.position;
ClassDiagram.Attribut>> Job.description:String =>=>=> RelationalSchema.Column>> job.description;
ClassDiagram.Attribut>> Job.minimumexperienceyears:int =>=>=> RelationalSchema.Column>> job.minimumexperienceyears;
ClassDiagram.Attribut>> Job.category:String =>=>=> RelationalSchema.Column>> job.category;
ClassDiagram.Attribut>> Job.minimumdegree:String =>=>=> RelationalSchema.Column>> job.minimumdegree;
ClassDiagram.Attribut>> Job.slots:int =>=>=> RelationalSchema.Column>> job.slots;
ClassDiagram.Attribut>> Job.companyid:int =>=>=> RelationalSchema.Column>> job.companyid;
ClassDiagram.Attribut>> Job.title:String =>=>=> RelationalSchema.Column>> job.title;
ClassDiagram.Attribut>> Job.contrat:String =>=>=> RelationalSchema.Column>> job.contrat;
ClassDiagram.Attribut>> Job.city:String =>=>=> RelationalSchema.Column>> job.city;
ClassDiagram.Attribut>> Job.country:String =>=>=> RelationalSchema.Column>> job.country;
ClassDiagram.Attribut>> Job.published:Date =>=>=> RelationalSchema.Column>> job.published;
ClassDiagram.Attribut>> Job.GeneratedName:Company =>=>=> RelationalSchema.Column>> job.GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>CompanySize  to ClassDiagram.Class>>Set<Company>;
Many-To-One relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>countries represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>companysize represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Company  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<role>: user_role(user_id:User [PK] #FK to User,role_id:set<role> [PK] #FK to set<role>);
