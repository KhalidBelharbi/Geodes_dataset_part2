ClassDiagram.Class>> BookmarkEntity =>=>=> RelationalSchema.Table>> bookmarkentity;
ClassDiagram.Class>> UserEntity =>=>=> RelationalSchema.Table>> userentity;
ClassDiagram.Attribut>> BookmarkEntity./***embeddedidprimarykeyfield*/:BookmarkEntityPK =>=>=> RelationalSchema.Column>> bookmarkentity./***embeddedidprimarykeyfield*/;
ClassDiagram.Attribut>> BookmarkEntity.uri:String =>=>=> RelationalSchema.Column>> bookmarkentity.uri;
ClassDiagram.Attribut>> BookmarkEntity.upd:Date =>=>=> RelationalSchema.Column>> bookmarkentity.upd;
ClassDiagram.Attribut>> BookmarkEntity.ldesc:String =>=>=> RelationalSchema.Column>> bookmarkentity.ldesc;
ClassDiagram.Attribut>> BookmarkEntity.sdesc:String =>=>=> RelationalSchema.Column>> bookmarkentity.sdesc;
ClassDiagram.Attribut>> UserEntity.userid:String =>=>=> RelationalSchema.Column>> userentity.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserEntity.password:String =>=>=> RelationalSchema.Column>> userentity.password;
ClassDiagram.Attribut>> UserEntity.username:String =>=>=> RelationalSchema.Column>> userentity.username;
ClassDiagram.Attribut>> UserEntity.email:String =>=>=> RelationalSchema.Column>> userentity.email;
Many-To-One relationship from ClassDiagram.Class>>BookmarkEntity  to ClassDiagram.Class>>userentity represented by ClassDiagram.Atrribute>>userid;
One-To-Many relationship from ClassDiagram.Class>>UserEntity  to ClassDiagram.Class>>Collection<BookmarkEntity>;
