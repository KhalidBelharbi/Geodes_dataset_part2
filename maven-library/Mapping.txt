ClassDiagram.Class>> Maintenance =>=>=> RelationalSchema.Table>> maintenance;
ClassDiagram.Class>> ContractPayments =>=>=> RelationalSchema.Table>> contractpayments;
ClassDiagram.Class>> RentalSubcription =>=>=> RelationalSchema.Table>> rentalsubcription;
ClassDiagram.Class>> UserBankAccount =>=>=> RelationalSchema.Table>> userbankaccount;
ClassDiagram.Class>> ViewingTime =>=>=> RelationalSchema.Table>> viewingtime;
ClassDiagram.Class>> CheckInOut =>=>=> RelationalSchema.Table>> checkinout;
ClassDiagram.Class>> Contract =>=>=> RelationalSchema.Table>> contract;
ClassDiagram.Class>> NotificationUserSettings =>=>=> RelationalSchema.Table>> notificationusersettings;
ClassDiagram.Class>> Notification =>=>=> RelationalSchema.Table>> notification;
ClassDiagram.Class>> Permission =>=>=> RelationalSchema.Table>> permission;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> LeadData =>=>=> RelationalSchema.Table>> leaddata;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> RentalEntity =>=>=> RelationalSchema.Table>> rentalentity;
ClassDiagram.Class>> ViewingTime =>=>=> RelationalSchema.Table>> viewingtime;
ClassDiagram.Class>> Property =>=>=> RelationalSchema.Table>> property;
ClassDiagram.Class>> LandLordProperty =>=>=> RelationalSchema.Table>> landlordproperty;
ClassDiagram.Class>> Application =>=>=> RelationalSchema.Table>> application;
ClassDiagram.Class>> ViewingRequest =>=>=> RelationalSchema.Table>> viewingrequest;
ClassDiagram.Attribut>> Maintenance.id:long =>=>=> RelationalSchema.Column>> maintenance.id PRIMARY KEY;
ClassDiagram.Attribut>> Maintenance.tenantid:String =>=>=> RelationalSchema.Column>> maintenance.tenantid;
ClassDiagram.Attribut>> Maintenance.landlordid:String =>=>=> RelationalSchema.Column>> maintenance.landlordid;
ClassDiagram.Attribut>> Maintenance.contractid:long =>=>=> RelationalSchema.Column>> maintenance.contractid;
ClassDiagram.Attribut>> Maintenance.rentalentityid:long =>=>=> RelationalSchema.Column>> maintenance.rentalentityid;
ClassDiagram.Attribut>> Maintenance.category:String =>=>=> RelationalSchema.Column>> maintenance.category;
ClassDiagram.Attribut>> Maintenance.subcategory:String =>=>=> RelationalSchema.Column>> maintenance.subcategory;
ClassDiagram.Attribut>> Maintenance.description:String =>=>=> RelationalSchema.Column>> maintenance.description;
ClassDiagram.Attribut>> Maintenance.imageurl:String =>=>=> RelationalSchema.Column>> maintenance.imageurl;
ClassDiagram.Attribut>> Maintenance.landlordapproved:LandlordStatus =>=>=> RelationalSchema.Column>> maintenance.landlordapproved;
ClassDiagram.Attribut>> Maintenance.//usetostorethe3rdpartymaintenanceproviderstatusstatus:ResponseStatus =>=>=> RelationalSchema.Column>> maintenance.//usetostorethe3rdpartymaintenanceproviderstatusstatus;
ClassDiagram.Attribut>> Maintenance.outsourceid:String =>=>=> RelationalSchema.Column>> maintenance.outsourceid;
ClassDiagram.Attribut>> Maintenance.cost:double =>=>=> RelationalSchema.Column>> maintenance.cost;
ClassDiagram.Attribut>> Maintenance.created_at:Date =>=>=> RelationalSchema.Column>> maintenance.created_at;
ClassDiagram.Attribut>> Maintenance.approvedon:Date =>=>=> RelationalSchema.Column>> maintenance.approvedon;
ClassDiagram.Attribut>> Maintenance.finishon:Date =>=>=> RelationalSchema.Column>> maintenance.finishon;
ClassDiagram.Attribut>> ContractPayments.contractpaymentid:String =>=>=> RelationalSchema.Column>> contractpayments.contractpaymentid PRIMARY KEY;
ClassDiagram.Attribut>> ContractPayments.type:String =>=>=> RelationalSchema.Column>> contractpayments.type;
ClassDiagram.Attribut>> ContractPayments.amount:double =>=>=> RelationalSchema.Column>> contractpayments.amount;
ClassDiagram.Attribut>> ContractPayments.paymentdate:LocalDateTime =>=>=> RelationalSchema.Column>> contractpayments.paymentdate;
ClassDiagram.Attribut>> ContractPayments.source:String =>=>=> RelationalSchema.Column>> contractpayments.source;
ClassDiagram.Attribut>> ContractPayments.payee:String =>=>=> RelationalSchema.Column>> contractpayments.payee;
ClassDiagram.Attribut>> ContractPayments.payer:String =>=>=> RelationalSchema.Column>> contractpayments.payer;
ClassDiagram.Attribut>> ContractPayments.contractid:long =>=>=> RelationalSchema.Column>> contractpayments.contractid;
ClassDiagram.Attribut>> ContractPayments.status:String =>=>=> RelationalSchema.Column>> contractpayments.status;
ClassDiagram.Attribut>> RentalSubcription.id:Long =>=>=> RelationalSchema.Column>> rentalsubcription.id PRIMARY KEY;
ClassDiagram.Attribut>> RentalSubcription.tenant:String =>=>=> RelationalSchema.Column>> rentalsubcription.tenant;
ClassDiagram.Attribut>> RentalSubcription.contractid:long =>=>=> RelationalSchema.Column>> rentalsubcription.contractid;
ClassDiagram.Attribut>> RentalSubcription.subsciptionid:String =>=>=> RelationalSchema.Column>> rentalsubcription.subsciptionid;
ClassDiagram.Attribut>> UserBankAccount.id:Long =>=>=> RelationalSchema.Column>> userbankaccount.id PRIMARY KEY;
ClassDiagram.Attribut>> UserBankAccount.user:String =>=>=> RelationalSchema.Column>> userbankaccount.user;
ClassDiagram.Attribut>> UserBankAccount.bankaccountid:String =>=>=> RelationalSchema.Column>> userbankaccount.bankaccountid;
ClassDiagram.Attribut>> ViewingTime.id:long =>=>=> RelationalSchema.Column>> viewingtime.id PRIMARY KEY;
ClassDiagram.Attribut>> ViewingTime.contractid:long =>=>=> RelationalSchema.Column>> viewingtime.contractid;
ClassDiagram.Attribut>> ViewingTime.GeneratedName:Date =>=>=> RelationalSchema.Column>> viewingtime.GeneratedName;
ClassDiagram.Attribut>> CheckInOut.id:long =>=>=> RelationalSchema.Column>> checkinout.id PRIMARY KEY;
ClassDiagram.Attribut>> CheckInOut.contractid:long =>=>=> RelationalSchema.Column>> checkinout.contractid;
ClassDiagram.Attribut>> CheckInOut.place:String =>=>=> RelationalSchema.Column>> checkinout.place;
ClassDiagram.Attribut>> CheckInOut.item:String =>=>=> RelationalSchema.Column>> checkinout.item;
ClassDiagram.Attribut>> CheckInOut.movein:String =>=>=> RelationalSchema.Column>> checkinout.movein;
ClassDiagram.Attribut>> CheckInOut.moveindescription:String =>=>=> RelationalSchema.Column>> checkinout.moveindescription;
ClassDiagram.Attribut>> CheckInOut.moveout:String =>=>=> RelationalSchema.Column>> checkinout.moveout;
ClassDiagram.Attribut>> CheckInOut.moveoutdescription:String =>=>=> RelationalSchema.Column>> checkinout.moveoutdescription;
ClassDiagram.Attribut>> CheckInOut.cost:String =>=>=> RelationalSchema.Column>> checkinout.cost;
ClassDiagram.Attribut>> Contract.contractid:long =>=>=> RelationalSchema.Column>> contract.contractid PRIMARY KEY;
ClassDiagram.Attribut>> Contract.tenantid:String =>=>=> RelationalSchema.Column>> contract.tenantid;
ClassDiagram.Attribut>> Contract.rentalentityid:long =>=>=> RelationalSchema.Column>> contract.rentalentityid;
ClassDiagram.Attribut>> Contract.applicationid:long =>=>=> RelationalSchema.Column>> contract.applicationid;
ClassDiagram.Attribut>> Contract.start:Date =>=>=> RelationalSchema.Column>> contract.start;
ClassDiagram.Attribut>> Contract.end:Date =>=>=> RelationalSchema.Column>> contract.end;
ClassDiagram.Attribut>> Contract.rent:double =>=>=> RelationalSchema.Column>> contract.rent;
ClassDiagram.Attribut>> Contract.rentcollectiondate:int =>=>=> RelationalSchema.Column>> contract.rentcollectiondate;
ClassDiagram.Attribut>> Contract.securitydeposit:double =>=>=> RelationalSchema.Column>> contract.securitydeposit;
ClassDiagram.Attribut>> Contract.moveinchecklist:String =>=>=> RelationalSchema.Column>> contract.moveinchecklist;
ClassDiagram.Attribut>> Contract.moveoutchecklist:String =>=>=> RelationalSchema.Column>> contract.moveoutchecklist;
ClassDiagram.Attribut>> Contract.status:ContractStatus =>=>=> RelationalSchema.Column>> contract.status;
ClassDiagram.Attribut>> Contract.parkingacce:boolean =>=>=> RelationalSchema.Column>> contract.parkingacce;
ClassDiagram.Attribut>> Contract.indoorsmoking:boolean =>=>=> RelationalSchema.Column>> contract.indoorsmoking;
ClassDiagram.Attribut>> Contract.moveearly:boolean =>=>=> RelationalSchema.Column>> contract.moveearly;
ClassDiagram.Attribut>> Contract.indoorvaping:boolean =>=>=> RelationalSchema.Column>> contract.indoorvaping;
ClassDiagram.Attribut>> Contract.bankname:String =>=>=> RelationalSchema.Column>> contract.bankname;
ClassDiagram.Attribut>> Contract.bankbranch:String =>=>=> RelationalSchema.Column>> contract.bankbranch;
ClassDiagram.Attribut>> Contract.bankaddress:String =>=>=> RelationalSchema.Column>> contract.bankaddress;
ClassDiagram.Attribut>> Contract.improvement:boolean =>=>=> RelationalSchema.Column>> contract.improvement;
ClassDiagram.Attribut>> Contract.sublease:boolean =>=>=> RelationalSchema.Column>> contract.sublease;
ClassDiagram.Attribut>> Contract.keylosepayment:boolean =>=>=> RelationalSchema.Column>> contract.keylosepayment;
ClassDiagram.Attribut>> Contract.isinspection:boolean =>=>=> RelationalSchema.Column>> contract.isinspection;
ClassDiagram.Attribut>> Contract.ispetcharge:boolean =>=>=> RelationalSchema.Column>> contract.ispetcharge;
ClassDiagram.Attribut>> Contract.GeneratedName:PetChargeMethod =>=>=> RelationalSchema.Column>> contract.GeneratedName;
ClassDiagram.Attribut>> Contract.petamount:double =>=>=> RelationalSchema.Column>> contract.petamount;
ClassDiagram.Attribut>> Contract.utilityresposible:boolean =>=>=> RelationalSchema.Column>> contract.utilityresposible;
ClassDiagram.Attribut>> Contract.istenantmaintenance:boolean =>=>=> RelationalSchema.Column>> contract.istenantmaintenance;
ClassDiagram.Attribut>> Contract.istenantinsurance:boolean =>=>=> RelationalSchema.Column>> contract.istenantinsurance;
ClassDiagram.Attribut>> Contract.islatefee:boolean =>=>=> RelationalSchema.Column>> contract.islatefee;
ClassDiagram.Attribut>> Contract.GeneratedName:LateFeeCharging =>=>=> RelationalSchema.Column>> contract.GeneratedName;
ClassDiagram.Attribut>> Contract.graceperiod:int =>=>=> RelationalSchema.Column>> contract.graceperiod;
ClassDiagram.Attribut>> Contract.latefeeamount:double =>=>=> RelationalSchema.Column>> contract.latefeeamount;
ClassDiagram.Attribut>> Contract.issecuritydeposit:boolean =>=>=> RelationalSchema.Column>> contract.issecuritydeposit;
ClassDiagram.Attribut>> Contract.subscription:boolean =>=>=> RelationalSchema.Column>> contract.subscription;
ClassDiagram.Attribut>> Contract.landlordid:String =>=>=> RelationalSchema.Column>> contract.landlordid;
ClassDiagram.Attribut>> Contract.createdat:Date =>=>=> RelationalSchema.Column>> contract.createdat;
ClassDiagram.Attribut>> Contract.updat:Date =>=>=> RelationalSchema.Column>> contract.updat;
ClassDiagram.Attribut>> NotificationUserSettings.username:String =>=>=> RelationalSchema.Column>> notificationusersettings.username PRIMARY KEY;
ClassDiagram.Attribut>> NotificationUserSettings.event:Events =>=>=> RelationalSchema.Column>> notificationusersettings.event PRIMARY KEY;
ClassDiagram.Attribut>> NotificationUserSettings.subscribed:boolean =>=>=> RelationalSchema.Column>> notificationusersettings.subscribed;
ClassDiagram.Attribut>> Notification.id:long =>=>=> RelationalSchema.Column>> notification.id PRIMARY KEY;
ClassDiagram.Attribut>> Notification.catogory:Events =>=>=> RelationalSchema.Column>> notification.catogory;
ClassDiagram.Attribut>> Notification.rentalenitiyaddress:String =>=>=> RelationalSchema.Column>> notification.rentalenitiyaddress;
ClassDiagram.Attribut>> Notification.rentalenitiyid:long =>=>=> RelationalSchema.Column>> notification.rentalenitiyid;
ClassDiagram.Attribut>> Notification.actionby:String =>=>=> RelationalSchema.Column>> notification.actionby;
ClassDiagram.Attribut>> Notification.actionid:long =>=>=> RelationalSchema.Column>> notification.actionid;
ClassDiagram.Attribut>> Notification.notificationto:String =>=>=> RelationalSchema.Column>> notification.notificationto;
ClassDiagram.Attribut>> Notification.seen:boolean =>=>=> RelationalSchema.Column>> notification.seen;
ClassDiagram.Attribut>> Notification.deleted:boolean =>=>=> RelationalSchema.Column>> notification.deleted;
ClassDiagram.Attribut>> Notification.createdat:Date =>=>=> RelationalSchema.Column>> notification.createdat;
ClassDiagram.Attribut>> Permission.id:Integer =>=>=> RelationalSchema.Column>> permission.id PRIMARY KEY;
ClassDiagram.Attribut>> Permission.name:String =>=>=> RelationalSchema.Column>> permission.name;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username PRIMARY KEY;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.enabled:boolean =>=>=> RelationalSchema.Column>> user.enabled;
ClassDiagram.Attribut>> User.accountnonexpired:boolean =>=>=> RelationalSchema.Column>> user.accountnonexpired;
ClassDiagram.Attribut>> User.credentialsnonexpired:boolean =>=>=> RelationalSchema.Column>> user.credentialsnonexpired;
ClassDiagram.Attribut>> User.accountnonlocked:boolean =>=>=> RelationalSchema.Column>> user.accountnonlocked;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.middlename:String =>=>=> RelationalSchema.Column>> user.middlename;
ClassDiagram.Attribut>> User.GeneratedName:Address =>=>=> RelationalSchema.Column>> user.GeneratedName;
ClassDiagram.Attribut>> User.mobilenumber:String =>=>=> RelationalSchema.Column>> user.mobilenumber;
ClassDiagram.Attribut>> User.stripecustomerid:String =>=>=> RelationalSchema.Column>> user.stripecustomerid;
ClassDiagram.Attribut>> User.stripeaccountid:String =>=>=> RelationalSchema.Column>> user.stripeaccountid;
ClassDiagram.Attribut>> User.provider:AuthProvider =>=>=> RelationalSchema.Column>> user.provider;
ClassDiagram.Attribut>> User.coverimage:String =>=>=> RelationalSchema.Column>> user.coverimage;
ClassDiagram.Attribut>> LeadData.id:long =>=>=> RelationalSchema.Column>> leaddata.id PRIMARY KEY;
ClassDiagram.Attribut>> LeadData.name:String =>=>=> RelationalSchema.Column>> leaddata.name;
ClassDiagram.Attribut>> LeadData.email:String =>=>=> RelationalSchema.Column>> leaddata.email;
ClassDiagram.Attribut>> LeadData.mobile:String =>=>=> RelationalSchema.Column>> leaddata.mobile;
ClassDiagram.Attribut>> LeadData.property:String =>=>=> RelationalSchema.Column>> leaddata.property;
ClassDiagram.Attribut>> LeadData.rentalentity:String =>=>=> RelationalSchema.Column>> leaddata.rentalentity;
ClassDiagram.Attribut>> LeadData.createdat:Date =>=>=> RelationalSchema.Column>> leaddata.createdat;
ClassDiagram.Attribut>> LeadData.transfer:boolean =>=>=> RelationalSchema.Column>> leaddata.transfer;
ClassDiagram.Attribut>> LeadData.updat:Date =>=>=> RelationalSchema.Column>> leaddata.updat;
ClassDiagram.Attribut>> Role.id:Integer =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> RentalEntity.id:Long =>=>=> RelationalSchema.Column>> rentalentity.id PRIMARY KEY;
ClassDiagram.Attribut>> RentalEntity.unitname:String =>=>=> RelationalSchema.Column>> rentalentity.unitname;
ClassDiagram.Attribut>> RentalEntity.unittype:String =>=>=> RelationalSchema.Column>> rentalentity.unittype;
ClassDiagram.Attribut>> RentalEntity.GeneratedName:Status =>=>=> RelationalSchema.Column>> rentalentity.GeneratedName;
ClassDiagram.Attribut>> RentalEntity.listingheading:String =>=>=> RelationalSchema.Column>> rentalentity.listingheading;
ClassDiagram.Attribut>> RentalEntity.fullrooms:int =>=>=> RelationalSchema.Column>> rentalentity.fullrooms;
ClassDiagram.Attribut>> RentalEntity.halfrooms:int =>=>=> RelationalSchema.Column>> rentalentity.halfrooms;
ClassDiagram.Attribut>> RentalEntity.bedrooms:int =>=>=> RelationalSchema.Column>> rentalentity.bedrooms;
ClassDiagram.Attribut>> RentalEntity.bathroomsattach:int =>=>=> RelationalSchema.Column>> rentalentity.bathroomsattach;
ClassDiagram.Attribut>> RentalEntity.bathroomsseparate:int =>=>=> RelationalSchema.Column>> rentalentity.bathroomsseparate;
ClassDiagram.Attribut>> RentalEntity.sqfeet:int =>=>=> RelationalSchema.Column>> rentalentity.sqfeet;
ClassDiagram.Attribut>> RentalEntity.description:String =>=>=> RelationalSchema.Column>> rentalentity.description;
ClassDiagram.Attribut>> RentalEntity.petpolicy:String =>=>=> RelationalSchema.Column>> rentalentity.petpolicy;
ClassDiagram.Attribut>> RentalEntity.furnisher:boolean =>=>=> RelationalSchema.Column>> rentalentity.furnisher;
ClassDiagram.Attribut>> RentalEntity.parkinggarage:boolean =>=>=> RelationalSchema.Column>> rentalentity.parkinggarage;
ClassDiagram.Attribut>> RentalEntity.parkingonstreet:boolean =>=>=> RelationalSchema.Column>> rentalentity.parkingonstreet;
ClassDiagram.Attribut>> RentalEntity.parkingdriveway:boolean =>=>=> RelationalSchema.Column>> rentalentity.parkingdriveway;
ClassDiagram.Attribut>> RentalEntity.parkinglot:boolean =>=>=> RelationalSchema.Column>> rentalentity.parkinglot;
ClassDiagram.Attribut>> RentalEntity.parkingdedicatedspot:boolean =>=>=> RelationalSchema.Column>> rentalentity.parkingdedicatedspot;
ClassDiagram.Attribut>> RentalEntity.parkingcovered:boolean =>=>=> RelationalSchema.Column>> rentalentity.parkingcovered;
ClassDiagram.Attribut>> RentalEntity.outdoorsharedyard:boolean =>=>=> RelationalSchema.Column>> rentalentity.outdoorsharedyard;
ClassDiagram.Attribut>> RentalEntity.outdooryard:boolean =>=>=> RelationalSchema.Column>> rentalentity.outdooryard;
ClassDiagram.Attribut>> RentalEntity.outdoorpatio:boolean =>=>=> RelationalSchema.Column>> rentalentity.outdoorpatio;
ClassDiagram.Attribut>> RentalEntity.outdoorbalcony:boolean =>=>=> RelationalSchema.Column>> rentalentity.outdoorbalcony;
ClassDiagram.Attribut>> RentalEntity.outdoorgarden:boolean =>=>=> RelationalSchema.Column>> rentalentity.outdoorgarden;
ClassDiagram.Attribut>> RentalEntity.washerdrier:String =>=>=> RelationalSchema.Column>> rentalentity.washerdrier;
ClassDiagram.Attribut>> RentalEntity.basement:String =>=>=> RelationalSchema.Column>> rentalentity.basement;
ClassDiagram.Attribut>> RentalEntity.wheelchair:boolean =>=>=> RelationalSchema.Column>> rentalentity.wheelchair;
ClassDiagram.Attribut>> RentalEntity.gym:boolean =>=>=> RelationalSchema.Column>> rentalentity.gym;
ClassDiagram.Attribut>> RentalEntity.airconditioner:boolean =>=>=> RelationalSchema.Column>> rentalentity.airconditioner;
ClassDiagram.Attribut>> RentalEntity.hardwoodfloors:boolean =>=>=> RelationalSchema.Column>> rentalentity.hardwoodfloors;
ClassDiagram.Attribut>> RentalEntity.fireplace:boolean =>=>=> RelationalSchema.Column>> rentalentity.fireplace;
ClassDiagram.Attribut>> RentalEntity.dishwasher:boolean =>=>=> RelationalSchema.Column>> rentalentity.dishwasher;
ClassDiagram.Attribut>> RentalEntity.walkincloset:boolean =>=>=> RelationalSchema.Column>> rentalentity.walkincloset;
ClassDiagram.Attribut>> RentalEntity.pool:boolean =>=>=> RelationalSchema.Column>> rentalentity.pool;
ClassDiagram.Attribut>> RentalEntity.hottub:boolean =>=>=> RelationalSchema.Column>> rentalentity.hottub;
ClassDiagram.Attribut>> RentalEntity.storage:boolean =>=>=> RelationalSchema.Column>> rentalentity.storage;
ClassDiagram.Attribut>> RentalEntity.walkintime:String =>=>=> RelationalSchema.Column>> rentalentity.walkintime;
ClassDiagram.Attribut>> RentalEntity.walkindate:String =>=>=> RelationalSchema.Column>> rentalentity.walkindate;
ClassDiagram.Attribut>> RentalEntity.amenities:String =>=>=> RelationalSchema.Column>> rentalentity.amenities;
ClassDiagram.Attribut>> RentalEntity.rent:double =>=>=> RelationalSchema.Column>> rentalentity.rent;
ClassDiagram.Attribut>> RentalEntity.securitydeposit:double =>=>=> RelationalSchema.Column>> rentalentity.securitydeposit;
ClassDiagram.Attribut>> RentalEntity.leaseperiod:int =>=>=> RelationalSchema.Column>> rentalentity.leaseperiod;
ClassDiagram.Attribut>> RentalEntity.securitychk:boolean =>=>=> RelationalSchema.Column>> rentalentity.securitychk;
ClassDiagram.Attribut>> RentalEntity.backgroundchk:boolean =>=>=> RelationalSchema.Column>> rentalentity.backgroundchk;
ClassDiagram.Attribut>> RentalEntity.imagelink:String =>=>=> RelationalSchema.Column>> rentalentity.imagelink;
ClassDiagram.Attribut>> RentalEntity.link:String =>=>=> RelationalSchema.Column>> rentalentity.link;
ClassDiagram.Attribut>> RentalEntity.createdat:Date =>=>=> RelationalSchema.Column>> rentalentity.createdat;
ClassDiagram.Attribut>> RentalEntity.updat:Date =>=>=> RelationalSchema.Column>> rentalentity.updat;
ClassDiagram.Attribut>> ViewingTime.id:Long =>=>=> RelationalSchema.Column>> viewingtime.id PRIMARY KEY;
ClassDiagram.Attribut>> ViewingTime.GeneratedName:Date =>=>=> RelationalSchema.Column>> viewingtime.GeneratedName;
ClassDiagram.Attribut>> ViewingTime.GeneratedName:DayOfWeek =>=>=> RelationalSchema.Column>> viewingtime.GeneratedName;
ClassDiagram.Attribut>> ViewingTime.GeneratedName:Time =>=>=> RelationalSchema.Column>> viewingtime.GeneratedName;
ClassDiagram.Attribut>> Property.id:Long =>=>=> RelationalSchema.Column>> property.id PRIMARY KEY;
ClassDiagram.Attribut>> Property.name:String =>=>=> RelationalSchema.Column>> property.name;
ClassDiagram.Attribut>> Property.type:PropertyType =>=>=> RelationalSchema.Column>> property.type;
ClassDiagram.Attribut>> Property.GeneratedName:Address =>=>=> RelationalSchema.Column>> property.GeneratedName;
ClassDiagram.Attribut>> Property.aptunit:String =>=>=> RelationalSchema.Column>> property.aptunit;
ClassDiagram.Attribut>> Property.coverimage:String =>=>=> RelationalSchema.Column>> property.coverimage;
ClassDiagram.Attribut>> Property.createdat:Date =>=>=> RelationalSchema.Column>> property.createdat;
ClassDiagram.Attribut>> Property.updat:Date =>=>=> RelationalSchema.Column>> property.updat;
ClassDiagram.Attribut>> LandLordProperty.GeneratedName:LandLordPropID =>=>=> RelationalSchema.Column>> landlordproperty.GeneratedName;
ClassDiagram.Attribut>> LandLordProperty.ownertype:String =>=>=> RelationalSchema.Column>> landlordproperty.ownertype;
ClassDiagram.Attribut>> LandLordProperty.share:double =>=>=> RelationalSchema.Column>> landlordproperty.share;
ClassDiagram.Attribut>> Application.id:long =>=>=> RelationalSchema.Column>> application.id PRIMARY KEY;
ClassDiagram.Attribut>> Application.applicant:String =>=>=> RelationalSchema.Column>> application.applicant;
ClassDiagram.Attribut>> Application.rentalentityid:long =>=>=> RelationalSchema.Column>> application.rentalentityid;
ClassDiagram.Attribut>> Application.status:ApplicationStatus =>=>=> RelationalSchema.Column>> application.status;
ClassDiagram.Attribut>> Application.drivinglicno:String =>=>=> RelationalSchema.Column>> application.drivinglicno;
ClassDiagram.Attribut>> Application.totaloccupants:int =>=>=> RelationalSchema.Column>> application.totaloccupants;
ClassDiagram.Attribut>> Application.emergencyno:String =>=>=> RelationalSchema.Column>> application.emergencyno;
ClassDiagram.Attribut>> Application.ssn:String =>=>=> RelationalSchema.Column>> application.ssn;
ClassDiagram.Attribut>> Application.dob:Date =>=>=> RelationalSchema.Column>> application.dob;
ClassDiagram.Attribut>> Application.othernames:String =>=>=> RelationalSchema.Column>> application.othernames;
ClassDiagram.Attribut>> Application.pets:boolean =>=>=> RelationalSchema.Column>> application.pets;
ClassDiagram.Attribut>> Application.creditcheck:String =>=>=> RelationalSchema.Column>> application.creditcheck;
ClassDiagram.Attribut>> Application.securitycheck:String =>=>=> RelationalSchema.Column>> application.securitycheck;
ClassDiagram.Attribut>> Application.respresentcity:String =>=>=> RelationalSchema.Column>> application.respresentcity;
ClassDiagram.Attribut>> Application.respresentstate:String =>=>=> RelationalSchema.Column>> application.respresentstate;
ClassDiagram.Attribut>> Application.respresentzip:String =>=>=> RelationalSchema.Column>> application.respresentzip;
ClassDiagram.Attribut>> Application.respresentrent:double =>=>=> RelationalSchema.Column>> application.respresentrent;
ClassDiagram.Attribut>> Application.respresentfrom:Date =>=>=> RelationalSchema.Column>> application.respresentfrom;
ClassDiagram.Attribut>> Application.respresentto:Date =>=>=> RelationalSchema.Column>> application.respresentto;
ClassDiagram.Attribut>> Application.respresentownrent:String =>=>=> RelationalSchema.Column>> application.respresentownrent;
ClassDiagram.Attribut>> Application.respresentlandlord:String =>=>=> RelationalSchema.Column>> application.respresentlandlord;
ClassDiagram.Attribut>> Application.respresentlandlordemail:String =>=>=> RelationalSchema.Column>> application.respresentlandlordemail;
ClassDiagram.Attribut>> Application.respresentlandlordtp:String =>=>=> RelationalSchema.Column>> application.respresentlandlordtp;
ClassDiagram.Attribut>> Application.respresentlandlordfax:String =>=>=> RelationalSchema.Column>> application.respresentlandlordfax;
ClassDiagram.Attribut>> Application.respresentapartment:String =>=>=> RelationalSchema.Column>> application.respresentapartment;
ClassDiagram.Attribut>> Application.respresentmortgage:boolean =>=>=> RelationalSchema.Column>> application.respresentmortgage;
ClassDiagram.Attribut>> Application.respreviouscity:String =>=>=> RelationalSchema.Column>> application.respreviouscity;
ClassDiagram.Attribut>> Application.respreviousstate:String =>=>=> RelationalSchema.Column>> application.respreviousstate;
ClassDiagram.Attribut>> Application.respreviouszip:String =>=>=> RelationalSchema.Column>> application.respreviouszip;
ClassDiagram.Attribut>> Application.respreviousrent:double =>=>=> RelationalSchema.Column>> application.respreviousrent;
ClassDiagram.Attribut>> Application.respreviousfrom:Date =>=>=> RelationalSchema.Column>> application.respreviousfrom;
ClassDiagram.Attribut>> Application.respreviousto:Date =>=>=> RelationalSchema.Column>> application.respreviousto;
ClassDiagram.Attribut>> Application.respreviousownrent:String =>=>=> RelationalSchema.Column>> application.respreviousownrent;
ClassDiagram.Attribut>> Application.respreviouslandlord:String =>=>=> RelationalSchema.Column>> application.respreviouslandlord;
ClassDiagram.Attribut>> Application.respreviouslandlordemail:String =>=>=> RelationalSchema.Column>> application.respreviouslandlordemail;
ClassDiagram.Attribut>> Application.respreviouslandlordtp:String =>=>=> RelationalSchema.Column>> application.respreviouslandlordtp;
ClassDiagram.Attribut>> Application.respreviouslandlordfax:String =>=>=> RelationalSchema.Column>> application.respreviouslandlordfax;
ClassDiagram.Attribut>> Application.respreviousapartment:String =>=>=> RelationalSchema.Column>> application.respreviousapartment;
ClassDiagram.Attribut>> Application.respreviousmortgage:boolean =>=>=> RelationalSchema.Column>> application.respreviousmortgage;
ClassDiagram.Attribut>> Application.emppresentemployer:String =>=>=> RelationalSchema.Column>> application.emppresentemployer;
ClassDiagram.Attribut>> Application.emppresentemployed:String =>=>=> RelationalSchema.Column>> application.emppresentemployed;
ClassDiagram.Attribut>> Application.emppresentcity:String =>=>=> RelationalSchema.Column>> application.emppresentcity;
ClassDiagram.Attribut>> Application.emppresentstate:String =>=>=> RelationalSchema.Column>> application.emppresentstate;
ClassDiagram.Attribut>> Application.emppresentzip:String =>=>=> RelationalSchema.Column>> application.emppresentzip;
ClassDiagram.Attribut>> Application.emppresentphone:String =>=>=> RelationalSchema.Column>> application.emppresentphone;
ClassDiagram.Attribut>> Application.emppresentsalary:double =>=>=> RelationalSchema.Column>> application.emppresentsalary;
ClassDiagram.Attribut>> Application.emppresentfrom:Date =>=>=> RelationalSchema.Column>> application.emppresentfrom;
ClassDiagram.Attribut>> Application.emppresentto:Date =>=>=> RelationalSchema.Column>> application.emppresentto;
ClassDiagram.Attribut>> Application.emppresentposition:String =>=>=> RelationalSchema.Column>> application.emppresentposition;
ClassDiagram.Attribut>> Application.emppreviousemployer:String =>=>=> RelationalSchema.Column>> application.emppreviousemployer;
ClassDiagram.Attribut>> Application.emppreviousemployed:String =>=>=> RelationalSchema.Column>> application.emppreviousemployed;
ClassDiagram.Attribut>> Application.emppreviouscity:String =>=>=> RelationalSchema.Column>> application.emppreviouscity;
ClassDiagram.Attribut>> Application.emppreviousstate:String =>=>=> RelationalSchema.Column>> application.emppreviousstate;
ClassDiagram.Attribut>> Application.emppreviouszip:String =>=>=> RelationalSchema.Column>> application.emppreviouszip;
ClassDiagram.Attribut>> Application.emppreviousphone:String =>=>=> RelationalSchema.Column>> application.emppreviousphone;
ClassDiagram.Attribut>> Application.empprevioussalary:double =>=>=> RelationalSchema.Column>> application.empprevioussalary;
ClassDiagram.Attribut>> Application.emppreviousfrom:Date =>=>=> RelationalSchema.Column>> application.emppreviousfrom;
ClassDiagram.Attribut>> Application.emppreviousto:Date =>=>=> RelationalSchema.Column>> application.emppreviousto;
ClassDiagram.Attribut>> Application.emppreviousposition:String =>=>=> RelationalSchema.Column>> application.emppreviousposition;
ClassDiagram.Attribut>> Application.occupentsname:String =>=>=> RelationalSchema.Column>> application.occupentsname;
ClassDiagram.Attribut>> Application.createdat:Date =>=>=> RelationalSchema.Column>> application.createdat;
ClassDiagram.Attribut>> Application.updat:Date =>=>=> RelationalSchema.Column>> application.updat;
ClassDiagram.Attribut>> ViewingRequest.id:Long =>=>=> RelationalSchema.Column>> viewingrequest.id PRIMARY KEY;
ClassDiagram.Attribut>> ViewingRequest.viewingtimeid:Long =>=>=> RelationalSchema.Column>> viewingrequest.viewingtimeid;
ClassDiagram.Attribut>> ViewingRequest.landlordid:String =>=>=> RelationalSchema.Column>> viewingrequest.landlordid;
ClassDiagram.Attribut>> ViewingRequest.tenantid:String =>=>=> RelationalSchema.Column>> viewingrequest.tenantid;
ClassDiagram.Attribut>> ViewingRequest.status:ApplicationStatus =>=>=> RelationalSchema.Column>> viewingrequest.status;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>: role_user(user_name:User [PK] #FK to User,role_id: [PK] #FK to );
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>: permission_role(role_id:Role [PK] #FK to Role,permission_id: [PK] #FK to );
Many-To-One relationship from ClassDiagram.Class>>RentalEntity  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>RentalEntity  to ClassDiagram.Class>>List<ViewingTime>;
Many-To-One relationship from ClassDiagram.Class>>ViewingTime  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Property  to ClassDiagram.Class>>List<RentalEntity>;
