ClassDiagram.Class>> State =>=>=> RelationalSchema.Table>> state;
ClassDiagram.Class>> ProductSubGroup =>=>=> RelationalSchema.Table>> productsubgroup;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> City =>=>=> RelationalSchema.Table>> city;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> District =>=>=> RelationalSchema.Table>> district;
ClassDiagram.Class>> ProductGroup =>=>=> RelationalSchema.Table>> productgroup;
ClassDiagram.Class>> CustomerContact =>=>=> RelationalSchema.Table>> customercontact;
ClassDiagram.Attribut>> State.serialversionuid:long =>=>=> RelationalSchema.Column>> state.serialversionuid;
ClassDiagram.Attribut>> State.abreviation:String =>=>=> RelationalSchema.Column>> state.abreviation;
ClassDiagram.Attribut>> ProductSubGroup.serialversionuid:long =>=>=> RelationalSchema.Column>> productsubgroup.serialversionuid;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.address:String =>=>=> RelationalSchema.Column>> user.address;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> City.serialversionuid:long =>=>=> RelationalSchema.Column>> city.serialversionuid;
ClassDiagram.Attribut>> Customer.serialversionuid:long =>=>=> RelationalSchema.Column>> customer.serialversionuid;
ClassDiagram.Attribut>> Customer.address:String =>=>=> RelationalSchema.Column>> customer.address;
ClassDiagram.Attribut>> Product.serialversionuid:long =>=>=> RelationalSchema.Column>> product.serialversionuid;
ClassDiagram.Attribut>> Product.code:String =>=>=> RelationalSchema.Column>> product.code;
ClassDiagram.Attribut>> District.serialversionuid:long =>=>=> RelationalSchema.Column>> district.serialversionuid;
ClassDiagram.Attribut>> ProductGroup.serialversionuid:long =>=>=> RelationalSchema.Column>> productgroup.serialversionuid;
ClassDiagram.Attribut>> CustomerContact.serialversionuid:long =>=>=> RelationalSchema.Column>> customercontact.serialversionuid;
ClassDiagram.Attribut>> CustomerContact.id:Long =>=>=> RelationalSchema.Column>> customercontact.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerContact.contactname:String =>=>=> RelationalSchema.Column>> customercontact.contactname;
ClassDiagram.Attribut>> CustomerContact.GeneratedName:ContactType =>=>=> RelationalSchema.Column>> customercontact.GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductSubGroup  to ClassDiagram.Class>>productgroup represented by ClassDiagram.Atrribute>>product_group_id;
Many-To-One relationship from ClassDiagram.Class>>City  to ClassDiagram.Class>>state represented by ClassDiagram.Atrribute>>state_id;
Many-To-One relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>district represented by ClassDiagram.Atrribute>>district_id;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Set<CustomerContact>;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>productsubgroup represented by ClassDiagram.Atrribute>>product_sub_group_id;
Many-To-One relationship from ClassDiagram.Class>>District  to ClassDiagram.Class>>city represented by ClassDiagram.Atrribute>>city_id;
Many-To-One relationship from ClassDiagram.Class>>CustomerContact  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
