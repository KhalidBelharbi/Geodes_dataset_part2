ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> OrderDetail =>=>=> RelationalSchema.Table>> orderdetail;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Order1 =>=>=> RelationalSchema.Table>> order1;
ClassDiagram.Attribut>> Customer.serialversionuid:long =>=>=> RelationalSchema.Column>> customer.serialversionuid;
ClassDiagram.Attribut>> Customer.customerid:Integer =>=>=> RelationalSchema.Column>> customer.customerid PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.email:String =>=>=> RelationalSchema.Column>> customer.email;
ClassDiagram.Attribut>> OrderDetail.serialversionuid:long =>=>=> RelationalSchema.Column>> orderdetail.serialversionuid;
ClassDiagram.Attribut>> OrderDetail.orderdetailid:Integer =>=>=> RelationalSchema.Column>> orderdetail.orderdetailid PRIMARY KEY;
ClassDiagram.Attribut>> OrderDetail.productdescription:String =>=>=> RelationalSchema.Column>> orderdetail.productdescription;
ClassDiagram.Attribut>> OrderDetail.price:double =>=>=> RelationalSchema.Column>> orderdetail.price;
ClassDiagram.Attribut>> OrderDetail.quantity:int =>=>=> RelationalSchema.Column>> orderdetail.quantity;
ClassDiagram.Attribut>> Product.serialversionuid:long =>=>=> RelationalSchema.Column>> product.serialversionuid;
ClassDiagram.Attribut>> Product.productid:Integer =>=>=> RelationalSchema.Column>> product.productid PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.productdescription:String =>=>=> RelationalSchema.Column>> product.productdescription;
ClassDiagram.Attribut>> Product.price:double =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Order1.serialversionuid:long =>=>=> RelationalSchema.Column>> order1.serialversionuid;
ClassDiagram.Attribut>> Order1.orderid:Integer =>=>=> RelationalSchema.Column>> order1.orderid PRIMARY KEY;
ClassDiagram.Attribut>> Order1.creation:Date =>=>=> RelationalSchema.Column>> order1.creation;
ClassDiagram.Attribut>> Order1.deliveryaddress:String =>=>=> RelationalSchema.Column>> order1.deliveryaddress;
ClassDiagram.Attribut>> Order1.total:double =>=>=> RelationalSchema.Column>> order1.total;
Many-To-Many relationship between ClassDiagram.Class>>Customer  and ClassDiagram.Class>>list<product>: customer_product(customer_id:Customer [PK] #FK to Customer,product_id:list<product> [PK] #FK to list<product>);
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>List<Order1>;
Many-To-One relationship from ClassDiagram.Class>>OrderDetail  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>product_id;
Many-To-One relationship from ClassDiagram.Class>>OrderDetail  to ClassDiagram.Class>>order1 represented by ClassDiagram.Atrribute>>order_id;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<OrderDetail>;
One-To-Many relationship from ClassDiagram.Class>>Order1  to ClassDiagram.Class>>List<OrderDetail>;
Many-To-One relationship from ClassDiagram.Class>>Order1  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>customer_id;
