ClassDiagram.Class>> Task =>=>=> RelationalSchema.Table>> task;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Attribut>> Task.serialversionuid:long =>=>=> RelationalSchema.Column>> task.serialversionuid;
ClassDiagram.Attribut>> Task.description:String =>=>=> RelationalSchema.Column>> task.description;
ClassDiagram.Attribut>> Task.startedtime:Date =>=>=> RelationalSchema.Column>> task.startedtime;
ClassDiagram.Attribut>> Task.stoppedtime:Date =>=>=> RelationalSchema.Column>> task.stoppedtime;
ClassDiagram.Attribut>> Task.transientprojectid:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Task.transientstart:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Task.transientstop:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Project.serialversionuid:long =>=>=> RelationalSchema.Column>> project.serialversionuid;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name;
ClassDiagram.Attribut>> Project.creationtime:Date =>=>=> RelationalSchema.Column>> project.creationtime;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>project represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Project  to ClassDiagram.Class>>Set<Task>;
