ClassDiagram.Class>> Actor =>=>=> RelationalSchema.Table>> actor;
ClassDiagram.Class>> Movie =>=>=> RelationalSchema.Table>> movie;
ClassDiagram.Attribut>> Actor.id:String =>=>=> RelationalSchema.Column>> actor.id PRIMARY KEY;
ClassDiagram.Attribut>> Actor.firstname:String =>=>=> RelationalSchema.Column>> actor.firstname;
ClassDiagram.Attribut>> Actor.lastname:String =>=>=> RelationalSchema.Column>> actor.lastname;
ClassDiagram.Attribut>> Actor.GeneratedName:Gender =>=>=> RelationalSchema.Column>> actor.GeneratedName;
ClassDiagram.Attribut>> Actor.dob:Date =>=>=> RelationalSchema.Column>> actor.dob;
ClassDiagram.Attribut>> Movie.id:String =>=>=> RelationalSchema.Column>> movie.id PRIMARY KEY;
ClassDiagram.Attribut>> Movie.title:String =>=>=> RelationalSchema.Column>> movie.title;
ClassDiagram.Attribut>> Movie.year:int =>=>=> RelationalSchema.Column>> movie.year;
One-To-One relationship between ClassDiagram.Class>>Actor  to ClassDiagram.Class>>actor represented by ClassDiagram.Atrribute>>partner;
One-To-Many relationship from ClassDiagram.Class>>Actor  to ClassDiagram.Class>>Set<Movie>;
One-To-Many relationship from ClassDiagram.Class>>Movie  to ClassDiagram.Class>>Set<Actor>;
