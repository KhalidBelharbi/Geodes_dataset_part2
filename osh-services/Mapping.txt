ClassDiagram.Class>> HomePageOffers =>=>=> RelationalSchema.Table>> homepageoffers;
ClassDiagram.Class>> Customizations =>=>=> RelationalSchema.Table>> customizations;
ClassDiagram.Class>> WorkerRating =>=>=> RelationalSchema.Table>> workerrating;
ClassDiagram.Class>> Services =>=>=> RelationalSchema.Table>> services;
ClassDiagram.Class>> CompanyService =>=>=> RelationalSchema.Table>> companyservice;
ClassDiagram.Class>> PostRequirement =>=>=> RelationalSchema.Table>> postrequirement;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> ProductReview =>=>=> RelationalSchema.Table>> productreview;
ClassDiagram.Class>> ProductReviewDescription =>=>=> RelationalSchema.Table>> productreviewdescription;
ClassDiagram.Class>> ProductImageDescription =>=>=> RelationalSchema.Table>> productimagedescription;
ClassDiagram.Class>> ProductImage =>=>=> RelationalSchema.Table>> productimage;
ClassDiagram.Class>> ProductAvailability =>=>=> RelationalSchema.Table>> productavailability;
ClassDiagram.Class>> ProductPrice =>=>=> RelationalSchema.Table>> productprice;
ClassDiagram.Class>> ProductPriceDescription =>=>=> RelationalSchema.Table>> productpricedescription;
ClassDiagram.Class>> ProductType =>=>=> RelationalSchema.Table>> producttype;
ClassDiagram.Class>> TestFilter =>=>=> RelationalSchema.Table>> testfilter;
ClassDiagram.Class>> Filter =>=>=> RelationalSchema.Table>> filter;
ClassDiagram.Class>> FilterType =>=>=> RelationalSchema.Table>> filtertype;
ClassDiagram.Class>> ProductRelationship =>=>=> RelationalSchema.Table>> productrelationship;
ClassDiagram.Class>> ProductOption =>=>=> RelationalSchema.Table>> productoption;
ClassDiagram.Class>> ProductOptionValueDescription =>=>=> RelationalSchema.Table>> productoptionvaluedescription;
ClassDiagram.Class>> ProductAttribute =>=>=> RelationalSchema.Table>> productattribute;
ClassDiagram.Class>> ProductOptionDescription =>=>=> RelationalSchema.Table>> productoptiondescription;
ClassDiagram.Class>> ProductOptionValue =>=>=> RelationalSchema.Table>> productoptionvalue;
ClassDiagram.Class>> ManufacturerDescription =>=>=> RelationalSchema.Table>> manufacturerdescription;
ClassDiagram.Class>> Manufacturer =>=>=> RelationalSchema.Table>> manufacturer;
ClassDiagram.Class>> ProductDescription =>=>=> RelationalSchema.Table>> productdescription;
ClassDiagram.Class>> DigitalProduct =>=>=> RelationalSchema.Table>> digitalproduct;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> SubCategoryImage =>=>=> RelationalSchema.Table>> subcategoryimage;
ClassDiagram.Class>> CategoryDescription =>=>=> RelationalSchema.Table>> categorydescription;
ClassDiagram.Class>> HistoryManagement =>=>=> RelationalSchema.Table>> historymanagement;
ClassDiagram.Class>> Language =>=>=> RelationalSchema.Table>> language;
ClassDiagram.Class>> GeoZone =>=>=> RelationalSchema.Table>> geozone;
ClassDiagram.Class>> GeoZoneDescription =>=>=> RelationalSchema.Table>> geozonedescription;
ClassDiagram.Class>> Zone =>=>=> RelationalSchema.Table>> zone;
ClassDiagram.Class>> ZoneDescription =>=>=> RelationalSchema.Table>> zonedescription;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> CountryDescription =>=>=> RelationalSchema.Table>> countrydescription;
ClassDiagram.Class>> Currency =>=>=> RelationalSchema.Table>> currency;
ClassDiagram.Class>> VendorProduct =>=>=> RelationalSchema.Table>> vendorproduct;
ClassDiagram.Class>> OrderStatusHistory =>=>=> RelationalSchema.Table>> orderstatushistory;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> OrderAccount =>=>=> RelationalSchema.Table>> orderaccount;
ClassDiagram.Class>> OrderAccountProduct =>=>=> RelationalSchema.Table>> orderaccountproduct;
ClassDiagram.Class>> OrderProductDownload =>=>=> RelationalSchema.Table>> orderproductdownload;
ClassDiagram.Class>> OrderProductAttribute =>=>=> RelationalSchema.Table>> orderproductattribute;
ClassDiagram.Class>> OrderProductPrice =>=>=> RelationalSchema.Table>> orderproductprice;
ClassDiagram.Class>> OrderProduct =>=>=> RelationalSchema.Table>> orderproduct;
ClassDiagram.Class>> OrderTotal =>=>=> RelationalSchema.Table>> ordertotal;
ClassDiagram.Class>> FileHistory =>=>=> RelationalSchema.Table>> filehistory;
ClassDiagram.Class>> TaxRate =>=>=> RelationalSchema.Table>> taxrate;
ClassDiagram.Class>> TaxRateDescription =>=>=> RelationalSchema.Table>> taxratedescription;
ClassDiagram.Class>> TaxClass =>=>=> RelationalSchema.Table>> taxclass;
ClassDiagram.Class>> ShoppingCart =>=>=> RelationalSchema.Table>> shoppingcart;
ClassDiagram.Class>> ShoppingCartItem =>=>=> RelationalSchema.Table>> shoppingcartitem;
ClassDiagram.Class>> ShoppingCartAttributeItem =>=>=> RelationalSchema.Table>> shoppingcartattributeitem;
ClassDiagram.Class>> ContentDescription =>=>=> RelationalSchema.Table>> contentdescription;
ClassDiagram.Class>> Content =>=>=> RelationalSchema.Table>> content;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Permission =>=>=> RelationalSchema.Table>> permission;
ClassDiagram.Class>> Group =>=>=> RelationalSchema.Table>> group;
ClassDiagram.Class>> UserUpdates =>=>=> RelationalSchema.Table>> userupdates;
ClassDiagram.Class>> Transaction =>=>=> RelationalSchema.Table>> transaction;
ClassDiagram.Class>> Description =>=>=> RelationalSchema.Table>> description;
ClassDiagram.Class>> BrandImage =>=>=> RelationalSchema.Table>> brandimage;
ClassDiagram.Class>> MerchantStore =>=>=> RelationalSchema.Table>> merchantstore;
ClassDiagram.Class>> ServicesBooking =>=>=> RelationalSchema.Table>> servicesbooking;
ClassDiagram.Class>> MachineryPortfolio =>=>=> RelationalSchema.Table>> machineryportfolio;
ClassDiagram.Class>> ServicesRating =>=>=> RelationalSchema.Table>> servicesrating;
ClassDiagram.Class>> VendorRating =>=>=> RelationalSchema.Table>> vendorrating;
ClassDiagram.Class>> VendorBooking =>=>=> RelationalSchema.Table>> vendorbooking;
ClassDiagram.Class>> ArchitectsPortfolio =>=>=> RelationalSchema.Table>> architectsportfolio;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> CustomerOptionDescription =>=>=> RelationalSchema.Table>> customeroptiondescription;
ClassDiagram.Class>> CustomerOptionSet =>=>=> RelationalSchema.Table>> customeroptionset;
ClassDiagram.Class>> CustomerOptionValueDescription =>=>=> RelationalSchema.Table>> customeroptionvaluedescription;
ClassDiagram.Class>> CustomerOption =>=>=> RelationalSchema.Table>> customeroption;
ClassDiagram.Class>> CustomerAttribute =>=>=> RelationalSchema.Table>> customerattribute;
ClassDiagram.Class>> CustomerOptionValue =>=>=> RelationalSchema.Table>> customeroptionvalue;
ClassDiagram.Class>> CustomerTestimonial =>=>=> RelationalSchema.Table>> customertestimonial;
ClassDiagram.Class>> WallPaperPortfolio =>=>=> RelationalSchema.Table>> wallpaperportfolio;
ClassDiagram.Class>> ShippingOrigin =>=>=> RelationalSchema.Table>> shippingorigin;
ClassDiagram.Class>> MerchantConfiguration =>=>=> RelationalSchema.Table>> merchantconfiguration;
ClassDiagram.Class>> SystemConfiguration =>=>=> RelationalSchema.Table>> systemconfiguration;
ClassDiagram.Class>> CustomerOptin =>=>=> RelationalSchema.Table>> customeroptin;
ClassDiagram.Class>> Optin =>=>=> RelationalSchema.Table>> optin;
ClassDiagram.Class>> MerchantLog =>=>=> RelationalSchema.Table>> merchantlog;
ClassDiagram.Class>> IntegrationModule =>=>=> RelationalSchema.Table>> integrationmodule;
ClassDiagram.Class>> SystemNotification =>=>=> RelationalSchema.Table>> systemnotification;
ClassDiagram.Attribut>> HomePageOffers./***/serialversionuid:long =>=>=> RelationalSchema.Column>> homepageoffers./***/serialversionuid;
ClassDiagram.Attribut>> HomePageOffers.id:Long =>=>=> RelationalSchema.Column>> homepageoffers.id PRIMARY KEY;
ClassDiagram.Attribut>> HomePageOffers.categoryname:String =>=>=> RelationalSchema.Column>> homepageoffers.categoryname;
ClassDiagram.Attribut>> HomePageOffers.sectionname:String =>=>=> RelationalSchema.Column>> homepageoffers.sectionname;
ClassDiagram.Attribut>> HomePageOffers.subcategoryname:String =>=>=> RelationalSchema.Column>> homepageoffers.subcategoryname;
ClassDiagram.Attribut>> HomePageOffers.description:String =>=>=> RelationalSchema.Column>> homepageoffers.description;
ClassDiagram.Attribut>> HomePageOffers.categorytitle:String =>=>=> RelationalSchema.Column>> homepageoffers.categorytitle;
ClassDiagram.Attribut>> HomePageOffers.discount:Integer =>=>=> RelationalSchema.Column>> homepageoffers.discount;
ClassDiagram.Attribut>> HomePageOffers./*@column(name:String =>=>=> RelationalSchema.Column>> homepageoffers./*@column(name;
ClassDiagram.Attribut>> Customizations./***/serialversionuid:long =>=>=> RelationalSchema.Column>> customizations./***/serialversionuid;
ClassDiagram.Attribut>> Customizations.id:Long =>=>=> RelationalSchema.Column>> customizations.id PRIMARY KEY;
ClassDiagram.Attribut>> Customizations.customizationid:String =>=>=> RelationalSchema.Column>> customizations.customizationid;
ClassDiagram.Attribut>> Customizations.header:String =>=>=> RelationalSchema.Column>> customizations.header;
ClassDiagram.Attribut>> Customizations.subheader:String =>=>=> RelationalSchema.Column>> customizations.subheader;
ClassDiagram.Attribut>> WorkerRating./***/serialversionuid:long =>=>=> RelationalSchema.Column>> workerrating./***/serialversionuid;
ClassDiagram.Attribut>> WorkerRating.id:Integer =>=>=> RelationalSchema.Column>> workerrating.id PRIMARY KEY;
ClassDiagram.Attribut>> WorkerRating.rating:Integer =>=>=> RelationalSchema.Column>> workerrating.rating;
ClassDiagram.Attribut>> WorkerRating.ratingdesc:String =>=>=> RelationalSchema.Column>> workerrating.ratingdesc;
ClassDiagram.Attribut>> WorkerRating.create:Date =>=>=> RelationalSchema.Column>> workerrating.create;
ClassDiagram.Attribut>> Services.serialversionuid:long =>=>=> RelationalSchema.Column>> services.serialversionuid;
ClassDiagram.Attribut>> Services.default_store:String =>=>=> RelationalSchema.Column>> services.default_store;
ClassDiagram.Attribut>> Services.id:Integer =>=>=> RelationalSchema.Column>> services.id PRIMARY KEY;
ClassDiagram.Attribut>> Services.servicetype:String =>=>=> RelationalSchema.Column>> services.servicetype;
ClassDiagram.Attribut>> Services.imageurl1:String =>=>=> RelationalSchema.Column>> services.imageurl1;
ClassDiagram.Attribut>> Services.imageurl2:String =>=>=> RelationalSchema.Column>> services.imageurl2;
ClassDiagram.Attribut>> Services.description:String =>=>=> RelationalSchema.Column>> services.description;
ClassDiagram.Attribut>> CompanyService./***/serialversionuid:long =>=>=> RelationalSchema.Column>> companyservice./***/serialversionuid;
ClassDiagram.Attribut>> CompanyService.id:Integer =>=>=> RelationalSchema.Column>> companyservice.id PRIMARY KEY;
ClassDiagram.Attribut>> CompanyService./*@column(name:String =>=>=> RelationalSchema.Column>> companyservice./*@column(name;
ClassDiagram.Attribut>> CompanyService.housenumber:String =>=>=> RelationalSchema.Column>> companyservice.housenumber;
ClassDiagram.Attribut>> CompanyService.street:String =>=>=> RelationalSchema.Column>> companyservice.street;
ClassDiagram.Attribut>> CompanyService.area:String =>=>=> RelationalSchema.Column>> companyservice.area;
ClassDiagram.Attribut>> CompanyService.city:String =>=>=> RelationalSchema.Column>> companyservice.city;
ClassDiagram.Attribut>> CompanyService.state:String =>=>=> RelationalSchema.Column>> companyservice.state;
ClassDiagram.Attribut>> CompanyService.pincode:String =>=>=> RelationalSchema.Column>> companyservice.pincode;
ClassDiagram.Attribut>> CompanyService.country:String =>=>=> RelationalSchema.Column>> companyservice.country;
ClassDiagram.Attribut>> CompanyService.imageurl:String =>=>=> RelationalSchema.Column>> companyservice.imageurl;
ClassDiagram.Attribut>> CompanyService.websitename:String =>=>=> RelationalSchema.Column>> companyservice.websitename;
ClassDiagram.Attribut>> CompanyService.contactnumber:String =>=>=> RelationalSchema.Column>> companyservice.contactnumber;
ClassDiagram.Attribut>> PostRequirement./***/serialversionuid:long =>=>=> RelationalSchema.Column>> postrequirement./***/serialversionuid;
ClassDiagram.Attribut>> PostRequirement.id:Long =>=>=> RelationalSchema.Column>> postrequirement.id PRIMARY KEY;
ClassDiagram.Attribut>> PostRequirement.state:String =>=>=> RelationalSchema.Column>> postrequirement.state;
ClassDiagram.Attribut>> PostRequirement.query:String =>=>=> RelationalSchema.Column>> postrequirement.query;
ClassDiagram.Attribut>> PostRequirement.customerid:Long =>=>=> RelationalSchema.Column>> postrequirement.customerid;
ClassDiagram.Attribut>> PostRequirement.categoryid:Long =>=>=> RelationalSchema.Column>> postrequirement.categoryid;
ClassDiagram.Attribut>> PostRequirement.responsemessage:String =>=>=> RelationalSchema.Column>> postrequirement.responsemessage;
ClassDiagram.Attribut>> PostRequirement.posted:Date =>=>=> RelationalSchema.Column>> postrequirement.posted;
ClassDiagram.Attribut>> Product.serialversionuid:long =>=>=> RelationalSchema.Column>> product.serialversionuid;
ClassDiagram.Attribut>> Product.id:Long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> product.GeneratedName;
ClassDiagram.Attribut>> Product.available:Date =>=>=> RelationalSchema.Column>> product.available;
ClassDiagram.Attribut>> Product.available:boolean =>=>=> RelationalSchema.Column>> product.available;
ClassDiagram.Attribut>> Product.preorder:boolean =>=>=> RelationalSchema.Column>> product.preorder;
ClassDiagram.Attribut>> Product.productvirtual:boolean =>=>=> RelationalSchema.Column>> product.productvirtual;
ClassDiagram.Attribut>> Product.productshipeable:boolean =>=>=> RelationalSchema.Column>> product.productshipeable;
ClassDiagram.Attribut>> Product.productisfree:boolean =>=>=> RelationalSchema.Column>> product.productisfree;
ClassDiagram.Attribut>> Product.productlength:BigDecimal =>=>=> RelationalSchema.Column>> product.productlength;
ClassDiagram.Attribut>> Product.productwidth:BigDecimal =>=>=> RelationalSchema.Column>> product.productwidth;
ClassDiagram.Attribut>> Product.productheight:BigDecimal =>=>=> RelationalSchema.Column>> product.productheight;
ClassDiagram.Attribut>> Product.productweight:BigDecimal =>=>=> RelationalSchema.Column>> product.productweight;
ClassDiagram.Attribut>> Product.productreviewavg:BigDecimal =>=>=> RelationalSchema.Column>> product.productreviewavg;
ClassDiagram.Attribut>> Product.productreviewcount:Integer =>=>=> RelationalSchema.Column>> product.productreviewcount;
ClassDiagram.Attribut>> Product.productordered:Integer =>=>=> RelationalSchema.Column>> product.productordered;
ClassDiagram.Attribut>> Product.sortorder:Integer =>=>=> RelationalSchema.Column>> product.sortorder;
ClassDiagram.Attribut>> Product.sku:String =>=>=> RelationalSchema.Column>> product.sku;
ClassDiagram.Attribut>> Product./***externalsystemreferencesku/id*/refsku:String =>=>=> RelationalSchema.Column>> product./***externalsystemreferencesku/id*/refsku;
ClassDiagram.Attribut>> ProductReview.serialversionuid:long =>=>=> RelationalSchema.Column>> productreview.serialversionuid;
ClassDiagram.Attribut>> ProductReview.id:Long =>=>=> RelationalSchema.Column>> productreview.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductReview.audit:AuditSection =>=>=> RelationalSchema.Column>> productreview.audit;
ClassDiagram.Attribut>> ProductReview.reviewrating:Double =>=>=> RelationalSchema.Column>> productreview.reviewrating;
ClassDiagram.Attribut>> ProductReview.reviewread:Long =>=>=> RelationalSchema.Column>> productreview.reviewread;
ClassDiagram.Attribut>> ProductReview.review:Date =>=>=> RelationalSchema.Column>> productreview.review;
ClassDiagram.Attribut>> ProductReview.status:Integer =>=>=> RelationalSchema.Column>> productreview.status;
ClassDiagram.Attribut>> ProductReview.descriptionname:String =>=>=> RelationalSchema.Column>> productreview.descriptionname;
ClassDiagram.Attribut>> ProductReview.description:String =>=>=> RelationalSchema.Column>> productreview.description;
ClassDiagram.Attribut>> ProductReviewDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> productreviewdescription.serialversionuid;
ClassDiagram.Attribut>> ProductImageDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> productimagedescription.serialversionuid;
ClassDiagram.Attribut>> ProductImageDescription.alttag:String =>=>=> RelationalSchema.Column>> productimagedescription.alttag;
ClassDiagram.Attribut>> ProductImage.serialversionuid:long =>=>=> RelationalSchema.Column>> productimage.serialversionuid;
ClassDiagram.Attribut>> ProductImage.id:Long =>=>=> RelationalSchema.Column>> productimage.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductImage.productimage:String =>=>=> RelationalSchema.Column>> productimage.productimage;
ClassDiagram.Attribut>> ProductImage.defaultimage:boolean =>=>=> RelationalSchema.Column>> productimage.defaultimage;
ClassDiagram.Attribut>> ProductImage./***defaultto0forimagesmanagedbythesystem*/imagetype:int =>=>=> RelationalSchema.Column>> productimage./***defaultto0forimagesmanagedbythesystem*/imagetype;
ClassDiagram.Attribut>> ProductImage./***referstoimagesnotaccessiblethroughthesystem.itmayalsobeavideo.*/productimageurl:String =>=>=> RelationalSchema.Column>> productimage./***referstoimagesnotaccessiblethroughthesystem.itmayalsobeavideo.*/productimageurl;
ClassDiagram.Attribut>> ProductImage.imagecrop:boolean =>=>=> RelationalSchema.Column>> productimage.imagecrop;
ClassDiagram.Attribut>> ProductImage.image:InputStream =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ProductAvailability.serialversionuid:long =>=>=> RelationalSchema.Column>> productavailability.serialversionuid;
ClassDiagram.Attribut>> ProductAvailability.id:Long =>=>=> RelationalSchema.Column>> productavailability.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductAvailability.productquantity:Integer =>=>=> RelationalSchema.Column>> productavailability.productquantity;
ClassDiagram.Attribut>> ProductAvailability.productavailable:Date =>=>=> RelationalSchema.Column>> productavailability.productavailable;
ClassDiagram.Attribut>> ProductAvailability.region:String =>=>=> RelationalSchema.Column>> productavailability.region;
ClassDiagram.Attribut>> ProductAvailability.regionvariant:String =>=>=> RelationalSchema.Column>> productavailability.regionvariant;
ClassDiagram.Attribut>> ProductAvailability.productstatus:boolean =>=>=> RelationalSchema.Column>> productavailability.productstatus;
ClassDiagram.Attribut>> ProductAvailability.productisalwaysfreeshipping:boolean =>=>=> RelationalSchema.Column>> productavailability.productisalwaysfreeshipping;
ClassDiagram.Attribut>> ProductAvailability.productquantityordermin:Integer =>=>=> RelationalSchema.Column>> productavailability.productquantityordermin;
ClassDiagram.Attribut>> ProductAvailability.productquantityordermax:Integer =>=>=> RelationalSchema.Column>> productavailability.productquantityordermax;
ClassDiagram.Attribut>> ProductPrice.serialversionuid:long =>=>=> RelationalSchema.Column>> productprice.serialversionuid;
ClassDiagram.Attribut>> ProductPrice.default_price_code:String =>=>=> RelationalSchema.Column>> productprice.default_price_code;
ClassDiagram.Attribut>> ProductPrice.id:Long =>=>=> RelationalSchema.Column>> productprice.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductPrice.code:String =>=>=> RelationalSchema.Column>> productprice.code;
ClassDiagram.Attribut>> ProductPrice.productpriceamount:BigDecimal =>=>=> RelationalSchema.Column>> productprice.productpriceamount;
ClassDiagram.Attribut>> ProductPrice.GeneratedName:ProductPriceType =>=>=> RelationalSchema.Column>> productprice.GeneratedName;
ClassDiagram.Attribut>> ProductPrice.defaultprice:boolean =>=>=> RelationalSchema.Column>> productprice.defaultprice;
ClassDiagram.Attribut>> ProductPrice.productpricespecialstart:Date =>=>=> RelationalSchema.Column>> productprice.productpricespecialstart;
ClassDiagram.Attribut>> ProductPrice.productpricespecialend:Date =>=>=> RelationalSchema.Column>> productprice.productpricespecialend;
ClassDiagram.Attribut>> ProductPrice.productpricespecialamount:BigDecimal =>=>=> RelationalSchema.Column>> productprice.productpricespecialamount;
ClassDiagram.Attribut>> ProductPrice.productdiscountpercentage:BigDecimal =>=>=> RelationalSchema.Column>> productprice.productdiscountpercentage;
ClassDiagram.Attribut>> ProductPrice.dealofday:String =>=>=> RelationalSchema.Column>> productprice.dealofday;
ClassDiagram.Attribut>> ProductPrice.featuredproduct:String =>=>=> RelationalSchema.Column>> productprice.featuredproduct;
ClassDiagram.Attribut>> ProductPrice.recentlybought:String =>=>=> RelationalSchema.Column>> productprice.recentlybought;
ClassDiagram.Attribut>> ProductPrice.newproduct:String =>=>=> RelationalSchema.Column>> productprice.newproduct;
ClassDiagram.Attribut>> ProductPrice.recommendedproduct:String =>=>=> RelationalSchema.Column>> productprice.recommendedproduct;
ClassDiagram.Attribut>> ProductPriceDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> productpricedescription.serialversionuid;
ClassDiagram.Attribut>> ProductPriceDescription.default_price_description:String =>=>=> RelationalSchema.Column>> productpricedescription.default_price_description;
ClassDiagram.Attribut>> ProductType.serialversionuid:long =>=>=> RelationalSchema.Column>> producttype.serialversionuid;
ClassDiagram.Attribut>> ProductType.general_type:String =>=>=> RelationalSchema.Column>> producttype.general_type;
ClassDiagram.Attribut>> ProductType.id:Long =>=>=> RelationalSchema.Column>> producttype.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductType.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> producttype.GeneratedName;
ClassDiagram.Attribut>> ProductType.code:String =>=>=> RelationalSchema.Column>> producttype.code;
ClassDiagram.Attribut>> ProductType.allowaddtocart:Boolean =>=>=> RelationalSchema.Column>> producttype.allowaddtocart;
ClassDiagram.Attribut>> TestFilter.serialversionuid:long =>=>=> RelationalSchema.Column>> testfilter.serialversionuid;
ClassDiagram.Attribut>> TestFilter.id:Long =>=>=> RelationalSchema.Column>> testfilter.id PRIMARY KEY;
ClassDiagram.Attribut>> TestFilter.filtername:String =>=>=> RelationalSchema.Column>> testfilter.filtername;
ClassDiagram.Attribut>> Filter.serialversionuid:long =>=>=> RelationalSchema.Column>> filter.serialversionuid;
ClassDiagram.Attribut>> Filter.id:Long =>=>=> RelationalSchema.Column>> filter.id PRIMARY KEY;
ClassDiagram.Attribut>> Filter.filtername:String =>=>=> RelationalSchema.Column>> filter.filtername;
ClassDiagram.Attribut>> FilterType.serialversionuid:long =>=>=> RelationalSchema.Column>> filtertype.serialversionuid;
ClassDiagram.Attribut>> FilterType.id:Long =>=>=> RelationalSchema.Column>> filtertype.id PRIMARY KEY;
ClassDiagram.Attribut>> FilterType.filtertypename:String =>=>=> RelationalSchema.Column>> filtertype.filtertypename;
ClassDiagram.Attribut>> ProductRelationship.serialversionuid:long =>=>=> RelationalSchema.Column>> productrelationship.serialversionuid;
ClassDiagram.Attribut>> ProductRelationship.id:Long =>=>=> RelationalSchema.Column>> productrelationship.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductRelationship.code:String =>=>=> RelationalSchema.Column>> productrelationship.code;
ClassDiagram.Attribut>> ProductRelationship.active:boolean =>=>=> RelationalSchema.Column>> productrelationship.active;
ClassDiagram.Attribut>> ProductOption.serialversionuid:long =>=>=> RelationalSchema.Column>> productoption.serialversionuid;
ClassDiagram.Attribut>> ProductOption.id:Long =>=>=> RelationalSchema.Column>> productoption.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductOption.productoptionsortorder:Integer =>=>=> RelationalSchema.Column>> productoption.productoptionsortorder;
ClassDiagram.Attribut>> ProductOption.productoptiontype:String =>=>=> RelationalSchema.Column>> productoption.productoptiontype;
ClassDiagram.Attribut>> ProductOption.descriptionslist:List<ProductOptionDescription> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ProductOption.readonly:boolean =>=>=> RelationalSchema.Column>> productoption.readonly;
ClassDiagram.Attribut>> ProductOption.//@index(name:String =>=>=> RelationalSchema.Column>> productoption.//@index(name;
ClassDiagram.Attribut>> ProductOptionValueDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> productoptionvaluedescription.serialversionuid;
ClassDiagram.Attribut>> ProductAttribute.serialversionuid:long =>=>=> RelationalSchema.Column>> productattribute.serialversionuid;
ClassDiagram.Attribut>> ProductAttribute.id:Long =>=>=> RelationalSchema.Column>> productattribute.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductAttribute.productattributeprice:BigDecimal =>=>=> RelationalSchema.Column>> productattribute.productattributeprice;
ClassDiagram.Attribut>> ProductAttribute.productoptionsortorder:Integer =>=>=> RelationalSchema.Column>> productattribute.productoptionsortorder;
ClassDiagram.Attribut>> ProductAttribute.productattributeisfree:boolean =>=>=> RelationalSchema.Column>> productattribute.productattributeisfree;
ClassDiagram.Attribut>> ProductAttribute.productattributeweight:BigDecimal =>=>=> RelationalSchema.Column>> productattribute.productattributeweight;
ClassDiagram.Attribut>> ProductAttribute.attributedefault:boolean =>=>=> RelationalSchema.Column>> productattribute.attributedefault;
ClassDiagram.Attribut>> ProductAttribute.attributerequired:boolean =>=>=> RelationalSchema.Column>> productattribute.attributerequired;
ClassDiagram.Attribut>> ProductAttribute./***areadonlyattributeisconsideredasacoreattributeaddition*/attributedisplayonly:boolean =>=>=> RelationalSchema.Column>> productattribute./***areadonlyattributeisconsideredasacoreattributeaddition*/attributedisplayonly;
ClassDiagram.Attribut>> ProductAttribute.attributediscounted:boolean =>=>=> RelationalSchema.Column>> productattribute.attributediscounted;
ClassDiagram.Attribut>> ProductAttribute./***thistransientobjectproperty*isautilityusedonlytosubmitfromafreetext*/attributeprice:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ProductAttribute./***thistransientobjectproperty*isautilityusedonlytosubmitfromafreetext*/attributesortorder:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ProductAttribute./***thistransientobjectproperty*isautilityusedonlytosubmitfromafreetext*/attributeadditionalweight:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ProductOptionDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> productoptiondescription.serialversionuid;
ClassDiagram.Attribut>> ProductOptionDescription.productoptioncomment:String =>=>=> RelationalSchema.Column>> productoptiondescription.productoptioncomment;
ClassDiagram.Attribut>> ProductOptionValue.serialversionuid:long =>=>=> RelationalSchema.Column>> productoptionvalue.serialversionuid;
ClassDiagram.Attribut>> ProductOptionValue.id:Long =>=>=> RelationalSchema.Column>> productoptionvalue.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductOptionValue.productoptionvaluesortorder:Integer =>=>=> RelationalSchema.Column>> productoptionvalue.productoptionvaluesortorder;
ClassDiagram.Attribut>> ProductOptionValue.productoptionvalueimage:String =>=>=> RelationalSchema.Column>> productoptionvalue.productoptionvalueimage;
ClassDiagram.Attribut>> ProductOptionValue.productoptiondisplayonly:boolean =>=>=> RelationalSchema.Column>> productoptionvalue.productoptiondisplayonly;
ClassDiagram.Attribut>> ProductOptionValue.code:String =>=>=> RelationalSchema.Column>> productoptionvalue.code;
ClassDiagram.Attribut>> ProductOptionValue.image:MultipartFile =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ProductOptionValue.descriptionslist:List<ProductOptionValueDescription> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ManufacturerDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> manufacturerdescription.serialversionuid;
ClassDiagram.Attribut>> ManufacturerDescription.url:String =>=>=> RelationalSchema.Column>> manufacturerdescription.url;
ClassDiagram.Attribut>> ManufacturerDescription.urlclicked:Integer =>=>=> RelationalSchema.Column>> manufacturerdescription.urlclicked;
ClassDiagram.Attribut>> ManufacturerDescription.lastclick:Date =>=>=> RelationalSchema.Column>> manufacturerdescription.lastclick;
ClassDiagram.Attribut>> Manufacturer.serialversionuid:long =>=>=> RelationalSchema.Column>> manufacturer.serialversionuid;
ClassDiagram.Attribut>> Manufacturer.id:Long =>=>=> RelationalSchema.Column>> manufacturer.id PRIMARY KEY;
ClassDiagram.Attribut>> Manufacturer.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> manufacturer.GeneratedName;
ClassDiagram.Attribut>> Manufacturer.image:String =>=>=> RelationalSchema.Column>> manufacturer.image;
ClassDiagram.Attribut>> Manufacturer.order:Integer =>=>=> RelationalSchema.Column>> manufacturer.order;
ClassDiagram.Attribut>> Manufacturer.code:String =>=>=> RelationalSchema.Column>> manufacturer.code;
ClassDiagram.Attribut>> ProductDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> productdescription.serialversionuid;
ClassDiagram.Attribut>> ProductDescription.producthighlight:String =>=>=> RelationalSchema.Column>> productdescription.producthighlight;
ClassDiagram.Attribut>> ProductDescription.productexternaldl:String =>=>=> RelationalSchema.Column>> productdescription.productexternaldl;
ClassDiagram.Attribut>> ProductDescription.seurl:String =>=>=> RelationalSchema.Column>> productdescription.seurl;
ClassDiagram.Attribut>> ProductDescription.metatagtitle:String =>=>=> RelationalSchema.Column>> productdescription.metatagtitle;
ClassDiagram.Attribut>> ProductDescription.metatagkeywords:String =>=>=> RelationalSchema.Column>> productdescription.metatagkeywords;
ClassDiagram.Attribut>> ProductDescription.metatagdescription:String =>=>=> RelationalSchema.Column>> productdescription.metatagdescription;
ClassDiagram.Attribut>> DigitalProduct.serialversionuid:long =>=>=> RelationalSchema.Column>> digitalproduct.serialversionuid;
ClassDiagram.Attribut>> DigitalProduct.id:Long =>=>=> RelationalSchema.Column>> digitalproduct.id PRIMARY KEY;
ClassDiagram.Attribut>> DigitalProduct.productfilename:String =>=>=> RelationalSchema.Column>> digitalproduct.productfilename;
ClassDiagram.Attribut>> Category.serialversionuid:long =>=>=> RelationalSchema.Column>> category.serialversionuid;
ClassDiagram.Attribut>> Category.id:Long =>=>=> RelationalSchema.Column>> category.id PRIMARY KEY;
ClassDiagram.Attribut>> Category.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> category.GeneratedName;
ClassDiagram.Attribut>> Category.categoryimage:String =>=>=> RelationalSchema.Column>> category.categoryimage;
ClassDiagram.Attribut>> Category.categoryimage1:String =>=>=> RelationalSchema.Column>> category.categoryimage1;
ClassDiagram.Attribut>> Category.sortorder:Integer =>=>=> RelationalSchema.Column>> category.sortorder;
ClassDiagram.Attribut>> Category.categorystatus:boolean =>=>=> RelationalSchema.Column>> category.categorystatus;
ClassDiagram.Attribut>> Category.visible:boolean =>=>=> RelationalSchema.Column>> category.visible;
ClassDiagram.Attribut>> Category.depth:Integer =>=>=> RelationalSchema.Column>> category.depth;
ClassDiagram.Attribut>> Category.lineage:String =>=>=> RelationalSchema.Column>> category.lineage;
ClassDiagram.Attribut>> Category.code:String =>=>=> RelationalSchema.Column>> category.code;
ClassDiagram.Attribut>> Category.preferenceorder:Integer =>=>=> RelationalSchema.Column>> category.preferenceorder;
ClassDiagram.Attribut>> SubCategoryImage./***/serialversionuid:long =>=>=> RelationalSchema.Column>> subcategoryimage./***/serialversionuid;
ClassDiagram.Attribut>> SubCategoryImage.id:Long =>=>=> RelationalSchema.Column>> subcategoryimage.id PRIMARY KEY;
ClassDiagram.Attribut>> SubCategoryImage.subcategoryimageurl:String =>=>=> RelationalSchema.Column>> subcategoryimage.subcategoryimageurl;
ClassDiagram.Attribut>> CategoryDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> categorydescription.serialversionuid;
ClassDiagram.Attribut>> CategoryDescription.seurl:String =>=>=> RelationalSchema.Column>> categorydescription.seurl;
ClassDiagram.Attribut>> CategoryDescription.categoryhighlight:String =>=>=> RelationalSchema.Column>> categorydescription.categoryhighlight;
ClassDiagram.Attribut>> CategoryDescription.metatagtitle:String =>=>=> RelationalSchema.Column>> categorydescription.metatagtitle;
ClassDiagram.Attribut>> CategoryDescription.metatagkeywords:String =>=>=> RelationalSchema.Column>> categorydescription.metatagkeywords;
ClassDiagram.Attribut>> CategoryDescription.metatagdescription:String =>=>=> RelationalSchema.Column>> categorydescription.metatagdescription;
ClassDiagram.Attribut>> HistoryManagement./***/serialversionuid:long =>=>=> RelationalSchema.Column>> historymanagement./***/serialversionuid;
ClassDiagram.Attribut>> HistoryManagement.id:Long =>=>=> RelationalSchema.Column>> historymanagement.id PRIMARY KEY;
ClassDiagram.Attribut>> HistoryManagement.productid:Long =>=>=> RelationalSchema.Column>> historymanagement.productid;
ClassDiagram.Attribut>> HistoryManagement.productname:String =>=>=> RelationalSchema.Column>> historymanagement.productname;
ClassDiagram.Attribut>> HistoryManagement.productprice:BigDecimal =>=>=> RelationalSchema.Column>> historymanagement.productprice;
ClassDiagram.Attribut>> HistoryManagement.productdiscountprice:BigDecimal =>=>=> RelationalSchema.Column>> historymanagement.productdiscountprice;
ClassDiagram.Attribut>> HistoryManagement.productpricestart:Date =>=>=> RelationalSchema.Column>> historymanagement.productpricestart;
ClassDiagram.Attribut>> HistoryManagement.productpriceend:Date =>=>=> RelationalSchema.Column>> historymanagement.productpriceend;
ClassDiagram.Attribut>> HistoryManagement.enablefor:String =>=>=> RelationalSchema.Column>> historymanagement.enablefor;
ClassDiagram.Attribut>> Language.serialversionuid:long =>=>=> RelationalSchema.Column>> language.serialversionuid;
ClassDiagram.Attribut>> Language.id:Integer =>=>=> RelationalSchema.Column>> language.id PRIMARY KEY;
ClassDiagram.Attribut>> Language.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> language.GeneratedName;
ClassDiagram.Attribut>> Language.code:String =>=>=> RelationalSchema.Column>> language.code;
ClassDiagram.Attribut>> Language.sortorder:Integer =>=>=> RelationalSchema.Column>> language.sortorder;
ClassDiagram.Attribut>> GeoZone.serialversionuid:long =>=>=> RelationalSchema.Column>> geozone.serialversionuid;
ClassDiagram.Attribut>> GeoZone.id:Long =>=>=> RelationalSchema.Column>> geozone.id PRIMARY KEY;
ClassDiagram.Attribut>> GeoZone.name:String =>=>=> RelationalSchema.Column>> geozone.name;
ClassDiagram.Attribut>> GeoZone.code:String =>=>=> RelationalSchema.Column>> geozone.code;
ClassDiagram.Attribut>> GeoZoneDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> geozonedescription.serialversionuid;
ClassDiagram.Attribut>> Zone.serialversionuid:long =>=>=> RelationalSchema.Column>> zone.serialversionuid;
ClassDiagram.Attribut>> Zone.id:Long =>=>=> RelationalSchema.Column>> zone.id PRIMARY KEY;
ClassDiagram.Attribut>> Zone.name:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Zone.code:String =>=>=> RelationalSchema.Column>> zone.code;
ClassDiagram.Attribut>> ZoneDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> zonedescription.serialversionuid;
ClassDiagram.Attribut>> Country.serialversionuid:long =>=>=> RelationalSchema.Column>> country.serialversionuid;
ClassDiagram.Attribut>> Country.id:Integer =>=>=> RelationalSchema.Column>> country.id PRIMARY KEY;
ClassDiagram.Attribut>> Country.supported:boolean =>=>=> RelationalSchema.Column>> country.supported;
ClassDiagram.Attribut>> Country.isocode:String =>=>=> RelationalSchema.Column>> country.isocode;
ClassDiagram.Attribut>> Country.name:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CountryDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> countrydescription.serialversionuid;
ClassDiagram.Attribut>> Currency.serialversionuid:long =>=>=> RelationalSchema.Column>> currency.serialversionuid;
ClassDiagram.Attribut>> Currency.id:Long =>=>=> RelationalSchema.Column>> currency.id PRIMARY KEY;
ClassDiagram.Attribut>> Currency.currency:java.util.Currency =>=>=> RelationalSchema.Column>> currency.currency;
ClassDiagram.Attribut>> Currency.supported:Boolean =>=>=> RelationalSchema.Column>> currency.supported;
ClassDiagram.Attribut>> Currency.code:String =>=>=> RelationalSchema.Column>> currency.code;
ClassDiagram.Attribut>> Currency.name:String =>=>=> RelationalSchema.Column>> currency.name;
ClassDiagram.Attribut>> VendorProduct./***/serialversionuid:long =>=>=> RelationalSchema.Column>> vendorproduct./***/serialversionuid;
ClassDiagram.Attribut>> VendorProduct.id:Long =>=>=> RelationalSchema.Column>> vendorproduct.id PRIMARY KEY;
ClassDiagram.Attribut>> VendorProduct.created:Date =>=>=> RelationalSchema.Column>> vendorproduct.created;
ClassDiagram.Attribut>> VendorProduct.adminactivated:Boolean =>=>=> RelationalSchema.Column>> vendorproduct.adminactivated;
ClassDiagram.Attribut>> VendorProduct.adminactivated:Date =>=>=> RelationalSchema.Column>> vendorproduct.adminactivated;
ClassDiagram.Attribut>> VendorProduct.vendorwishlisted:Boolean =>=>=> RelationalSchema.Column>> vendorproduct.vendorwishlisted;
ClassDiagram.Attribut>> OrderStatusHistory.serialversionuid:long =>=>=> RelationalSchema.Column>> orderstatushistory.serialversionuid;
ClassDiagram.Attribut>> OrderStatusHistory.id:Long =>=>=> RelationalSchema.Column>> orderstatushistory.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderStatusHistory.status:OrderStatus =>=>=> RelationalSchema.Column>> orderstatushistory.status;
ClassDiagram.Attribut>> OrderStatusHistory.added:Date =>=>=> RelationalSchema.Column>> orderstatushistory.added;
ClassDiagram.Attribut>> OrderStatusHistory.customernotified:java.lang.Integer =>=>=> RelationalSchema.Column>> orderstatushistory.customernotified;
ClassDiagram.Attribut>> OrderStatusHistory.comments:String =>=>=> RelationalSchema.Column>> orderstatushistory.comments;
ClassDiagram.Attribut>> Order./***/serialversionuid:long =>=>=> RelationalSchema.Column>> order./***/serialversionuid;
ClassDiagram.Attribut>> Order.id:Long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.status:OrderStatus =>=>=> RelationalSchema.Column>> order.status;
ClassDiagram.Attribut>> Order.lastmodified:Date =>=>=> RelationalSchema.Column>> order.lastmodified;
ClassDiagram.Attribut>> Order.//thecustomerobjectcanbedetached.anordercanexistandthecustomerdeletedcustomerid:Long =>=>=> RelationalSchema.Column>> order.//thecustomerobjectcanbedetached.anordercanexistandthecustomerdeletedcustomerid;
ClassDiagram.Attribut>> Order.purchased:Date =>=>=> RelationalSchema.Column>> order.purchased;
ClassDiagram.Attribut>> Order.//usedforanorderpayableonmultipleinstallmentorderfinished:Date =>=>=> RelationalSchema.Column>> order.//usedforanorderpayableonmultipleinstallmentorderfinished;
ClassDiagram.Attribut>> Order.//whatwastheexchangerate//default1-1currencyvalue:BigDecimal =>=>=> RelationalSchema.Column>> order.//whatwastheexchangerate//default1-1currencyvalue;
ClassDiagram.Attribut>> Order.total:BigDecimal =>=>=> RelationalSchema.Column>> order.total;
ClassDiagram.Attribut>> Order.ipaddress:String =>=>=> RelationalSchema.Column>> order.ipaddress;
ClassDiagram.Attribut>> Order.channel:OrderChannel =>=>=> RelationalSchema.Column>> order.channel;
ClassDiagram.Attribut>> Order.GeneratedName:OrderType =>=>=> RelationalSchema.Column>> order.GeneratedName;
ClassDiagram.Attribut>> Order.GeneratedName:PaymentType =>=>=> RelationalSchema.Column>> order.GeneratedName;
ClassDiagram.Attribut>> Order.paymentmodulecode:String =>=>=> RelationalSchema.Column>> order.paymentmodulecode;
ClassDiagram.Attribut>> Order.shippingmodulecode:String =>=>=> RelationalSchema.Column>> order.shippingmodulecode;
ClassDiagram.Attribut>> Order.customeragreement:Boolean =>=>=> RelationalSchema.Column>> order.customeragreement;
ClassDiagram.Attribut>> Order.confirmedaddress:Boolean =>=>=> RelationalSchema.Column>> order.confirmedaddress;
ClassDiagram.Attribut>> Order.GeneratedName:Delivery =>=>=> RelationalSchema.Column>> order.GeneratedName;
ClassDiagram.Attribut>> Order.GeneratedName:Billing =>=>=> RelationalSchema.Column>> order.GeneratedName;
ClassDiagram.Attribut>> Order.GeneratedName:CreditCard =>=>=> RelationalSchema.Column>> order.GeneratedName;
ClassDiagram.Attribut>> Order.GeneratedName:Locale =>=>=> RelationalSchema.Column>> order.GeneratedName;
ClassDiagram.Attribut>> Order.shippingcharges:Long =>=>=> RelationalSchema.Column>> order.shippingcharges;
ClassDiagram.Attribut>> Order.customeremailaddress:String =>=>=> RelationalSchema.Column>> order.customeremailaddress;
ClassDiagram.Attribut>> OrderAccount.serialversionuid:long =>=>=> RelationalSchema.Column>> orderaccount.serialversionuid;
ClassDiagram.Attribut>> OrderAccount.id:Long =>=>=> RelationalSchema.Column>> orderaccount.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderAccount.orderaccountstart:Date =>=>=> RelationalSchema.Column>> orderaccount.orderaccountstart;
ClassDiagram.Attribut>> OrderAccount.orderaccountend:Date =>=>=> RelationalSchema.Column>> orderaccount.orderaccountend;
ClassDiagram.Attribut>> OrderAccount.orderaccountbillday:Integer =>=>=> RelationalSchema.Column>> orderaccount.orderaccountbillday;
ClassDiagram.Attribut>> OrderAccountProduct.serialversionuid:long =>=>=> RelationalSchema.Column>> orderaccountproduct.serialversionuid;
ClassDiagram.Attribut>> OrderAccountProduct.orderaccountproductid:Long =>=>=> RelationalSchema.Column>> orderaccountproduct.orderaccountproductid PRIMARY KEY;
ClassDiagram.Attribut>> OrderAccountProduct.orderaccountproductstart:Date =>=>=> RelationalSchema.Column>> orderaccountproduct.orderaccountproductstart;
ClassDiagram.Attribut>> OrderAccountProduct.orderaccountproductend:Date =>=>=> RelationalSchema.Column>> orderaccountproduct.orderaccountproductend;
ClassDiagram.Attribut>> OrderAccountProduct.orderaccountproducteot:Date =>=>=> RelationalSchema.Column>> orderaccountproduct.orderaccountproducteot;
ClassDiagram.Attribut>> OrderAccountProduct.orderaccountproductaccounted:Date =>=>=> RelationalSchema.Column>> orderaccountproduct.orderaccountproductaccounted;
ClassDiagram.Attribut>> OrderAccountProduct.orderaccountproductlaststatus:Date =>=>=> RelationalSchema.Column>> orderaccountproduct.orderaccountproductlaststatus;
ClassDiagram.Attribut>> OrderAccountProduct.orderaccountproductlasttransactionstatus:Integer =>=>=> RelationalSchema.Column>> orderaccountproduct.orderaccountproductlasttransactionstatus;
ClassDiagram.Attribut>> OrderAccountProduct.orderaccountproductpaymentfrequencytype:Integer =>=>=> RelationalSchema.Column>> orderaccountproduct.orderaccountproductpaymentfrequencytype;
ClassDiagram.Attribut>> OrderAccountProduct.orderaccountproductstatus:Integer =>=>=> RelationalSchema.Column>> orderaccountproduct.orderaccountproductstatus;
ClassDiagram.Attribut>> OrderProductDownload.serialversionuid:long =>=>=> RelationalSchema.Column>> orderproductdownload.serialversionuid;
ClassDiagram.Attribut>> OrderProductDownload.default_download_max_days:int =>=>=> RelationalSchema.Column>> orderproductdownload.default_download_max_days;
ClassDiagram.Attribut>> OrderProductDownload.id:Long =>=>=> RelationalSchema.Column>> orderproductdownload.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderProductDownload.orderproductfilename:String =>=>=> RelationalSchema.Column>> orderproductdownload.orderproductfilename;
ClassDiagram.Attribut>> OrderProductDownload.maxdays:Integer =>=>=> RelationalSchema.Column>> orderproductdownload.maxdays;
ClassDiagram.Attribut>> OrderProductDownload.downloadcount:Integer =>=>=> RelationalSchema.Column>> orderproductdownload.downloadcount;
ClassDiagram.Attribut>> OrderProductAttribute.serialversionuid:long =>=>=> RelationalSchema.Column>> orderproductattribute.serialversionuid;
ClassDiagram.Attribut>> OrderProductAttribute.id:Long =>=>=> RelationalSchema.Column>> orderproductattribute.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderProductAttribute.productattributeprice:BigDecimal =>=>=> RelationalSchema.Column>> orderproductattribute.productattributeprice;
ClassDiagram.Attribut>> OrderProductAttribute.productattributeisfree:boolean =>=>=> RelationalSchema.Column>> orderproductattribute.productattributeisfree;
ClassDiagram.Attribut>> OrderProductAttribute.productattributeweight:java.math.BigDecimal =>=>=> RelationalSchema.Column>> orderproductattribute.productattributeweight;
ClassDiagram.Attribut>> OrderProductAttribute.productoptionid:Long =>=>=> RelationalSchema.Column>> orderproductattribute.productoptionid;
ClassDiagram.Attribut>> OrderProductAttribute.productoptionvalueid:Long =>=>=> RelationalSchema.Column>> orderproductattribute.productoptionvalueid;
ClassDiagram.Attribut>> OrderProductAttribute.productattributename:String =>=>=> RelationalSchema.Column>> orderproductattribute.productattributename;
ClassDiagram.Attribut>> OrderProductAttribute.productattributevaluename:String =>=>=> RelationalSchema.Column>> orderproductattribute.productattributevaluename;
ClassDiagram.Attribut>> OrderProductPrice.serialversionuid:long =>=>=> RelationalSchema.Column>> orderproductprice.serialversionuid;
ClassDiagram.Attribut>> OrderProductPrice.id:Long =>=>=> RelationalSchema.Column>> orderproductprice.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderProductPrice.productpricecode:String =>=>=> RelationalSchema.Column>> orderproductprice.productpricecode;
ClassDiagram.Attribut>> OrderProductPrice.productprice:BigDecimal =>=>=> RelationalSchema.Column>> orderproductprice.productprice;
ClassDiagram.Attribut>> OrderProductPrice.productpricespecial:BigDecimal =>=>=> RelationalSchema.Column>> orderproductprice.productpricespecial;
ClassDiagram.Attribut>> OrderProductPrice.productpricespecialstart:Date =>=>=> RelationalSchema.Column>> orderproductprice.productpricespecialstart;
ClassDiagram.Attribut>> OrderProductPrice.productpricespecialend:Date =>=>=> RelationalSchema.Column>> orderproductprice.productpricespecialend;
ClassDiagram.Attribut>> OrderProductPrice.defaultprice:Boolean =>=>=> RelationalSchema.Column>> orderproductprice.defaultprice;
ClassDiagram.Attribut>> OrderProductPrice.productpricename:String =>=>=> RelationalSchema.Column>> orderproductprice.productpricename;
ClassDiagram.Attribut>> OrderProduct.serialversionuid:long =>=>=> RelationalSchema.Column>> orderproduct.serialversionuid;
ClassDiagram.Attribut>> OrderProduct.id:Long =>=>=> RelationalSchema.Column>> orderproduct.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderProduct.sku:String =>=>=> RelationalSchema.Column>> orderproduct.sku;
ClassDiagram.Attribut>> OrderProduct.productname:String =>=>=> RelationalSchema.Column>> orderproduct.productname;
ClassDiagram.Attribut>> OrderProduct.productquantity:int =>=>=> RelationalSchema.Column>> orderproduct.productquantity;
ClassDiagram.Attribut>> OrderProduct.onetimecharge:BigDecimal =>=>=> RelationalSchema.Column>> orderproduct.onetimecharge;
ClassDiagram.Attribut>> OrderProduct.vendorid:Long =>=>=> RelationalSchema.Column>> orderproduct.vendorid;
ClassDiagram.Attribut>> OrderProduct.//addedspecifictoproductslikewallpapersproductcategory:String =>=>=> RelationalSchema.Column>> orderproduct.//addedspecifictoproductslikewallpapersproductcategory;
ClassDiagram.Attribut>> OrderProduct.productid:Long =>=>=> RelationalSchema.Column>> orderproduct.productid;
ClassDiagram.Attribut>> OrderTotal.serialversionuid:long =>=>=> RelationalSchema.Column>> ordertotal.serialversionuid;
ClassDiagram.Attribut>> OrderTotal.id:Long =>=>=> RelationalSchema.Column>> ordertotal.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderTotal.//shipping,taxordertotalcode:String =>=>=> RelationalSchema.Column>> ordertotal.//shipping,taxordertotalcode;
ClassDiagram.Attribut>> OrderTotal.title:String =>=>=> RelationalSchema.Column>> ordertotal.title;
ClassDiagram.Attribut>> OrderTotal.text:String =>=>=> RelationalSchema.Column>> ordertotal.text;
ClassDiagram.Attribut>> OrderTotal.value:BigDecimal =>=>=> RelationalSchema.Column>> ordertotal.value;
ClassDiagram.Attribut>> OrderTotal.module:String =>=>=> RelationalSchema.Column>> ordertotal.module;
ClassDiagram.Attribut>> OrderTotal.GeneratedName:OrderValueType =>=>=> RelationalSchema.Column>> ordertotal.GeneratedName;
ClassDiagram.Attribut>> OrderTotal.GeneratedName:OrderTotalType =>=>=> RelationalSchema.Column>> ordertotal.GeneratedName;
ClassDiagram.Attribut>> OrderTotal.sortorder:int =>=>=> RelationalSchema.Column>> ordertotal.sortorder;
ClassDiagram.Attribut>> FileHistory.serialversionuid:long =>=>=> RelationalSchema.Column>> filehistory.serialversionuid;
ClassDiagram.Attribut>> FileHistory.id:Long =>=>=> RelationalSchema.Column>> filehistory.id PRIMARY KEY;
ClassDiagram.Attribut>> FileHistory.fileid:Long =>=>=> RelationalSchema.Column>> filehistory.fileid;
ClassDiagram.Attribut>> FileHistory.filesize:Integer =>=>=> RelationalSchema.Column>> filehistory.filesize;
ClassDiagram.Attribut>> FileHistory.added:Date =>=>=> RelationalSchema.Column>> filehistory.added;
ClassDiagram.Attribut>> FileHistory.deleted:Date =>=>=> RelationalSchema.Column>> filehistory.deleted;
ClassDiagram.Attribut>> FileHistory.accounted:Date =>=>=> RelationalSchema.Column>> filehistory.accounted;
ClassDiagram.Attribut>> FileHistory.downloadcount:Integer =>=>=> RelationalSchema.Column>> filehistory.downloadcount;
ClassDiagram.Attribut>> TaxRate.serialversionuid:long =>=>=> RelationalSchema.Column>> taxrate.serialversionuid;
ClassDiagram.Attribut>> TaxRate.id:Long =>=>=> RelationalSchema.Column>> taxrate.id PRIMARY KEY;
ClassDiagram.Attribut>> TaxRate.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> taxrate.GeneratedName;
ClassDiagram.Attribut>> TaxRate.taxpriority:Integer =>=>=> RelationalSchema.Column>> taxrate.taxpriority;
ClassDiagram.Attribut>> TaxRate.taxrate:BigDecimal =>=>=> RelationalSchema.Column>> taxrate.taxrate;
ClassDiagram.Attribut>> TaxRate.code:String =>=>=> RelationalSchema.Column>> taxrate.code;
ClassDiagram.Attribut>> TaxRate.piggyback:boolean =>=>=> RelationalSchema.Column>> taxrate.piggyback;
ClassDiagram.Attribut>> TaxRate.stateprovince:String =>=>=> RelationalSchema.Column>> taxrate.stateprovince;
ClassDiagram.Attribut>> TaxRate.ratetext:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> TaxRateDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> taxratedescription.serialversionuid;
ClassDiagram.Attribut>> TaxClass.serialversionuid:long =>=>=> RelationalSchema.Column>> taxclass.serialversionuid;
ClassDiagram.Attribut>> TaxClass.default_tax_class:String =>=>=> RelationalSchema.Column>> taxclass.default_tax_class;
ClassDiagram.Attribut>> TaxClass.id:Long =>=>=> RelationalSchema.Column>> taxclass.id PRIMARY KEY;
ClassDiagram.Attribut>> TaxClass.code:String =>=>=> RelationalSchema.Column>> taxclass.code;
ClassDiagram.Attribut>> TaxClass.title:String =>=>=> RelationalSchema.Column>> taxclass.title;
ClassDiagram.Attribut>> ShoppingCart.serialversionuid:long =>=>=> RelationalSchema.Column>> shoppingcart.serialversionuid;
ClassDiagram.Attribut>> ShoppingCart.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> shoppingcart.GeneratedName;
ClassDiagram.Attribut>> ShoppingCart.id:Long =>=>=> RelationalSchema.Column>> shoppingcart.id PRIMARY KEY;
ClassDiagram.Attribut>> ShoppingCart./***willbeusedtofetchshoppingcartmodelfromthecontroller*thisisauniquecodethatshouldbeattributedfromtheclient(ui)*/shoppingcartcode:String =>=>=> RelationalSchema.Column>> shoppingcart./***willbeusedtofetchshoppingcartmodelfromthecontroller*thisisauniquecodethatshouldbeattributedfromtheclient(ui)*/shoppingcartcode;
ClassDiagram.Attribut>> ShoppingCart.customerid:Long =>=>=> RelationalSchema.Column>> shoppingcart.customerid;
ClassDiagram.Attribut>> ShoppingCart.shippingcharges:Long =>=>=> RelationalSchema.Column>> shoppingcart.shippingcharges;
ClassDiagram.Attribut>> ShoppingCart.//whenallitemsareobsoleteobsolete:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ShoppingCartItem.serialversionuid:long =>=>=> RelationalSchema.Column>> shoppingcartitem.serialversionuid;
ClassDiagram.Attribut>> ShoppingCartItem.id:Long =>=>=> RelationalSchema.Column>> shoppingcartitem.id PRIMARY KEY;
ClassDiagram.Attribut>> ShoppingCartItem.quantity:Integer =>=>=> RelationalSchema.Column>> shoppingcartitem.quantity;
ClassDiagram.Attribut>> ShoppingCartItem.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> shoppingcartitem.GeneratedName;
ClassDiagram.Attribut>> ShoppingCartItem.productid:Long =>=>=> RelationalSchema.Column>> shoppingcartitem.productid;
ClassDiagram.Attribut>> ShoppingCartItem.productvirtual:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ShoppingCartItem.//itempriceincludingallrebatesitemprice:BigDecimal =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ShoppingCartItem.//itemprice*quantitysubtotal:BigDecimal =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ShoppingCartItem.//containspricedetails(rawprices):FinalPrice =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ShoppingCartItem.vendorid:Long =>=>=> RelationalSchema.Column>> shoppingcartitem.vendorid;
ClassDiagram.Attribut>> ShoppingCartItem.GeneratedName:Product =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ShoppingCartItem.GeneratedName:WallPaperPortfolio =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ShoppingCartItem.obsolete:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ShoppingCartItem.//addedspecifictoproductslikewallpapersproductcategory:String =>=>=> RelationalSchema.Column>> shoppingcartitem.//addedspecifictoproductslikewallpapersproductcategory;
ClassDiagram.Attribut>> ShoppingCartAttributeItem.serialversionuid:long =>=>=> RelationalSchema.Column>> shoppingcartattributeitem.serialversionuid;
ClassDiagram.Attribut>> ShoppingCartAttributeItem.id:Long =>=>=> RelationalSchema.Column>> shoppingcartattributeitem.id PRIMARY KEY;
ClassDiagram.Attribut>> ShoppingCartAttributeItem.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> shoppingcartattributeitem.GeneratedName;
ClassDiagram.Attribut>> ShoppingCartAttributeItem.productattributeid:Long =>=>=> RelationalSchema.Column>> shoppingcartattributeitem.productattributeid;
ClassDiagram.Attribut>> ShoppingCartAttributeItem.GeneratedName:ProductAttribute =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ContentDescription./***/serialversionuid:long =>=>=> RelationalSchema.Column>> contentdescription./***/serialversionuid;
ClassDiagram.Attribut>> ContentDescription.seurl:String =>=>=> RelationalSchema.Column>> contentdescription.seurl;
ClassDiagram.Attribut>> ContentDescription.metatagkeywords:String =>=>=> RelationalSchema.Column>> contentdescription.metatagkeywords;
ClassDiagram.Attribut>> ContentDescription.metatagtitle:String =>=>=> RelationalSchema.Column>> contentdescription.metatagtitle;
ClassDiagram.Attribut>> ContentDescription.metatagdescription:String =>=>=> RelationalSchema.Column>> contentdescription.metatagdescription;
ClassDiagram.Attribut>> Content.serialversionuid:long =>=>=> RelationalSchema.Column>> content.serialversionuid;
ClassDiagram.Attribut>> Content.id:Long =>=>=> RelationalSchema.Column>> content.id PRIMARY KEY;
ClassDiagram.Attribut>> Content.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> content.GeneratedName;
ClassDiagram.Attribut>> Content.code:String =>=>=> RelationalSchema.Column>> content.code;
ClassDiagram.Attribut>> Content.visible:boolean =>=>=> RelationalSchema.Column>> content.visible;
ClassDiagram.Attribut>> Content.GeneratedName:ContentPosition =>=>=> RelationalSchema.Column>> content.GeneratedName;
ClassDiagram.Attribut>> Content.//usedforgrouping//box,section,page:ContentType =>=>=> RelationalSchema.Column>> content.//usedforgrouping//box,section,page;
ClassDiagram.Attribut>> Content.sortorder:Integer =>=>=> RelationalSchema.Column>> content.sortorder;
ClassDiagram.Attribut>> Content.//apagecancontainoneproductlistingproductgroup:String =>=>=> RelationalSchema.Column>> content.//apagecancontainoneproductlistingproductgroup;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.adminname:String =>=>=> RelationalSchema.Column>> user.adminname;
ClassDiagram.Attribut>> User.adminemail:String =>=>=> RelationalSchema.Column>> user.adminemail;
ClassDiagram.Attribut>> User.adminpassword:String =>=>=> RelationalSchema.Column>> user.adminpassword;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.active:boolean =>=>=> RelationalSchema.Column>> user.active;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.question1:String =>=>=> RelationalSchema.Column>> user.question1;
ClassDiagram.Attribut>> User.question2:String =>=>=> RelationalSchema.Column>> user.question2;
ClassDiagram.Attribut>> User.question3:String =>=>=> RelationalSchema.Column>> user.question3;
ClassDiagram.Attribut>> User.answer1:String =>=>=> RelationalSchema.Column>> user.answer1;
ClassDiagram.Attribut>> User.answer2:String =>=>=> RelationalSchema.Column>> user.answer2;
ClassDiagram.Attribut>> User.answer3:String =>=>=> RelationalSchema.Column>> user.answer3;
ClassDiagram.Attribut>> User.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> user.GeneratedName;
ClassDiagram.Attribut>> User.lastaccess:Date =>=>=> RelationalSchema.Column>> user.lastaccess;
ClassDiagram.Attribut>> User.logintime:Date =>=>=> RelationalSchema.Column>> user.logintime;
ClassDiagram.Attribut>> Permission.serialversionuid:long =>=>=> RelationalSchema.Column>> permission.serialversionuid;
ClassDiagram.Attribut>> Permission.id:Integer =>=>=> RelationalSchema.Column>> permission.id PRIMARY KEY;
ClassDiagram.Attribut>> Permission.permissionname:String =>=>=> RelationalSchema.Column>> permission.permissionname;
ClassDiagram.Attribut>> Permission.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> permission.GeneratedName;
ClassDiagram.Attribut>> Group./***/serialversionuid:long =>=>=> RelationalSchema.Column>> group./***/serialversionuid;
ClassDiagram.Attribut>> Group.id:Integer =>=>=> RelationalSchema.Column>> group.id PRIMARY KEY;
ClassDiagram.Attribut>> Group.GeneratedName:GroupType =>=>=> RelationalSchema.Column>> group.GeneratedName;
ClassDiagram.Attribut>> Group.groupname:String =>=>=> RelationalSchema.Column>> group.groupname;
ClassDiagram.Attribut>> Group.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> group.GeneratedName;
ClassDiagram.Attribut>> UserUpdates./***/serialversionuid:long =>=>=> RelationalSchema.Column>> userupdates./***/serialversionuid;
ClassDiagram.Attribut>> UserUpdates.id:Long =>=>=> RelationalSchema.Column>> userupdates.id PRIMARY KEY;
ClassDiagram.Attribut>> UserUpdates.emailaddress:String =>=>=> RelationalSchema.Column>> userupdates.emailaddress;
ClassDiagram.Attribut>> Transaction.GeneratedName:Logger =>=>=> RelationalSchema.Column>> transaction.GeneratedName;
ClassDiagram.Attribut>> Transaction./***/serialversionuid:long =>=>=> RelationalSchema.Column>> transaction./***/serialversionuid;
ClassDiagram.Attribut>> Transaction.id:Long =>=>=> RelationalSchema.Column>> transaction.id PRIMARY KEY;
ClassDiagram.Attribut>> Transaction.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> transaction.GeneratedName;
ClassDiagram.Attribut>> Transaction.amount:BigDecimal =>=>=> RelationalSchema.Column>> transaction.amount;
ClassDiagram.Attribut>> Transaction.transaction:Date =>=>=> RelationalSchema.Column>> transaction.transaction;
ClassDiagram.Attribut>> Transaction.GeneratedName:TransactionType =>=>=> RelationalSchema.Column>> transaction.GeneratedName;
ClassDiagram.Attribut>> Transaction.GeneratedName:PaymentType =>=>=> RelationalSchema.Column>> transaction.GeneratedName;
ClassDiagram.Attribut>> Transaction.details:String =>=>=> RelationalSchema.Column>> transaction.details;
ClassDiagram.Attribut>> Transaction.transactiondetails:Map<String,String> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Description.serialversionuid:long =>=>=> RelationalSchema.Column>> description.serialversionuid;
ClassDiagram.Attribut>> Description.id:Long =>=>=> RelationalSchema.Column>> description.id PRIMARY KEY;
ClassDiagram.Attribut>> Description.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> description.GeneratedName;
ClassDiagram.Attribut>> Description.name:String =>=>=> RelationalSchema.Column>> description.name;
ClassDiagram.Attribut>> Description.title:String =>=>=> RelationalSchema.Column>> description.title;
ClassDiagram.Attribut>> Description.description:String =>=>=> RelationalSchema.Column>> description.description;
ClassDiagram.Attribut>> BrandImage./***/serialversionuid:long =>=>=> RelationalSchema.Column>> brandimage./***/serialversionuid;
ClassDiagram.Attribut>> BrandImage.id:Long =>=>=> RelationalSchema.Column>> brandimage.id PRIMARY KEY;
ClassDiagram.Attribut>> BrandImage.image:String =>=>=> RelationalSchema.Column>> brandimage.image;
ClassDiagram.Attribut>> BrandImage.name:String =>=>=> RelationalSchema.Column>> brandimage.name;
ClassDiagram.Attribut>> BrandImage.status:String =>=>=> RelationalSchema.Column>> brandimage.status;
ClassDiagram.Attribut>> MerchantStore.serialversionuid:long =>=>=> RelationalSchema.Column>> merchantstore.serialversionuid;
ClassDiagram.Attribut>> MerchantStore.default_store:String =>=>=> RelationalSchema.Column>> merchantstore.default_store;
ClassDiagram.Attribut>> MerchantStore.id:Integer =>=>=> RelationalSchema.Column>> merchantstore.id PRIMARY KEY;
ClassDiagram.Attribut>> MerchantStore.storename:String =>=>=> RelationalSchema.Column>> merchantstore.storename;
ClassDiagram.Attribut>> MerchantStore.code:String =>=>=> RelationalSchema.Column>> merchantstore.code;
ClassDiagram.Attribut>> MerchantStore.storephone:String =>=>=> RelationalSchema.Column>> merchantstore.storephone;
ClassDiagram.Attribut>> MerchantStore.storeaddress:String =>=>=> RelationalSchema.Column>> merchantstore.storeaddress;
ClassDiagram.Attribut>> MerchantStore.storecity:String =>=>=> RelationalSchema.Column>> merchantstore.storecity;
ClassDiagram.Attribut>> MerchantStore.storepostalcode:String =>=>=> RelationalSchema.Column>> merchantstore.storepostalcode;
ClassDiagram.Attribut>> MerchantStore.storestateprovince:String =>=>=> RelationalSchema.Column>> merchantstore.storestateprovince;
ClassDiagram.Attribut>> MerchantStore.weightunitcode:String =>=>=> RelationalSchema.Column>> merchantstore.weightunitcode;
ClassDiagram.Attribut>> MerchantStore.seizeunitcode:String =>=>=> RelationalSchema.Column>> merchantstore.seizeunitcode;
ClassDiagram.Attribut>> MerchantStore.inbusinesssince:Date =>=>=> RelationalSchema.Column>> merchantstore.inbusinesssince;
ClassDiagram.Attribut>> MerchantStore.datebusinesssince:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> MerchantStore.usecache:boolean =>=>=> RelationalSchema.Column>> merchantstore.usecache;
ClassDiagram.Attribut>> MerchantStore.storetemplate:String =>=>=> RelationalSchema.Column>> merchantstore.storetemplate;
ClassDiagram.Attribut>> MerchantStore.invoicetemplate:String =>=>=> RelationalSchema.Column>> merchantstore.invoicetemplate;
ClassDiagram.Attribut>> MerchantStore.domainname:String =>=>=> RelationalSchema.Column>> merchantstore.domainname;
ClassDiagram.Attribut>> MerchantStore.continueshoppingurl:String =>=>=> RelationalSchema.Column>> merchantstore.continueshoppingurl;
ClassDiagram.Attribut>> MerchantStore.storeemailaddress:String =>=>=> RelationalSchema.Column>> merchantstore.storeemailaddress;
ClassDiagram.Attribut>> MerchantStore.storelogo:String =>=>=> RelationalSchema.Column>> merchantstore.storelogo;
ClassDiagram.Attribut>> MerchantStore.currencyformatnational:boolean =>=>=> RelationalSchema.Column>> merchantstore.currencyformatnational;
ClassDiagram.Attribut>> ServicesBooking./***/serialversionuid:long =>=>=> RelationalSchema.Column>> servicesbooking./***/serialversionuid;
ClassDiagram.Attribut>> ServicesBooking.id:Long =>=>=> RelationalSchema.Column>> servicesbooking.id PRIMARY KEY;
ClassDiagram.Attribut>> ServicesBooking.booking:Date =>=>=> RelationalSchema.Column>> servicesbooking.booking;
ClassDiagram.Attribut>> ServicesBooking.comment:String =>=>=> RelationalSchema.Column>> servicesbooking.comment;
ClassDiagram.Attribut>> ServicesBooking.status:String =>=>=> RelationalSchema.Column>> servicesbooking.status;
ClassDiagram.Attribut>> ServicesBooking.contactinfo:String =>=>=> RelationalSchema.Column>> servicesbooking.contactinfo;
ClassDiagram.Attribut>> ServicesBooking.appointment:Date =>=>=> RelationalSchema.Column>> servicesbooking.appointment;
ClassDiagram.Attribut>> ServicesBooking.query:String =>=>=> RelationalSchema.Column>> servicesbooking.query;
ClassDiagram.Attribut>> MachineryPortfolio./***/serialversionuid:long =>=>=> RelationalSchema.Column>> machineryportfolio./***/serialversionuid;
ClassDiagram.Attribut>> MachineryPortfolio.id:Long =>=>=> RelationalSchema.Column>> machineryportfolio.id PRIMARY KEY;
ClassDiagram.Attribut>> MachineryPortfolio.create:Date =>=>=> RelationalSchema.Column>> machineryportfolio.create;
ClassDiagram.Attribut>> MachineryPortfolio.portfolioname:String =>=>=> RelationalSchema.Column>> machineryportfolio.portfolioname;
ClassDiagram.Attribut>> MachineryPortfolio.imageurl:String =>=>=> RelationalSchema.Column>> machineryportfolio.imageurl;
ClassDiagram.Attribut>> MachineryPortfolio.status:String =>=>=> RelationalSchema.Column>> machineryportfolio.status;
ClassDiagram.Attribut>> MachineryPortfolio.equipmentname:String =>=>=> RelationalSchema.Column>> machineryportfolio.equipmentname;
ClassDiagram.Attribut>> MachineryPortfolio.equipmentprice:BigDecimal =>=>=> RelationalSchema.Column>> machineryportfolio.equipmentprice;
ClassDiagram.Attribut>> MachineryPortfolio.hiringtype:String =>=>=> RelationalSchema.Column>> machineryportfolio.hiringtype;
ClassDiagram.Attribut>> ServicesRating./***/serialversionuid:long =>=>=> RelationalSchema.Column>> servicesrating./***/serialversionuid;
ClassDiagram.Attribut>> ServicesRating.id:Long =>=>=> RelationalSchema.Column>> servicesrating.id PRIMARY KEY;
ClassDiagram.Attribut>> ServicesRating.create:Date =>=>=> RelationalSchema.Column>> servicesrating.create;
ClassDiagram.Attribut>> ServicesRating.rating:Integer =>=>=> RelationalSchema.Column>> servicesrating.rating;
ClassDiagram.Attribut>> ServicesRating.reviewdescription:String =>=>=> RelationalSchema.Column>> servicesrating.reviewdescription;
ClassDiagram.Attribut>> ServicesRating.reviewtitle:String =>=>=> RelationalSchema.Column>> servicesrating.reviewtitle;
ClassDiagram.Attribut>> VendorRating./***/serialversionuid:long =>=>=> RelationalSchema.Column>> vendorrating./***/serialversionuid;
ClassDiagram.Attribut>> VendorRating.id:Long =>=>=> RelationalSchema.Column>> vendorrating.id PRIMARY KEY;
ClassDiagram.Attribut>> VendorRating.create:Date =>=>=> RelationalSchema.Column>> vendorrating.create;
ClassDiagram.Attribut>> VendorRating.rating:Integer =>=>=> RelationalSchema.Column>> vendorrating.rating;
ClassDiagram.Attribut>> VendorRating.reviewdescription:String =>=>=> RelationalSchema.Column>> vendorrating.reviewdescription;
ClassDiagram.Attribut>> VendorRating.reviewtitle:String =>=>=> RelationalSchema.Column>> vendorrating.reviewtitle;
ClassDiagram.Attribut>> VendorBooking./***/serialversionuid:long =>=>=> RelationalSchema.Column>> vendorbooking./***/serialversionuid;
ClassDiagram.Attribut>> VendorBooking.id:Long =>=>=> RelationalSchema.Column>> vendorbooking.id PRIMARY KEY;
ClassDiagram.Attribut>> VendorBooking.booking:Date =>=>=> RelationalSchema.Column>> vendorbooking.booking;
ClassDiagram.Attribut>> VendorBooking.comment:String =>=>=> RelationalSchema.Column>> vendorbooking.comment;
ClassDiagram.Attribut>> VendorBooking.status:String =>=>=> RelationalSchema.Column>> vendorbooking.status;
ClassDiagram.Attribut>> VendorBooking.appointment:Date =>=>=> RelationalSchema.Column>> vendorbooking.appointment;
ClassDiagram.Attribut>> VendorBooking.description:String =>=>=> RelationalSchema.Column>> vendorbooking.description;
ClassDiagram.Attribut>> VendorBooking.address:String =>=>=> RelationalSchema.Column>> vendorbooking.address;
ClassDiagram.Attribut>> VendorBooking.closing:Date =>=>=> RelationalSchema.Column>> vendorbooking.closing;
ClassDiagram.Attribut>> VendorBooking.portfolioid:Long =>=>=> RelationalSchema.Column>> vendorbooking.portfolioid;
ClassDiagram.Attribut>> ArchitectsPortfolio./***/serialversionuid:long =>=>=> RelationalSchema.Column>> architectsportfolio./***/serialversionuid;
ClassDiagram.Attribut>> ArchitectsPortfolio.id:Long =>=>=> RelationalSchema.Column>> architectsportfolio.id PRIMARY KEY;
ClassDiagram.Attribut>> ArchitectsPortfolio.create:Date =>=>=> RelationalSchema.Column>> architectsportfolio.create;
ClassDiagram.Attribut>> ArchitectsPortfolio.portfolioname:String =>=>=> RelationalSchema.Column>> architectsportfolio.portfolioname;
ClassDiagram.Attribut>> ArchitectsPortfolio.imageurl:String =>=>=> RelationalSchema.Column>> architectsportfolio.imageurl;
ClassDiagram.Attribut>> ArchitectsPortfolio.status:String =>=>=> RelationalSchema.Column>> architectsportfolio.status;
ClassDiagram.Attribut>> Customer.serialversionuid:long =>=>=> RelationalSchema.Column>> customer.serialversionuid;
ClassDiagram.Attribut>> Customer.id:Long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.gender:CustomerGender =>=>=> RelationalSchema.Column>> customer.gender;
ClassDiagram.Attribut>> Customer.ofbirth:Date =>=>=> RelationalSchema.Column>> customer.ofbirth;
ClassDiagram.Attribut>> Customer.emailaddress:String =>=>=> RelationalSchema.Column>> customer.emailaddress;
ClassDiagram.Attribut>> Customer.nick:String =>=>=> RelationalSchema.Column>> customer.nick;
ClassDiagram.Attribut>> Customer.company:String =>=>=> RelationalSchema.Column>> customer.company;
ClassDiagram.Attribut>> Customer.password:String =>=>=> RelationalSchema.Column>> customer.password;
ClassDiagram.Attribut>> Customer.anonymous:boolean =>=>=> RelationalSchema.Column>> customer.anonymous;
ClassDiagram.Attribut>> Customer.customertype:String =>=>=> RelationalSchema.Column>> customer.customertype;
ClassDiagram.Attribut>> Customer.activated:String =>=>=> RelationalSchema.Column>> customer.activated;
ClassDiagram.Attribut>> Customer.ofid:String =>=>=> RelationalSchema.Column>> customer.ofid;
ClassDiagram.Attribut>> Customer.userprofile:String =>=>=> RelationalSchema.Column>> customer.userprofile;
ClassDiagram.Attribut>> Customer.GeneratedName:Delivery =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> Customer.GeneratedName:SecondaryDelivery =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> Customer.GeneratedName:Billing =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> Customer.vendorattrs:VendorAttributes =>=>=> RelationalSchema.Column>> customer.vendorattrs;
ClassDiagram.Attribut>> Customer.showcustomerstatelist:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Customer.showbillingstatelist:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Customer.showdeliverystatelist:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Customer.area:String =>=>=> RelationalSchema.Column>> customer.area;
ClassDiagram.Attribut>> Customer.isadmin:String =>=>=> RelationalSchema.Column>> customer.isadmin;
ClassDiagram.Attribut>> Customer.issuperadmin:String =>=>=> RelationalSchema.Column>> customer.issuperadmin;
ClassDiagram.Attribut>> Customer.isvendoractivated:String =>=>=> RelationalSchema.Column>> customer.isvendoractivated;
ClassDiagram.Attribut>> Customer.gst:String =>=>=> RelationalSchema.Column>> customer.gst;
ClassDiagram.Attribut>> Customer.avgreview:BigDecimal =>=>=> RelationalSchema.Column>> customer.avgreview;
ClassDiagram.Attribut>> Customer.file1:String =>=>=> RelationalSchema.Column>> customer.file1;
ClassDiagram.Attribut>> Customer.file2:String =>=>=> RelationalSchema.Column>> customer.file2;
ClassDiagram.Attribut>> Customer.file3:String =>=>=> RelationalSchema.Column>> customer.file3;
ClassDiagram.Attribut>> CustomerOptionDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> customeroptiondescription.serialversionuid;
ClassDiagram.Attribut>> CustomerOptionDescription.customeroptioncomment:String =>=>=> RelationalSchema.Column>> customeroptiondescription.customeroptioncomment;
ClassDiagram.Attribut>> CustomerOptionSet./***/serialversionuid:long =>=>=> RelationalSchema.Column>> customeroptionset./***/serialversionuid;
ClassDiagram.Attribut>> CustomerOptionSet.id:Long =>=>=> RelationalSchema.Column>> customeroptionset.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerOptionSet.sortorder:Integer =>=>=> RelationalSchema.Column>> customeroptionset.sortorder;
ClassDiagram.Attribut>> CustomerOptionValueDescription.serialversionuid:long =>=>=> RelationalSchema.Column>> customeroptionvaluedescription.serialversionuid;
ClassDiagram.Attribut>> CustomerOption.serialversionuid:long =>=>=> RelationalSchema.Column>> customeroption.serialversionuid;
ClassDiagram.Attribut>> CustomerOption.id:Long =>=>=> RelationalSchema.Column>> customeroption.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerOption.sortorder:Integer =>=>=> RelationalSchema.Column>> customeroption.sortorder;
ClassDiagram.Attribut>> CustomerOption.customeroptiontype:String =>=>=> RelationalSchema.Column>> customeroption.customeroptiontype;
ClassDiagram.Attribut>> CustomerOption.//@index(name:String =>=>=> RelationalSchema.Column>> customeroption.//@index(name;
ClassDiagram.Attribut>> CustomerOption.active:boolean =>=>=> RelationalSchema.Column>> customeroption.active;
ClassDiagram.Attribut>> CustomerOption.publicoption:boolean =>=>=> RelationalSchema.Column>> customeroption.publicoption;
ClassDiagram.Attribut>> CustomerOption.descriptionslist:List<CustomerOptionDescription> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CustomerAttribute.serialversionuid:long =>=>=> RelationalSchema.Column>> customerattribute.serialversionuid;
ClassDiagram.Attribut>> CustomerAttribute.id:Long =>=>=> RelationalSchema.Column>> customerattribute.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerAttribute.textvalue:String =>=>=> RelationalSchema.Column>> customerattribute.textvalue;
ClassDiagram.Attribut>> CustomerOptionValue.serialversionuid:long =>=>=> RelationalSchema.Column>> customeroptionvalue.serialversionuid;
ClassDiagram.Attribut>> CustomerOptionValue.id:Long =>=>=> RelationalSchema.Column>> customeroptionvalue.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerOptionValue.sortorder:Integer =>=>=> RelationalSchema.Column>> customeroptionvalue.sortorder;
ClassDiagram.Attribut>> CustomerOptionValue.customeroptionvalueimage:String =>=>=> RelationalSchema.Column>> customeroptionvalue.customeroptionvalueimage;
ClassDiagram.Attribut>> CustomerOptionValue.code:String =>=>=> RelationalSchema.Column>> customeroptionvalue.code;
ClassDiagram.Attribut>> CustomerOptionValue.descriptionslist:List<CustomerOptionValueDescription> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CustomerTestimonial./***/serialversionuid:long =>=>=> RelationalSchema.Column>> customertestimonial./***/serialversionuid;
ClassDiagram.Attribut>> CustomerTestimonial.id:Long =>=>=> RelationalSchema.Column>> customertestimonial.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerTestimonial.description:String =>=>=> RelationalSchema.Column>> customertestimonial.description;
ClassDiagram.Attribut>> CustomerTestimonial.descriptiontitle:String =>=>=> RelationalSchema.Column>> customertestimonial.descriptiontitle;
ClassDiagram.Attribut>> CustomerTestimonial.status:String =>=>=> RelationalSchema.Column>> customertestimonial.status;
ClassDiagram.Attribut>> WallPaperPortfolio./***/serialversionuid:long =>=>=> RelationalSchema.Column>> wallpaperportfolio./***/serialversionuid;
ClassDiagram.Attribut>> WallPaperPortfolio.id:Long =>=>=> RelationalSchema.Column>> wallpaperportfolio.id PRIMARY KEY;
ClassDiagram.Attribut>> WallPaperPortfolio.create:Date =>=>=> RelationalSchema.Column>> wallpaperportfolio.create;
ClassDiagram.Attribut>> WallPaperPortfolio.portfolioname:String =>=>=> RelationalSchema.Column>> wallpaperportfolio.portfolioname;
ClassDiagram.Attribut>> WallPaperPortfolio.imageurl:String =>=>=> RelationalSchema.Column>> wallpaperportfolio.imageurl;
ClassDiagram.Attribut>> WallPaperPortfolio.price:BigDecimal =>=>=> RelationalSchema.Column>> wallpaperportfolio.price;
ClassDiagram.Attribut>> WallPaperPortfolio.size:String =>=>=> RelationalSchema.Column>> wallpaperportfolio.size;
ClassDiagram.Attribut>> WallPaperPortfolio.thickness:String =>=>=> RelationalSchema.Column>> wallpaperportfolio.thickness;
ClassDiagram.Attribut>> WallPaperPortfolio.brand:String =>=>=> RelationalSchema.Column>> wallpaperportfolio.brand;
ClassDiagram.Attribut>> WallPaperPortfolio.status:String =>=>=> RelationalSchema.Column>> wallpaperportfolio.status;
ClassDiagram.Attribut>> WallPaperPortfolio.servicecharges:BigDecimal =>=>=> RelationalSchema.Column>> wallpaperportfolio.servicecharges;
ClassDiagram.Attribut>> WallPaperPortfolio.quantity:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ShippingOrigin./***/serialversionuid:long =>=>=> RelationalSchema.Column>> shippingorigin./***/serialversionuid;
ClassDiagram.Attribut>> ShippingOrigin.id:Long =>=>=> RelationalSchema.Column>> shippingorigin.id PRIMARY KEY;
ClassDiagram.Attribut>> ShippingOrigin.active:boolean =>=>=> RelationalSchema.Column>> shippingorigin.active;
ClassDiagram.Attribut>> ShippingOrigin.address:String =>=>=> RelationalSchema.Column>> shippingorigin.address;
ClassDiagram.Attribut>> ShippingOrigin.city:String =>=>=> RelationalSchema.Column>> shippingorigin.city;
ClassDiagram.Attribut>> ShippingOrigin.postalcode:String =>=>=> RelationalSchema.Column>> shippingorigin.postalcode;
ClassDiagram.Attribut>> ShippingOrigin.state:String =>=>=> RelationalSchema.Column>> shippingorigin.state;
ClassDiagram.Attribut>> MerchantConfiguration./***/serialversionuid:long =>=>=> RelationalSchema.Column>> merchantconfiguration./***/serialversionuid;
ClassDiagram.Attribut>> MerchantConfiguration.id:Long =>=>=> RelationalSchema.Column>> merchantconfiguration.id PRIMARY KEY;
ClassDiagram.Attribut>> MerchantConfiguration.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> merchantconfiguration.GeneratedName;
ClassDiagram.Attribut>> MerchantConfiguration.key:String =>=>=> RelationalSchema.Column>> merchantconfiguration.key;
ClassDiagram.Attribut>> MerchantConfiguration.value:String =>=>=> RelationalSchema.Column>> merchantconfiguration.value;
ClassDiagram.Attribut>> MerchantConfiguration.GeneratedName:MerchantConfigurationType =>=>=> RelationalSchema.Column>> merchantconfiguration.GeneratedName;
ClassDiagram.Attribut>> SystemConfiguration.serialversionuid:long =>=>=> RelationalSchema.Column>> systemconfiguration.serialversionuid;
ClassDiagram.Attribut>> SystemConfiguration.id:Long =>=>=> RelationalSchema.Column>> systemconfiguration.id PRIMARY KEY;
ClassDiagram.Attribut>> SystemConfiguration.key:String =>=>=> RelationalSchema.Column>> systemconfiguration.key;
ClassDiagram.Attribut>> SystemConfiguration.value:String =>=>=> RelationalSchema.Column>> systemconfiguration.value;
ClassDiagram.Attribut>> SystemConfiguration.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> systemconfiguration.GeneratedName;
ClassDiagram.Attribut>> CustomerOptin./***/serialversionuid:long =>=>=> RelationalSchema.Column>> customeroptin./***/serialversionuid;
ClassDiagram.Attribut>> CustomerOptin.id:Long =>=>=> RelationalSchema.Column>> customeroptin.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerOptin.optin:Date =>=>=> RelationalSchema.Column>> customeroptin.optin;
ClassDiagram.Attribut>> CustomerOptin.firstname:String =>=>=> RelationalSchema.Column>> customeroptin.firstname;
ClassDiagram.Attribut>> CustomerOptin.lastname:String =>=>=> RelationalSchema.Column>> customeroptin.lastname;
ClassDiagram.Attribut>> CustomerOptin.email:String =>=>=> RelationalSchema.Column>> customeroptin.email;
ClassDiagram.Attribut>> CustomerOptin.value:String =>=>=> RelationalSchema.Column>> customeroptin.value;
ClassDiagram.Attribut>> Optin./***/serialversionuid:long =>=>=> RelationalSchema.Column>> optin./***/serialversionuid;
ClassDiagram.Attribut>> Optin.id:Long =>=>=> RelationalSchema.Column>> optin.id PRIMARY KEY;
ClassDiagram.Attribut>> Optin.start:Date =>=>=> RelationalSchema.Column>> optin.start;
ClassDiagram.Attribut>> Optin.end:Date =>=>=> RelationalSchema.Column>> optin.end;
ClassDiagram.Attribut>> Optin.code:String =>=>=> RelationalSchema.Column>> optin.code;
ClassDiagram.Attribut>> Optin.description:String =>=>=> RelationalSchema.Column>> optin.description;
ClassDiagram.Attribut>> MerchantLog./***/serialversionuid:long =>=>=> RelationalSchema.Column>> merchantlog./***/serialversionuid;
ClassDiagram.Attribut>> MerchantLog.id:Long =>=>=> RelationalSchema.Column>> merchantlog.id PRIMARY KEY;
ClassDiagram.Attribut>> MerchantLog.module:String =>=>=> RelationalSchema.Column>> merchantlog.module;
ClassDiagram.Attribut>> MerchantLog.log:String =>=>=> RelationalSchema.Column>> merchantlog.log;
ClassDiagram.Attribut>> IntegrationModule./***/serialversionuid:long =>=>=> RelationalSchema.Column>> integrationmodule./***/serialversionuid;
ClassDiagram.Attribut>> IntegrationModule.id:Long =>=>=> RelationalSchema.Column>> integrationmodule.id PRIMARY KEY;
ClassDiagram.Attribut>> IntegrationModule.module:String =>=>=> RelationalSchema.Column>> integrationmodule.module;
ClassDiagram.Attribut>> IntegrationModule.code:String =>=>=> RelationalSchema.Column>> integrationmodule.code;
ClassDiagram.Attribut>> IntegrationModule.regions:String =>=>=> RelationalSchema.Column>> integrationmodule.regions;
ClassDiagram.Attribut>> IntegrationModule.configuration:String =>=>=> RelationalSchema.Column>> integrationmodule.configuration;
ClassDiagram.Attribut>> IntegrationModule.configdetails:String =>=>=> RelationalSchema.Column>> integrationmodule.configdetails;
ClassDiagram.Attribut>> IntegrationModule.type:String =>=>=> RelationalSchema.Column>> integrationmodule.type;
ClassDiagram.Attribut>> IntegrationModule.image:String =>=>=> RelationalSchema.Column>> integrationmodule.image;
ClassDiagram.Attribut>> IntegrationModule.custommodule:boolean =>=>=> RelationalSchema.Column>> integrationmodule.custommodule;
ClassDiagram.Attribut>> IntegrationModule.regionsset:Set<String> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> IntegrationModule.moduleconfigs:Map<String,ModuleConfig> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> IntegrationModule.details:Map<String,String> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> IntegrationModule.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> integrationmodule.GeneratedName;
ClassDiagram.Attribut>> SystemNotification./***/serialversionuid:long =>=>=> RelationalSchema.Column>> systemnotification./***/serialversionuid;
ClassDiagram.Attribut>> SystemNotification.id:Long =>=>=> RelationalSchema.Column>> systemnotification.id PRIMARY KEY;
ClassDiagram.Attribut>> SystemNotification.key:String =>=>=> RelationalSchema.Column>> systemnotification.key;
ClassDiagram.Attribut>> SystemNotification.value:String =>=>=> RelationalSchema.Column>> systemnotification.value;
ClassDiagram.Attribut>> SystemNotification.start:Date =>=>=> RelationalSchema.Column>> systemnotification.start;
ClassDiagram.Attribut>> SystemNotification.end:Date =>=>=> RelationalSchema.Column>> systemnotification.end;
ClassDiagram.Attribut>> SystemNotification.GeneratedName:AuditSection =>=>=> RelationalSchema.Column>> systemnotification.GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>WorkerRating  to ClassDiagram.Class>>CompanyService represented by ClassDiagram.Atrribute>>servicesworker;
Many-To-One relationship from ClassDiagram.Class>>WorkerRating  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Services  to ClassDiagram.Class>>Set<CompanyService>;
Many-To-One relationship from ClassDiagram.Class>>CompanyService  to ClassDiagram.Class>>Services represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>CompanyService  to ClassDiagram.Class>>Set<WorkerRating>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Set<ProductDescription>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Set<ProductAvailability>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Set<ProductAttribute>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Set<ProductImage>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Set<ProductRelationship>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Set<ProductReview>;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Product  and ClassDiagram.Class>>Category: product_category(product_id:Product [PK] #FK to Product,category_id:Category [PK] #FK to Category);
Many-To-Many relationship between ClassDiagram.Class>>Product  and ClassDiagram.Class>>Filter: product_category(product_id:Product [PK] #FK to Product,category_id:Category [PK] #FK to Category);product_filter(product_id:Product [PK] #FK to Product,filter_id:Filter [PK] #FK to Filter);
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Manufacturer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>type;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>TaxClass represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Set<VendorProduct>;
Many-To-One relationship from ClassDiagram.Class>>ProductReview  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductReview  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>ProductReview  to ClassDiagram.Class>>Set<ProductReviewDescription>;
Many-To-One relationship from ClassDiagram.Class>>ProductReviewDescription  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductImageDescription  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>ProductImage  to ClassDiagram.Class>>List<ProductImageDescription>;
Many-To-One relationship from ClassDiagram.Class>>ProductImage  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductAvailability  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>ProductAvailability  to ClassDiagram.Class>>Set<ProductPrice>;
One-To-Many relationship from ClassDiagram.Class>>ProductPrice  to ClassDiagram.Class>>Set<ProductPriceDescription>;
Many-To-One relationship from ClassDiagram.Class>>ProductPrice  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductPriceDescription  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Filter  to ClassDiagram.Class>>List<FilterType>;
Many-To-One relationship from ClassDiagram.Class>>Filter  to ClassDiagram.Class>>Category represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>FilterType  to ClassDiagram.Class>>Filter represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductRelationship  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>store;
Many-To-One relationship from ClassDiagram.Class>>ProductRelationship  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductRelationship  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>related;
One-To-Many relationship from ClassDiagram.Class>>ProductOption  to ClassDiagram.Class>>Set<ProductOptionDescription>;
Many-To-One relationship from ClassDiagram.Class>>ProductOption  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductOptionValueDescription  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductAttribute  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductAttribute  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductAttribute  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductOptionDescription  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>ProductOptionValue  to ClassDiagram.Class>>Set<ProductOptionValueDescription>;
Many-To-One relationship from ClassDiagram.Class>>ProductOptionValue  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ManufacturerDescription  to ClassDiagram.Class>>Manufacturer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Manufacturer  to ClassDiagram.Class>>Set<ManufacturerDescription>;
Many-To-One relationship from ClassDiagram.Class>>Manufacturer  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductDescription  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>DigitalProduct  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>List<CategoryDescription>;
Many-To-One relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>Category represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>List<Category>;
One-To-One relationship between ClassDiagram.Class>>SubCategoryImage  to ClassDiagram.Class>>Category represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CategoryDescription  to ClassDiagram.Class>>Category represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Language  to ClassDiagram.Class>>List<MerchantStore>;
One-To-Many relationship from ClassDiagram.Class>>GeoZone  to ClassDiagram.Class>>List<GeoZoneDescription>;
One-To-Many relationship from ClassDiagram.Class>>GeoZone  to ClassDiagram.Class>>List<Country>;
Many-To-One relationship from ClassDiagram.Class>>GeoZoneDescription  to ClassDiagram.Class>>GeoZone represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Zone  to ClassDiagram.Class>>List<ZoneDescription>;
Many-To-One relationship from ClassDiagram.Class>>Zone  to ClassDiagram.Class>>Country represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ZoneDescription  to ClassDiagram.Class>>Zone represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Country  to ClassDiagram.Class>>List<CountryDescription>;
One-To-Many relationship from ClassDiagram.Class>>Country  to ClassDiagram.Class>>List<Zone>;
Many-To-One relationship from ClassDiagram.Class>>Country  to ClassDiagram.Class>>GeoZone represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CountryDescription  to ClassDiagram.Class>>Country represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>VendorProduct  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>VendorProduct  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderStatusHistory  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Currency represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>merchant;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Set<OrderProduct>;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Set<OrderTotal>;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Set<OrderStatusHistory>;
Many-To-One relationship from ClassDiagram.Class>>OrderAccount  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>OrderAccount  to ClassDiagram.Class>>Set<OrderAccountProduct>;
Many-To-One relationship from ClassDiagram.Class>>OrderAccountProduct  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderAccountProduct  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderProductDownload  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderProductAttribute  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderProductPrice  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderProduct  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>OrderProduct  to ClassDiagram.Class>>Set<OrderProductAttribute>;
One-To-Many relationship from ClassDiagram.Class>>OrderProduct  to ClassDiagram.Class>>Set<OrderProductPrice>;
One-To-Many relationship from ClassDiagram.Class>>OrderProduct  to ClassDiagram.Class>>Set<OrderProductDownload>;
Many-To-One relationship from ClassDiagram.Class>>OrderTotal  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>FileHistory  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>store;
Many-To-One relationship from ClassDiagram.Class>>TaxRate  to ClassDiagram.Class>>TaxClass represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>TaxRate  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>TaxRate  to ClassDiagram.Class>>List<TaxRateDescription>;
Many-To-One relationship from ClassDiagram.Class>>TaxRate  to ClassDiagram.Class>>Country represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>TaxRate  to ClassDiagram.Class>>Zone represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>TaxRate  to ClassDiagram.Class>>TaxRate represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>TaxRate  to ClassDiagram.Class>>List<TaxRate>;
Many-To-One relationship from ClassDiagram.Class>>TaxRateDescription  to ClassDiagram.Class>>TaxRate represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>TaxClass  to ClassDiagram.Class>>List<Product>;
Many-To-One relationship from ClassDiagram.Class>>TaxClass  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>/*	@manytomany(fetch;
One-To-Many relationship from ClassDiagram.Class>>TaxClass  to ClassDiagram.Class>>List<TaxRate>;
One-To-Many relationship from ClassDiagram.Class>>ShoppingCart  to ClassDiagram.Class>>Set<ShoppingCartItem>;
Many-To-One relationship from ClassDiagram.Class>>ShoppingCart  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ShoppingCartItem  to ClassDiagram.Class>>ShoppingCart represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>ShoppingCartItem  to ClassDiagram.Class>>Set<ShoppingCartAttributeItem>;
Many-To-One relationship from ClassDiagram.Class>>ShoppingCartAttributeItem  to ClassDiagram.Class>>ShoppingCart represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ContentDescription  to ClassDiagram.Class>>content represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Content  to ClassDiagram.Class>>List<ContentDescription>;
Many-To-One relationship from ClassDiagram.Class>>Content  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>list<group>: user_group(user_id:User [PK] #FK to User,group_id:list<group> [PK] #FK to list<group>);
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Language represented by ClassDiagram.Atrribute>>default;
Many-To-Many relationship between ClassDiagram.Class>>Permission  and ClassDiagram.Class>>list<group>: permission_group(permission_id:Permission [PK] #FK to Permission,group_id:list<group> [PK] #FK to list<group>);
Many-To-One relationship from ClassDiagram.Class>>Transaction  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Description  to ClassDiagram.Class>>Language represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>MerchantStore  to ClassDiagram.Class>>Country represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>MerchantStore  to ClassDiagram.Class>>Zone represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>MerchantStore  to ClassDiagram.Class>>Language represented by ClassDiagram.Atrribute>>default;
Many-To-Many relationship between ClassDiagram.Class>>MerchantStore  and ClassDiagram.Class>>Language: merchant_language(MerchantStore_ID:MerchantStore [PK] #FK to MerchantStore,Language_ID:Language [PK] #FK to Language);
Many-To-One relationship from ClassDiagram.Class>>MerchantStore  to ClassDiagram.Class>>Currency represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ServicesBooking  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ServicesBooking  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>service;
Many-To-One relationship from ClassDiagram.Class>>ServicesBooking  to ClassDiagram.Class>>Services represented by ClassDiagram.Atrribute>>servicetype;
Many-To-One relationship from ClassDiagram.Class>>MachineryPortfolio  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ServicesRating  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ServicesRating  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>service;
Many-To-One relationship from ClassDiagram.Class>>ServicesRating  to ClassDiagram.Class>>Services represented by ClassDiagram.Atrribute>>servicetype;
Many-To-One relationship from ClassDiagram.Class>>VendorRating  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>VendorRating  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>vendor;
Many-To-One relationship from ClassDiagram.Class>>VendorBooking  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>VendorBooking  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>vendor;
Many-To-One relationship from ClassDiagram.Class>>ArchitectsPortfolio  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Set<CustomerAttribute>;
Many-To-One relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Language represented by ClassDiagram.Atrribute>>default;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>List<ProductReview>;
Many-To-One relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Customer  and ClassDiagram.Class>>list<group>: customer_group(customer_id:Customer [PK] #FK to Customer,group_id:list<group> [PK] #FK to list<group>);
Many-To-Many relationship between ClassDiagram.Class>>Customer  and ClassDiagram.Class>>Services: customer_group(customer_id:Customer [PK] #FK to Customer,group_id:list<group> [PK] #FK to list<group>);customer_services(customer_id:Customer [PK] #FK to Customer,id:Services [PK] #FK to Services);
Many-To-Many relationship between ClassDiagram.Class>>Customer  and ClassDiagram.Class>>Category: customer_group(customer_id:Customer [PK] #FK to Customer,group_id:list<group> [PK] #FK to list<group>);customer_services(customer_id:Customer [PK] #FK to Customer,id:Services [PK] #FK to Services);vendor_prof_services(customer_id:Customer [PK] #FK to Customer,category_id:Category [PK] #FK to Category);
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Set<VendorProduct>;
Many-To-One relationship from ClassDiagram.Class>>CustomerOptionDescription  to ClassDiagram.Class>>customeroption represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CustomerOptionSet  to ClassDiagram.Class>>customeroption represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CustomerOptionSet  to ClassDiagram.Class>>customeroptionvalue represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CustomerOptionValueDescription  to ClassDiagram.Class>>customeroptionvalue represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>CustomerOption  to ClassDiagram.Class>>Set<CustomerOptionDescription>;
Many-To-One relationship from ClassDiagram.Class>>CustomerOption  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CustomerAttribute  to ClassDiagram.Class>>customeroption represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CustomerAttribute  to ClassDiagram.Class>>customeroptionvalue represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CustomerAttribute  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>CustomerOptionValue  to ClassDiagram.Class>>Set<CustomerOptionValueDescription>;
Many-To-One relationship from ClassDiagram.Class>>CustomerOptionValue  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CustomerTestimonial  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>WallPaperPortfolio  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ShippingOrigin  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ShippingOrigin  to ClassDiagram.Class>>Country represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ShippingOrigin  to ClassDiagram.Class>>Zone represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>MerchantConfiguration  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CustomerOptin  to ClassDiagram.Class>>optin represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Optin  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>merchant;
Many-To-One relationship from ClassDiagram.Class>>MerchantLog  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>store;
Many-To-One relationship from ClassDiagram.Class>>SystemNotification  to ClassDiagram.Class>>merchantstore represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>SystemNotification  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Description  ;
