ClassDiagram.Class>> CacheableItem =>=>=> RelationalSchema.Table>> cacheableitem;
ClassDiagram.Class>> ComplexJoinAliasTest =>=>=> RelationalSchema.Table>> complexjoinaliastest;
ClassDiagram.Class>> Membership =>=>=> RelationalSchema.Table>> membership;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Group =>=>=> RelationalSchema.Table>> group;
ClassDiagram.Class>> Window =>=>=> RelationalSchema.Table>> window;
ClassDiagram.Class>> Gate =>=>=> RelationalSchema.Table>> gate;
ClassDiagram.Class>> Portal =>=>=> RelationalSchema.Table>> portal;
ClassDiagram.Class>> ConfigurationSerializationTest =>=>=> RelationalSchema.Table>> configurationserializationtest;
ClassDiagram.Class>> Cuisine =>=>=> RelationalSchema.Table>> cuisine;
ClassDiagram.Class>> MinMax =>=>=> RelationalSchema.Table>> minmax;
ClassDiagram.Class>> Music =>=>=> RelationalSchema.Table>> music;
ClassDiagram.Class>> Screen =>=>=> RelationalSchema.Table>> screen;
ClassDiagram.Class>> Rock =>=>=> RelationalSchema.Table>> rock;
ClassDiagram.Class>> Display =>=>=> RelationalSchema.Table>> display;
ClassDiagram.Class>> Range =>=>=> RelationalSchema.Table>> range;
ClassDiagram.Class>> Tv =>=>=> RelationalSchema.Table>> tv;
ClassDiagram.Class>> CupHolder =>=>=> RelationalSchema.Table>> cupholder;
ClassDiagram.Class>> TvOwner =>=>=> RelationalSchema.Table>> tvowner;
ClassDiagram.Class>> Color =>=>=> RelationalSchema.Table>> color;
ClassDiagram.Class>> PowerSupply =>=>=> RelationalSchema.Table>> powersupply;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Customer3 =>=>=> RelationalSchema.Table>> customer3;
ClassDiagram.Class>> Customer2 =>=>=> RelationalSchema.Table>> customer2;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> SupportTickets =>=>=> RelationalSchema.Table>> supporttickets;
ClassDiagram.Class>> Customer4 =>=>=> RelationalSchema.Table>> customer4;
ClassDiagram.Class>> Customer5 =>=>=> RelationalSchema.Table>> customer5;
ClassDiagram.Class>> TvMagazin =>=>=> RelationalSchema.Table>> tvmagazin;
ClassDiagram.Class>> A =>=>=> RelationalSchema.Table>> a;
ClassDiagram.Class>> Parent =>=>=> RelationalSchema.Table>> parent;
ClassDiagram.Class>> LittleGenius =>=>=> RelationalSchema.Table>> littlegenius;
ClassDiagram.Class>> OrderLine =>=>=> RelationalSchema.Table>> orderline;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> C =>=>=> RelationalSchema.Table>> c;
ClassDiagram.Class>> TvProgramIdClass =>=>=> RelationalSchema.Table>> tvprogramidclass;
ClassDiagram.Class>> SomeEntity =>=>=> RelationalSchema.Table>> someentity;
ClassDiagram.Class>> Presenter =>=>=> RelationalSchema.Table>> presenter;
ClassDiagram.Class>> Child =>=>=> RelationalSchema.Table>> child;
ClassDiagram.Class>> TvProgram =>=>=> RelationalSchema.Table>> tvprogram;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Key =>=>=> RelationalSchema.Table>> key;
ClassDiagram.Class>> Card =>=>=> RelationalSchema.Table>> card;
ClassDiagram.Class>> CardField =>=>=> RelationalSchema.Table>> cardfield;
ClassDiagram.Class>> Channel =>=>=> RelationalSchema.Table>> channel;
ClassDiagram.Class>> B =>=>=> RelationalSchema.Table>> b;
ClassDiagram.Class>> IntegerProperty =>=>=> RelationalSchema.Table>> integerproperty;
ClassDiagram.Class>> CharProperty =>=>=> RelationalSchema.Table>> charproperty;
ClassDiagram.Class>> PropertyMap =>=>=> RelationalSchema.Table>> propertymap;
ClassDiagram.Class>> LongProperty =>=>=> RelationalSchema.Table>> longproperty;
ClassDiagram.Class>> PropertySet =>=>=> RelationalSchema.Table>> propertyset;
ClassDiagram.Class>> StringProperty =>=>=> RelationalSchema.Table>> stringproperty;
ClassDiagram.Class>> PropertyList =>=>=> RelationalSchema.Table>> propertylist;
ClassDiagram.Class>> Foobar =>=>=> RelationalSchema.Table>> foobar;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> State =>=>=> RelationalSchema.Table>> state;
ClassDiagram.Class>> Plane =>=>=> RelationalSchema.Table>> plane;
ClassDiagram.Class>> StoreCustomer =>=>=> RelationalSchema.Table>> storecustomer;
ClassDiagram.Class>> Card =>=>=> RelationalSchema.Table>> card;
ClassDiagram.Class>> BasketItems =>=>=> RelationalSchema.Table>> basketitems;
ClassDiagram.Class>> CardKey =>=>=> RelationalSchema.Table>> cardkey;
ClassDiagram.Class>> C =>=>=> RelationalSchema.Table>> c;
ClassDiagram.Class>> Droitacces =>=>=> RelationalSchema.Table>> droitacces;
ClassDiagram.Class>> Benefserv =>=>=> RelationalSchema.Table>> benefserv;
ClassDiagram.Class>> Acces =>=>=> RelationalSchema.Table>> acces;
ClassDiagram.Class>> B =>=>=> RelationalSchema.Table>> b;
ClassDiagram.Class>> Service =>=>=> RelationalSchema.Table>> service;
ClassDiagram.Class>> A =>=>=> RelationalSchema.Table>> a;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Store =>=>=> RelationalSchema.Table>> store;
ClassDiagram.Class>> CardField =>=>=> RelationalSchema.Table>> cardfield;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> ShoppingBaskets =>=>=> RelationalSchema.Table>> shoppingbaskets;
ClassDiagram.Class>> Customers =>=>=> RelationalSchema.Table>> customers;
ClassDiagram.Class>> Car =>=>=> RelationalSchema.Table>> car;
ClassDiagram.Class>> PowerDrill =>=>=> RelationalSchema.Table>> powerdrill;
ClassDiagram.Class>> Drill =>=>=> RelationalSchema.Table>> drill;
ClassDiagram.Class>> Player =>=>=> RelationalSchema.Table>> player;
ClassDiagram.Class>> Forest =>=>=> RelationalSchema.Table>> forest;
ClassDiagram.Class>> Flight =>=>=> RelationalSchema.Table>> flight;
ClassDiagram.Class>> ContactDetails =>=>=> RelationalSchema.Table>> contactdetails;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Peugot =>=>=> RelationalSchema.Table>> peugot;
ClassDiagram.Class>> Narrative =>=>=> RelationalSchema.Table>> narrative;
ClassDiagram.Class>> ZipCode =>=>=> RelationalSchema.Table>> zipcode;
ClassDiagram.Class>> LocalContactDetails =>=>=> RelationalSchema.Table>> localcontactdetails;
ClassDiagram.Class>> SoccerTeam =>=>=> RelationalSchema.Table>> soccerteam;
ClassDiagram.Class>> FormalLastName =>=>=> RelationalSchema.Table>> formallastname;
ClassDiagram.Class>> CommunityBid =>=>=> RelationalSchema.Table>> communitybid;
ClassDiagram.Class>> Topic =>=>=> RelationalSchema.Table>> topic;
ClassDiagram.Class>> Race =>=>=> RelationalSchema.Table>> race;
ClassDiagram.Class>> WashingMachine =>=>=> RelationalSchema.Table>> washingmachine;
ClassDiagram.Class>> Tree =>=>=> RelationalSchema.Table>> tree;
ClassDiagram.Class>> Ransom =>=>=> RelationalSchema.Table>> ransom;
ClassDiagram.Class>> Name =>=>=> RelationalSchema.Table>> name;
ClassDiagram.Class>> Bid =>=>=> RelationalSchema.Table>> bid;
ClassDiagram.Class>> SportCar =>=>=> RelationalSchema.Table>> sportcar;
ClassDiagram.Class>> Car =>=>=> RelationalSchema.Table>> car;
ClassDiagram.Class>> Son =>=>=> RelationalSchema.Table>> son;
ClassDiagram.Class>> Mother =>=>=> RelationalSchema.Table>> mother;
ClassDiagram.Class>> Father =>=>=> RelationalSchema.Table>> father;
ClassDiagram.Class>> IncorrectEntity =>=>=> RelationalSchema.Table>> incorrectentity;
ClassDiagram.Class>> Life =>=>=> RelationalSchema.Table>> life;
ClassDiagram.Class>> SysUserOrm =>=>=> RelationalSchema.Table>> sysuserorm;
ClassDiagram.Class>> SysGroupsOrm =>=>=> RelationalSchema.Table>> sysgroupsorm;
ClassDiagram.Class>> B =>=>=> RelationalSchema.Table>> b;
ClassDiagram.Class>> Death =>=>=> RelationalSchema.Table>> death;
ClassDiagram.Class>> C =>=>=> RelationalSchema.Table>> c;
ClassDiagram.Class>> Dog =>=>=> RelationalSchema.Table>> dog;
ClassDiagram.Class>> Cat =>=>=> RelationalSchema.Table>> cat;
ClassDiagram.Class>> PropertyRecord =>=>=> RelationalSchema.Table>> propertyrecord;
ClassDiagram.Class>> Location =>=>=> RelationalSchema.Table>> location;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Addr =>=>=> RelationalSchema.Table>> addr;
ClassDiagram.Class>> Trip =>=>=> RelationalSchema.Table>> trip;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> SocialSite =>=>=> RelationalSchema.Table>> socialsite;
ClassDiagram.Class>> Dog =>=>=> RelationalSchema.Table>> dog;
ClassDiagram.Class>> Tower =>=>=> RelationalSchema.Table>> tower;
ClassDiagram.Class>> GoalKeeper =>=>=> RelationalSchema.Table>> goalkeeper;
ClassDiagram.Class>> Monkey =>=>=> RelationalSchema.Table>> monkey;
ClassDiagram.Class>> BreakDance =>=>=> RelationalSchema.Table>> breakdance;
ClassDiagram.Class>> Store =>=>=> RelationalSchema.Table>> store;
ClassDiagram.Class>> Computer =>=>=> RelationalSchema.Table>> computer;
ClassDiagram.Class>> Footballer =>=>=> RelationalSchema.Table>> footballer;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> TwinkleToes =>=>=> RelationalSchema.Table>> twinkletoes;
ClassDiagram.Class>> Bunny =>=>=> RelationalSchema.Table>> bunny;
ClassDiagram.Class>> PointyTooth =>=>=> RelationalSchema.Table>> pointytooth;
ClassDiagram.Class>> Ball =>=>=> RelationalSchema.Table>> ball;
ClassDiagram.Class>> Shoe =>=>=> RelationalSchema.Table>> shoe;
ClassDiagram.Class>> SoundSystem =>=>=> RelationalSchema.Table>> soundsystem;
ClassDiagram.Class>> FirTree =>=>=> RelationalSchema.Table>> firtree;
ClassDiagram.Class>> PlanetCheatSheet =>=>=> RelationalSchema.Table>> planetcheatsheet;
ClassDiagram.Class>> Furniture =>=>=> RelationalSchema.Table>> furniture;
ClassDiagram.Class>> Home =>=>=> RelationalSchema.Table>> home;
ClassDiagram.Class>> Bunny =>=>=> RelationalSchema.Table>> bunny;
ClassDiagram.Class>> Computer =>=>=> RelationalSchema.Table>> computer;
ClassDiagram.Class>> TwinkleToes =>=>=> RelationalSchema.Table>> twinkletoes;
ClassDiagram.Class>> Dog =>=>=> RelationalSchema.Table>> dog;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> Furniture =>=>=> RelationalSchema.Table>> furniture;
ClassDiagram.Class>> Store =>=>=> RelationalSchema.Table>> store;
ClassDiagram.Class>> Monkey =>=>=> RelationalSchema.Table>> monkey;
ClassDiagram.Class>> PlanetCheatSheet =>=>=> RelationalSchema.Table>> planetcheatsheet;
ClassDiagram.Class>> Tower =>=>=> RelationalSchema.Table>> tower;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Footballer =>=>=> RelationalSchema.Table>> footballer;
ClassDiagram.Class>> Shoe =>=>=> RelationalSchema.Table>> shoe;
ClassDiagram.Class>> Ball =>=>=> RelationalSchema.Table>> ball;
ClassDiagram.Class>> BreakDance =>=>=> RelationalSchema.Table>> breakdance;
ClassDiagram.Class>> PointyTooth =>=>=> RelationalSchema.Table>> pointytooth;
ClassDiagram.Class>> GoalKeeper =>=>=> RelationalSchema.Table>> goalkeeper;
ClassDiagram.Class>> Home =>=>=> RelationalSchema.Table>> home;
ClassDiagram.Class>> FirTree =>=>=> RelationalSchema.Table>> firtree;
ClassDiagram.Class>> SoundSystem =>=>=> RelationalSchema.Table>> soundsystem;
ClassDiagram.Class>> MinimalTableEntity =>=>=> RelationalSchema.Table>> minimaltableentity;
ClassDiagram.Class>> AutoEntity =>=>=> RelationalSchema.Table>> autoentity;
ClassDiagram.Class>> MinimalSequenceEntity =>=>=> RelationalSchema.Table>> minimalsequenceentity;
ClassDiagram.Class>> CompleteSequenceEntity =>=>=> RelationalSchema.Table>> completesequenceentity;
ClassDiagram.Class>> Currency =>=>=> RelationalSchema.Table>> currency;
ClassDiagram.Class>> Coin =>=>=> RelationalSchema.Table>> coin;
ClassDiagram.Class>> VMTimestamped =>=>=> RelationalSchema.Table>> vmtimestamped;
ClassDiagram.Class>> Antenna =>=>=> RelationalSchema.Table>> antenna;
ClassDiagram.Class>> ProfessionalAgreement =>=>=> RelationalSchema.Table>> professionalagreement;
ClassDiagram.Class>> Truck =>=>=> RelationalSchema.Table>> truck;
ClassDiagram.Class>> Conductor =>=>=> RelationalSchema.Table>> conductor;
ClassDiagram.Class>> Vehicule =>=>=> RelationalSchema.Table>> vehicule;
ClassDiagram.Class>> Staff =>=>=> RelationalSchema.Table>> staff;
ClassDiagram.Class>> DBTimestamped =>=>=> RelationalSchema.Table>> dbtimestamped;
ClassDiagram.Class>> MaterializedBlobEntity =>=>=> RelationalSchema.Table>> materializedblobentity;
ClassDiagram.Class>> VersionedBook =>=>=> RelationalSchema.Table>> versionedbook;
ClassDiagram.Class>> LongStringHolder =>=>=> RelationalSchema.Table>> longstringholder;
ClassDiagram.Class>> VersionedCompiledCode =>=>=> RelationalSchema.Table>> versionedcompiledcode;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> ImageHolder =>=>=> RelationalSchema.Table>> imageholder;
ClassDiagram.Class>> CompiledCode =>=>=> RelationalSchema.Table>> compiledcode;
ClassDiagram.Class>> Frame =>=>=> RelationalSchema.Table>> frame;
ClassDiagram.Class>> Deal =>=>=> RelationalSchema.Table>> deal;
ClassDiagram.Class>> Lotz =>=>=> RelationalSchema.Table>> lotz;
ClassDiagram.Class>> ForestType =>=>=> RelationalSchema.Table>> foresttype;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Vendor =>=>=> RelationalSchema.Table>> vendor;
ClassDiagram.Class>> WarehouseItem =>=>=> RelationalSchema.Table>> warehouseitem;
ClassDiagram.Class>> ZItemCost =>=>=> RelationalSchema.Table>> zitemcost;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> BiggestForest =>=>=> RelationalSchema.Table>> biggestforest;
ClassDiagram.Class>> OrderLine =>=>=> RelationalSchema.Table>> orderline;
ClassDiagram.Class>> TreeType =>=>=> RelationalSchema.Table>> treetype;
ClassDiagram.Class>> Color =>=>=> RelationalSchema.Table>> color;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Child =>=>=> RelationalSchema.Table>> child;
ClassDiagram.Class>> Node =>=>=> RelationalSchema.Table>> node;
ClassDiagram.Class>> Parent =>=>=> RelationalSchema.Table>> parent;
ClassDiagram.Class>> Carz =>=>=> RelationalSchema.Table>> carz;
ClassDiagram.Class>> DistrictUser =>=>=> RelationalSchema.Table>> districtuser;
ClassDiagram.Class>> Lens =>=>=> RelationalSchema.Table>> lens;
ClassDiagram.Class>> Car =>=>=> RelationalSchema.Table>> car;
ClassDiagram.Class>> SocialSecurityMoralAccount =>=>=> RelationalSchema.Table>> socialsecuritymoralaccount;
ClassDiagram.Class>> TennisMatch =>=>=> RelationalSchema.Table>> tennismatch;
ClassDiagram.Class>> Match =>=>=> RelationalSchema.Table>> match;
ClassDiagram.Class>> SocialSecurityPhysicalAccount =>=>=> RelationalSchema.Table>> socialsecurityphysicalaccount;
ClassDiagram.Class>> Administration =>=>=> RelationalSchema.Table>> administration;
ClassDiagram.Class>> JPAOverridenAnnotationReaderTest =>=>=> RelationalSchema.Table>> jpaoverridenannotationreadertest;
ClassDiagram.Class>> BusTrip =>=>=> RelationalSchema.Table>> bustrip;
ClassDiagram.Class>> Team =>=>=> RelationalSchema.Table>> team;
ClassDiagram.Class>> Player =>=>=> RelationalSchema.Table>> player;
ClassDiagram.Class>> MyEntity =>=>=> RelationalSchema.Table>> myentity;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Dvd =>=>=> RelationalSchema.Table>> dvd;
ClassDiagram.Class>> Furniture =>=>=> RelationalSchema.Table>> furniture;
ClassDiagram.Class>> BigBed =>=>=> RelationalSchema.Table>> bigbed;
ClassDiagram.Class>> Bed =>=>=> RelationalSchema.Table>> bed;
ClassDiagram.Class>> Chair =>=>=> RelationalSchema.Table>> chair;
ClassDiagram.Class>> Gardenshed =>=>=> RelationalSchema.Table>> gardenshed;
ClassDiagram.Class>> Tourist =>=>=> RelationalSchema.Table>> tourist;
ClassDiagram.Class>> Boy =>=>=> RelationalSchema.Table>> boy;
ClassDiagram.Class>> RentalCar =>=>=> RelationalSchema.Table>> rentalcar;
ClassDiagram.Class>> Waiter =>=>=> RelationalSchema.Table>> waiter;
ClassDiagram.Class>> Driver =>=>=> RelationalSchema.Table>> driver;
ClassDiagram.Class>> Cook =>=>=> RelationalSchema.Table>> cook;
ClassDiagram.Class>> Foobar =>=>=> RelationalSchema.Table>> foobar;
ClassDiagram.Class>> Being =>=>=> RelationalSchema.Table>> being;
ClassDiagram.Class>> Course7 =>=>=> RelationalSchema.Table>> course7;
ClassDiagram.Class>> Course3 =>=>=> RelationalSchema.Table>> course3;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Chair =>=>=> RelationalSchema.Table>> chair;
ClassDiagram.Class>> Bed =>=>=> RelationalSchema.Table>> bed;
ClassDiagram.Class>> Course6 =>=>=> RelationalSchema.Table>> course6;
ClassDiagram.Class>> Course2 =>=>=> RelationalSchema.Table>> course2;
ClassDiagram.Class>> Square =>=>=> RelationalSchema.Table>> square;
ClassDiagram.Class>> BigBed =>=>=> RelationalSchema.Table>> bigbed;
ClassDiagram.Class>> Course4 =>=>=> RelationalSchema.Table>> course4;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Course8 =>=>=> RelationalSchema.Table>> course8;
ClassDiagram.Class>> Shape =>=>=> RelationalSchema.Table>> shape;
ClassDiagram.Class>> Gardenshed =>=>=> RelationalSchema.Table>> gardenshed;
ClassDiagram.Class>> Animal =>=>=> RelationalSchema.Table>> animal;
ClassDiagram.Class>> Horse =>=>=> RelationalSchema.Table>> horse;
ClassDiagram.Class>> Circle =>=>=> RelationalSchema.Table>> circle;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Course5 =>=>=> RelationalSchema.Table>> course5;
ClassDiagram.Class>> Furniture =>=>=> RelationalSchema.Table>> furniture;
ClassDiagram.Class>> Course1 =>=>=> RelationalSchema.Table>> course1;
ClassDiagram.Class>> Soldier =>=>=> RelationalSchema.Table>> soldier;
ClassDiagram.Class>> OrganisationUser =>=>=> RelationalSchema.Table>> organisationuser;
ClassDiagram.Class>> Troop =>=>=> RelationalSchema.Table>> troop;
ClassDiagram.Class>> Parent =>=>=> RelationalSchema.Table>> parent;
ClassDiagram.Class>> Tiger =>=>=> RelationalSchema.Table>> tiger;
ClassDiagram.Class>> Organisation =>=>=> RelationalSchema.Table>> organisation;
ClassDiagram.Class>> Street =>=>=> RelationalSchema.Table>> street;
ClassDiagram.Class>> City =>=>=> RelationalSchema.Table>> city;
ClassDiagram.Class>> Politician =>=>=> RelationalSchema.Table>> politician;
ClassDiagram.Class>> OrderItem =>=>=> RelationalSchema.Table>> orderitem;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Monkey =>=>=> RelationalSchema.Table>> monkey;
ClassDiagram.Class>> Child =>=>=> RelationalSchema.Table>> child;
ClassDiagram.Class>> Trainer =>=>=> RelationalSchema.Table>> trainer;
ClassDiagram.Class>> Model =>=>=> RelationalSchema.Table>> model;
ClassDiagram.Class>> PoliticalParty =>=>=> RelationalSchema.Table>> politicalparty;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> AmericaCupClass =>=>=> RelationalSchema.Table>> americacupclass;
ClassDiagram.Class>> Sky =>=>=> RelationalSchema.Table>> sky;
ClassDiagram.Class>> Storm =>=>=> RelationalSchema.Table>> storm;
ClassDiagram.Class>> A320b =>=>=> RelationalSchema.Table>> a320b;
ClassDiagram.Class>> Flight =>=>=> RelationalSchema.Table>> flight;
ClassDiagram.Class>> Folder =>=>=> RelationalSchema.Table>> folder;
ClassDiagram.Class>> File =>=>=> RelationalSchema.Table>> file;
ClassDiagram.Class>> Document =>=>=> RelationalSchema.Table>> document;
ClassDiagram.Class>> SymbolicLink =>=>=> RelationalSchema.Table>> symboliclink;
ClassDiagram.Class>> Tomato =>=>=> RelationalSchema.Table>> tomato;
ClassDiagram.Class>> BaseClass =>=>=> RelationalSchema.Table>> baseclass;
ClassDiagram.Class>> SubClass =>=>=> RelationalSchema.Table>> subclass;
ClassDiagram.Class>> Fruit =>=>=> RelationalSchema.Table>> fruit;
ClassDiagram.Class>> Carrot =>=>=> RelationalSchema.Table>> carrot;
ClassDiagram.Class>> Apple =>=>=> RelationalSchema.Table>> apple;
ClassDiagram.Class>> Music =>=>=> RelationalSchema.Table>> music;
ClassDiagram.Class>> Building =>=>=> RelationalSchema.Table>> building;
ClassDiagram.Class>> House =>=>=> RelationalSchema.Table>> house;
ClassDiagram.Class>> Noise =>=>=> RelationalSchema.Table>> noise;
ClassDiagram.Class>> PaperTrash =>=>=> RelationalSchema.Table>> papertrash;
ClassDiagram.Class>> Rock =>=>=> RelationalSchema.Table>> rock;
ClassDiagram.Class>> Trash =>=>=> RelationalSchema.Table>> trash;
ClassDiagram.Class>> Funk =>=>=> RelationalSchema.Table>> funk;
ClassDiagram.Class>> Vegetable =>=>=> RelationalSchema.Table>> vegetable;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Document =>=>=> RelationalSchema.Table>> document;
ClassDiagram.Class>> ProgramExecution =>=>=> RelationalSchema.Table>> programexecution;
ClassDiagram.Class>> Sweater =>=>=> RelationalSchema.Table>> sweater;
ClassDiagram.Class>> Clothing =>=>=> RelationalSchema.Table>> clothing;
ClassDiagram.Class>> File =>=>=> RelationalSchema.Table>> file;
ClassDiagram.Class>> Parent =>=>=> RelationalSchema.Table>> parent;
ClassDiagram.Class>> SymbolicLink =>=>=> RelationalSchema.Table>> symboliclink;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> FinancialAsset =>=>=> RelationalSchema.Table>> financialasset;
ClassDiagram.Class>> Folder =>=>=> RelationalSchema.Table>> folder;
ClassDiagram.Class>> SwimmingPool =>=>=> RelationalSchema.Table>> swimmingpool;
ClassDiagram.Class>> Alarm =>=>=> RelationalSchema.Table>> alarm;
ClassDiagram.Class>> Pool =>=>=> RelationalSchema.Table>> pool;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Client =>=>=> RelationalSchema.Table>> client;
ClassDiagram.Class>> PropertyAsset =>=>=> RelationalSchema.Table>> propertyasset;
ClassDiagram.Class>> EventInformation =>=>=> RelationalSchema.Table>> eventinformation;
ClassDiagram.Class>> Asset =>=>=> RelationalSchema.Table>> asset;
ClassDiagram.Class>> File =>=>=> RelationalSchema.Table>> file;
ClassDiagram.Class>> Folder =>=>=> RelationalSchema.Table>> folder;
ClassDiagram.Class>> SymbolicLink =>=>=> RelationalSchema.Table>> symboliclink;
ClassDiagram.Class>> Document =>=>=> RelationalSchema.Table>> document;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Branch =>=>=> RelationalSchema.Table>> branch;
ClassDiagram.Class>> Leaf =>=>=> RelationalSchema.Table>> leaf;
ClassDiagram.Class>> Stay =>=>=> RelationalSchema.Table>> stay;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Bid =>=>=> RelationalSchema.Table>> bid;
ClassDiagram.Class>> HighestBid =>=>=> RelationalSchema.Table>> highestbid;
ClassDiagram.Class>> Dress =>=>=> RelationalSchema.Table>> dress;
ClassDiagram.Class>> AddressBook =>=>=> RelationalSchema.Table>> addressbook;
ClassDiagram.Class>> Wardrobe =>=>=> RelationalSchema.Table>> wardrobe;
ClassDiagram.Class>> Training =>=>=> RelationalSchema.Table>> training;
ClassDiagram.Class>> Gas =>=>=> RelationalSchema.Table>> gas;
ClassDiagram.Class>> AlphabeticalDirectory =>=>=> RelationalSchema.Table>> alphabeticaldirectory;
ClassDiagram.Class>> Software =>=>=> RelationalSchema.Table>> software;
ClassDiagram.Class>> Trainee =>=>=> RelationalSchema.Table>> trainee;
ClassDiagram.Class>> Atmosphere =>=>=> RelationalSchema.Table>> atmosphere;
ClassDiagram.Class>> PressReleaseAgency =>=>=> RelationalSchema.Table>> pressreleaseagency;
ClassDiagram.Class>> AddressEntry =>=>=> RelationalSchema.Table>> addressentry;
ClassDiagram.Class>> GenerationUser =>=>=> RelationalSchema.Table>> generationuser;
ClassDiagram.Class>> GasKey =>=>=> RelationalSchema.Table>> gaskey;
ClassDiagram.Class>> Newspaper =>=>=> RelationalSchema.Table>> newspaper;
ClassDiagram.Class>> Painting =>=>=> RelationalSchema.Table>> painting;
ClassDiagram.Class>> News =>=>=> RelationalSchema.Table>> news;
ClassDiagram.Class>> Painter =>=>=> RelationalSchema.Table>> painter;
ClassDiagram.Class>> Drawer =>=>=> RelationalSchema.Table>> drawer;
ClassDiagram.Class>> GenerationGroup =>=>=> RelationalSchema.Table>> generationgroup;
ClassDiagram.Class>> Version =>=>=> RelationalSchema.Table>> version;
ClassDiagram.Class>> Discount =>=>=> RelationalSchema.Table>> discount;
ClassDiagram.Class>> Contract =>=>=> RelationalSchema.Table>> contract;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> Manufacturer =>=>=> RelationalSchema.Table>> manufacturer;
ClassDiagram.Class>> Message =>=>=> RelationalSchema.Table>> message;
ClassDiagram.Class>> Model =>=>=> RelationalSchema.Table>> model;
ClassDiagram.Class>> FoodItem =>=>=> RelationalSchema.Table>> fooditem;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Language =>=>=> RelationalSchema.Table>> language;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Menu =>=>=> RelationalSchema.Table>> menu;
ClassDiagram.Class>> T800 =>=>=> RelationalSchema.Table>> t800;
ClassDiagram.Class>> Machine =>=>=> RelationalSchema.Table>> machine;
ClassDiagram.Class>> Robot =>=>=> RelationalSchema.Table>> robot;
ClassDiagram.Class>> Component =>=>=> RelationalSchema.Table>> component;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> SavingsAccount =>=>=> RelationalSchema.Table>> savingsaccount;
ClassDiagram.Class>> Competitor =>=>=> RelationalSchema.Table>> competitor;
ClassDiagram.Class>> Contest =>=>=> RelationalSchema.Table>> contest;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Simple =>=>=> RelationalSchema.Table>> simple;
ClassDiagram.Class>> Simple2 =>=>=> RelationalSchema.Table>> simple2;
ClassDiagram.Class>> Multiple =>=>=> RelationalSchema.Table>> multiple;
ClassDiagram.Class>> Body =>=>=> RelationalSchema.Table>> body;
ClassDiagram.Class>> OwnerAddress =>=>=> RelationalSchema.Table>> owneraddress;
ClassDiagram.Class>> ShowDescription =>=>=> RelationalSchema.Table>> showdescription;
ClassDiagram.Class>> Party =>=>=> RelationalSchema.Table>> party;
ClassDiagram.Class>> SerialNumber =>=>=> RelationalSchema.Table>> serialnumber;
ClassDiagram.Class>> Hardware =>=>=> RelationalSchema.Table>> hardware;
ClassDiagram.Class>> Owner =>=>=> RelationalSchema.Table>> owner;
ClassDiagram.Class>> DeviceGroupConfig =>=>=> RelationalSchema.Table>> devicegroupconfig;
ClassDiagram.Class>> ManagedDevice =>=>=> RelationalSchema.Table>> manageddevice;
ClassDiagram.Class>> Device =>=>=> RelationalSchema.Table>> device;
ClassDiagram.Class>> Trousers =>=>=> RelationalSchema.Table>> trousers;
ClassDiagram.Class>> Client =>=>=> RelationalSchema.Table>> client;
ClassDiagram.Class>> Owner =>=>=> RelationalSchema.Table>> owner;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Show =>=>=> RelationalSchema.Table>> show;
ClassDiagram.Class>> Computer =>=>=> RelationalSchema.Table>> computer;
ClassDiagram.Class>> Heart =>=>=> RelationalSchema.Table>> heart;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> TrousersZip =>=>=> RelationalSchema.Table>> trouserszip;
ClassDiagram.Class>> PartyAffiliate =>=>=> RelationalSchema.Table>> partyaffiliate;
ClassDiagram.Class>> Flight =>=>=> RelationalSchema.Table>> flight;
ClassDiagram.Class>> Dummy =>=>=> RelationalSchema.Table>> dummy;
ClassDiagram.Class>> Gene =>=>=> RelationalSchema.Table>> gene;
ClassDiagram.Class>> DNA =>=>=> RelationalSchema.Table>> dna;
ClassDiagram.Class>> Paper =>=>=> RelationalSchema.Table>> paper;
ClassDiagram.Class>> SomeGuy =>=>=> RelationalSchema.Table>> someguy;
ClassDiagram.Class>> Price =>=>=> RelationalSchema.Table>> price;
ClassDiagram.Class>> Classes =>=>=> RelationalSchema.Table>> classes;
ClassDiagram.Class>> WildEntity =>=>=> RelationalSchema.Table>> wildentity;
ClassDiagram.Class>> PaperType =>=>=> RelationalSchema.Table>> papertype;
ClassDiagram.Class>> Card =>=>=> RelationalSchema.Table>> card;
ClassDiagram.Class>> Deck =>=>=> RelationalSchema.Table>> deck;
ClassDiagram.Class>> DomainAdmin =>=>=> RelationalSchema.Table>> domainadmin;
ClassDiagram.Class>> Ticket =>=>=> RelationalSchema.Table>> ticket;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> Postman =>=>=> RelationalSchema.Table>> postman;
ClassDiagram.Class>> ItemCost =>=>=> RelationalSchema.Table>> itemcost;
ClassDiagram.Class>> WarehouseItem =>=>=> RelationalSchema.Table>> warehouseitem;
ClassDiagram.Class>> House =>=>=> RelationalSchema.Table>> house;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Luggage =>=>=> RelationalSchema.Table>> luggage;
ClassDiagram.Class>> Rambler =>=>=> RelationalSchema.Table>> rambler;
ClassDiagram.Class>> Inhabitant =>=>=> RelationalSchema.Table>> inhabitant;
ClassDiagram.Class>> Bag =>=>=> RelationalSchema.Table>> bag;
ClassDiagram.Class>> Clothes =>=>=> RelationalSchema.Table>> clothes;
ClassDiagram.Class>> Vendor =>=>=> RelationalSchema.Table>> vendor;
ClassDiagram.Class>> SomeEntity =>=>=> RelationalSchema.Table>> someentity;
ClassDiagram.Class>> SomeOtherEntity =>=>=> RelationalSchema.Table>> someotherentity;
ClassDiagram.Class>> TestCourse =>=>=> RelationalSchema.Table>> testcourse;
ClassDiagram.Class>> Boy =>=>=> RelationalSchema.Table>> boy;
ClassDiagram.Class>> Products =>=>=> RelationalSchema.Table>> products;
ClassDiagram.Class>> Widgets =>=>=> RelationalSchema.Table>> widgets;
ClassDiagram.Class>> Matrix =>=>=> RelationalSchema.Table>> matrix;
ClassDiagram.Class>> A =>=>=> RelationalSchema.Table>> a;
ClassDiagram.Class>> C =>=>=> RelationalSchema.Table>> c;
ClassDiagram.Class>> BugSystem =>=>=> RelationalSchema.Table>> bugsystem;
ClassDiagram.Class>> Sale =>=>=> RelationalSchema.Table>> sale;
ClassDiagram.Class>> FavoriteThings =>=>=> RelationalSchema.Table>> favoritethings;
ClassDiagram.Class>> WealthyPerson =>=>=> RelationalSchema.Table>> wealthyperson;
ClassDiagram.Class>> InternetProvider =>=>=> RelationalSchema.Table>> internetprovider;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> CorpType =>=>=> RelationalSchema.Table>> corptype;
ClassDiagram.Class>> Alias =>=>=> RelationalSchema.Table>> alias;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> SpreadDeal =>=>=> RelationalSchema.Table>> spreaddeal;
ClassDiagram.Class>> AddressType =>=>=> RelationalSchema.Table>> addresstype;
ClassDiagram.Class>> Nationality =>=>=> RelationalSchema.Table>> nationality;
ClassDiagram.Class>> RegionalArticle =>=>=> RelationalSchema.Table>> regionalarticle;
ClassDiagram.Class>> Manager =>=>=> RelationalSchema.Table>> manager;
ClassDiagram.Class>> VanillaSwap =>=>=> RelationalSchema.Table>> vanillaswap;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> Passport =>=>=> RelationalSchema.Table>> passport;
ClassDiagram.Class>> Manufacturer =>=>=> RelationalSchema.Table>> manufacturer;
ClassDiagram.Class>> PrimeMinister =>=>=> RelationalSchema.Table>> primeminister;
ClassDiagram.Class>> AImpl =>=>=> RelationalSchema.Table>> aimpl;
ClassDiagram.Class>> BImpl =>=>=> RelationalSchema.Table>> bimpl;
ClassDiagram.Class>> Sky =>=>=> RelationalSchema.Table>> sky;
ClassDiagram.Class>> ZImpl =>=>=> RelationalSchema.Table>> zimpl;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> MedicalHistory =>=>=> RelationalSchema.Table>> medicalhistory;
ClassDiagram.Class>> FinancialHistory =>=>=> RelationalSchema.Table>> financialhistory;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Simple =>=>=> RelationalSchema.Table>> simple;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> MedicalHistory =>=>=> RelationalSchema.Table>> medicalhistory;
ClassDiagram.Class>> FinancialHistory =>=>=> RelationalSchema.Table>> financialhistory;
ClassDiagram.Class>> Dependent =>=>=> RelationalSchema.Table>> dependent;
ClassDiagram.Class>> Bar =>=>=> RelationalSchema.Table>> bar;
ClassDiagram.Class>> Foo =>=>=> RelationalSchema.Table>> foo;
ClassDiagram.Class>> OrderLine =>=>=> RelationalSchema.Table>> orderline;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Dependent =>=>=> RelationalSchema.Table>> dependent;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Dependent =>=>=> RelationalSchema.Table>> dependent;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> CustomerInventory =>=>=> RelationalSchema.Table>> customerinventory;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> ExclusiveDependent =>=>=> RelationalSchema.Table>> exclusivedependent;
ClassDiagram.Class>> Dependent =>=>=> RelationalSchema.Table>> dependent;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Dependent =>=>=> RelationalSchema.Table>> dependent;
ClassDiagram.Class>> Dependent =>=>=> RelationalSchema.Table>> dependent;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> CustomerInventory =>=>=> RelationalSchema.Table>> customerinventory;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Dependent =>=>=> RelationalSchema.Table>> dependent;
ClassDiagram.Class>> MedicalHistory =>=>=> RelationalSchema.Table>> medicalhistory;
ClassDiagram.Class>> MedicalHistory =>=>=> RelationalSchema.Table>> medicalhistory;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> MedicalHistory =>=>=> RelationalSchema.Table>> medicalhistory;
ClassDiagram.Class>> Dependent =>=>=> RelationalSchema.Table>> dependent;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Dependent =>=>=> RelationalSchema.Table>> dependent;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Employer =>=>=> RelationalSchema.Table>> employer;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> MedicalHistory =>=>=> RelationalSchema.Table>> medicalhistory;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> MedicalHistory =>=>=> RelationalSchema.Table>> medicalhistory;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> MedicalHistory =>=>=> RelationalSchema.Table>> medicalhistory;
ClassDiagram.Class>> GSM =>=>=> RelationalSchema.Table>> gsm;
ClassDiagram.Class>> Voice =>=>=> RelationalSchema.Table>> voice;
ClassDiagram.Class>> Citizen =>=>=> RelationalSchema.Table>> citizen;
ClassDiagram.Class>> NaturalIdOnManyToOne =>=>=> RelationalSchema.Table>> naturalidonmanytoone;
ClassDiagram.Class>> State =>=>=> RelationalSchema.Table>> state;
ClassDiagram.Class>> CasimirParticle =>=>=> RelationalSchema.Table>> casimirparticle;
ClassDiagram.Class>> Dictionary =>=>=> RelationalSchema.Table>> dictionary;
ClassDiagram.Class>> Night =>=>=> RelationalSchema.Table>> night;
ClassDiagram.Class>> Twilight =>=>=> RelationalSchema.Table>> twilight;
ClassDiagram.Class>> Mark =>=>=> RelationalSchema.Table>> mark;
ClassDiagram.Class>> SpaceShip =>=>=> RelationalSchema.Table>> spaceship;
ClassDiagram.Class>> Area =>=>=> RelationalSchema.Table>> area;
ClassDiagram.Class>> SynonymousDictionary =>=>=> RelationalSchema.Table>> synonymousdictionary;
ClassDiagram.Class>> Captain =>=>=> RelationalSchema.Table>> captain;
ClassDiagram.Class>> Chaos =>=>=> RelationalSchema.Table>> chaos;
ClassDiagram.Class>> AllTables =>=>=> RelationalSchema.Table>> alltables;
ClassDiagram.Class>> Boat =>=>=> RelationalSchema.Table>> boat;
ClassDiagram.Class>> ClassD =>=>=> RelationalSchema.Table>> classd;
ClassDiagram.Class>> B =>=>=> RelationalSchema.Table>> b;
ClassDiagram.Class>> ClassA =>=>=> RelationalSchema.Table>> classa;
ClassDiagram.Class>> C =>=>=> RelationalSchema.Table>> c;
ClassDiagram.Class>> ClassC =>=>=> RelationalSchema.Table>> classc;
ClassDiagram.Class>> A =>=>=> RelationalSchema.Table>> a;
ClassDiagram.Class>> D =>=>=> RelationalSchema.Table>> d;
ClassDiagram.Class>> ClassB =>=>=> RelationalSchema.Table>> classb;
ClassDiagram.Class>> Stamp =>=>=> RelationalSchema.Table>> stamp;
ClassDiagram.Class>> Passport =>=>=> RelationalSchema.Table>> passport;
ClassDiagram.Class>> ParentHierarchy22 =>=>=> RelationalSchema.Table>> parenthierarchy22;
ClassDiagram.Class>> ChildHierarchy1 =>=>=> RelationalSchema.Table>> childhierarchy1;
ClassDiagram.Class>> ChildHierarchy22 =>=>=> RelationalSchema.Table>> childhierarchy22;
ClassDiagram.Class>> ParentHierarchy1 =>=>=> RelationalSchema.Table>> parenthierarchy1;
ClassDiagram.Class>> ContactImpl =>=>=> RelationalSchema.Table>> contactimpl;
ClassDiagram.Class>> UserImpl =>=>=> RelationalSchema.Table>> userimpl;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> A =>=>=> RelationalSchema.Table>> a;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Bug =>=>=> RelationalSchema.Table>> bug;
ClassDiagram.Class>> Printer =>=>=> RelationalSchema.Table>> printer;
ClassDiagram.Class>> PrinterCable =>=>=> RelationalSchema.Table>> printercable;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Mouth =>=>=> RelationalSchema.Table>> mouth;
ClassDiagram.Class>> Tooth =>=>=> RelationalSchema.Table>> tooth;
ClassDiagram.Class>> Ferry =>=>=> RelationalSchema.Table>> ferry;
ClassDiagram.Class>> A320 =>=>=> RelationalSchema.Table>> a320;
ClassDiagram.Class>> Contractor =>=>=> RelationalSchema.Table>> contractor;
ClassDiagram.Class>> Man =>=>=> RelationalSchema.Table>> man;
ClassDiagram.Class>> Employer =>=>=> RelationalSchema.Table>> employer;
ClassDiagram.Class>> KnownClient =>=>=> RelationalSchema.Table>> knownclient;
ClassDiagram.Class>> Permission =>=>=> RelationalSchema.Table>> permission;
ClassDiagram.Class>> BuildingCompany =>=>=> RelationalSchema.Table>> buildingcompany;
ClassDiagram.Class>> Woman =>=>=> RelationalSchema.Table>> woman;
ClassDiagram.Class>> GroupWithSet =>=>=> RelationalSchema.Table>> groupwithset;
ClassDiagram.Class>> Supplier =>=>=> RelationalSchema.Table>> supplier;
ClassDiagram.Class>> Cat =>=>=> RelationalSchema.Table>> cat;
ClassDiagram.Class>> Store =>=>=> RelationalSchema.Table>> store;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> InspectorPrefixes =>=>=> RelationalSchema.Table>> inspectorprefixes;
ClassDiagram.Class>> ProgramManager =>=>=> RelationalSchema.Table>> programmanager;
ClassDiagram.Class>> Inspector =>=>=> RelationalSchema.Table>> inspector;
ClassDiagram.Class>> Zone =>=>=> RelationalSchema.Table>> zone;
ClassDiagram.Class>> Building =>=>=> RelationalSchema.Table>> building;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Group =>=>=> RelationalSchema.Table>> group;
ClassDiagram.Class>> City =>=>=> RelationalSchema.Table>> city;
ClassDiagram.Class>> Friend =>=>=> RelationalSchema.Table>> friend;
ClassDiagram.Class>> Port =>=>=> RelationalSchema.Table>> port;
ClassDiagram.Attribut>> CacheableItem.id:Long =>=>=> RelationalSchema.Column>> cacheableitem.id PRIMARY KEY;
ClassDiagram.Attribut>> CacheableItem.name:String =>=>=> RelationalSchema.Column>> cacheableitem.name;
ClassDiagram.Attribut>> Membership.id:Long =>=>=> RelationalSchema.Column>> membership.id PRIMARY KEY;
ClassDiagram.Attribut>> Membership.GeneratedName:Group =>=>=> RelationalSchema.Column>> membership.GeneratedName;
ClassDiagram.Attribut>> Membership.join:Date =>=>=> RelationalSchema.Column>> membership.join;
ClassDiagram.Attribut>> Membership.dues:Float =>=>=> RelationalSchema.Column>> membership.dues;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> Group.id:Long =>=>=> RelationalSchema.Column>> group.id PRIMARY KEY;
ClassDiagram.Attribut>> Group.name:String =>=>=> RelationalSchema.Column>> group.name;
ClassDiagram.Attribut>> Window.id:Long =>=>=> RelationalSchema.Column>> window.id PRIMARY KEY;
ClassDiagram.Attribut>> Gate.id:Long =>=>=> RelationalSchema.Column>> gate.id PRIMARY KEY;
ClassDiagram.Attribut>> Portal.id:Long =>=>=> RelationalSchema.Column>> portal.id PRIMARY KEY;
ClassDiagram.Attribut>> ConfigurationSerializationTest.files:String =>=>=> RelationalSchema.Column>> configurationserializationtest.files;
ClassDiagram.Attribut>> MinMax.id:Long =>=>=> RelationalSchema.Column>> minmax.id PRIMARY KEY;
ClassDiagram.Attribut>> MinMax.value:Integer =>=>=> RelationalSchema.Column>> minmax.value;
ClassDiagram.Attribut>> Music.name:String =>=>=> RelationalSchema.Column>> music.name PRIMARY KEY;
ClassDiagram.Attribut>> Screen.id:Integer =>=>=> RelationalSchema.Column>> screen.id PRIMARY KEY;
ClassDiagram.Attribut>> Screen.stop:Button =>=>=> RelationalSchema.Column>> screen.stop;
ClassDiagram.Attribut>> Screen.GeneratedName:PowerSupply =>=>=> RelationalSchema.Column>> screen.GeneratedName;
ClassDiagram.Attribut>> Screen.connectors:Set<DisplayConnector> =>=>=> RelationalSchema.Column>> screen.connectors;
ClassDiagram.Attribut>> Rock.bit:Integer =>=>=> RelationalSchema.Column>> rock.bit;
ClassDiagram.Attribut>> Display.id:Integer =>=>=> RelationalSchema.Column>> display.id PRIMARY KEY;
ClassDiagram.Attribut>> Display.brand:String =>=>=> RelationalSchema.Column>> display.brand;
ClassDiagram.Attribut>> Range.id:Long =>=>=> RelationalSchema.Column>> range.id PRIMARY KEY;
ClassDiagram.Attribut>> Range.value:Integer =>=>=> RelationalSchema.Column>> range.value;
ClassDiagram.Attribut>> Tv.serial:String =>=>=> RelationalSchema.Column>> tv.serial PRIMARY KEY;
ClassDiagram.Attribut>> Tv.model:String =>=>=> RelationalSchema.Column>> tv.model;
ClassDiagram.Attribut>> Tv.size:int =>=>=> RelationalSchema.Column>> tv.size;
ClassDiagram.Attribut>> Tv.name:String =>=>=> RelationalSchema.Column>> tv.name;
ClassDiagram.Attribut>> Tv.exp:Date =>=>=> RelationalSchema.Column>> tv.exp;
ClassDiagram.Attribut>> Tv.description:String =>=>=> RelationalSchema.Column>> tv.description;
ClassDiagram.Attribut>> Tv.lifetime:BigInteger =>=>=> RelationalSchema.Column>> tv.lifetime;
ClassDiagram.Attribut>> Tv.GeneratedName:Tuner =>=>=> RelationalSchema.Column>> tv.GeneratedName;
ClassDiagram.Attribut>> Tv.GeneratedName:Recorder =>=>=> RelationalSchema.Column>> tv.GeneratedName;
ClassDiagram.Attribut>> CupHolder.id:Integer =>=>=> RelationalSchema.Column>> cupholder.id PRIMARY KEY;
ClassDiagram.Attribut>> CupHolder.radius:BigDecimal =>=>=> RelationalSchema.Column>> cupholder.radius;
ClassDiagram.Attribut>> TvOwner.id:Integer =>=>=> RelationalSchema.Column>> tvowner.id PRIMARY KEY;
ClassDiagram.Attribut>> Color.id:Integer =>=>=> RelationalSchema.Column>> color.id PRIMARY KEY;
ClassDiagram.Attribut>> Color.name:String =>=>=> RelationalSchema.Column>> color.name;
ClassDiagram.Attribut>> PowerSupply.id:Integer =>=>=> RelationalSchema.Column>> powersupply.id PRIMARY KEY;
ClassDiagram.Attribut>> PowerSupply.power:BigDecimal =>=>=> RelationalSchema.Column>> powersupply.power;
ClassDiagram.Attribut>> PowerSupply.position:String =>=>=> RelationalSchema.Column>> powersupply.position;
ClassDiagram.Attribut>> Address.blacklistedzipcode:String =>=>=> RelationalSchema.Column>> address.blacklistedzipcode;
ClassDiagram.Attribut>> Address.line1:String =>=>=> RelationalSchema.Column>> address.line1;
ClassDiagram.Attribut>> Address.line2:String =>=>=> RelationalSchema.Column>> address.line2;
ClassDiagram.Attribut>> Address.zip:String =>=>=> RelationalSchema.Column>> address.zip;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.country:String =>=>=> RelationalSchema.Column>> address.country;
ClassDiagram.Attribut>> Address.id:long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.internalvalid:boolean =>=>=> RelationalSchema.Column>> address.internalvalid;
ClassDiagram.Attribut>> Address.floor:int =>=>=> RelationalSchema.Column>> address.floor;
ClassDiagram.Attribut>> Customer3.id:long =>=>=> RelationalSchema.Column>> customer3.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer3.name:String =>=>=> RelationalSchema.Column>> customer3.name;
ClassDiagram.Attribut>> Customer3.customernumber:long =>=>=> RelationalSchema.Column>> customer3.customernumber;
ClassDiagram.Attribut>> Customer2.id:long =>=>=> RelationalSchema.Column>> customer2.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer2.name:String =>=>=> RelationalSchema.Column>> customer2.name;
ClassDiagram.Attribut>> Customer2.customernumber:long =>=>=> RelationalSchema.Column>> customer2.customernumber;
ClassDiagram.Attribut>> Country.id:Integer =>=>=> RelationalSchema.Column>> country.id PRIMARY KEY;
ClassDiagram.Attribut>> Country.name:String =>=>=> RelationalSchema.Column>> country.name;
ClassDiagram.Attribut>> Customer.id:long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.customernumber:long =>=>=> RelationalSchema.Column>> customer.customernumber;
ClassDiagram.Attribut>> Order.id:long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.ordernumber:long =>=>=> RelationalSchema.Column>> order.ordernumber;
ClassDiagram.Attribut>> Order.delivery:Date =>=>=> RelationalSchema.Column>> order.delivery;
ClassDiagram.Attribut>> SupportTickets.id:long =>=>=> RelationalSchema.Column>> supporttickets.id PRIMARY KEY;
ClassDiagram.Attribut>> SupportTickets.description:String =>=>=> RelationalSchema.Column>> supporttickets.description;
ClassDiagram.Attribut>> SupportTickets.resolution:String =>=>=> RelationalSchema.Column>> supporttickets.resolution;
ClassDiagram.Attribut>> Customer4.id:long =>=>=> RelationalSchema.Column>> customer4.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer4.name:String =>=>=> RelationalSchema.Column>> customer4.name;
ClassDiagram.Attribut>> Customer4.customernumber:long =>=>=> RelationalSchema.Column>> customer4.customernumber;
ClassDiagram.Attribut>> Customer5.id:long =>=>=> RelationalSchema.Column>> customer5.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer5.name:String =>=>=> RelationalSchema.Column>> customer5.name;
ClassDiagram.Attribut>> Customer5.customernumber:long =>=>=> RelationalSchema.Column>> customer5.customernumber;
ClassDiagram.Attribut>> TvMagazin.id:TvMagazinPk =>=>=> RelationalSchema.Column>> tvmagazin.id;
ClassDiagram.Attribut>> TvMagazin.time:Date =>=>=> RelationalSchema.Column>> tvmagazin.time;
ClassDiagram.Attribut>> A.GeneratedName:AId =>=>=> RelationalSchema.Column>> a.GeneratedName;
ClassDiagram.Attribut>> Parent.id:ParentPk =>=>=> RelationalSchema.Column>> parent.id;
ClassDiagram.Attribut>> LittleGenius.particularskill:String =>=>=> RelationalSchema.Column>> littlegenius.particularskill;
ClassDiagram.Attribut>> OrderLine.GeneratedName:Order =>=>=> RelationalSchema.Column>> orderline.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> OrderLine.GeneratedName:Product =>=>=> RelationalSchema.Column>> orderline.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name PRIMARY KEY;
ClassDiagram.Attribut>> C.id:Long =>=>=> RelationalSchema.Column>> c.id PRIMARY KEY;
ClassDiagram.Attribut>> TvProgramIdClass.GeneratedName:Channel =>=>=> RelationalSchema.Column>> tvprogramidclass.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> TvProgramIdClass.GeneratedName:Presenter =>=>=> RelationalSchema.Column>> tvprogramidclass.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> TvProgramIdClass.time:Date =>=>=> RelationalSchema.Column>> tvprogramidclass.time;
ClassDiagram.Attribut>> TvProgramIdClass.text:String =>=>=> RelationalSchema.Column>> tvprogramidclass.text;
ClassDiagram.Attribut>> SomeEntity.id:SomeEntityId =>=>=> RelationalSchema.Column>> someentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SomeEntity.prop:String =>=>=> RelationalSchema.Column>> someentity.prop;
ClassDiagram.Attribut>> Presenter.name:String =>=>=> RelationalSchema.Column>> presenter.name PRIMARY KEY;
ClassDiagram.Attribut>> Child.id:ChildPk =>=>=> RelationalSchema.Column>> child.id;
ClassDiagram.Attribut>> TvProgram.id:TvMagazinPk =>=>=> RelationalSchema.Column>> tvprogram.id;
ClassDiagram.Attribut>> TvProgram.time:Date =>=>=> RelationalSchema.Column>> tvprogram.time;
ClassDiagram.Attribut>> TvProgram.text:String =>=>=> RelationalSchema.Column>> tvprogram.text;
ClassDiagram.Attribut>> Order.id:Integer =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Key.id:String =>=>=> RelationalSchema.Column>> key.id PRIMARY KEY;
ClassDiagram.Attribut>> Card.id:String =>=>=> RelationalSchema.Column>> card.id PRIMARY KEY;
ClassDiagram.Attribut>> CardField.GeneratedName:PrimaryKey =>=>=> RelationalSchema.Column>> cardfield.GeneratedName;
ClassDiagram.Attribut>> Channel.id:Integer =>=>=> RelationalSchema.Column>> channel.id PRIMARY KEY;
ClassDiagram.Attribut>> B.id:Long =>=>=> RelationalSchema.Column>> b.id PRIMARY KEY;
ClassDiagram.Attribut>> IntegerProperty.id:Integer =>=>=> RelationalSchema.Column>> integerproperty.id PRIMARY KEY;
ClassDiagram.Attribut>> IntegerProperty.name:String =>=>=> RelationalSchema.Column>> integerproperty.name;
ClassDiagram.Attribut>> IntegerProperty.value:Integer =>=>=> RelationalSchema.Column>> integerproperty.value;
ClassDiagram.Attribut>> CharProperty.id:Integer =>=>=> RelationalSchema.Column>> charproperty.id PRIMARY KEY;
ClassDiagram.Attribut>> CharProperty.name:String =>=>=> RelationalSchema.Column>> charproperty.name;
ClassDiagram.Attribut>> CharProperty.value:Character =>=>=> RelationalSchema.Column>> charproperty.value;
ClassDiagram.Attribut>> PropertyMap.id:Integer =>=>=> RelationalSchema.Column>> propertymap.id PRIMARY KEY;
ClassDiagram.Attribut>> PropertyMap.name:String =>=>=> RelationalSchema.Column>> propertymap.name;
ClassDiagram.Attribut>> PropertyMap.properties:Map<String,Property> =>=>=> RelationalSchema.Column>> propertymap.properties;
ClassDiagram.Attribut>> LongProperty.id:Integer =>=>=> RelationalSchema.Column>> longproperty.id PRIMARY KEY;
ClassDiagram.Attribut>> LongProperty.name:String =>=>=> RelationalSchema.Column>> longproperty.name;
ClassDiagram.Attribut>> LongProperty.value:Long =>=>=> RelationalSchema.Column>> longproperty.value;
ClassDiagram.Attribut>> PropertySet.id:Integer =>=>=> RelationalSchema.Column>> propertyset.id PRIMARY KEY;
ClassDiagram.Attribut>> PropertySet.name:String =>=>=> RelationalSchema.Column>> propertyset.name;
ClassDiagram.Attribut>> PropertySet.some:Property =>=>=> RelationalSchema.Column>> propertyset.some;
ClassDiagram.Attribut>> PropertySet.generalproperties:List<Property> =>=>=> RelationalSchema.Column>> propertyset.generalproperties;
ClassDiagram.Attribut>> StringProperty.id:Integer =>=>=> RelationalSchema.Column>> stringproperty.id PRIMARY KEY;
ClassDiagram.Attribut>> StringProperty.name:String =>=>=> RelationalSchema.Column>> stringproperty.name;
ClassDiagram.Attribut>> StringProperty.value:String =>=>=> RelationalSchema.Column>> stringproperty.value;
ClassDiagram.Attribut>> PropertyList.id:Integer =>=>=> RelationalSchema.Column>> propertylist.id PRIMARY KEY;
ClassDiagram.Attribut>> PropertyList.name:String =>=>=> RelationalSchema.Column>> propertylist.name;
ClassDiagram.Attribut>> PropertyList.somepropery:T =>=>=> RelationalSchema.Column>> propertylist.somepropery;
ClassDiagram.Attribut>> PropertyList.generalproperties:List<T> =>=>=> RelationalSchema.Column>> propertylist.generalproperties;
ClassDiagram.Attribut>> Foobar.id:Integer =>=>=> RelationalSchema.Column>> foobar.id PRIMARY KEY;
ClassDiagram.Attribut>> Foobar.name:String =>=>=> RelationalSchema.Column>> foobar.name;
ClassDiagram.Attribut>> Country.id:Integer =>=>=> RelationalSchema.Column>> country.id PRIMARY KEY;
ClassDiagram.Attribut>> Country.name:String =>=>=> RelationalSchema.Column>> country.name;
ClassDiagram.Attribut>> State.id:Integer =>=>=> RelationalSchema.Column>> state.id PRIMARY KEY;
ClassDiagram.Attribut>> State.name:String =>=>=> RelationalSchema.Column>> state.name;
ClassDiagram.Attribut>> Plane.id:Long =>=>=> RelationalSchema.Column>> plane.id PRIMARY KEY;
ClassDiagram.Attribut>> Plane.nbrofseats:int =>=>=> RelationalSchema.Column>> plane.nbrofseats;
ClassDiagram.Attribut>> StoreCustomer.GeneratedName:Store =>=>=> RelationalSchema.Column>> storecustomer.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> StoreCustomer.GeneratedName:Customer =>=>=> RelationalSchema.Column>> storecustomer.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> StoreCustomer.serialversionuid:long =>=>=> RelationalSchema.Column>> storecustomer.serialversionuid;
ClassDiagram.Attribut>> Card.primarykey:CardPrimaryKey =>=>=> RelationalSchema.Column>> card.primarykey PRIMARY KEY;
ClassDiagram.Attribut>> BasketItems.serialversionuid:long =>=>=> RelationalSchema.Column>> basketitems.serialversionuid;
ClassDiagram.Attribut>> BasketItems.GeneratedName:ShoppingBaskets =>=>=> RelationalSchema.Column>> basketitems.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> BasketItems.cost:Double =>=>=> RelationalSchema.Column>> basketitems.cost PRIMARY KEY;
ClassDiagram.Attribut>> CardKey.id:int =>=>=> RelationalSchema.Column>> cardkey.id PRIMARY KEY;
ClassDiagram.Attribut>> C.prent:A =>=>=> RelationalSchema.Column>> c.prent PRIMARY KEY;
ClassDiagram.Attribut>> C.sequencenumber:int =>=>=> RelationalSchema.Column>> c.sequencenumber PRIMARY KEY;
ClassDiagram.Attribut>> Droitacces.idpk:BigInteger =>=>=> RelationalSchema.Column>> droitacces.idpk PRIMARY KEY;
ClassDiagram.Attribut>> Benefserv.idpk:BigInteger =>=>=> RelationalSchema.Column>> benefserv.idpk PRIMARY KEY;
ClassDiagram.Attribut>> Acces.idpk:BigInteger =>=>=> RelationalSchema.Column>> acces.idpk PRIMARY KEY;
ClassDiagram.Attribut>> B.parent:C =>=>=> RelationalSchema.Column>> b.parent PRIMARY KEY;
ClassDiagram.Attribut>> B.sequencenumber:int =>=>=> RelationalSchema.Column>> b.sequencenumber PRIMARY KEY;
ClassDiagram.Attribut>> Service.idpk:BigInteger =>=>=> RelationalSchema.Column>> service.idpk PRIMARY KEY;
ClassDiagram.Attribut>> A.id:int =>=>=> RelationalSchema.Column>> a.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.id:Integer =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.serialversionuid:long =>=>=> RelationalSchema.Column>> customer.serialversionuid;
ClassDiagram.Attribut>> Store.id:Integer =>=>=> RelationalSchema.Column>> store.id PRIMARY KEY;
ClassDiagram.Attribut>> Store.serialversionuid:long =>=>=> RelationalSchema.Column>> store.serialversionuid;
ClassDiagram.Attribut>> CardField.GeneratedName:PrimaryKey =>=>=> RelationalSchema.Column>> cardfield.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Project.id:int =>=>=> RelationalSchema.Column>> project.id PRIMARY KEY;
ClassDiagram.Attribut>> ShoppingBaskets.serialversionuid:long =>=>=> RelationalSchema.Column>> shoppingbaskets.serialversionuid;
ClassDiagram.Attribut>> ShoppingBaskets.owner:Customers =>=>=> RelationalSchema.Column>> shoppingbaskets.owner PRIMARY KEY;
ClassDiagram.Attribut>> ShoppingBaskets.basketdatetime:java.util.Date =>=>=> RelationalSchema.Column>> shoppingbaskets.basketdatetime PRIMARY KEY;
ClassDiagram.Attribut>> Customers.serialversionuid:long =>=>=> RelationalSchema.Column>> customers.serialversionuid;
ClassDiagram.Attribut>> Customers.customerid:int =>=>=> RelationalSchema.Column>> customers.customerid PRIMARY KEY;
ClassDiagram.Attribut>> Car.id:int =>=>=> RelationalSchema.Column>> car.id PRIMARY KEY;
ClassDiagram.Attribut>> Car.name:String =>=>=> RelationalSchema.Column>> car.name;
ClassDiagram.Attribut>> Drill.id:int =>=>=> RelationalSchema.Column>> drill.id PRIMARY KEY;
ClassDiagram.Attribut>> Player.id:int =>=>=> RelationalSchema.Column>> player.id PRIMARY KEY;
ClassDiagram.Attribut>> Player.name:String =>=>=> RelationalSchema.Column>> player.name;
ClassDiagram.Attribut>> Player.//fortheworldcupofoneversusonematches,wehave//teamswithoneplayer(1v1team).onevoneteam:SoccerTeam =>=>=> RelationalSchema.Column>> player.//fortheworldcupofoneversusonematches,wehave//teamswithoneplayer(1v1team).onevoneteam;
ClassDiagram.Attribut>> Forest.id:Integer =>=>=> RelationalSchema.Column>> forest.id PRIMARY KEY;
ClassDiagram.Attribut>> Forest.name:String =>=>=> RelationalSchema.Column>> forest.name;
ClassDiagram.Attribut>> Forest.length:long =>=>=> RelationalSchema.Column>> forest.length;
ClassDiagram.Attribut>> Forest.longdescription:String =>=>=> RelationalSchema.Column>> forest.longdescription;
ClassDiagram.Attribut>> Forest.smalltext:String =>=>=> RelationalSchema.Column>> forest.smalltext;
ClassDiagram.Attribut>> Forest.bigtext:String =>=>=> RelationalSchema.Column>> forest.bigtext;
ClassDiagram.Attribut>> Forest.GeneratedName:Country =>=>=> RelationalSchema.Column>> forest.GeneratedName;
ClassDiagram.Attribut>> Forest.near:Set =>=>=> RelationalSchema.Column>> forest.near;
ClassDiagram.Attribut>> Flight.id:Long =>=>=> RelationalSchema.Column>> flight.id PRIMARY KEY;
ClassDiagram.Attribut>> Flight.maxaltitudeinmilimeter:long =>=>=> RelationalSchema.Column>> flight.maxaltitudeinmilimeter;
ClassDiagram.Attribut>> Flight.maxaltitude:long =>=>=> RelationalSchema.Column>> flight.maxaltitude;
ClassDiagram.Attribut>> ContactDetails.id:int =>=>=> RelationalSchema.Column>> contactdetails.id PRIMARY KEY;
ClassDiagram.Attribut>> ContactDetails.local:PhoneNumber =>=>=> RelationalSchema.Column>> contactdetails.local;
ClassDiagram.Attribut>> ContactDetails.GeneratedName:OverseasPhoneNumber =>=>=> RelationalSchema.Column>> contactdetails.GeneratedName;
ClassDiagram.Attribut>> Address.id:Integer =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.GeneratedName:Country =>=>=> RelationalSchema.Column>> address.GeneratedName;
ClassDiagram.Attribut>> Narrative.id:int =>=>=> RelationalSchema.Column>> narrative.id PRIMARY KEY;
ClassDiagram.Attribut>> Narrative.state:String =>=>=> RelationalSchema.Column>> narrative.state;
ClassDiagram.Attribut>> Narrative.GeneratedName:Topic =>=>=> RelationalSchema.Column>> narrative.GeneratedName;
ClassDiagram.Attribut>> ZipCode.code:String =>=>=> RelationalSchema.Column>> zipcode.code PRIMARY KEY;
ClassDiagram.Attribut>> LocalContactDetails.id:int =>=>=> RelationalSchema.Column>> localcontactdetails.id PRIMARY KEY;
ClassDiagram.Attribut>> LocalContactDetails.local:PhoneNumber =>=>=> RelationalSchema.Column>> localcontactdetails.local;
ClassDiagram.Attribut>> LocalContactDetails.GeneratedName:OverseasPhoneNumber =>=>=> RelationalSchema.Column>> localcontactdetails.GeneratedName;
ClassDiagram.Attribut>> SoccerTeam.id:int =>=>=> RelationalSchema.Column>> soccerteam.id PRIMARY KEY;
ClassDiagram.Attribut>> SoccerTeam.name:String =>=>=> RelationalSchema.Column>> soccerteam.name;
ClassDiagram.Attribut>> FormalLastName.id:Integer =>=>=> RelationalSchema.Column>> formallastname.id PRIMARY KEY;
ClassDiagram.Attribut>> FormalLastName.GeneratedName:LastName =>=>=> RelationalSchema.Column>> formallastname.GeneratedName;
ClassDiagram.Attribut>> FormalLastName.designation:String =>=>=> RelationalSchema.Column>> formallastname.designation;
ClassDiagram.Attribut>> CommunityBid.communitynote:Starred =>=>=> RelationalSchema.Column>> communitybid.communitynote;
ClassDiagram.Attribut>> Topic.id:int =>=>=> RelationalSchema.Column>> topic.id PRIMARY KEY;
ClassDiagram.Attribut>> Race.length:Long =>=>=> RelationalSchema.Column>> race.length;
ClassDiagram.Attribut>> Race.id:Integer =>=>=> RelationalSchema.Column>> race.id PRIMARY KEY;
ClassDiagram.Attribut>> WashingMachine.id:Integer =>=>=> RelationalSchema.Column>> washingmachine.id PRIMARY KEY;
ClassDiagram.Attribut>> WashingMachine.transientisactive:boolean =>=>=> RelationalSchema.Column>> washingmachine.transientisactive;
ClassDiagram.Attribut>> Tree.id:Integer =>=>=> RelationalSchema.Column>> tree.id PRIMARY KEY;
ClassDiagram.Attribut>> Tree.name:String =>=>=> RelationalSchema.Column>> tree.name;
ClassDiagram.Attribut>> Ransom.id:Integer =>=>=> RelationalSchema.Column>> ransom.id PRIMARY KEY;
ClassDiagram.Attribut>> Ransom.kidnappername:String =>=>=> RelationalSchema.Column>> ransom.kidnappername;
ClassDiagram.Attribut>> Ransom.amount:MonetaryAmount =>=>=> RelationalSchema.Column>> ransom.amount;
ClassDiagram.Attribut>> Ransom.GeneratedName:Date =>=>=> RelationalSchema.Column>> ransom.GeneratedName;
ClassDiagram.Attribut>> Name.id:Integer =>=>=> RelationalSchema.Column>> name.id PRIMARY KEY;
ClassDiagram.Attribut>> Name.GeneratedName:LastName =>=>=> RelationalSchema.Column>> name.GeneratedName;
ClassDiagram.Attribut>> Bid.id:Integer =>=>=> RelationalSchema.Column>> bid.id PRIMARY KEY;
ClassDiagram.Attribut>> Bid.description:String =>=>=> RelationalSchema.Column>> bid.description;
ClassDiagram.Attribut>> Bid.note:Starred =>=>=> RelationalSchema.Column>> bid.note;
ClassDiagram.Attribut>> Bid.editorsnote:Starred =>=>=> RelationalSchema.Column>> bid.editorsnote;
ClassDiagram.Attribut>> Bid.approved:Boolean =>=>=> RelationalSchema.Column>> bid.approved;
ClassDiagram.Attribut>> Car.id:Integer =>=>=> RelationalSchema.Column>> car.id PRIMARY KEY;
ClassDiagram.Attribut>> Car.model:String =>=>=> RelationalSchema.Column>> car.model;
ClassDiagram.Attribut>> Son.id:Integer =>=>=> RelationalSchema.Column>> son.id PRIMARY KEY;
ClassDiagram.Attribut>> Son.GeneratedName:Father =>=>=> RelationalSchema.Column>> son.GeneratedName;
ClassDiagram.Attribut>> Son.GeneratedName:Mother =>=>=> RelationalSchema.Column>> son.GeneratedName;
ClassDiagram.Attribut>> Mother.id:Integer =>=>=> RelationalSchema.Column>> mother.id PRIMARY KEY;
ClassDiagram.Attribut>> Father.id:Integer =>=>=> RelationalSchema.Column>> father.id PRIMARY KEY;
ClassDiagram.Attribut>> IncorrectEntity.name:String =>=>=> RelationalSchema.Column>> incorrectentity.name;
ClassDiagram.Attribut>> Life.id:Integer =>=>=> RelationalSchema.Column>> life.id PRIMARY KEY;
ClassDiagram.Attribut>> Life.duration:int =>=>=> RelationalSchema.Column>> life.duration;
ClassDiagram.Attribut>> Life.fulldescription:String =>=>=> RelationalSchema.Column>> life.fulldescription;
ClassDiagram.Attribut>> SysUserOrm.userid:long =>=>=> RelationalSchema.Column>> sysuserorm.userid PRIMARY KEY;
ClassDiagram.Attribut>> SysGroupsOrm.groupid:long =>=>=> RelationalSchema.Column>> sysgroupsorm.groupid PRIMARY KEY;
ClassDiagram.Attribut>> B.id:Integer =>=>=> RelationalSchema.Column>> b.id PRIMARY KEY;
ClassDiagram.Attribut>> B.name:String =>=>=> RelationalSchema.Column>> b.name;
ClassDiagram.Attribut>> Death.id:Integer =>=>=> RelationalSchema.Column>> death.id PRIMARY KEY;
ClassDiagram.Attribut>> Death.GeneratedName:Date =>=>=> RelationalSchema.Column>> death.GeneratedName;
ClassDiagram.Attribut>> Death.howdoesithappen:String =>=>=> RelationalSchema.Column>> death.howdoesithappen;
ClassDiagram.Attribut>> C.age:int =>=>=> RelationalSchema.Column>> c.age;
ClassDiagram.Attribut>> Dog.id:DogPk =>=>=> RelationalSchema.Column>> dog.id PRIMARY KEY;
ClassDiagram.Attribut>> Dog.weight:int =>=>=> RelationalSchema.Column>> dog.weight;
ClassDiagram.Attribut>> Dog.thoroughbredname:String =>=>=> RelationalSchema.Column>> dog.thoroughbredname;
ClassDiagram.Attribut>> Cat.id:Integer =>=>=> RelationalSchema.Column>> cat.id PRIMARY KEY;
ClassDiagram.Attribut>> Cat.name:String =>=>=> RelationalSchema.Column>> cat.name;
ClassDiagram.Attribut>> Cat.secondname:String =>=>=> RelationalSchema.Column>> cat.secondname;
ClassDiagram.Attribut>> Cat.storypart1:String =>=>=> RelationalSchema.Column>> cat.storypart1;
ClassDiagram.Attribut>> Cat.storypart2:String =>=>=> RelationalSchema.Column>> cat.storypart2;
ClassDiagram.Attribut>> PropertyRecord.id:Long =>=>=> RelationalSchema.Column>> propertyrecord.id PRIMARY KEY;
ClassDiagram.Attribut>> PropertyRecord.parcels:Map<Address,PropertyInfo> =>=>=> RelationalSchema.Column>> propertyrecord.parcels;
ClassDiagram.Attribut>> PropertyRecord.legacyparcels:Map<Address,PropertyInfo> =>=>=> RelationalSchema.Column>> propertyrecord.legacyparcels;
ClassDiagram.Attribut>> PropertyRecord.unsortedparcels:Set<PropertyInfo> =>=>=> RelationalSchema.Column>> propertyrecord.unsortedparcels;
ClassDiagram.Attribut>> PropertyRecord.legacyunsortedparcels:Set<PropertyInfo> =>=>=> RelationalSchema.Column>> propertyrecord.legacyunsortedparcels;
ClassDiagram.Attribut>> Location.name:String =>=>=> RelationalSchema.Column>> location.name PRIMARY KEY;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.GeneratedName:ContactInfo =>=>=> RelationalSchema.Column>> employee.GeneratedName;
ClassDiagram.Attribut>> Addr.id:int =>=>=> RelationalSchema.Column>> addr.id PRIMARY KEY;
ClassDiagram.Attribut>> Addr.street:String =>=>=> RelationalSchema.Column>> addr.street;
ClassDiagram.Attribut>> Addr.city:String =>=>=> RelationalSchema.Column>> addr.city;
ClassDiagram.Attribut>> Addr.state:String =>=>=> RelationalSchema.Column>> addr.state;
ClassDiagram.Attribut>> Addr.country:String =>=>=> RelationalSchema.Column>> addr.country;
ClassDiagram.Attribut>> Addr.zipcode:String =>=>=> RelationalSchema.Column>> addr.zipcode;
ClassDiagram.Attribut>> PhoneNumber.id:int =>=>=> RelationalSchema.Column>> phonenumber.id PRIMARY KEY;
ClassDiagram.Attribut>> PhoneNumber.number:int =>=>=> RelationalSchema.Column>> phonenumber.number;
ClassDiagram.Attribut>> SocialSite.id:int =>=>=> RelationalSchema.Column>> socialsite.id PRIMARY KEY;
ClassDiagram.Attribut>> SocialSite.website:String =>=>=> RelationalSchema.Column>> socialsite.website;
ClassDiagram.Attribut>> Dog.id:Integer =>=>=> RelationalSchema.Column>> dog.id PRIMARY KEY;
ClassDiagram.Attribut>> Dog.name:String =>=>=> RelationalSchema.Column>> dog.name;
ClassDiagram.Attribut>> Monkey.id:String =>=>=> RelationalSchema.Column>> monkey.id PRIMARY KEY;
ClassDiagram.Attribut>> BreakDance.id:Integer =>=>=> RelationalSchema.Column>> breakdance.id PRIMARY KEY;
ClassDiagram.Attribut>> BreakDance.name:String =>=>=> RelationalSchema.Column>> breakdance.name;
ClassDiagram.Attribut>> Store.id:Long =>=>=> RelationalSchema.Column>> store.id PRIMARY KEY;
ClassDiagram.Attribut>> Computer.id:Long =>=>=> RelationalSchema.Column>> computer.id PRIMARY KEY;
ClassDiagram.Attribut>> Computer.serialnumber:String =>=>=> RelationalSchema.Column>> computer.serialnumber;
ClassDiagram.Attribut>> Footballer.firstname:String =>=>=> RelationalSchema.Column>> footballer.firstname PRIMARY KEY;
ClassDiagram.Attribut>> Footballer.lastname:String =>=>=> RelationalSchema.Column>> footballer.lastname PRIMARY KEY;
ClassDiagram.Attribut>> Footballer.club:String =>=>=> RelationalSchema.Column>> footballer.club;
ClassDiagram.Attribut>> Phone.id:Integer =>=>=> RelationalSchema.Column>> phone.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.id:Long =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> TwinkleToes.id:BigInteger =>=>=> RelationalSchema.Column>> twinkletoes.id PRIMARY KEY;
ClassDiagram.Attribut>> Bunny.id:BigInteger =>=>=> RelationalSchema.Column>> bunny.id PRIMARY KEY;
ClassDiagram.Attribut>> PointyTooth.id:BigInteger =>=>=> RelationalSchema.Column>> pointytooth.id PRIMARY KEY;
ClassDiagram.Attribut>> Ball.id:Integer =>=>=> RelationalSchema.Column>> ball.id PRIMARY KEY;
ClassDiagram.Attribut>> Shoe.id:Long =>=>=> RelationalSchema.Column>> shoe.id PRIMARY KEY;
ClassDiagram.Attribut>> SoundSystem.id:String =>=>=> RelationalSchema.Column>> soundsystem.id PRIMARY KEY;
ClassDiagram.Attribut>> SoundSystem.brand:String =>=>=> RelationalSchema.Column>> soundsystem.brand;
ClassDiagram.Attribut>> SoundSystem.model:String =>=>=> RelationalSchema.Column>> soundsystem.model;
ClassDiagram.Attribut>> PlanetCheatSheet.GeneratedName:Planet =>=>=> RelationalSchema.Column>> planetcheatsheet.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> PlanetCheatSheet.mass:double =>=>=> RelationalSchema.Column>> planetcheatsheet.mass;
ClassDiagram.Attribut>> PlanetCheatSheet.radius:double =>=>=> RelationalSchema.Column>> planetcheatsheet.radius;
ClassDiagram.Attribut>> PlanetCheatSheet.numberofinhabitants:long =>=>=> RelationalSchema.Column>> planetcheatsheet.numberofinhabitants;
ClassDiagram.Attribut>> Furniture.id:Integer =>=>=> RelationalSchema.Column>> furniture.id PRIMARY KEY;
ClassDiagram.Attribut>> Home.id:Long =>=>=> RelationalSchema.Column>> home.id PRIMARY KEY;
ClassDiagram.Attribut>> Bunny.id:BigInteger =>=>=> RelationalSchema.Column>> bunny.id PRIMARY KEY;
ClassDiagram.Attribut>> Computer.id:Long =>=>=> RelationalSchema.Column>> computer.id PRIMARY KEY;
ClassDiagram.Attribut>> Computer.serialnumber:String =>=>=> RelationalSchema.Column>> computer.serialnumber;
ClassDiagram.Attribut>> TwinkleToes.id:BigInteger =>=>=> RelationalSchema.Column>> twinkletoes.id PRIMARY KEY;
ClassDiagram.Attribut>> Dog.id:Integer =>=>=> RelationalSchema.Column>> dog.id PRIMARY KEY;
ClassDiagram.Attribut>> Dog.name:String =>=>=> RelationalSchema.Column>> dog.name;
ClassDiagram.Attribut>> Phone.id:Integer =>=>=> RelationalSchema.Column>> phone.id PRIMARY KEY;
ClassDiagram.Attribut>> Furniture.id:Integer =>=>=> RelationalSchema.Column>> furniture.id PRIMARY KEY;
ClassDiagram.Attribut>> Store.id:Long =>=>=> RelationalSchema.Column>> store.id PRIMARY KEY;
ClassDiagram.Attribut>> Monkey.id:String =>=>=> RelationalSchema.Column>> monkey.id PRIMARY KEY;
ClassDiagram.Attribut>> PlanetCheatSheet.GeneratedName:Planet =>=>=> RelationalSchema.Column>> planetcheatsheet.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> PlanetCheatSheet.mass:double =>=>=> RelationalSchema.Column>> planetcheatsheet.mass;
ClassDiagram.Attribut>> PlanetCheatSheet.radius:double =>=>=> RelationalSchema.Column>> planetcheatsheet.radius;
ClassDiagram.Attribut>> PlanetCheatSheet.numberofinhabitants:long =>=>=> RelationalSchema.Column>> planetcheatsheet.numberofinhabitants;
ClassDiagram.Attribut>> Department.id:Long =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Footballer.firstname:String =>=>=> RelationalSchema.Column>> footballer.firstname PRIMARY KEY;
ClassDiagram.Attribut>> Footballer.lastname:String =>=>=> RelationalSchema.Column>> footballer.lastname PRIMARY KEY;
ClassDiagram.Attribut>> Footballer.club:String =>=>=> RelationalSchema.Column>> footballer.club;
ClassDiagram.Attribut>> Shoe.id:Long =>=>=> RelationalSchema.Column>> shoe.id PRIMARY KEY;
ClassDiagram.Attribut>> Ball.id:Integer =>=>=> RelationalSchema.Column>> ball.id PRIMARY KEY;
ClassDiagram.Attribut>> BreakDance.id:Integer =>=>=> RelationalSchema.Column>> breakdance.id PRIMARY KEY;
ClassDiagram.Attribut>> BreakDance.name:String =>=>=> RelationalSchema.Column>> breakdance.name;
ClassDiagram.Attribut>> PointyTooth.id:BigInteger =>=>=> RelationalSchema.Column>> pointytooth.id PRIMARY KEY;
ClassDiagram.Attribut>> Home.id:Long =>=>=> RelationalSchema.Column>> home.id PRIMARY KEY;
ClassDiagram.Attribut>> SoundSystem.id:String =>=>=> RelationalSchema.Column>> soundsystem.id PRIMARY KEY;
ClassDiagram.Attribut>> SoundSystem.brand:String =>=>=> RelationalSchema.Column>> soundsystem.brand;
ClassDiagram.Attribut>> SoundSystem.model:String =>=>=> RelationalSchema.Column>> soundsystem.model;
ClassDiagram.Attribut>> MinimalTableEntity.tbl_name:String =>=>=> RelationalSchema.Column>> minimaltableentity.tbl_name;
ClassDiagram.Attribut>> MinimalTableEntity.id:Long =>=>=> RelationalSchema.Column>> minimaltableentity.id PRIMARY KEY;
ClassDiagram.Attribut>> AutoEntity.id:Long =>=>=> RelationalSchema.Column>> autoentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MinimalSequenceEntity.seq_name:String =>=>=> RelationalSchema.Column>> minimalsequenceentity.seq_name;
ClassDiagram.Attribut>> MinimalSequenceEntity.id:Long =>=>=> RelationalSchema.Column>> minimalsequenceentity.id PRIMARY KEY;
ClassDiagram.Attribut>> CompleteSequenceEntity.seq_name:String =>=>=> RelationalSchema.Column>> completesequenceentity.seq_name;
ClassDiagram.Attribut>> CompleteSequenceEntity.id:Long =>=>=> RelationalSchema.Column>> completesequenceentity.id PRIMARY KEY;
ClassDiagram.Attribut>> Currency.id:Integer =>=>=> RelationalSchema.Column>> currency.id PRIMARY KEY;
ClassDiagram.Attribut>> Currency.name:String =>=>=> RelationalSchema.Column>> currency.name;
ClassDiagram.Attribut>> Coin.id:Integer =>=>=> RelationalSchema.Column>> coin.id PRIMARY KEY;
ClassDiagram.Attribut>> Coin.name:String =>=>=> RelationalSchema.Column>> coin.name;
ClassDiagram.Attribut>> Coin.GeneratedName:Currency =>=>=> RelationalSchema.Column>> coin.GeneratedName;
ClassDiagram.Attribut>> VMTimestamped.id:int =>=>=> RelationalSchema.Column>> vmtimestamped.id PRIMARY KEY;
ClassDiagram.Attribut>> VMTimestamped.lastup:Date =>=>=> RelationalSchema.Column>> vmtimestamped.lastup;
ClassDiagram.Attribut>> Antenna.id:Integer =>=>=> RelationalSchema.Column>> antenna.id PRIMARY KEY;
ClassDiagram.Attribut>> Antenna.longitude:String =>=>=> RelationalSchema.Column>> antenna.longitude;
ClassDiagram.Attribut>> Antenna.latitude:String =>=>=> RelationalSchema.Column>> antenna.latitude;
ClassDiagram.Attribut>> Antenna.power:Double =>=>=> RelationalSchema.Column>> antenna.power;
ClassDiagram.Attribut>> ProfessionalAgreement.id:Integer =>=>=> RelationalSchema.Column>> professionalagreement.id PRIMARY KEY;
ClassDiagram.Attribut>> ProfessionalAgreement.expiration:Date =>=>=> RelationalSchema.Column>> professionalagreement.expiration;
ClassDiagram.Attribut>> Truck.weight:int =>=>=> RelationalSchema.Column>> truck.weight;
ClassDiagram.Attribut>> Conductor.id:Integer =>=>=> RelationalSchema.Column>> conductor.id PRIMARY KEY;
ClassDiagram.Attribut>> Conductor.name:String =>=>=> RelationalSchema.Column>> conductor.name;
ClassDiagram.Attribut>> Conductor.version:Long =>=>=> RelationalSchema.Column>> conductor.version;
ClassDiagram.Attribut>> Vehicule.id:String =>=>=> RelationalSchema.Column>> vehicule.id PRIMARY KEY;
ClassDiagram.Attribut>> Vehicule.registrationnumber:String =>=>=> RelationalSchema.Column>> vehicule.registrationnumber;
ClassDiagram.Attribut>> Vehicule.year:Integer =>=>=> RelationalSchema.Column>> vehicule.year;
ClassDiagram.Attribut>> Staff.id:Integer =>=>=> RelationalSchema.Column>> staff.id PRIMARY KEY;
ClassDiagram.Attribut>> Staff.sizeininches:double =>=>=> RelationalSchema.Column>> staff.sizeininches;
ClassDiagram.Attribut>> Staff.radiuss:double =>=>=> RelationalSchema.Column>> staff.radiuss;
ClassDiagram.Attribut>> Staff.diameter:double =>=>=> RelationalSchema.Column>> staff.diameter;
ClassDiagram.Attribut>> DBTimestamped.id:int =>=>=> RelationalSchema.Column>> dbtimestamped.id PRIMARY KEY;
ClassDiagram.Attribut>> DBTimestamped.lastup:Date =>=>=> RelationalSchema.Column>> dbtimestamped.lastup;
ClassDiagram.Attribut>> MaterializedBlobEntity.id:Long =>=>=> RelationalSchema.Column>> materializedblobentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MaterializedBlobEntity.name:String =>=>=> RelationalSchema.Column>> materializedblobentity.name;
ClassDiagram.Attribut>> MaterializedBlobEntity.thes:byte =>=>=> RelationalSchema.Column>> materializedblobentity.thes;
ClassDiagram.Attribut>> VersionedBook.id:Integer =>=>=> RelationalSchema.Column>> versionedbook.id PRIMARY KEY;
ClassDiagram.Attribut>> VersionedBook.version:Integer =>=>=> RelationalSchema.Column>> versionedbook.version;
ClassDiagram.Attribut>> LongStringHolder.id:Long =>=>=> RelationalSchema.Column>> longstringholder.id PRIMARY KEY;
ClassDiagram.Attribut>> LongStringHolder.name:char =>=>=> RelationalSchema.Column>> longstringholder.name;
ClassDiagram.Attribut>> LongStringHolder.whatever:Character =>=>=> RelationalSchema.Column>> longstringholder.whatever;
ClassDiagram.Attribut>> LongStringHolder.long:String =>=>=> RelationalSchema.Column>> longstringholder.long;
ClassDiagram.Attribut>> VersionedCompiledCode.id:Integer =>=>=> RelationalSchema.Column>> versionedcompiledcode.id PRIMARY KEY;
ClassDiagram.Attribut>> VersionedCompiledCode.version:Integer =>=>=> RelationalSchema.Column>> versionedcompiledcode.version;
ClassDiagram.Attribut>> Book.id:Integer =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> ImageHolder.id:Long =>=>=> RelationalSchema.Column>> imageholder.id PRIMARY KEY;
ClassDiagram.Attribut>> ImageHolder.longarray:byte =>=>=> RelationalSchema.Column>> imageholder.longarray;
ClassDiagram.Attribut>> ImageHolder.GeneratedName:Dog =>=>=> RelationalSchema.Column>> imageholder.GeneratedName;
ClassDiagram.Attribut>> ImageHolder.picarray:Byte =>=>=> RelationalSchema.Column>> imageholder.picarray;
ClassDiagram.Attribut>> CompiledCode.id:Integer =>=>=> RelationalSchema.Column>> compiledcode.id PRIMARY KEY;
ClassDiagram.Attribut>> Frame.id:Long =>=>=> RelationalSchema.Column>> frame.id PRIMARY KEY;
ClassDiagram.Attribut>> Frame.name:String =>=>=> RelationalSchema.Column>> frame.name;
ClassDiagram.Attribut>> Frame.lowername:String =>=>=> RelationalSchema.Column>> frame.lowername;
ClassDiagram.Attribut>> Deal.id:Integer =>=>=> RelationalSchema.Column>> deal.id PRIMARY KEY;
ClassDiagram.Attribut>> Lotz.lotpk:LotzPK =>=>=> RelationalSchema.Column>> lotz.lotpk;
ClassDiagram.Attribut>> Lotz.name:String =>=>=> RelationalSchema.Column>> lotz.name;
ClassDiagram.Attribut>> Lotz.location:String =>=>=> RelationalSchema.Column>> lotz.location;
ClassDiagram.Attribut>> ForestType.id:Integer =>=>=> RelationalSchema.Column>> foresttype.id PRIMARY KEY;
ClassDiagram.Attribut>> ForestType.name:String =>=>=> RelationalSchema.Column>> foresttype.name;
ClassDiagram.Attribut>> WarehouseItem.GeneratedName:Item =>=>=> RelationalSchema.Column>> warehouseitem.GeneratedName;
ClassDiagram.Attribut>> WarehouseItem.GeneratedName:Vendor =>=>=> RelationalSchema.Column>> warehouseitem.GeneratedName;
ClassDiagram.Attribut>> WarehouseItem.qtyinstock:BigDecimal =>=>=> RelationalSchema.Column>> warehouseitem.qtyinstock;
ClassDiagram.Attribut>> ZItemCost.GeneratedName:Item =>=>=> RelationalSchema.Column>> zitemcost.GeneratedName;
ClassDiagram.Attribut>> ZItemCost.GeneratedName:Vendor =>=>=> RelationalSchema.Column>> zitemcost.GeneratedName;
ClassDiagram.Attribut>> ZItemCost.cost:BigDecimal =>=>=> RelationalSchema.Column>> zitemcost.cost;
ClassDiagram.Attribut>> Customer.id:Integer =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.userid:String =>=>=> RelationalSchema.Column>> customer.userid;
ClassDiagram.Attribut>> BiggestForest.id:Integer =>=>=> RelationalSchema.Column>> biggestforest.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderLine.id:Integer =>=>=> RelationalSchema.Column>> orderline.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderLine.item:String =>=>=> RelationalSchema.Column>> orderline.item;
ClassDiagram.Attribut>> OrderLine.GeneratedName:Order =>=>=> RelationalSchema.Column>> orderline.GeneratedName;
ClassDiagram.Attribut>> OrderLine.replacement:Order =>=>=> RelationalSchema.Column>> orderline.replacement;
ClassDiagram.Attribut>> TreeType.id:Integer =>=>=> RelationalSchema.Column>> treetype.id PRIMARY KEY;
ClassDiagram.Attribut>> TreeType.name:String =>=>=> RelationalSchema.Column>> treetype.name;
ClassDiagram.Attribut>> TreeType.GeneratedName:ForestType =>=>=> RelationalSchema.Column>> treetype.GeneratedName;
ClassDiagram.Attribut>> TreeType.alternative:ForestType =>=>=> RelationalSchema.Column>> treetype.alternative;
ClassDiagram.Attribut>> Color.id:Integer =>=>=> RelationalSchema.Column>> color.id PRIMARY KEY;
ClassDiagram.Attribut>> Color.name:String =>=>=> RelationalSchema.Column>> color.name;
ClassDiagram.Attribut>> Order.id:Integer =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.ordernbr:String =>=>=> RelationalSchema.Column>> order.ordernbr;
ClassDiagram.Attribut>> User.userkey:Long =>=>=> RelationalSchema.Column>> user.userkey PRIMARY KEY;
ClassDiagram.Attribut>> User.start:Date =>=>=> RelationalSchema.Column>> user.start PRIMARY KEY;
ClassDiagram.Attribut>> User.end:Date =>=>=> RelationalSchema.Column>> user.end PRIMARY KEY;
ClassDiagram.Attribut>> User.createdby:Long =>=>=> RelationalSchema.Column>> user.createdby;
ClassDiagram.Attribut>> User.createdon:Date =>=>=> RelationalSchema.Column>> user.createdon;
ClassDiagram.Attribut>> User.userid:String =>=>=> RelationalSchema.Column>> user.userid;
ClassDiagram.Attribut>> User.prefix:Integer =>=>=> RelationalSchema.Column>> user.prefix;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname1:String =>=>=> RelationalSchema.Column>> user.lastname1;
ClassDiagram.Attribut>> User.lastname2:String =>=>=> RelationalSchema.Column>> user.lastname2;
ClassDiagram.Attribut>> User.middlename1:String =>=>=> RelationalSchema.Column>> user.middlename1;
ClassDiagram.Attribut>> User.middlename2:String =>=>=> RelationalSchema.Column>> user.middlename2;
ClassDiagram.Attribut>> User.suffix:Integer =>=>=> RelationalSchema.Column>> user.suffix;
ClassDiagram.Attribut>> User.birth:Date =>=>=> RelationalSchema.Column>> user.birth;
ClassDiagram.Attribut>> User.birthstate:Integer =>=>=> RelationalSchema.Column>> user.birthstate;
ClassDiagram.Attribut>> User.birthcountry:Integer =>=>=> RelationalSchema.Column>> user.birthcountry;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.usertype:Integer =>=>=> RelationalSchema.Column>> user.usertype;
ClassDiagram.Attribut>> User.privilege:Integer =>=>=> RelationalSchema.Column>> user.privilege;
ClassDiagram.Attribut>> User.state:Integer =>=>=> RelationalSchema.Column>> user.state;
ClassDiagram.Attribut>> User.country:Integer =>=>=> RelationalSchema.Column>> user.country;
ClassDiagram.Attribut>> User.preferredname:String =>=>=> RelationalSchema.Column>> user.preferredname;
ClassDiagram.Attribut>> User.birthplace:String =>=>=> RelationalSchema.Column>> user.birthplace;
ClassDiagram.Attribut>> User.school:Long =>=>=> RelationalSchema.Column>> user.school;
ClassDiagram.Attribut>> User.cluster:Long =>=>=> RelationalSchema.Column>> user.cluster;
ClassDiagram.Attribut>> User.ldtmm:Long =>=>=> RelationalSchema.Column>> user.ldtmm;
ClassDiagram.Attribut>> User.ldtmd:Long =>=>=> RelationalSchema.Column>> user.ldtmd;
ClassDiagram.Attribut>> User.pmtmp:Long =>=>=> RelationalSchema.Column>> user.pmtmp;
ClassDiagram.Attribut>> Child.id:Integer =>=>=> RelationalSchema.Column>> child.id PRIMARY KEY;
ClassDiagram.Attribut>> Node.id:NodePk =>=>=> RelationalSchema.Column>> node.id PRIMARY KEY;
ClassDiagram.Attribut>> Node.description:String =>=>=> RelationalSchema.Column>> node.description;
ClassDiagram.Attribut>> Parent.id:ParentPk =>=>=> RelationalSchema.Column>> parent.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent.age:int =>=>=> RelationalSchema.Column>> parent.age;
ClassDiagram.Attribut>> Carz.id:Integer =>=>=> RelationalSchema.Column>> carz.id PRIMARY KEY;
ClassDiagram.Attribut>> Carz.make:String =>=>=> RelationalSchema.Column>> carz.make;
ClassDiagram.Attribut>> Carz.model:String =>=>=> RelationalSchema.Column>> carz.model;
ClassDiagram.Attribut>> Carz.manufactured:Date =>=>=> RelationalSchema.Column>> carz.manufactured;
ClassDiagram.Attribut>> DistrictUser.id:Long =>=>=> RelationalSchema.Column>> districtuser.id PRIMARY KEY;
ClassDiagram.Attribut>> DistrictUser.createdby:Long =>=>=> RelationalSchema.Column>> districtuser.createdby;
ClassDiagram.Attribut>> DistrictUser.createdon:Date =>=>=> RelationalSchema.Column>> districtuser.createdon;
ClassDiagram.Attribut>> DistrictUser.ldtmd:Long =>=>=> RelationalSchema.Column>> districtuser.ldtmd;
ClassDiagram.Attribut>> DistrictUser.pmtmp:Long =>=>=> RelationalSchema.Column>> districtuser.pmtmp;
ClassDiagram.Attribut>> Lens.id:Long =>=>=> RelationalSchema.Column>> lens.id PRIMARY KEY;
ClassDiagram.Attribut>> Lens.focal:float =>=>=> RelationalSchema.Column>> lens.focal;
ClassDiagram.Attribut>> Lens.length:float =>=>=> RelationalSchema.Column>> lens.length;
ClassDiagram.Attribut>> Car.id:Integer =>=>=> RelationalSchema.Column>> car.id PRIMARY KEY;
ClassDiagram.Attribut>> Car.body:Color =>=>=> RelationalSchema.Column>> car.body;
ClassDiagram.Attribut>> SocialSecurityMoralAccount.number:String =>=>=> RelationalSchema.Column>> socialsecuritymoralaccount.number;
ClassDiagram.Attribut>> SocialSecurityMoralAccount.countrycode:String =>=>=> RelationalSchema.Column>> socialsecuritymoralaccount.countrycode;
ClassDiagram.Attribut>> Match.competitor1point:String =>=>=> RelationalSchema.Column>> match.competitor1point;
ClassDiagram.Attribut>> Match.version:Integer =>=>=> RelationalSchema.Column>> match.version;
ClassDiagram.Attribut>> Match.playerassn:SocialSecurityNumber =>=>=> RelationalSchema.Column>> match.playerassn;
ClassDiagram.Attribut>> SocialSecurityPhysicalAccount.number:String =>=>=> RelationalSchema.Column>> socialsecurityphysicalaccount.number;
ClassDiagram.Attribut>> SocialSecurityPhysicalAccount.countrycode:String =>=>=> RelationalSchema.Column>> socialsecurityphysicalaccount.countrycode;
ClassDiagram.Attribut>> Administration.id:Integer =>=>=> RelationalSchema.Column>> administration.id PRIMARY KEY;
ClassDiagram.Attribut>> Administration.firstname:String =>=>=> RelationalSchema.Column>> administration.firstname;
ClassDiagram.Attribut>> Administration.lastname:String =>=>=> RelationalSchema.Column>> administration.lastname;
ClassDiagram.Attribut>> Administration.address:String =>=>=> RelationalSchema.Column>> administration.address;
ClassDiagram.Attribut>> Administration.version:Integer =>=>=> RelationalSchema.Column>> administration.version;
ClassDiagram.Attribut>> Administration.transientfield:String =>=>=> RelationalSchema.Column>> administration.transientfield;
ClassDiagram.Attribut>> BusTrip.id:BusTripPk =>=>=> RelationalSchema.Column>> bustrip.id;
ClassDiagram.Attribut>> BusTrip.status:Availability =>=>=> RelationalSchema.Column>> bustrip.status;
ClassDiagram.Attribut>> BusTrip.serial:byte =>=>=> RelationalSchema.Column>> bustrip.serial;
ClassDiagram.Attribut>> BusTrip.terminustime:Date =>=>=> RelationalSchema.Column>> bustrip.terminustime;
ClassDiagram.Attribut>> BusTrip.players:Map<String,SocialSecurityPhysicalAccount> =>=>=> RelationalSchema.Column>> bustrip.players;
ClassDiagram.Attribut>> BusTrip.roads:List =>=>=> RelationalSchema.Column>> bustrip.roads;
ClassDiagram.Attribut>> Team.id:Long =>=>=> RelationalSchema.Column>> team.id PRIMARY KEY;
ClassDiagram.Attribut>> Player.id:Long =>=>=> RelationalSchema.Column>> player.id PRIMARY KEY;
ClassDiagram.Attribut>> Player.GeneratedName:Team =>=>=> RelationalSchema.Column>> player.GeneratedName;
ClassDiagram.Attribut>> Player.name:String =>=>=> RelationalSchema.Column>> player.name;
ClassDiagram.Attribut>> MyEntity.id:Long =>=>=> RelationalSchema.Column>> myentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MyEntity.name:String =>=>=> RelationalSchema.Column>> myentity.name;
ClassDiagram.Attribut>> User.id:long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> Phone.id:Integer =>=>=> RelationalSchema.Column>> phone.id PRIMARY KEY;
ClassDiagram.Attribut>> Phone.brandname:String =>=>=> RelationalSchema.Column>> phone.brandname;
ClassDiagram.Attribut>> Phone.price:float =>=>=> RelationalSchema.Column>> phone.price;
ClassDiagram.Attribut>> Role.id:long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Dvd.id:MyOid =>=>=> RelationalSchema.Column>> dvd.id PRIMARY KEY;
ClassDiagram.Attribut>> Dvd.title:String =>=>=> RelationalSchema.Column>> dvd.title;
ClassDiagram.Attribut>> Furniture.id:Integer =>=>=> RelationalSchema.Column>> furniture.id PRIMARY KEY;
ClassDiagram.Attribut>> Furniture.brand:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Furniture.weight:long =>=>=> RelationalSchema.Column>> furniture.weight;
ClassDiagram.Attribut>> BigBed.size:int =>=>=> RelationalSchema.Column>> bigbed.size;
ClassDiagram.Attribut>> Bed.quality:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Chair.pillow:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Gardenshed.id:Integer =>=>=> RelationalSchema.Column>> gardenshed.id PRIMARY KEY;
ClassDiagram.Attribut>> Gardenshed.brand:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Gardenshed.floors:long =>=>=> RelationalSchema.Column>> gardenshed.floors;
ClassDiagram.Attribut>> Tourist.id:long =>=>=> RelationalSchema.Column>> tourist.id PRIMARY KEY;
ClassDiagram.Attribut>> Tourist.name:String =>=>=> RelationalSchema.Column>> tourist.name;
ClassDiagram.Attribut>> Tourist.destination:String =>=>=> RelationalSchema.Column>> tourist.destination;
ClassDiagram.Attribut>> Boy.id:long =>=>=> RelationalSchema.Column>> boy.id PRIMARY KEY;
ClassDiagram.Attribut>> Boy.nicknames:Set<String> =>=>=> RelationalSchema.Column>> boy.nicknames;
ClassDiagram.Attribut>> RentalCar.id:int =>=>=> RelationalSchema.Column>> rentalcar.id PRIMARY KEY;
ClassDiagram.Attribut>> RentalCar.GeneratedName:Driver =>=>=> RelationalSchema.Column>> rentalcar.GeneratedName;
ClassDiagram.Attribut>> Driver.id:int =>=>=> RelationalSchema.Column>> driver.id PRIMARY KEY;
ClassDiagram.Attribut>> Driver.name:String =>=>=> RelationalSchema.Column>> driver.name;
ClassDiagram.Attribut>> Cook.id:int =>=>=> RelationalSchema.Column>> cook.id PRIMARY KEY;
ClassDiagram.Attribut>> Cook.favouriteknife:Knive =>=>=> RelationalSchema.Column>> cook.favouriteknife;
ClassDiagram.Attribut>> Foobar.foo:String =>=>=> RelationalSchema.Column>> foobar.foo;
ClassDiagram.Attribut>> Being.id:long =>=>=> RelationalSchema.Column>> being.id PRIMARY KEY;
ClassDiagram.Attribut>> Course7.id:long =>=>=> RelationalSchema.Column>> course7.id PRIMARY KEY;
ClassDiagram.Attribut>> Course7.title:String =>=>=> RelationalSchema.Column>> course7.title;
ClassDiagram.Attribut>> Course3.id:long =>=>=> RelationalSchema.Column>> course3.id PRIMARY KEY;
ClassDiagram.Attribut>> Course3.title:String =>=>=> RelationalSchema.Column>> course3.title;
ClassDiagram.Attribut>> Chair.pillow:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Bed.quality:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Course6.id:long =>=>=> RelationalSchema.Column>> course6.id PRIMARY KEY;
ClassDiagram.Attribut>> Course6.title:String =>=>=> RelationalSchema.Column>> course6.title;
ClassDiagram.Attribut>> Course2.id:long =>=>=> RelationalSchema.Column>> course2.id PRIMARY KEY;
ClassDiagram.Attribut>> Course2.title:String =>=>=> RelationalSchema.Column>> course2.title;
ClassDiagram.Attribut>> Square.id:long =>=>=> RelationalSchema.Column>> square.id PRIMARY KEY;
ClassDiagram.Attribut>> Square.GeneratedName:Position =>=>=> RelationalSchema.Column>> square.GeneratedName;
ClassDiagram.Attribut>> BigBed.size:int =>=>=> RelationalSchema.Column>> bigbed.size;
ClassDiagram.Attribut>> Course4.id:long =>=>=> RelationalSchema.Column>> course4.id PRIMARY KEY;
ClassDiagram.Attribut>> Course4.title:String =>=>=> RelationalSchema.Column>> course4.title;
ClassDiagram.Attribut>> Student.id:long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Course8.id:long =>=>=> RelationalSchema.Column>> course8.id PRIMARY KEY;
ClassDiagram.Attribut>> Course8.title:String =>=>=> RelationalSchema.Column>> course8.title;
ClassDiagram.Attribut>> Shape.id:long =>=>=> RelationalSchema.Column>> shape.id PRIMARY KEY;
ClassDiagram.Attribut>> Gardenshed.id:Integer =>=>=> RelationalSchema.Column>> gardenshed.id PRIMARY KEY;
ClassDiagram.Attribut>> Gardenshed.brand:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Gardenshed.floors:long =>=>=> RelationalSchema.Column>> gardenshed.floors;
ClassDiagram.Attribut>> Animal.id:long =>=>=> RelationalSchema.Column>> animal.id PRIMARY KEY;
ClassDiagram.Attribut>> Horse.name:String =>=>=> RelationalSchema.Column>> horse.name;
ClassDiagram.Attribut>> Circle.GeneratedName:Color =>=>=> RelationalSchema.Column>> circle.GeneratedName;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Course5.id:long =>=>=> RelationalSchema.Column>> course5.id PRIMARY KEY;
ClassDiagram.Attribut>> Course5.title:String =>=>=> RelationalSchema.Column>> course5.title;
ClassDiagram.Attribut>> Furniture.id:Integer =>=>=> RelationalSchema.Column>> furniture.id PRIMARY KEY;
ClassDiagram.Attribut>> Furniture.brand:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Furniture.weight:long =>=>=> RelationalSchema.Column>> furniture.weight;
ClassDiagram.Attribut>> Course1.id:long =>=>=> RelationalSchema.Column>> course1.id PRIMARY KEY;
ClassDiagram.Attribut>> Course1.title:String =>=>=> RelationalSchema.Column>> course1.title;
ClassDiagram.Attribut>> Soldier.id:Integer =>=>=> RelationalSchema.Column>> soldier.id PRIMARY KEY;
ClassDiagram.Attribut>> Soldier.name:String =>=>=> RelationalSchema.Column>> soldier.name;
ClassDiagram.Attribut>> Soldier.GeneratedName:Troop =>=>=> RelationalSchema.Column>> soldier.GeneratedName;
ClassDiagram.Attribut>> OrganisationUser.sometext:String =>=>=> RelationalSchema.Column>> organisationuser.sometext;
ClassDiagram.Attribut>> OrganisationUser.GeneratedName:Organisation =>=>=> RelationalSchema.Column>> organisationuser.GeneratedName;
ClassDiagram.Attribut>> Troop.id:Integer =>=>=> RelationalSchema.Column>> troop.id PRIMARY KEY;
ClassDiagram.Attribut>> Troop.name:String =>=>=> RelationalSchema.Column>> troop.name;
ClassDiagram.Attribut>> Parent.id:ParentPk =>=>=> RelationalSchema.Column>> parent.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent.age:int =>=>=> RelationalSchema.Column>> parent.age;
ClassDiagram.Attribut>> Tiger.id:Integer =>=>=> RelationalSchema.Column>> tiger.id PRIMARY KEY;
ClassDiagram.Attribut>> Tiger.name:String =>=>=> RelationalSchema.Column>> tiger.name;
ClassDiagram.Attribut>> Organisation.idorganisation:Long =>=>=> RelationalSchema.Column>> organisation.idorganisation PRIMARY KEY;
ClassDiagram.Attribut>> Organisation.name:String =>=>=> RelationalSchema.Column>> organisation.name;
ClassDiagram.Attribut>> Street.id:Integer =>=>=> RelationalSchema.Column>> street.id PRIMARY KEY;
ClassDiagram.Attribut>> Street.streetname:String =>=>=> RelationalSchema.Column>> street.streetname;
ClassDiagram.Attribut>> Street.streetnamecopy:String =>=>=> RelationalSchema.Column>> street.streetnamecopy;
ClassDiagram.Attribut>> Street.GeneratedName:City =>=>=> RelationalSchema.Column>> street.GeneratedName;
ClassDiagram.Attribut>> City.id:Integer =>=>=> RelationalSchema.Column>> city.id PRIMARY KEY;
ClassDiagram.Attribut>> City.name:String =>=>=> RelationalSchema.Column>> city.name;
ClassDiagram.Attribut>> Politician.name:String =>=>=> RelationalSchema.Column>> politician.name PRIMARY KEY;
ClassDiagram.Attribut>> OrderItem.schoolid:String =>=>=> RelationalSchema.Column>> orderitem.schoolid PRIMARY KEY;
ClassDiagram.Attribut>> OrderItem.academicyear:Integer =>=>=> RelationalSchema.Column>> orderitem.academicyear PRIMARY KEY;
ClassDiagram.Attribut>> OrderItem.dayno:Integer =>=>=> RelationalSchema.Column>> orderitem.dayno PRIMARY KEY;
ClassDiagram.Attribut>> OrderItem.dayname:String =>=>=> RelationalSchema.Column>> orderitem.dayname;
ClassDiagram.Attribut>> OrderItem.GeneratedName:Order =>=>=> RelationalSchema.Column>> orderitem.GeneratedName;
ClassDiagram.Attribut>> Order.schoolid:String =>=>=> RelationalSchema.Column>> order.schoolid PRIMARY KEY;
ClassDiagram.Attribut>> Order.schoolidsort:Integer =>=>=> RelationalSchema.Column>> order.schoolidsort;
ClassDiagram.Attribut>> Order.academicyear:Integer =>=>=> RelationalSchema.Column>> order.academicyear PRIMARY KEY;
ClassDiagram.Attribut>> Monkey.id:Integer =>=>=> RelationalSchema.Column>> monkey.id PRIMARY KEY;
ClassDiagram.Attribut>> Monkey.name:String =>=>=> RelationalSchema.Column>> monkey.name;
ClassDiagram.Attribut>> Child.id:Integer =>=>=> RelationalSchema.Column>> child.id PRIMARY KEY;
ClassDiagram.Attribut>> Child.favoritesuperhero:String =>=>=> RelationalSchema.Column>> child.favoritesuperhero;
ClassDiagram.Attribut>> Child.favoritesinger:String =>=>=> RelationalSchema.Column>> child.favoritesinger;
ClassDiagram.Attribut>> Trainer.id:Integer =>=>=> RelationalSchema.Column>> trainer.id PRIMARY KEY;
ClassDiagram.Attribut>> Trainer.name:String =>=>=> RelationalSchema.Column>> trainer.name;
ClassDiagram.Attribut>> Model.id:Integer =>=>=> RelationalSchema.Column>> model.id PRIMARY KEY;
ClassDiagram.Attribut>> PoliticalParty.name:String =>=>=> RelationalSchema.Column>> politicalparty.name PRIMARY KEY;
ClassDiagram.Attribut>> Person.idperson:Long =>=>=> RelationalSchema.Column>> person.idperson PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname,lastname:String =>=>=> RelationalSchema.Column>> person.firstname,lastname;
ClassDiagram.Attribut>> AmericaCupClass.GeneratedName:Country =>=>=> RelationalSchema.Column>> americacupclass.GeneratedName;
ClassDiagram.Attribut>> Sky.id:Long =>=>=> RelationalSchema.Column>> sky.id PRIMARY KEY;
ClassDiagram.Attribut>> Sky.color:String =>=>=> RelationalSchema.Column>> sky.color;
ClassDiagram.Attribut>> Sky.day:String =>=>=> RelationalSchema.Column>> sky.day;
ClassDiagram.Attribut>> Sky.month:String =>=>=> RelationalSchema.Column>> sky.month;
ClassDiagram.Attribut>> Sky.area:String =>=>=> RelationalSchema.Column>> sky.area;
ClassDiagram.Attribut>> Storm.id:Integer =>=>=> RelationalSchema.Column>> storm.id PRIMARY KEY;
ClassDiagram.Attribut>> Storm.start:Location =>=>=> RelationalSchema.Column>> storm.start;
ClassDiagram.Attribut>> Storm.end:Location =>=>=> RelationalSchema.Column>> storm.end;
ClassDiagram.Attribut>> Storm.stormname:String =>=>=> RelationalSchema.Column>> storm.stormname;
ClassDiagram.Attribut>> Flight.id:String =>=>=> RelationalSchema.Column>> flight.id PRIMARY KEY;
ClassDiagram.Attribut>> File.name:String =>=>=> RelationalSchema.Column>> file.name PRIMARY KEY;
ClassDiagram.Attribut>> Document.size:int =>=>=> RelationalSchema.Column>> document.size;
ClassDiagram.Attribut>> Tomato.size:int =>=>=> RelationalSchema.Column>> tomato.size;
ClassDiagram.Attribut>> BaseClass.id:long =>=>=> RelationalSchema.Column>> baseclass.id PRIMARY KEY;
ClassDiagram.Attribut>> Fruit.id:Integer =>=>=> RelationalSchema.Column>> fruit.id PRIMARY KEY;
ClassDiagram.Attribut>> Carrot.length:int =>=>=> RelationalSchema.Column>> carrot.length;
ClassDiagram.Attribut>> Music.id:Integer =>=>=> RelationalSchema.Column>> music.id PRIMARY KEY;
ClassDiagram.Attribut>> Music.avgbeat:int =>=>=> RelationalSchema.Column>> music.avgbeat;
ClassDiagram.Attribut>> Music.type:Integer =>=>=> RelationalSchema.Column>> music.type;
ClassDiagram.Attribut>> Building.id:Integer =>=>=> RelationalSchema.Column>> building.id PRIMARY KEY;
ClassDiagram.Attribut>> Building.street:String =>=>=> RelationalSchema.Column>> building.street;
ClassDiagram.Attribut>> Trash.id:Integer =>=>=> RelationalSchema.Column>> trash.id PRIMARY KEY;
ClassDiagram.Attribut>> Funk.starred:int =>=>=> RelationalSchema.Column>> funk.starred;
ClassDiagram.Attribut>> Vegetable.id:VegetablePk =>=>=> RelationalSchema.Column>> vegetable.id PRIMARY KEY;
ClassDiagram.Attribut>> Vegetable.priceincent:long =>=>=> RelationalSchema.Column>> vegetable.priceincent;
ClassDiagram.Attribut>> Account.serialversionuid:long =>=>=> RelationalSchema.Column>> account.serialversionuid;
ClassDiagram.Attribut>> Account.id:int =>=>=> RelationalSchema.Column>> account.id PRIMARY KEY;
ClassDiagram.Attribut>> Account.number:String =>=>=> RelationalSchema.Column>> account.number;
ClassDiagram.Attribut>> Account.balance:double =>=>=> RelationalSchema.Column>> account.balance;
ClassDiagram.Attribut>> Customer.customername:String =>=>=> RelationalSchema.Column>> customer.customername;
ClassDiagram.Attribut>> Customer.customercode:String =>=>=> RelationalSchema.Column>> customer.customercode;
ClassDiagram.Attribut>> Document.size:int =>=>=> RelationalSchema.Column>> document.size;
ClassDiagram.Attribut>> ProgramExecution.id:Integer =>=>=> RelationalSchema.Column>> programexecution.id PRIMARY KEY;
ClassDiagram.Attribut>> ProgramExecution.action:String =>=>=> RelationalSchema.Column>> programexecution.action;
ClassDiagram.Attribut>> Sweater.issweat:boolean =>=>=> RelationalSchema.Column>> sweater.issweat;
ClassDiagram.Attribut>> Clothing.id:long =>=>=> RelationalSchema.Column>> clothing.id PRIMARY KEY;
ClassDiagram.Attribut>> Clothing.size:int =>=>=> RelationalSchema.Column>> clothing.size;
ClassDiagram.Attribut>> Clothing.color:String =>=>=> RelationalSchema.Column>> clothing.color;
ClassDiagram.Attribut>> File.name:String =>=>=> RelationalSchema.Column>> file.name PRIMARY KEY;
ClassDiagram.Attribut>> Parent.id:Integer =>=>=> RelationalSchema.Column>> parent.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent.propertyass:Set =>=>=> RelationalSchema.Column>> parent.propertyass;
ClassDiagram.Attribut>> Parent.financialass:Set =>=>=> RelationalSchema.Column>> parent.financialass;
ClassDiagram.Attribut>> Company.companyname:String =>=>=> RelationalSchema.Column>> company.companyname;
ClassDiagram.Attribut>> Company.companyaddress:String =>=>=> RelationalSchema.Column>> company.companyaddress;
ClassDiagram.Attribut>> FinancialAsset.price:double =>=>=> RelationalSchema.Column>> financialasset.price;
ClassDiagram.Attribut>> Pool.id:Integer =>=>=> RelationalSchema.Column>> pool.id PRIMARY KEY;
ClassDiagram.Attribut>> Pool.address:PoolAddress =>=>=> RelationalSchema.Column>> pool.address;
ClassDiagram.Attribut>> Person.id:int =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.firtsname:String =>=>=> RelationalSchema.Column>> person.firtsname;
ClassDiagram.Attribut>> Client.serialversionuid:long =>=>=> RelationalSchema.Column>> client.serialversionuid;
ClassDiagram.Attribut>> Client.street:String =>=>=> RelationalSchema.Column>> client.street;
ClassDiagram.Attribut>> Client.code:String =>=>=> RelationalSchema.Column>> client.code;
ClassDiagram.Attribut>> Client.city:String =>=>=> RelationalSchema.Column>> client.city;
ClassDiagram.Attribut>> PropertyAsset.price:double =>=>=> RelationalSchema.Column>> propertyasset.price;
ClassDiagram.Attribut>> EventInformation.notificationid:String =>=>=> RelationalSchema.Column>> eventinformation.notificationid PRIMARY KEY;
ClassDiagram.Attribut>> Asset.id:Integer =>=>=> RelationalSchema.Column>> asset.id PRIMARY KEY;
ClassDiagram.Attribut>> Asset.GeneratedName:Parent =>=>=> RelationalSchema.Column>> asset.GeneratedName;
ClassDiagram.Attribut>> File.name:String =>=>=> RelationalSchema.Column>> file.name PRIMARY KEY;
ClassDiagram.Attribut>> Document.size:int =>=>=> RelationalSchema.Column>> document.size;
ClassDiagram.Attribut>> Person.//memberdeclarationid:int =>=>=> RelationalSchema.Column>> person.//memberdeclarationid;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.companyname:String =>=>=> RelationalSchema.Column>> person.companyname;
ClassDiagram.Attribut>> Branch.id:Integer =>=>=> RelationalSchema.Column>> branch.id PRIMARY KEY;
ClassDiagram.Attribut>> Leaf.id:Integer =>=>=> RelationalSchema.Column>> leaf.id PRIMARY KEY;
ClassDiagram.Attribut>> Stay.//memberdeclarationid:int =>=>=> RelationalSchema.Column>> stay.//memberdeclarationid;
ClassDiagram.Attribut>> Stay.GeneratedName:Person =>=>=> RelationalSchema.Column>> stay.GeneratedName;
ClassDiagram.Attribut>> Stay.old:Person =>=>=> RelationalSchema.Column>> stay.old;
ClassDiagram.Attribut>> Stay.veryold:Person =>=>=> RelationalSchema.Column>> stay.veryold;
ClassDiagram.Attribut>> Stay.start:Date =>=>=> RelationalSchema.Column>> stay.start;
ClassDiagram.Attribut>> Stay.end:Date =>=>=> RelationalSchema.Column>> stay.end;
ClassDiagram.Attribut>> Stay.vessel:String =>=>=> RelationalSchema.Column>> stay.vessel;
ClassDiagram.Attribut>> Stay.authoriser:String =>=>=> RelationalSchema.Column>> stay.authoriser;
ClassDiagram.Attribut>> Stay.comments:String =>=>=> RelationalSchema.Column>> stay.comments;
ClassDiagram.Attribut>> Item.id:long =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.name:String =>=>=> RelationalSchema.Column>> item.name;
ClassDiagram.Attribut>> Bid.id:int =>=>=> RelationalSchema.Column>> bid.id PRIMARY KEY;
ClassDiagram.Attribut>> Bid.itemid:long =>=>=> RelationalSchema.Column>> bid.itemid;
ClassDiagram.Attribut>> Bid.amount:double =>=>=> RelationalSchema.Column>> bid.amount;
ClassDiagram.Attribut>> HighestBid.name:String =>=>=> RelationalSchema.Column>> highestbid.name PRIMARY KEY;
ClassDiagram.Attribut>> HighestBid.amount:double =>=>=> RelationalSchema.Column>> highestbid.amount;
ClassDiagram.Attribut>> Dress.id:Integer =>=>=> RelationalSchema.Column>> dress.id PRIMARY KEY;
ClassDiagram.Attribut>> AddressBook.id:Integer =>=>=> RelationalSchema.Column>> addressbook.id PRIMARY KEY;
ClassDiagram.Attribut>> AddressBook.owner:String =>=>=> RelationalSchema.Column>> addressbook.owner;
ClassDiagram.Attribut>> Wardrobe.id:Long =>=>=> RelationalSchema.Column>> wardrobe.id PRIMARY KEY;
ClassDiagram.Attribut>> Training.id:Long =>=>=> RelationalSchema.Column>> training.id PRIMARY KEY;
ClassDiagram.Attribut>> Gas.id:Integer =>=>=> RelationalSchema.Column>> gas.id PRIMARY KEY;
ClassDiagram.Attribut>> Gas.name:String =>=>=> RelationalSchema.Column>> gas.name;
ClassDiagram.Attribut>> AlphabeticalDirectory.id:Integer =>=>=> RelationalSchema.Column>> alphabeticaldirectory.id PRIMARY KEY;
ClassDiagram.Attribut>> AlphabeticalDirectory.name:String =>=>=> RelationalSchema.Column>> alphabeticaldirectory.name;
ClassDiagram.Attribut>> Software.name:String =>=>=> RelationalSchema.Column>> software.name PRIMARY KEY;
ClassDiagram.Attribut>> Trainee.id:Long =>=>=> RelationalSchema.Column>> trainee.id PRIMARY KEY;
ClassDiagram.Attribut>> Trainee.name:String =>=>=> RelationalSchema.Column>> trainee.name;
ClassDiagram.Attribut>> Atmosphere.id:Integer =>=>=> RelationalSchema.Column>> atmosphere.id PRIMARY KEY;
ClassDiagram.Attribut>> Atmosphere.colorperdate:Map<Date,String> =>=>=> RelationalSchema.Column>> atmosphere.colorperdate;
ClassDiagram.Attribut>> Atmosphere.colorperlevel:Map<Level,String> =>=>=> RelationalSchema.Column>> atmosphere.colorperlevel;
ClassDiagram.Attribut>> Atmosphere.composition:Map<Gas,Double> =>=>=> RelationalSchema.Column>> atmosphere.composition;
ClassDiagram.Attribut>> PressReleaseAgency.id:Integer =>=>=> RelationalSchema.Column>> pressreleaseagency.id PRIMARY KEY;
ClassDiagram.Attribut>> PressReleaseAgency.name:String =>=>=> RelationalSchema.Column>> pressreleaseagency.name;
ClassDiagram.Attribut>> AddressEntry.person:AddressEntryPk =>=>=> RelationalSchema.Column>> addressentry.person;
ClassDiagram.Attribut>> AddressEntry.street:String =>=>=> RelationalSchema.Column>> addressentry.street;
ClassDiagram.Attribut>> AddressEntry.city:String =>=>=> RelationalSchema.Column>> addressentry.city;
ClassDiagram.Attribut>> GenerationUser.id:int =>=>=> RelationalSchema.Column>> generationuser.id PRIMARY KEY;
ClassDiagram.Attribut>> GasKey.name:String =>=>=> RelationalSchema.Column>> gaskey.name PRIMARY KEY;
ClassDiagram.Attribut>> Newspaper.id:Integer =>=>=> RelationalSchema.Column>> newspaper.id PRIMARY KEY;
ClassDiagram.Attribut>> Newspaper.name:String =>=>=> RelationalSchema.Column>> newspaper.name;
ClassDiagram.Attribut>> Painting.sizex:int =>=>=> RelationalSchema.Column>> painting.sizex;
ClassDiagram.Attribut>> Painting.sizey:int =>=>=> RelationalSchema.Column>> painting.sizey;
ClassDiagram.Attribut>> Painting.name:String =>=>=> RelationalSchema.Column>> painting.name PRIMARY KEY;
ClassDiagram.Attribut>> Painting.painter:String =>=>=> RelationalSchema.Column>> painting.painter PRIMARY KEY;
ClassDiagram.Attribut>> News.id:Integer =>=>=> RelationalSchema.Column>> news.id PRIMARY KEY;
ClassDiagram.Attribut>> News.title:String =>=>=> RelationalSchema.Column>> news.title;
ClassDiagram.Attribut>> News.detail:String =>=>=> RelationalSchema.Column>> news.detail;
ClassDiagram.Attribut>> Painter.id:Integer =>=>=> RelationalSchema.Column>> painter.id PRIMARY KEY;
ClassDiagram.Attribut>> Drawer.id:Long =>=>=> RelationalSchema.Column>> drawer.id PRIMARY KEY;
ClassDiagram.Attribut>> GenerationGroup.id:int =>=>=> RelationalSchema.Column>> generationgroup.id PRIMARY KEY;
ClassDiagram.Attribut>> GenerationGroup.GeneratedName:Generation =>=>=> RelationalSchema.Column>> generationgroup.GeneratedName;
ClassDiagram.Attribut>> Version.id:Integer =>=>=> RelationalSchema.Column>> version.id PRIMARY KEY;
ClassDiagram.Attribut>> Version.codename:String =>=>=> RelationalSchema.Column>> version.codename;
ClassDiagram.Attribut>> Version.number:String =>=>=> RelationalSchema.Column>> version.number;
ClassDiagram.Attribut>> Version.GeneratedName:Software =>=>=> RelationalSchema.Column>> version.GeneratedName;
ClassDiagram.Attribut>> Discount.id:Long =>=>=> RelationalSchema.Column>> discount.id PRIMARY KEY;
ClassDiagram.Attribut>> Discount.discount:double =>=>=> RelationalSchema.Column>> discount.discount;
ClassDiagram.Attribut>> Contract.contractnumber:String =>=>=> RelationalSchema.Column>> contract.contractnumber;
ClassDiagram.Attribut>> Contract.//integercompanycodeid:ContractId =>=>=> RelationalSchema.Column>> contract.//integercompanycodeid;
ClassDiagram.Attribut>> Contract.GeneratedName:Manufacturer =>=>=> RelationalSchema.Column>> contract.GeneratedName;
ClassDiagram.Attribut>> Contract.GeneratedName:Model =>=>=> RelationalSchema.Column>> contract.GeneratedName;
ClassDiagram.Attribut>> Company.serialversionuid:long =>=>=> RelationalSchema.Column>> company.serialversionuid;
ClassDiagram.Attribut>> Company.id:int =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Company.GeneratedName:Person =>=>=> RelationalSchema.Column>> company.GeneratedName;
ClassDiagram.Attribut>> Manufacturer.id:ManufacturerId =>=>=> RelationalSchema.Column>> manufacturer.id PRIMARY KEY;
ClassDiagram.Attribut>> Manufacturer.name:String =>=>=> RelationalSchema.Column>> manufacturer.name;
ClassDiagram.Attribut>> Message.serialversionuid:long =>=>=> RelationalSchema.Column>> message.serialversionuid;
ClassDiagram.Attribut>> Message.id:int =>=>=> RelationalSchema.Column>> message.id PRIMARY KEY;
ClassDiagram.Attribut>> Message.languagecode:String =>=>=> RelationalSchema.Column>> message.languagecode;
ClassDiagram.Attribut>> Message.languagename:String =>=>=> RelationalSchema.Column>> message.languagename;
ClassDiagram.Attribut>> Message.GeneratedName:Language =>=>=> RelationalSchema.Column>> message.GeneratedName;
ClassDiagram.Attribut>> Model.id:ModelId =>=>=> RelationalSchema.Column>> model.id PRIMARY KEY;
ClassDiagram.Attribut>> Model.name:String =>=>=> RelationalSchema.Column>> model.name;
ClassDiagram.Attribut>> FoodItem.id:Integer =>=>=> RelationalSchema.Column>> fooditem.id PRIMARY KEY;
ClassDiagram.Attribut>> FoodItem.item:String =>=>=> RelationalSchema.Column>> fooditem.item;
ClassDiagram.Attribut>> Product.serialversionuid:long =>=>=> RelationalSchema.Column>> product.serialversionuid;
ClassDiagram.Attribut>> Product.id:Integer =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.productidnf:String =>=>=> RelationalSchema.Column>> product.productidnf;
ClassDiagram.Attribut>> Product.description:String =>=>=> RelationalSchema.Column>> product.description;
ClassDiagram.Attribut>> Language.serialversionuid:long =>=>=> RelationalSchema.Column>> language.serialversionuid;
ClassDiagram.Attribut>> Language.name:String =>=>=> RelationalSchema.Column>> language.name;
ClassDiagram.Attribut>> Language.code:String =>=>=> RelationalSchema.Column>> language.code PRIMARY KEY;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.id:int =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.companyid:int =>=>=> RelationalSchema.Column>> person.companyid;
ClassDiagram.Attribut>> Person.defaultflag:String =>=>=> RelationalSchema.Column>> person.defaultflag;
ClassDiagram.Attribut>> Menu.serialversionuid:long =>=>=> RelationalSchema.Column>> menu.serialversionuid;
ClassDiagram.Attribut>> Menu.id:Integer =>=>=> RelationalSchema.Column>> menu.id PRIMARY KEY;
ClassDiagram.Attribut>> Menu.ordernbr:String =>=>=> RelationalSchema.Column>> menu.ordernbr;
ClassDiagram.Attribut>> Menu.isdefault:String =>=>=> RelationalSchema.Column>> menu.isdefault;
ClassDiagram.Attribut>> T800.targetname:String =>=>=> RelationalSchema.Column>> t800.targetname;
ClassDiagram.Attribut>> Machine.id:Integer =>=>=> RelationalSchema.Column>> machine.id PRIMARY KEY;
ClassDiagram.Attribut>> Machine.weight:Double =>=>=> RelationalSchema.Column>> machine.weight;
ClassDiagram.Attribut>> Robot.name:String =>=>=> RelationalSchema.Column>> robot.name;
ClassDiagram.Attribut>> Component.manufacturerpartnumber:String =>=>=> RelationalSchema.Column>> component.manufacturerpartnumber;
ClassDiagram.Attribut>> Component.manufacturerid:Long =>=>=> RelationalSchema.Column>> component.manufacturerid;
ClassDiagram.Attribut>> Component.id:Long =>=>=> RelationalSchema.Column>> component.id PRIMARY KEY;
ClassDiagram.Attribut>> Competitor.id:int =>=>=> RelationalSchema.Column>> competitor.id PRIMARY KEY;
ClassDiagram.Attribut>> Competitor.name:String =>=>=> RelationalSchema.Column>> competitor.name;
ClassDiagram.Attribut>> Contest.id:int =>=>=> RelationalSchema.Column>> contest.id PRIMARY KEY;
ClassDiagram.Attribut>> Contest.heldin:Month =>=>=> RelationalSchema.Column>> contest.heldin;
ClassDiagram.Attribut>> Customer.id:Long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.GeneratedName:Passport =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> Simple.id1:Long =>=>=> RelationalSchema.Column>> simple.id1 PRIMARY KEY;
ClassDiagram.Attribut>> Simple.id2:Long =>=>=> RelationalSchema.Column>> simple.id2 PRIMARY KEY;
ClassDiagram.Attribut>> Simple.quantity:int =>=>=> RelationalSchema.Column>> simple.quantity;
ClassDiagram.Attribut>> Simple2.id1:Long =>=>=> RelationalSchema.Column>> simple2.id1 PRIMARY KEY;
ClassDiagram.Attribut>> Simple2.id2:Long =>=>=> RelationalSchema.Column>> simple2.id2 PRIMARY KEY;
ClassDiagram.Attribut>> Simple2.quantity:int =>=>=> RelationalSchema.Column>> simple2.quantity;
ClassDiagram.Attribut>> Multiple.id1:Long =>=>=> RelationalSchema.Column>> multiple.id1 PRIMARY KEY;
ClassDiagram.Attribut>> Multiple.id2:Long =>=>=> RelationalSchema.Column>> multiple.id2 PRIMARY KEY;
ClassDiagram.Attribut>> Multiple.id3:Long =>=>=> RelationalSchema.Column>> multiple.id3 PRIMARY KEY;
ClassDiagram.Attribut>> Multiple.quantity:int =>=>=> RelationalSchema.Column>> multiple.quantity;
ClassDiagram.Attribut>> Body.id:Integer =>=>=> RelationalSchema.Column>> body.id PRIMARY KEY;
ClassDiagram.Attribut>> Body.GeneratedName:Heart =>=>=> RelationalSchema.Column>> body.GeneratedName;
ClassDiagram.Attribut>> OwnerAddress.id:Integer =>=>=> RelationalSchema.Column>> owneraddress.id PRIMARY KEY;
ClassDiagram.Attribut>> ShowDescription.id:Integer =>=>=> RelationalSchema.Column>> showdescription.id PRIMARY KEY;
ClassDiagram.Attribut>> Party.partyid:String =>=>=> RelationalSchema.Column>> party.partyid PRIMARY KEY;
ClassDiagram.Attribut>> SerialNumber.id:SerialNumberPk =>=>=> RelationalSchema.Column>> serialnumber.id PRIMARY KEY;
ClassDiagram.Attribut>> SerialNumber.value:String =>=>=> RelationalSchema.Column>> serialnumber.value;
ClassDiagram.Attribut>> Owner.deleted:boolean =>=>=> RelationalSchema.Column>> owner.deleted;
ClassDiagram.Attribut>> Owner.id:Long =>=>=> RelationalSchema.Column>> owner.id PRIMARY KEY;
ClassDiagram.Attribut>> Owner.name:String =>=>=> RelationalSchema.Column>> owner.name;
ClassDiagram.Attribut>> Owner.version:Integer =>=>=> RelationalSchema.Column>> owner.version;
ClassDiagram.Attribut>> DeviceGroupConfig.name:String =>=>=> RelationalSchema.Column>> devicegroupconfig.name;
ClassDiagram.Attribut>> ManagedDevice.name:String =>=>=> RelationalSchema.Column>> manageddevice.name;
ClassDiagram.Attribut>> ManagedDevice.GeneratedName:Device =>=>=> RelationalSchema.Column>> manageddevice.GeneratedName;
ClassDiagram.Attribut>> ManagedDevice.GeneratedName:DeviceGroupConfig =>=>=> RelationalSchema.Column>> manageddevice.GeneratedName;
ClassDiagram.Attribut>> Device.GeneratedName:ManagedDevice =>=>=> RelationalSchema.Column>> device.GeneratedName;
ClassDiagram.Attribut>> Device.tag:String =>=>=> RelationalSchema.Column>> device.tag;
ClassDiagram.Attribut>> Trousers.id:Integer =>=>=> RelationalSchema.Column>> trousers.id PRIMARY KEY;
ClassDiagram.Attribut>> Client.id:Integer =>=>=> RelationalSchema.Column>> client.id PRIMARY KEY;
ClassDiagram.Attribut>> Client.name:String =>=>=> RelationalSchema.Column>> client.name;
ClassDiagram.Attribut>> Client.GeneratedName:Address =>=>=> RelationalSchema.Column>> client.GeneratedName;
ClassDiagram.Attribut>> Client.secondary:Address =>=>=> RelationalSchema.Column>> client.secondary;
ClassDiagram.Attribut>> Owner.id:Integer =>=>=> RelationalSchema.Column>> owner.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.id:Integer =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Show.id:Integer =>=>=> RelationalSchema.Column>> show.id PRIMARY KEY;
ClassDiagram.Attribut>> Computer.id:ComputerPk =>=>=> RelationalSchema.Column>> computer.id;
ClassDiagram.Attribut>> Computer.cpu:String =>=>=> RelationalSchema.Column>> computer.cpu;
ClassDiagram.Attribut>> Heart.id:Integer =>=>=> RelationalSchema.Column>> heart.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.id:long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.id:long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> TrousersZip.id:Integer =>=>=> RelationalSchema.Column>> trouserszip.id PRIMARY KEY;
ClassDiagram.Attribut>> PartyAffiliate.partyid:String =>=>=> RelationalSchema.Column>> partyaffiliate.partyid PRIMARY KEY;
ClassDiagram.Attribut>> PartyAffiliate.affiliatename:String =>=>=> RelationalSchema.Column>> partyaffiliate.affiliatename;
ClassDiagram.Attribut>> Flight.id:Long =>=>=> RelationalSchema.Column>> flight.id PRIMARY KEY;
ClassDiagram.Attribut>> Flight.name:String =>=>=> RelationalSchema.Column>> flight.name;
ClassDiagram.Attribut>> Flight.transientduration:Long =>=>=> RelationalSchema.Column>> flight.transientduration;
ClassDiagram.Attribut>> Flight.durationinsec:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Flight.version:Integer =>=>=> RelationalSchema.Column>> flight.version;
ClassDiagram.Attribut>> Flight.GeneratedName:Company =>=>=> RelationalSchema.Column>> flight.GeneratedName;
ClassDiagram.Attribut>> Flight.triggereddata:String =>=>=> RelationalSchema.Column>> flight.triggereddata;
ClassDiagram.Attribut>> Flight.factor:long =>=>=> RelationalSchema.Column>> flight.factor;
ClassDiagram.Attribut>> Flight.departure:Date =>=>=> RelationalSchema.Column>> flight.departure;
ClassDiagram.Attribut>> Flight.buydate:java.sql.Timestamp =>=>=> RelationalSchema.Column>> flight.buydate;
ClassDiagram.Attribut>> Flight.alternativedeparturedate:Calendar =>=>=> RelationalSchema.Column>> flight.alternativedeparturedate;
ClassDiagram.Attribut>> Dummy.id:Long =>=>=> RelationalSchema.Column>> dummy.id PRIMARY KEY;
ClassDiagram.Attribut>> Dummy.transientdummyfield:K =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Gene.id:Integer =>=>=> RelationalSchema.Column>> gene.id PRIMARY KEY;
ClassDiagram.Attribut>> Gene.state:STE =>=>=> RelationalSchema.Column>> gene.state;
ClassDiagram.Attribut>> DNA.id:Integer =>=>=> RelationalSchema.Column>> dna.id PRIMARY KEY;
ClassDiagram.Attribut>> SomeGuy.id:Integer =>=>=> RelationalSchema.Column>> someguy.id PRIMARY KEY;
ClassDiagram.Attribut>> Price.id:Integer =>=>=> RelationalSchema.Column>> price.id PRIMARY KEY;
ClassDiagram.Attribut>> Price.amount:Double =>=>=> RelationalSchema.Column>> price.amount;
ClassDiagram.Attribut>> Price.currency:String =>=>=> RelationalSchema.Column>> price.currency;
ClassDiagram.Attribut>> WildEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> wildentity.serialversionuid;
ClassDiagram.Attribut>> WildEntity.id:int =>=>=> RelationalSchema.Column>> wildentity.id PRIMARY KEY;
ClassDiagram.Attribut>> WildEntity.property:String =>=>=> RelationalSchema.Column>> wildentity.property;
ClassDiagram.Attribut>> PaperType.id:Integer =>=>=> RelationalSchema.Column>> papertype.id PRIMARY KEY;
ClassDiagram.Attribut>> PaperType.name:String =>=>=> RelationalSchema.Column>> papertype.name;
ClassDiagram.Attribut>> Card.id:Integer =>=>=> RelationalSchema.Column>> card.id PRIMARY KEY;
ClassDiagram.Attribut>> Deck.id:Integer =>=>=> RelationalSchema.Column>> deck.id PRIMARY KEY;
ClassDiagram.Attribut>> DomainAdmin.domainname:String =>=>=> RelationalSchema.Column>> domainadmin.domainname PRIMARY KEY;
ClassDiagram.Attribut>> DomainAdmin.adminuser:String =>=>=> RelationalSchema.Column>> domainadmin.adminuser PRIMARY KEY;
ClassDiagram.Attribut>> DomainAdmin.nickname:String =>=>=> RelationalSchema.Column>> domainadmin.nickname;
ClassDiagram.Attribut>> Ticket.id:Long =>=>=> RelationalSchema.Column>> ticket.id PRIMARY KEY;
ClassDiagram.Attribut>> Ticket.number:String =>=>=> RelationalSchema.Column>> ticket.number;
ClassDiagram.Attribut>> Company.id:Integer =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Company.name:String =>=>=> RelationalSchema.Column>> company.name;
ClassDiagram.Attribut>> Postman.name:String =>=>=> RelationalSchema.Column>> postman.name;
ClassDiagram.Attribut>> Postman.id:String =>=>=> RelationalSchema.Column>> postman.id PRIMARY KEY;
ClassDiagram.Attribut>> ItemCost.id:int =>=>=> RelationalSchema.Column>> itemcost.id PRIMARY KEY;
ClassDiagram.Attribut>> ItemCost.GeneratedName:Item =>=>=> RelationalSchema.Column>> itemcost.GeneratedName;
ClassDiagram.Attribut>> ItemCost.GeneratedName:Vendor =>=>=> RelationalSchema.Column>> itemcost.GeneratedName;
ClassDiagram.Attribut>> ItemCost.cost:BigDecimal =>=>=> RelationalSchema.Column>> itemcost.cost;
ClassDiagram.Attribut>> WarehouseItem.id:int =>=>=> RelationalSchema.Column>> warehouseitem.id PRIMARY KEY;
ClassDiagram.Attribut>> WarehouseItem.GeneratedName:Item =>=>=> RelationalSchema.Column>> warehouseitem.GeneratedName;
ClassDiagram.Attribut>> WarehouseItem.GeneratedName:Vendor =>=>=> RelationalSchema.Column>> warehouseitem.GeneratedName;
ClassDiagram.Attribut>> WarehouseItem.qtyinstock:BigDecimal =>=>=> RelationalSchema.Column>> warehouseitem.qtyinstock;
ClassDiagram.Attribut>> House.id:Integer =>=>=> RelationalSchema.Column>> house.id PRIMARY KEY;
ClassDiagram.Attribut>> House.address:String =>=>=> RelationalSchema.Column>> house.address;
ClassDiagram.Attribut>> House.GeneratedName:Postman =>=>=> RelationalSchema.Column>> house.GeneratedName;
ClassDiagram.Attribut>> Item.id:int =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Luggage.id:Integer =>=>=> RelationalSchema.Column>> luggage.id PRIMARY KEY;
ClassDiagram.Attribut>> Luggage.owner:String =>=>=> RelationalSchema.Column>> luggage.owner;
ClassDiagram.Attribut>> Luggage.type:String =>=>=> RelationalSchema.Column>> luggage.type;
ClassDiagram.Attribut>> Rambler.id:Integer =>=>=> RelationalSchema.Column>> rambler.id PRIMARY KEY;
ClassDiagram.Attribut>> Rambler.name:String =>=>=> RelationalSchema.Column>> rambler.name;
ClassDiagram.Attribut>> Inhabitant.id:Integer =>=>=> RelationalSchema.Column>> inhabitant.id PRIMARY KEY;
ClassDiagram.Attribut>> Inhabitant.name:String =>=>=> RelationalSchema.Column>> inhabitant.name;
ClassDiagram.Attribut>> Bag.id:Integer =>=>=> RelationalSchema.Column>> bag.id PRIMARY KEY;
ClassDiagram.Attribut>> Bag.serial:String =>=>=> RelationalSchema.Column>> bag.serial;
ClassDiagram.Attribut>> Clothes.id:Integer =>=>=> RelationalSchema.Column>> clothes.id PRIMARY KEY;
ClassDiagram.Attribut>> Clothes.type:String =>=>=> RelationalSchema.Column>> clothes.type;
ClassDiagram.Attribut>> Clothes.flavor:String =>=>=> RelationalSchema.Column>> clothes.flavor;
ClassDiagram.Attribut>> Vendor.id:int =>=>=> RelationalSchema.Column>> vendor.id PRIMARY KEY;
ClassDiagram.Attribut>> SomeEntity.id:java.util.Date =>=>=> RelationalSchema.Column>> someentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SomeEntity.timedata:java.sql.Time =>=>=> RelationalSchema.Column>> someentity.timedata;
ClassDiagram.Attribut>> SomeEntity.tsdata:java.sql.Timestamp =>=>=> RelationalSchema.Column>> someentity.tsdata;
ClassDiagram.Attribut>> SomeEntity.data:Byte =>=>=> RelationalSchema.Column>> someentity.data;
ClassDiagram.Attribut>> SomeEntity.chardata:Character =>=>=> RelationalSchema.Column>> someentity.chardata;
ClassDiagram.Attribut>> SomeOtherEntity.id:int =>=>=> RelationalSchema.Column>> someotherentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SomeOtherEntity.data:boolean =>=>=> RelationalSchema.Column>> someotherentity.data;
ClassDiagram.Attribut>> SomeOtherEntity.data:byte =>=>=> RelationalSchema.Column>> someotherentity.data;
ClassDiagram.Attribut>> SomeOtherEntity.acterdata:char =>=>=> RelationalSchema.Column>> someotherentity.acterdata;
ClassDiagram.Attribut>> SomeOtherEntity.data:short =>=>=> RelationalSchema.Column>> someotherentity.data;
ClassDiagram.Attribut>> SomeOtherEntity.egerdata:int =>=>=> RelationalSchema.Column>> someotherentity.egerdata;
ClassDiagram.Attribut>> SomeOtherEntity.data:long =>=>=> RelationalSchema.Column>> someotherentity.data;
ClassDiagram.Attribut>> SomeOtherEntity.data:double =>=>=> RelationalSchema.Column>> someotherentity.data;
ClassDiagram.Attribut>> SomeOtherEntity.data:float =>=>=> RelationalSchema.Column>> someotherentity.data;
ClassDiagram.Attribut>> SomeOtherEntity.GeneratedName:Grade =>=>=> RelationalSchema.Column>> someotherentity.GeneratedName;
ClassDiagram.Attribut>> TestCourse.testcourseid:Long =>=>=> RelationalSchema.Column>> testcourse.testcourseid PRIMARY KEY;
ClassDiagram.Attribut>> TestCourse.title:LocalizedString =>=>=> RelationalSchema.Column>> testcourse.title;
ClassDiagram.Attribut>> Boy.id:Integer =>=>=> RelationalSchema.Column>> boy.id PRIMARY KEY;
ClassDiagram.Attribut>> Boy.firstname:String =>=>=> RelationalSchema.Column>> boy.firstname;
ClassDiagram.Attribut>> Boy.lastname:String =>=>=> RelationalSchema.Column>> boy.lastname;
ClassDiagram.Attribut>> Boy.nicknames:Set<String> =>=>=> RelationalSchema.Column>> boy.nicknames;
ClassDiagram.Attribut>> Boy.hatednames:Set<String> =>=>=> RelationalSchema.Column>> boy.hatednames;
ClassDiagram.Attribut>> Boy.preferrednames:Set<String> =>=>=> RelationalSchema.Column>> boy.preferrednames;
ClassDiagram.Attribut>> Boy.scorepernickname:Map<String,Integer> =>=>=> RelationalSchema.Column>> boy.scorepernickname;
ClassDiagram.Attribut>> Boy.scoreperpreferredname:Map<String,Integer> =>=>=> RelationalSchema.Column>> boy.scoreperpreferredname;
ClassDiagram.Attribut>> Boy.favoritenumbers:int =>=>=> RelationalSchema.Column>> boy.favoritenumbers;
ClassDiagram.Attribut>> Boy.favoritetoys:Set<Toy> =>=>=> RelationalSchema.Column>> boy.favoritetoys;
ClassDiagram.Attribut>> Boy.characters:Set<Character> =>=>=> RelationalSchema.Column>> boy.characters;
ClassDiagram.Attribut>> Boy.foods:Map<String,FavoriteFood> =>=>=> RelationalSchema.Column>> boy.foods;
ClassDiagram.Attribut>> Boy.countryattitudes:Set<CountryAttitude> =>=>=> RelationalSchema.Column>> boy.countryattitudes;
ClassDiagram.Attribut>> Products.id:Integer =>=>=> RelationalSchema.Column>> products.id PRIMARY KEY;
ClassDiagram.Attribut>> Products.widgets:Set<Widgets> =>=>=> RelationalSchema.Column>> products.widgets;
ClassDiagram.Attribut>> Widgets.name:String =>=>=> RelationalSchema.Column>> widgets.name;
ClassDiagram.Attribut>> Widgets.id:int =>=>=> RelationalSchema.Column>> widgets.id PRIMARY KEY;
ClassDiagram.Attribut>> Matrix.id:Integer =>=>=> RelationalSchema.Column>> matrix.id PRIMARY KEY;
ClassDiagram.Attribut>> Matrix.mvalues:SortedMap<Integer,Float> =>=>=> RelationalSchema.Column>> matrix.mvalues;
ClassDiagram.Attribut>> A.id:int =>=>=> RelationalSchema.Column>> a.id PRIMARY KEY;
ClassDiagram.Attribut>> A.listofb:List<B> =>=>=> RelationalSchema.Column>> a.listofb;
ClassDiagram.Attribut>> C.id:int =>=>=> RelationalSchema.Column>> c.id PRIMARY KEY;
ClassDiagram.Attribut>> C.comment:String =>=>=> RelationalSchema.Column>> c.comment;
ClassDiagram.Attribut>> BugSystem.id:Integer =>=>=> RelationalSchema.Column>> bugsystem.id PRIMARY KEY;
ClassDiagram.Attribut>> BugSystem.bugs:Set<Bug> =>=>=> RelationalSchema.Column>> bugsystem.bugs;
ClassDiagram.Attribut>> Sale.id:Integer =>=>=> RelationalSchema.Column>> sale.id PRIMARY KEY;
ClassDiagram.Attribut>> Sale.contacts:List<Contact> =>=>=> RelationalSchema.Column>> sale.contacts;
ClassDiagram.Attribut>> FavoriteThings.id:int =>=>=> RelationalSchema.Column>> favoritethings.id PRIMARY KEY;
ClassDiagram.Attribut>> FavoriteThings.web:InternetFavorites =>=>=> RelationalSchema.Column>> favoritethings.web;
ClassDiagram.Attribut>> WealthyPerson.//})vacationhomes:Set<Address> =>=>=> RelationalSchema.Column>> wealthyperson.//})vacationhomes;
ClassDiagram.Attribut>> WealthyPerson.legacyvacationhomes:Set<Address> =>=>=> RelationalSchema.Column>> wealthyperson.legacyvacationhomes;
ClassDiagram.Attribut>> WealthyPerson.explicitvacationhomes:Set<Address> =>=>=> RelationalSchema.Column>> wealthyperson.explicitvacationhomes;
ClassDiagram.Attribut>> InternetProvider.id:Integer =>=>=> RelationalSchema.Column>> internetprovider.id PRIMARY KEY;
ClassDiagram.Attribut>> InternetProvider.brandname:String =>=>=> RelationalSchema.Column>> internetprovider.brandname;
ClassDiagram.Attribut>> InternetProvider.owner:LegalStructure =>=>=> RelationalSchema.Column>> internetprovider.owner;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.GeneratedName:Address =>=>=> RelationalSchema.Column>> person.GeneratedName;
ClassDiagram.Attribut>> Country.iso2:String =>=>=> RelationalSchema.Column>> country.iso2 PRIMARY KEY;
ClassDiagram.Attribut>> Country.name:String =>=>=> RelationalSchema.Column>> country.name;
ClassDiagram.Attribut>> CorpType.id:Integer =>=>=> RelationalSchema.Column>> corptype.id PRIMARY KEY;
ClassDiagram.Attribut>> CorpType.type:String =>=>=> RelationalSchema.Column>> corptype.type;
ClassDiagram.Attribut>> Alias.id:Long =>=>=> RelationalSchema.Column>> alias.id PRIMARY KEY;
ClassDiagram.Attribut>> Alias.GeneratedName:Name =>=>=> RelationalSchema.Column>> alias.GeneratedName;
ClassDiagram.Attribut>> Alias.source:String =>=>=> RelationalSchema.Column>> alias.source;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:PersonName =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.id:Integer =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.GeneratedName:Address =>=>=> RelationalSchema.Column>> person.GeneratedName;
ClassDiagram.Attribut>> Person.bornin:Country =>=>=> RelationalSchema.Column>> person.bornin;
ClassDiagram.Attribut>> SpreadDeal./***withthetenor.*/long:Swap =>=>=> RelationalSchema.Column>> spreaddeal./***withthetenor.*/long;
ClassDiagram.Attribut>> SpreadDeal./***withthelongertenor.*/short:Swap =>=>=> RelationalSchema.Column>> spreaddeal./***withthelongertenor.*/short;
ClassDiagram.Attribut>> AddressType.id:Integer =>=>=> RelationalSchema.Column>> addresstype.id PRIMARY KEY;
ClassDiagram.Attribut>> AddressType.name:String =>=>=> RelationalSchema.Column>> addresstype.name;
ClassDiagram.Attribut>> Nationality.id:Integer =>=>=> RelationalSchema.Column>> nationality.id PRIMARY KEY;
ClassDiagram.Attribut>> Nationality.name:String =>=>=> RelationalSchema.Column>> nationality.name;
ClassDiagram.Attribut>> RegionalArticle.pk:RegionalArticlePk =>=>=> RelationalSchema.Column>> regionalarticle.pk PRIMARY KEY;
ClassDiagram.Attribut>> RegionalArticle.name:String =>=>=> RelationalSchema.Column>> regionalarticle.name;
ClassDiagram.Attribut>> Manager.id:Integer =>=>=> RelationalSchema.Column>> manager.id PRIMARY KEY;
ClassDiagram.Attribut>> Manager.name:String =>=>=> RelationalSchema.Column>> manager.name;
ClassDiagram.Attribut>> VanillaSwap./***identifieroftheinterestrateswap*/instrumentid:String =>=>=> RelationalSchema.Column>> vanillaswap./***identifieroftheinterestrateswap*/instrumentid;
ClassDiagram.Attribut>> VanillaSwap./***oftheswap(andofbothlegs).*/:Currency =>=>=> RelationalSchema.Column>> vanillaswap./***oftheswap(andofbothlegs).*/;
ClassDiagram.Attribut>> VanillaSwap./***fixedleg(cashflowswiththefixedrate).*/:FixedLeg =>=>=> RelationalSchema.Column>> vanillaswap./***fixedleg(cashflowswiththefixedrate).*/;
ClassDiagram.Attribut>> VanillaSwap./***floatingleg(cashflowsboundtoafinancialindex).*/:FloatLeg =>=>=> RelationalSchema.Column>> vanillaswap./***floatingleg(cashflowsboundtoafinancialindex).*/;
ClassDiagram.Attribut>> Book.isbn:String =>=>=> RelationalSchema.Column>> book.isbn PRIMARY KEY;
ClassDiagram.Attribut>> Book.name:String =>=>=> RelationalSchema.Column>> book.name;
ClassDiagram.Attribut>> Book.GeneratedName:Summary =>=>=> RelationalSchema.Column>> book.GeneratedName;
ClassDiagram.Attribut>> Country.id:Integer =>=>=> RelationalSchema.Column>> country.id PRIMARY KEY;
ClassDiagram.Attribut>> Country.name:String =>=>=> RelationalSchema.Column>> country.name;
ClassDiagram.Attribut>> Passport.id:Long =>=>=> RelationalSchema.Column>> passport.id PRIMARY KEY;
ClassDiagram.Attribut>> Passport.number:String =>=>=> RelationalSchema.Column>> passport.number;
ClassDiagram.Attribut>> Manufacturer.id:Integer =>=>=> RelationalSchema.Column>> manufacturer.id PRIMARY KEY;
ClassDiagram.Attribut>> PrimeMinister.id:Integer =>=>=> RelationalSchema.Column>> primeminister.id PRIMARY KEY;
ClassDiagram.Attribut>> PrimeMinister.name:String =>=>=> RelationalSchema.Column>> primeminister.name;
ClassDiagram.Attribut>> PrimeMinister.current:Government =>=>=> RelationalSchema.Column>> primeminister.current;
ClassDiagram.Attribut>> AImpl.serialversionuid:long =>=>=> RelationalSchema.Column>> aimpl.serialversionuid;
ClassDiagram.Attribut>> AImpl.aid:Integer =>=>=> RelationalSchema.Column>> aimpl.aid PRIMARY KEY;
ClassDiagram.Attribut>> BImpl.serialversionuid:long =>=>=> RelationalSchema.Column>> bimpl.serialversionuid;
ClassDiagram.Attribut>> BImpl.bid:Integer =>=>=> RelationalSchema.Column>> bimpl.bid;
ClassDiagram.Attribut>> Sky.id:Integer =>=>=> RelationalSchema.Column>> sky.id PRIMARY KEY;
ClassDiagram.Attribut>> ZImpl.serialversionuid:long =>=>=> RelationalSchema.Column>> zimpl.serialversionuid;
ClassDiagram.Attribut>> ZImpl.zid:Integer =>=>=> RelationalSchema.Column>> zimpl.zid PRIMARY KEY;
ClassDiagram.Attribut>> ZImpl.GeneratedName:B =>=>=> RelationalSchema.Column>> zimpl.GeneratedName;
ClassDiagram.Attribut>> Employee.id:long =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> MedicalHistory.//overridingnotallowed...//defaultjoincolumnnameisoverridden@mapsidid:String =>=>=> RelationalSchema.Column>> medicalhistory.//overridingnotallowed...//defaultjoincolumnnameisoverridden@mapsidid PRIMARY KEY;
ClassDiagram.Attribut>> MedicalHistory.lastup:Date =>=>=> RelationalSchema.Column>> medicalhistory.lastup;
ClassDiagram.Attribut>> FinancialHistory.//overridingnotallowed...//defaultjoincolumnnameisoverridden@mapsidid:String =>=>=> RelationalSchema.Column>> financialhistory.//overridingnotallowed...//defaultjoincolumnnameisoverridden@mapsidid PRIMARY KEY;
ClassDiagram.Attribut>> FinancialHistory.lastup:Date =>=>=> RelationalSchema.Column>> financialhistory.lastup;
ClassDiagram.Attribut>> Person.ssn:String =>=>=> RelationalSchema.Column>> person.ssn PRIMARY KEY;
ClassDiagram.Attribut>> Simple.ssn:String =>=>=> RelationalSchema.Column>> simple.ssn PRIMARY KEY;
ClassDiagram.Attribut>> Simple.name:String =>=>=> RelationalSchema.Column>> simple.name PRIMARY KEY;
ClassDiagram.Attribut>> Person.ssn:String =>=>=> RelationalSchema.Column>> person.ssn PRIMARY KEY;
ClassDiagram.Attribut>> MedicalHistory.patient:Person =>=>=> RelationalSchema.Column>> medicalhistory.patient PRIMARY KEY;
ClassDiagram.Attribut>> MedicalHistory.lastup:Date =>=>=> RelationalSchema.Column>> medicalhistory.lastup;
ClassDiagram.Attribut>> FinancialHistory.patient:Person =>=>=> RelationalSchema.Column>> financialhistory.patient PRIMARY KEY;
ClassDiagram.Attribut>> FinancialHistory.lastup:Date =>=>=> RelationalSchema.Column>> financialhistory.lastup;
ClassDiagram.Attribut>> Dependent.emp:Employee =>=>=> RelationalSchema.Column>> dependent.emp PRIMARY KEY;
ClassDiagram.Attribut>> Dependent.name:String =>=>=> RelationalSchema.Column>> dependent.name;
ClassDiagram.Attribut>> Bar.GeneratedName:Foo =>=>=> RelationalSchema.Column>> bar.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Bar.details:String =>=>=> RelationalSchema.Column>> bar.details;
ClassDiagram.Attribut>> Foo.id:Long =>=>=> RelationalSchema.Column>> foo.id PRIMARY KEY;
ClassDiagram.Attribut>> Foo.name:String =>=>=> RelationalSchema.Column>> foo.name;
ClassDiagram.Attribut>> OrderLine.GeneratedName:Order =>=>=> RelationalSchema.Column>> orderline.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> OrderLine.GeneratedName:Product =>=>=> RelationalSchema.Column>> orderline.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> OrderLine.amount:Integer =>=>=> RelationalSchema.Column>> orderline.amount;
ClassDiagram.Attribut>> Order.id:Long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.name:String =>=>=> RelationalSchema.Column>> order.name;
ClassDiagram.Attribut>> Employee.empid:long =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empname:String =>=>=> RelationalSchema.Column>> employee.empname;
ClassDiagram.Attribut>> Product.id:Long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Dependent.//defaultcolumnnamefor"name"attributeisoverriddenid:DependentId =>=>=> RelationalSchema.Column>> dependent.//defaultcolumnnamefor"name"attributeisoverriddenid;
ClassDiagram.Attribut>> Employee.empid:EmployeeId =>=>=> RelationalSchema.Column>> employee.empid;
ClassDiagram.Attribut>> Employee.empid:EmployeeId =>=>=> RelationalSchema.Column>> employee.empid;
ClassDiagram.Attribut>> Dependent.//defaultcolumnnameisoverriddenname:String =>=>=> RelationalSchema.Column>> dependent.//defaultcolumnnameisoverriddenname PRIMARY KEY;
ClassDiagram.Attribut>> Dependent.emp:Employee =>=>=> RelationalSchema.Column>> dependent.emp PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empid:long =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empname:String =>=>=> RelationalSchema.Column>> employee.empname;
ClassDiagram.Attribut>> CustomerInventory.id:Integer =>=>=> RelationalSchema.Column>> customerinventory.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerInventory.custid:int =>=>=> RelationalSchema.Column>> customerinventory.custid PRIMARY KEY;
ClassDiagram.Attribut>> CustomerInventory.totalcost:BigDecimal =>=>=> RelationalSchema.Column>> customerinventory.totalcost;
ClassDiagram.Attribut>> CustomerInventory.quantity:int =>=>=> RelationalSchema.Column>> customerinventory.quantity;
ClassDiagram.Attribut>> CustomerInventory.version:int =>=>=> RelationalSchema.Column>> customerinventory.version;
ClassDiagram.Attribut>> Item.query_by_category:String =>=>=> RelationalSchema.Column>> item.query_by_category;
ClassDiagram.Attribut>> Item.id:String =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.name:String =>=>=> RelationalSchema.Column>> item.name;
ClassDiagram.Attribut>> Item.price:BigDecimal =>=>=> RelationalSchema.Column>> item.price;
ClassDiagram.Attribut>> Item.description:String =>=>=> RelationalSchema.Column>> item.description;
ClassDiagram.Attribut>> Item.discount:BigDecimal =>=>=> RelationalSchema.Column>> item.discount;
ClassDiagram.Attribut>> Item.category:int =>=>=> RelationalSchema.Column>> item.category;
ClassDiagram.Attribut>> Item.version:int =>=>=> RelationalSchema.Column>> item.version;
ClassDiagram.Attribut>> Customer.query_all:String =>=>=> RelationalSchema.Column>> customer.query_all;
ClassDiagram.Attribut>> Customer.query_count:String =>=>=> RelationalSchema.Column>> customer.query_count;
ClassDiagram.Attribut>> Customer.query_by_credit:String =>=>=> RelationalSchema.Column>> customer.query_by_credit;
ClassDiagram.Attribut>> Customer.bad_credit:String =>=>=> RelationalSchema.Column>> customer.bad_credit;
ClassDiagram.Attribut>> Customer.id:int =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.firstname:String =>=>=> RelationalSchema.Column>> customer.firstname;
ClassDiagram.Attribut>> Customer.lastname:String =>=>=> RelationalSchema.Column>> customer.lastname;
ClassDiagram.Attribut>> Customer.contact:String =>=>=> RelationalSchema.Column>> customer.contact;
ClassDiagram.Attribut>> Customer.credit:String =>=>=> RelationalSchema.Column>> customer.credit;
ClassDiagram.Attribut>> Customer.creditlimit:BigDecimal =>=>=> RelationalSchema.Column>> customer.creditlimit;
ClassDiagram.Attribut>> Customer.since:Calendar =>=>=> RelationalSchema.Column>> customer.since;
ClassDiagram.Attribut>> Customer.balance:BigDecimal =>=>=> RelationalSchema.Column>> customer.balance;
ClassDiagram.Attribut>> Customer.ytdpayment:BigDecimal =>=>=> RelationalSchema.Column>> customer.ytdpayment;
ClassDiagram.Attribut>> Customer.version:int =>=>=> RelationalSchema.Column>> customer.version;
ClassDiagram.Attribut>> ExclusiveDependent.id:DependentId =>=>=> RelationalSchema.Column>> exclusivedependent.id;
ClassDiagram.Attribut>> Dependent.id:DependentId =>=>=> RelationalSchema.Column>> dependent.id;
ClassDiagram.Attribut>> Employee.empid:long =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empname:String =>=>=> RelationalSchema.Column>> employee.empname;
ClassDiagram.Attribut>> Employee.nickname:String =>=>=> RelationalSchema.Column>> employee.nickname;
ClassDiagram.Attribut>> Dependent.name:String =>=>=> RelationalSchema.Column>> dependent.name PRIMARY KEY;
ClassDiagram.Attribut>> Dependent.//idattributemappedbyjoincolumndefaultemp:Employee =>=>=> RelationalSchema.Column>> dependent.//idattributemappedbyjoincolumndefaultemp;
ClassDiagram.Attribut>> Dependent.name:String =>=>=> RelationalSchema.Column>> dependent.name PRIMARY KEY;
ClassDiagram.Attribut>> Dependent.emp:Employee =>=>=> RelationalSchema.Column>> dependent.emp PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empid:long =>=>=> RelationalSchema.Column>> employee.empid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empname:String =>=>=> RelationalSchema.Column>> employee.empname;
ClassDiagram.Attribut>> CustomerInventory.id:Integer =>=>=> RelationalSchema.Column>> customerinventory.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerInventory.GeneratedName:Customer =>=>=> RelationalSchema.Column>> customerinventory.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> CustomerInventory.totalcost:BigDecimal =>=>=> RelationalSchema.Column>> customerinventory.totalcost;
ClassDiagram.Attribut>> CustomerInventory.quantity:int =>=>=> RelationalSchema.Column>> customerinventory.quantity;
ClassDiagram.Attribut>> CustomerInventory.version:int =>=>=> RelationalSchema.Column>> customerinventory.version;
ClassDiagram.Attribut>> Item.query_by_category:String =>=>=> RelationalSchema.Column>> item.query_by_category;
ClassDiagram.Attribut>> Item.id:String =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.name:String =>=>=> RelationalSchema.Column>> item.name;
ClassDiagram.Attribut>> Item.price:BigDecimal =>=>=> RelationalSchema.Column>> item.price;
ClassDiagram.Attribut>> Item.description:String =>=>=> RelationalSchema.Column>> item.description;
ClassDiagram.Attribut>> Item.discount:BigDecimal =>=>=> RelationalSchema.Column>> item.discount;
ClassDiagram.Attribut>> Item.category:int =>=>=> RelationalSchema.Column>> item.category;
ClassDiagram.Attribut>> Item.version:int =>=>=> RelationalSchema.Column>> item.version;
ClassDiagram.Attribut>> Customer.query_all:String =>=>=> RelationalSchema.Column>> customer.query_all;
ClassDiagram.Attribut>> Customer.query_count:String =>=>=> RelationalSchema.Column>> customer.query_count;
ClassDiagram.Attribut>> Customer.query_by_credit:String =>=>=> RelationalSchema.Column>> customer.query_by_credit;
ClassDiagram.Attribut>> Customer.bad_credit:String =>=>=> RelationalSchema.Column>> customer.bad_credit;
ClassDiagram.Attribut>> Customer.id:int =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.firstname:String =>=>=> RelationalSchema.Column>> customer.firstname;
ClassDiagram.Attribut>> Customer.lastname:String =>=>=> RelationalSchema.Column>> customer.lastname;
ClassDiagram.Attribut>> Customer.contact:String =>=>=> RelationalSchema.Column>> customer.contact;
ClassDiagram.Attribut>> Customer.credit:String =>=>=> RelationalSchema.Column>> customer.credit;
ClassDiagram.Attribut>> Customer.creditlimit:BigDecimal =>=>=> RelationalSchema.Column>> customer.creditlimit;
ClassDiagram.Attribut>> Customer.since:Calendar =>=>=> RelationalSchema.Column>> customer.since;
ClassDiagram.Attribut>> Customer.balance:BigDecimal =>=>=> RelationalSchema.Column>> customer.balance;
ClassDiagram.Attribut>> Customer.ytdpayment:BigDecimal =>=>=> RelationalSchema.Column>> customer.ytdpayment;
ClassDiagram.Attribut>> Customer.version:int =>=>=> RelationalSchema.Column>> customer.version;
ClassDiagram.Attribut>> Dependent.//idattributemappedbyjoincolumndefaultid:DependentId =>=>=> RelationalSchema.Column>> dependent.//idattributemappedbyjoincolumndefaultid;
ClassDiagram.Attribut>> MedicalHistory.patient:Person =>=>=> RelationalSchema.Column>> medicalhistory.patient PRIMARY KEY;
ClassDiagram.Attribut>> MedicalHistory.xraydata:byte =>=>=> RelationalSchema.Column>> medicalhistory.xraydata;
ClassDiagram.Attribut>> MedicalHistory.patient:Person =>=>=> RelationalSchema.Column>> medicalhistory.patient PRIMARY KEY;
ClassDiagram.Attribut>> Person.id:PersonId =>=>=> RelationalSchema.Column>> person.id;
ClassDiagram.Attribut>> Person.id:PersonId =>=>=> RelationalSchema.Column>> person.id;
ClassDiagram.Attribut>> MedicalHistory.//allattributesmaptorelationship:attributeoverridenotallowedid:PersonId =>=>=> RelationalSchema.Column>> medicalhistory.//allattributesmaptorelationship:attributeoverridenotallowedid;
ClassDiagram.Attribut>> Dependent.name:String =>=>=> RelationalSchema.Column>> dependent.name PRIMARY KEY;
ClassDiagram.Attribut>> Dependent.emp:Employee =>=>=> RelationalSchema.Column>> dependent.emp PRIMARY KEY;
ClassDiagram.Attribut>> Employee.firstname:String =>=>=> RelationalSchema.Column>> employee.firstname PRIMARY KEY;
ClassDiagram.Attribut>> Employee.lastname:String =>=>=> RelationalSchema.Column>> employee.lastname PRIMARY KEY;
ClassDiagram.Attribut>> Dependent.id:DependentId =>=>=> RelationalSchema.Column>> dependent.id;
ClassDiagram.Attribut>> Employee.firstname:String =>=>=> RelationalSchema.Column>> employee.firstname PRIMARY KEY;
ClassDiagram.Attribut>> Employee.lastname:String =>=>=> RelationalSchema.Column>> employee.lastname PRIMARY KEY;
ClassDiagram.Attribut>> Employer.name:String =>=>=> RelationalSchema.Column>> employer.name PRIMARY KEY;
ClassDiagram.Attribut>> Employer.GeneratedName:Employee =>=>=> RelationalSchema.Column>> employer.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Person.ssn:String =>=>=> RelationalSchema.Column>> person.ssn PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname PRIMARY KEY;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname PRIMARY KEY;
ClassDiagram.Attribut>> MedicalHistory.patient:Person =>=>=> RelationalSchema.Column>> medicalhistory.patient PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname PRIMARY KEY;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname PRIMARY KEY;
ClassDiagram.Attribut>> MedicalHistory.//allattributesmaptorelationship:attributeoverridenotallowedid:PersonId =>=>=> RelationalSchema.Column>> medicalhistory.//allattributesmaptorelationship:attributeoverridenotallowedid;
ClassDiagram.Attribut>> Person.id:Integer =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> MedicalHistory.id:Integer =>=>=> RelationalSchema.Column>> medicalhistory.id PRIMARY KEY;
ClassDiagram.Attribut>> GSM.frequency:int =>=>=> RelationalSchema.Column>> gsm.frequency;
ClassDiagram.Attribut>> Voice.id:Integer =>=>=> RelationalSchema.Column>> voice.id PRIMARY KEY;
ClassDiagram.Attribut>> Citizen.id:Integer =>=>=> RelationalSchema.Column>> citizen.id PRIMARY KEY;
ClassDiagram.Attribut>> Citizen.firstname:String =>=>=> RelationalSchema.Column>> citizen.firstname;
ClassDiagram.Attribut>> Citizen.lastname:String =>=>=> RelationalSchema.Column>> citizen.lastname;
ClassDiagram.Attribut>> Citizen.ssn:String =>=>=> RelationalSchema.Column>> citizen.ssn;
ClassDiagram.Attribut>> NaturalIdOnManyToOne.id:int =>=>=> RelationalSchema.Column>> naturalidonmanytoone.id PRIMARY KEY;
ClassDiagram.Attribut>> State.id:Integer =>=>=> RelationalSchema.Column>> state.id PRIMARY KEY;
ClassDiagram.Attribut>> State.name:String =>=>=> RelationalSchema.Column>> state.name;
ClassDiagram.Attribut>> CasimirParticle.id:Long =>=>=> RelationalSchema.Column>> casimirparticle.id PRIMARY KEY;
ClassDiagram.Attribut>> Dictionary.id:Integer =>=>=> RelationalSchema.Column>> dictionary.id PRIMARY KEY;
ClassDiagram.Attribut>> Dictionary.name:String =>=>=> RelationalSchema.Column>> dictionary.name;
ClassDiagram.Attribut>> Dictionary.editor:String =>=>=> RelationalSchema.Column>> dictionary.editor;
ClassDiagram.Attribut>> Night.id:Integer =>=>=> RelationalSchema.Column>> night.id PRIMARY KEY;
ClassDiagram.Attribut>> Night.duration:long =>=>=> RelationalSchema.Column>> night.duration;
ClassDiagram.Attribut>> Night.GeneratedName:Date =>=>=> RelationalSchema.Column>> night.GeneratedName;
ClassDiagram.Attribut>> Night.GeneratedName:Area =>=>=> RelationalSchema.Column>> night.GeneratedName;
ClassDiagram.Attribut>> Twilight.id:int =>=>=> RelationalSchema.Column>> twilight.id PRIMARY KEY;
ClassDiagram.Attribut>> Mark.id:int =>=>=> RelationalSchema.Column>> mark.id PRIMARY KEY;
ClassDiagram.Attribut>> Mark.value:int =>=>=> RelationalSchema.Column>> mark.value;
ClassDiagram.Attribut>> SpaceShip.name:String =>=>=> RelationalSchema.Column>> spaceship.name PRIMARY KEY;
ClassDiagram.Attribut>> SpaceShip.model:String =>=>=> RelationalSchema.Column>> spaceship.model;
ClassDiagram.Attribut>> SpaceShip.speed:double =>=>=> RelationalSchema.Column>> spaceship.speed;
ClassDiagram.Attribut>> SpaceShip.GeneratedName:Captain =>=>=> RelationalSchema.Column>> spaceship.GeneratedName;
ClassDiagram.Attribut>> SpaceShip.GeneratedName:Dimensions =>=>=> RelationalSchema.Column>> spaceship.GeneratedName;
ClassDiagram.Attribut>> Area.id:Integer =>=>=> RelationalSchema.Column>> area.id PRIMARY KEY;
ClassDiagram.Attribut>> Area.name:String =>=>=> RelationalSchema.Column>> area.name;
ClassDiagram.Attribut>> Captain.firstname:String =>=>=> RelationalSchema.Column>> captain.firstname PRIMARY KEY;
ClassDiagram.Attribut>> Captain.lastname:String =>=>=> RelationalSchema.Column>> captain.lastname PRIMARY KEY;
ClassDiagram.Attribut>> Chaos.id:Long =>=>=> RelationalSchema.Column>> chaos.id PRIMARY KEY;
ClassDiagram.Attribut>> Chaos.size:Long =>=>=> RelationalSchema.Column>> chaos.size;
ClassDiagram.Attribut>> Chaos.name:String =>=>=> RelationalSchema.Column>> chaos.name;
ClassDiagram.Attribut>> Chaos.nickname:String =>=>=> RelationalSchema.Column>> chaos.nickname;
ClassDiagram.Attribut>> AllTables.tablename:String =>=>=> RelationalSchema.Column>> alltables.tablename PRIMARY KEY;
ClassDiagram.Attribut>> AllTables.daysold:String =>=>=> RelationalSchema.Column>> alltables.daysold;
ClassDiagram.Attribut>> Boat.id:Integer =>=>=> RelationalSchema.Column>> boat.id PRIMARY KEY;
ClassDiagram.Attribut>> Boat.size:int =>=>=> RelationalSchema.Column>> boat.size;
ClassDiagram.Attribut>> Boat.weight:int =>=>=> RelationalSchema.Column>> boat.weight;
ClassDiagram.Attribut>> B.id:int =>=>=> RelationalSchema.Column>> b.id PRIMARY KEY;
ClassDiagram.Attribut>> ClassA.id:int =>=>=> RelationalSchema.Column>> classa.id PRIMARY KEY;
ClassDiagram.Attribut>> A.id:A_PK =>=>=> RelationalSchema.Column>> a.id;
ClassDiagram.Attribut>> D.id:D_PK =>=>=> RelationalSchema.Column>> d.id;
ClassDiagram.Attribut>> Stamp.id:Long =>=>=> RelationalSchema.Column>> stamp.id PRIMARY KEY;
ClassDiagram.Attribut>> Stamp.country:String =>=>=> RelationalSchema.Column>> stamp.country;
ClassDiagram.Attribut>> Passport.id:Long =>=>=> RelationalSchema.Column>> passport.id PRIMARY KEY;
ClassDiagram.Attribut>> Passport.name:String =>=>=> RelationalSchema.Column>> passport.name;
ClassDiagram.Attribut>> ContactImpl.id:Integer =>=>=> RelationalSchema.Column>> contactimpl.id PRIMARY KEY;
ClassDiagram.Attribut>> ContactImpl.name:String =>=>=> RelationalSchema.Column>> contactimpl.name;
ClassDiagram.Attribut>> UserImpl.id:Integer =>=>=> RelationalSchema.Column>> userimpl.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.id:long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> A.id:String =>=>=> RelationalSchema.Column>> a.id PRIMARY KEY;
ClassDiagram.Attribut>> A.name:String =>=>=> RelationalSchema.Column>> a.name;
ClassDiagram.Attribut>> A.value:int =>=>=> RelationalSchema.Column>> a.value;
ClassDiagram.Attribut>> A.address:Set<AddressEntry> =>=>=> RelationalSchema.Column>> a.address;
ClassDiagram.Attribut>> Address.id:long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Bug.id:int =>=>=> RelationalSchema.Column>> bug.id PRIMARY KEY;
ClassDiagram.Attribut>> Bug.title:String =>=>=> RelationalSchema.Column>> bug.title;
ClassDiagram.Attribut>> Printer.id:Long =>=>=> RelationalSchema.Column>> printer.id PRIMARY KEY;
ClassDiagram.Attribut>> PrinterCable.id:Long =>=>=> RelationalSchema.Column>> printercable.id PRIMARY KEY;
ClassDiagram.Attribut>> PrinterCable.GeneratedName:Printer =>=>=> RelationalSchema.Column>> printercable.GeneratedName;
ClassDiagram.Attribut>> Category.id:int =>=>=> RelationalSchema.Column>> category.id PRIMARY KEY;
ClassDiagram.Attribut>> Category.title:String =>=>=> RelationalSchema.Column>> category.title;
ClassDiagram.Attribut>> Mouth.id:Integer =>=>=> RelationalSchema.Column>> mouth.id PRIMARY KEY;
ClassDiagram.Attribut>> Mouth.size:int =>=>=> RelationalSchema.Column>> mouth.size;
ClassDiagram.Attribut>> Tooth.id:Integer =>=>=> RelationalSchema.Column>> tooth.id PRIMARY KEY;
ClassDiagram.Attribut>> Tooth.type:String =>=>=> RelationalSchema.Column>> tooth.type;
ClassDiagram.Attribut>> Ferry.sea:String =>=>=> RelationalSchema.Column>> ferry.sea;
ClassDiagram.Attribut>> A320.javaembeddedversion:String =>=>=> RelationalSchema.Column>> a320.javaembeddedversion;
ClassDiagram.Attribut>> Contractor.hourlyrate:float =>=>=> RelationalSchema.Column>> contractor.hourlyrate;
ClassDiagram.Attribut>> Man.id:ManPk =>=>=> RelationalSchema.Column>> man.id PRIMARY KEY;
ClassDiagram.Attribut>> Man.carname:String =>=>=> RelationalSchema.Column>> man.carname;
ClassDiagram.Attribut>> Employer.id:Integer =>=>=> RelationalSchema.Column>> employer.id PRIMARY KEY;
ClassDiagram.Attribut>> KnownClient.id:Integer =>=>=> RelationalSchema.Column>> knownclient.id PRIMARY KEY;
ClassDiagram.Attribut>> KnownClient.name:String =>=>=> RelationalSchema.Column>> knownclient.name;
ClassDiagram.Attribut>> Permission.permission:String =>=>=> RelationalSchema.Column>> permission.permission PRIMARY KEY;
ClassDiagram.Attribut>> Permission.expiration:Date =>=>=> RelationalSchema.Column>> permission.expiration;
ClassDiagram.Attribut>> BuildingCompany.id:Long =>=>=> RelationalSchema.Column>> buildingcompany.id PRIMARY KEY;
ClassDiagram.Attribut>> BuildingCompany.foundedin:Date =>=>=> RelationalSchema.Column>> buildingcompany.foundedin;
ClassDiagram.Attribut>> Woman.id:WomanPk =>=>=> RelationalSchema.Column>> woman.id PRIMARY KEY;
ClassDiagram.Attribut>> Woman.carname:String =>=>=> RelationalSchema.Column>> woman.carname;
ClassDiagram.Attribut>> GroupWithSet.id:Integer =>=>=> RelationalSchema.Column>> groupwithset.id PRIMARY KEY;
ClassDiagram.Attribut>> Supplier.id:Integer =>=>=> RelationalSchema.Column>> supplier.id PRIMARY KEY;
ClassDiagram.Attribut>> Supplier.name:String =>=>=> RelationalSchema.Column>> supplier.name;
ClassDiagram.Attribut>> Cat.id:CatPk =>=>=> RelationalSchema.Column>> cat.id;
ClassDiagram.Attribut>> Cat.age:int =>=>=> RelationalSchema.Column>> cat.age;
ClassDiagram.Attribut>> Store.id:Integer =>=>=> RelationalSchema.Column>> store.id PRIMARY KEY;
ClassDiagram.Attribut>> Store.name:String =>=>=> RelationalSchema.Column>> store.name;
ClassDiagram.Attribut>> PhoneNumber.phnumber:int =>=>=> RelationalSchema.Column>> phonenumber.phnumber PRIMARY KEY;
ClassDiagram.Attribut>> InspectorPrefixes.prefixes:String =>=>=> RelationalSchema.Column>> inspectorprefixes.prefixes;
ClassDiagram.Attribut>> ProgramManager.id:int =>=>=> RelationalSchema.Column>> programmanager.id PRIMARY KEY;
ClassDiagram.Attribut>> Inspector._id:Long =>=>=> RelationalSchema.Column>> inspector._id PRIMARY KEY;
ClassDiagram.Attribut>> Inspector.name:String =>=>=> RelationalSchema.Column>> inspector.name;
ClassDiagram.Attribut>> Zone.id:Integer =>=>=> RelationalSchema.Column>> zone.id PRIMARY KEY;
ClassDiagram.Attribut>> Building.id:Long =>=>=> RelationalSchema.Column>> building.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.id:Integer =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.GeneratedName:ContactInfo =>=>=> RelationalSchema.Column>> employee.GeneratedName;
ClassDiagram.Attribut>> Employee.GeneratedName:JobInfo =>=>=> RelationalSchema.Column>> employee.GeneratedName;
ClassDiagram.Attribut>> Group.id:Integer =>=>=> RelationalSchema.Column>> group.id PRIMARY KEY;
ClassDiagram.Attribut>> City.id:Integer =>=>=> RelationalSchema.Column>> city.id PRIMARY KEY;
ClassDiagram.Attribut>> City.name:String =>=>=> RelationalSchema.Column>> city.name;
ClassDiagram.Attribut>> Friend.id:Integer =>=>=> RelationalSchema.Column>> friend.id PRIMARY KEY;
ClassDiagram.Attribut>> Friend.name:String =>=>=> RelationalSchema.Column>> friend.name;
ClassDiagram.Attribut>> Port.id:Long =>=>=> RelationalSchema.Column>> port.id PRIMARY KEY;
Many-To-One relationship from ClassDiagram.Class>>Membership  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>member;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Set<Membership>;
One-To-Many relationship from ClassDiagram.Class>>Group  to ClassDiagram.Class>>Set<Membership>;
One-To-Many relationship from ClassDiagram.Class>>Portal  to ClassDiagram.Class>>Set<Window>;
set<color>: screen_set<color>(screenID:screen [PK] #FK to screen,set<color>ID:set<color> [PK] #FK to set<color>);
Many-To-One relationship from ClassDiagram.Class>>TvOwner  to ClassDiagram.Class>>tv represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Customer3  to ClassDiagram.Class>>Set<Order>;
One-To-Many relationship from ClassDiagram.Class>>Customer2  to ClassDiagram.Class>>Set<Order>;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Set<Order>;
Many-To-One relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>last;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Set<SupportTickets>;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Country represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Customer4  to ClassDiagram.Class>>Set<Order>;
One-To-Many relationship from ClassDiagram.Class>>Customer5  to ClassDiagram.Class>>Set<Order>;
One-To-Many relationship from ClassDiagram.Class>>Card  to ClassDiagram.Class>>Set<CardField>;
One-To-Many relationship from ClassDiagram.Class>>Country  to ClassDiagram.Class>>List<State>;
Many-To-One relationship from ClassDiagram.Class>>StoreCustomer  to ClassDiagram.Class>>store represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>StoreCustomer  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Card  to ClassDiagram.Class>>Set<CardField>;
Many-To-One relationship from ClassDiagram.Class>>Card  to ClassDiagram.Class>>Car represented by ClassDiagram.Atrribute>>main;
Many-To-One relationship from ClassDiagram.Class>>BasketItems  to ClassDiagram.Class>>shoppingbaskets represented by ClassDiagram.Atrribute>>basketdatetime;
One-To-Many relationship from ClassDiagram.Class>>C  to ClassDiagram.Class>>List<B>;
Many-To-One relationship from ClassDiagram.Class>>Droitacces  to ClassDiagram.Class>>benefserv represented by ClassDiagram.Atrribute>>idpkbenef;
Many-To-One relationship from ClassDiagram.Class>>Benefserv  to ClassDiagram.Class>>service represented by ClassDiagram.Atrribute>>idpkser;
Many-To-One relationship from ClassDiagram.Class>>Acces  to ClassDiagram.Class>>droitacces represented by ClassDiagram.Atrribute>>idpkdracc;
One-To-Many relationship from ClassDiagram.Class>>A  to ClassDiagram.Class>>List<C>;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Set<StoreCustomer>;
One-To-Many relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>Set<StoreCustomer>;
Many-To-One relationship from ClassDiagram.Class>>CardField  to ClassDiagram.Class>>Car represented by ClassDiagram.Atrribute>>tmp;
Many-To-One relationship from ClassDiagram.Class>>ShoppingBaskets  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>customerid;
One-To-Many relationship from ClassDiagram.Class>>ShoppingBaskets  to ClassDiagram.Class>>java.util.Set;
One-To-Many relationship from ClassDiagram.Class>>Customers  to ClassDiagram.Class>>java.util.Set;
Many-To-One relationship from ClassDiagram.Class>>Player  to ClassDiagram.Class>>Team represented by ClassDiagram.Atrribute>>team;
One-To-Many relationship from ClassDiagram.Class>>SoccerTeam  to ClassDiagram.Class>>Set<Player>;
One-To-One relationship between ClassDiagram.Class>>SoccerTeam  to ClassDiagram.Class>>player represented by ClassDiagram.Atrribute>>onevone;
One-To-Many relationship from ClassDiagram.Class>>Topic  to ClassDiagram.Class>>Set<Narrative>;
One-To-Many relationship from ClassDiagram.Class>>Mother  to ClassDiagram.Class>>Set<Son>;
One-To-Many relationship from ClassDiagram.Class>>Father  to ClassDiagram.Class>>List<Son>;
Many-To-One relationship from ClassDiagram.Class>>Life  to ClassDiagram.Class>>cat represented by ClassDiagram.Atrribute>>owner;
Many-To-Many relationship between ClassDiagram.Class>>SysUserOrm  and ClassDiagram.Class>>orm: sys_groups_users(userid:SysUserOrm [PK] #FK to SysUserOrm,groupid:orm [PK] #FK to orm);
Many-To-One relationship from ClassDiagram.Class>>TwinkleToes  to ClassDiagram.Class>>bunny represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Bunny  to ClassDiagram.Class>>Set<PointyTooth>;
One-To-Many relationship from ClassDiagram.Class>>Bunny  to ClassDiagram.Class>>Set<TwinkleToes>;
Many-To-One relationship from ClassDiagram.Class>>PointyTooth  to ClassDiagram.Class>>bunny represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Bunny  to ClassDiagram.Class>>Set<PointyTooth>;
One-To-Many relationship from ClassDiagram.Class>>Bunny  to ClassDiagram.Class>>Set<TwinkleToes>;
Many-To-One relationship from ClassDiagram.Class>>TwinkleToes  to ClassDiagram.Class>>bunny represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>PointyTooth  to ClassDiagram.Class>>bunny represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Truck  to ClassDiagram.Class>>professionalagreement represented by ClassDiagram.Atrribute>>agreement;
Many-To-One relationship from ClassDiagram.Class>>Vehicule  to ClassDiagram.Class>>conductor represented by ClassDiagram.Atrribute>>current;
Many-To-One relationship from ClassDiagram.Class>>Vehicule  to ClassDiagram.Class>>conductor represented by ClassDiagram.Atrribute>>previous;
One-To-Many relationship from ClassDiagram.Class>>Frame  to ClassDiagram.Class>>Set<Lens>;
Many-To-One relationship from ClassDiagram.Class>>Deal  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>userid;
Many-To-One relationship from ClassDiagram.Class>>Deal  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>userid;
One-To-Many relationship from ClassDiagram.Class>>Lotz  to ClassDiagram.Class>>List<Carz>;
One-To-Many relationship from ClassDiagram.Class>>ForestType  to ClassDiagram.Class>>Set<TreeType>;
One-To-One relationship between ClassDiagram.Class>>ForestType  to ClassDiagram.Class>>biggestforest represented by ClassDiagram.Atrribute>>biggestrepresentative;
Many-To-One relationship from ClassDiagram.Class>>WarehouseItem  to ClassDiagram.Class>>Item represented by ClassDiagram.Atrribute>>vendor_id;
One-To-One relationship between ClassDiagram.Class>>BiggestForest  to ClassDiagram.Class>>foresttype represented by ClassDiagram.Atrribute>>type;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Set<OrderLine>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Set<DistrictUser>;
Many-To-One relationship from ClassDiagram.Class>>Child  to ClassDiagram.Class>>Parent represented by ClassDiagram.Atrribute>>ismale;
Many-To-One relationship from ClassDiagram.Class>>Node  to ClassDiagram.Class>>Node represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>Carz  to ClassDiagram.Class>>lotz represented by ClassDiagram.Atrribute>>loc_code;
Many-To-One relationship from ClassDiagram.Class>>DistrictUser  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>ctvusers_key;
Many-To-One relationship from ClassDiagram.Class>>Lens  to ClassDiagram.Class>>frame represented by ClassDiagram.Atrribute>>name;
Many-To-One relationship from ClassDiagram.Class>>Car  to ClassDiagram.Class>>Parent represented by ClassDiagram.Atrribute>>owner;
One-To-One relationship between ClassDiagram.Class>>Administration  to ClassDiagram.Class>>bustrip represented by ClassDiagram.Atrribute>>default;
One-To-Many relationship from ClassDiagram.Class>>Team  to ClassDiagram.Class>>Set<Player>;
set<role>: user_set<role>(userID:user [PK] #FK to user,set<role>ID:set<role> [PK] #FK to set<role>);
One-To-Many relationship from ClassDiagram.Class>>Course7  to ClassDiagram.Class>>List<Student>;
One-To-Many relationship from ClassDiagram.Class>>Course3  to ClassDiagram.Class>>List<Student>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<User>;
One-To-Many relationship from ClassDiagram.Class>>Course6  to ClassDiagram.Class>>List<Student>;
One-To-Many relationship from ClassDiagram.Class>>Course2  to ClassDiagram.Class>>List<Student>;
One-To-Many relationship from ClassDiagram.Class>>Course4  to ClassDiagram.Class>>List<Student>;
One-To-Many relationship from ClassDiagram.Class>>Course8  to ClassDiagram.Class>>List<Student>;
Student: course5_Student(course5ID:course5 [PK] #FK to course5,StudentID:Student [PK] #FK to Student);
One-To-Many relationship from ClassDiagram.Class>>Course1  to ClassDiagram.Class>>List<Student>;
One-To-Many relationship from ClassDiagram.Class>>Troop  to ClassDiagram.Class>>Set<Soldier>;
One-To-Many relationship from ClassDiagram.Class>>Parent  to ClassDiagram.Class>>Set<Child>;
One-To-Many relationship from ClassDiagram.Class>>Organisation  to ClassDiagram.Class>>Set<OrganisationUser>;
One-To-Many relationship from ClassDiagram.Class>>City  to ClassDiagram.Class>>List<Street>;
One-To-Many relationship from ClassDiagram.Class>>City  to ClassDiagram.Class>>List<Street>;
Many-To-One relationship from ClassDiagram.Class>>Politician  to ClassDiagram.Class>>Part represented by ClassDiagram.Atrribute>>party;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>List<OrderItem>;
Many-To-One relationship from ClassDiagram.Class>>Child  to ClassDiagram.Class>>Parent represented by ClassDiagram.Atrribute>>ismale;
One-To-Many relationship from ClassDiagram.Class>>Trainer  to ClassDiagram.Class>>Set<Tiger>;
One-To-Many relationship from ClassDiagram.Class>>Trainer  to ClassDiagram.Class>>Set<Monkey>;
Many-To-One relationship from ClassDiagram.Class>>Model  to ClassDiagram.Class>>manufacturer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>PoliticalParty  to ClassDiagram.Class>>Set<Politician>;
One-To-Many relationship from ClassDiagram.Class>>Folder  to ClassDiagram.Class>>Set<File>;
Many-To-One relationship from ClassDiagram.Class>>File  to ClassDiagram.Class>>Folder represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>SymbolicLink  to ClassDiagram.Class>>file represented by ClassDiagram.Atrribute>>target;
One-To-Many relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>Set<Client>;
Many-To-One relationship from ClassDiagram.Class>>ProgramExecution  to ClassDiagram.Class>>file represented by ClassDiagram.Atrribute>>applieson;
Many-To-One relationship from ClassDiagram.Class>>File  to ClassDiagram.Class>>Folder represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>SymbolicLink  to ClassDiagram.Class>>file represented by ClassDiagram.Atrribute>>target;
One-To-Many relationship from ClassDiagram.Class>>Folder  to ClassDiagram.Class>>Set<File>;
One-To-One relationship between ClassDiagram.Class>>Alarm  to ClassDiagram.Class>>orm represented by ClassDiagram.Atrribute>>eventinfo;
Many-To-One relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>Account represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>File  to ClassDiagram.Class>>Folder represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>Folder  to ClassDiagram.Class>>Set<File>;
Many-To-One relationship from ClassDiagram.Class>>SymbolicLink  to ClassDiagram.Class>>file represented by ClassDiagram.Atrribute>>target;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>Collection<Stay>;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>Collection<Stay>;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>Collection<Stay>;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>List<Stay>;
One-To-Many relationship from ClassDiagram.Class>>Branch  to ClassDiagram.Class>>Set<Leaf>;
Many-To-One relationship from ClassDiagram.Class>>Leaf  to ClassDiagram.Class>>branch represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>AddressBook  to ClassDiagram.Class>>Map<AddressEntryPk,AddressEntry>;
One-To-Many relationship from ClassDiagram.Class>>AddressBook  to ClassDiagram.Class>>Map<String,AddressEntry>;
One-To-Many relationship from ClassDiagram.Class>>AddressBook  to ClassDiagram.Class>>Map<AlphabeticalDirectory,AddressEntry>;
One-To-Many relationship from ClassDiagram.Class>>Wardrobe  to ClassDiagram.Class>>List<Drawer>;
sortedmap<string,trainee>: training_sortedmap<string,trainee>(trainingID:training [PK] #FK to training,sortedmap<string,trainee>ID:sortedmap<string,trainee> [PK] #FK to sortedmap<string,trainee>);
One-To-Many relationship from ClassDiagram.Class>>Software  to ClassDiagram.Class>>Map<String,Version>;
map<string,gas>: atmosphere_map<string,gas>(atmosphereID:atmosphere [PK] #FK to atmosphere,map<string,gas>ID:map<string,gas> [PK] #FK to map<string,gas>);
Many-To-Many relationship between ClassDiagram.Class>>Atmosphere  and ClassDiagram.Class>>map<gaskey,gas>: atmosphere_map<string,gas>(atmosphereID:atmosphere [PK] #FK to atmosphere,map<string,gas>ID:map<string,gas> [PK] #FK to map<string,gas>);gas_per_key(Atmosphere_ID:Atmosphere [PK] #FK to Atmosphere,map<gaskey,gas>_ID:map<gaskey,gas> [PK] #FK to map<gaskey,gas>);
Many-To-Many relationship between ClassDiagram.Class>>Atmosphere  and ClassDiagram.Class>>map<string,gas>: atmosphere_map<string,gas>(atmosphereID:atmosphere [PK] #FK to atmosphere,map<string,gas>ID:map<string,gas> [PK] #FK to map<string,gas>);gas_per_key(Atmosphere_ID:Atmosphere [PK] #FK to Atmosphere,map<gaskey,gas>_ID:map<gaskey,gas> [PK] #FK to map<gaskey,gas>);atm_gas_def(Atmosphere_ID:Atmosphere [PK] #FK to Atmosphere,map<string,gas>_ID:map<string,gas> [PK] #FK to map<string,gas>);
Many-To-Many relationship between ClassDiagram.Class>>Atmosphere  and ClassDiagram.Class>>map<string,gas>: atmosphere_map<string,gas>(atmosphereID:atmosphere [PK] #FK to atmosphere,map<string,gas>ID:map<string,gas> [PK] #FK to map<string,gas>);gas_per_key(Atmosphere_ID:Atmosphere [PK] #FK to Atmosphere,map<gaskey,gas>_ID:map<gaskey,gas> [PK] #FK to map<gaskey,gas>);atm_gas_def(Atmosphere_ID:Atmosphere [PK] #FK to Atmosphere,map<string,gas>_ID:map<string,gas> [PK] #FK to map<string,gas>);atm_gas_defleg(Atmosphere_ID:Atmosphere [PK] #FK to Atmosphere,map<string,gas>_ID:map<string,gas> [PK] #FK to map<string,gas>);
Many-To-Many relationship between ClassDiagram.Class>>Atmosphere  and ClassDiagram.Class>>map<gaskey,gas>: atmosphere_map<string,gas>(atmosphereID:atmosphere [PK] #FK to atmosphere,map<string,gas>ID:map<string,gas> [PK] #FK to map<string,gas>);gas_per_key(Atmosphere_ID:Atmosphere [PK] #FK to Atmosphere,map<gaskey,gas>_ID:map<gaskey,gas> [PK] #FK to map<gaskey,gas>);atm_gas_def(Atmosphere_ID:Atmosphere [PK] #FK to Atmosphere,map<string,gas>_ID:map<string,gas> [PK] #FK to map<string,gas>);atm_gas_defleg(Atmosphere_ID:Atmosphere [PK] #FK to Atmosphere,map<string,gas>_ID:map<string,gas> [PK] #FK to map<string,gas>);gas_p_key_def(Atmosphere_ID:Atmosphere [PK] #FK to Atmosphere,map<gaskey,gas>_ID:map<gaskey,gas> [PK] #FK to map<gaskey,gas>);
Many-To-Many relationship between ClassDiagram.Class>>PressReleaseAgency  and ClassDiagram.Class>>map<integer,news>: pressreleaseagency_id(pressreleaseagency_id:PressReleaseAgency [PK] #FK to PressReleaseAgency,news_id:map<integer,news> [PK] #FK to map<integer,news>);
Many-To-One relationship from ClassDiagram.Class>>AddressEntry  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>book;
Many-To-One relationship from ClassDiagram.Class>>AddressEntry  to ClassDiagram.Class>>alphabeticaldirectory represented by ClassDiagram.Atrribute>>directory;
One-To-Many relationship from ClassDiagram.Class>>GenerationUser  to ClassDiagram.Class>>Map<Generation,GenerationGroup>;
map<string,news>: newspaper_map<string,news>(newspaperID:newspaper [PK] #FK to newspaper,map<string,news>ID:map<string,news> [PK] #FK to map<string,news>);
One-To-Many relationship from ClassDiagram.Class>>Painter  to ClassDiagram.Class>>Map<String,Painting>;
One-To-Many relationship from ClassDiagram.Class>>Drawer  to ClassDiagram.Class>>List<Dress>;
Many-To-One relationship from ClassDiagram.Class>>Discount  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>owner;
Many-To-One relationship from ClassDiagram.Class>>FoodItem  to ClassDiagram.Class>>menu represented by ClassDiagram.Atrribute>>order_nbr;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>product_idnf;
One-To-Many relationship from ClassDiagram.Class>>Contest  to ClassDiagram.Class>>Competitor;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>SortedSet<Ticket>;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Collection;
One-To-One relationship between ClassDiagram.Class>>OwnerAddress  to ClassDiagram.Class>>Owner represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>ShowDescription  to ClassDiagram.Class>>show represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Party  to ClassDiagram.Class>>Part represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Hardware  to ClassDiagram.Class>>hardware represented by ClassDiagram.Atrribute>>parent;
One-To-One relationship between ClassDiagram.Class>>Trousers  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>zip;
One-To-One relationship between ClassDiagram.Class>>Owner  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>address;
One-To-One relationship between ClassDiagram.Class>>Show  to ClassDiagram.Class>>showdescription represented by ClassDiagram.Atrribute>>description;
One-To-One relationship between ClassDiagram.Class>>Computer  to ClassDiagram.Class>>serialnumber represented by ClassDiagram.Atrribute>>serial;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Address  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>TrousersZip  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>PartyAffiliate  to ClassDiagram.Class>>Part represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Card  to ClassDiagram.Class>>deck represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Deck  to ClassDiagram.Class>>Set<Card>;
Many-To-One relationship from ClassDiagram.Class>>WarehouseItem  to ClassDiagram.Class>>Item represented by ClassDiagram.Atrribute>>vendor_id;
Many-To-Many relationship between ClassDiagram.Class>>House  and ClassDiagram.Class>>set<inhabitant>: address(address:House [PK] #FK to House,name:set<inhabitant> [PK] #FK to set<inhabitant>);
One-To-Many relationship from ClassDiagram.Class>>Luggage  to ClassDiagram.Class>>Set<Clothes>;
One-To-Many relationship from ClassDiagram.Class>>Rambler  to ClassDiagram.Class>>Set<Bag>;
Many-To-One relationship from ClassDiagram.Class>>Bag  to ClassDiagram.Class>>rambler represented by ClassDiagram.Atrribute>>fld_name;
Many-To-One relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>internetprovider represented by ClassDiagram.Atrribute>>employer;
One-To-One relationship between ClassDiagram.Class>>Passport  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>owner;
One-To-Many relationship from ClassDiagram.Class>>Manufacturer  to ClassDiagram.Class>>Set<Model>;
One-To-Many relationship from ClassDiagram.Class>>PrimeMinister  to ClassDiagram.Class>>Set<Government>;
set<cloudtype>: sky_set<cloudtype>(skyID:sky [PK] #FK to sky,set<cloudtype>ID:set<cloudtype> [PK] #FK to set<cloudtype>);
Many-To-One relationship from ClassDiagram.Class>>Sky  to ClassDiagram.Class>>cloudtype represented by ClassDiagram.Atrribute>>maincloud;
One-To-One relationship between ClassDiagram.Class>>MedicalHistory  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
Many-To-One relationship from ClassDiagram.Class>>FinancialHistory  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
One-To-One relationship between ClassDiagram.Class>>MedicalHistory  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
Many-To-One relationship from ClassDiagram.Class>>FinancialHistory  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
Many-To-One relationship from ClassDiagram.Class>>Dependent  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>emp;
One-To-One relationship between ClassDiagram.Class>>Bar  to ClassDiagram.Class>>foo represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Foo  to ClassDiagram.Class>>Bar represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderLine  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderLine  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Set<OrderLine>;
One-To-Many relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Set<Dependent>;
Many-To-One relationship from ClassDiagram.Class>>Dependent  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>firstname;
Many-To-One relationship from ClassDiagram.Class>>Dependent  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>firstname;
Many-To-One relationship from ClassDiagram.Class>>CustomerInventory  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CustomerInventory  to ClassDiagram.Class>>Item represented by ClassDiagram.Atrribute>>vehicle;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>List<CustomerInventory>;
One-To-One relationship between ClassDiagram.Class>>ExclusiveDependent  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>emp;
Many-To-One relationship from ClassDiagram.Class>>Dependent  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>//@joincolumn(name;
Many-To-One relationship from ClassDiagram.Class>>Dependent  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>emp;
Many-To-One relationship from ClassDiagram.Class>>CustomerInventory  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CustomerInventory  to ClassDiagram.Class>>Item represented by ClassDiagram.Atrribute>>vehicle;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>List<CustomerInventory>;
Many-To-One relationship from ClassDiagram.Class>>Dependent  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>MedicalHistory  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
One-To-One relationship between ClassDiagram.Class>>MedicalHistory  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
One-To-One relationship between ClassDiagram.Class>>MedicalHistory  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
Many-To-One relationship from ClassDiagram.Class>>Dependent  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>firstname;
Many-To-One relationship from ClassDiagram.Class>>Dependent  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>emp;
Many-To-One relationship from ClassDiagram.Class>>Employer  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>MedicalHistory  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
One-To-One relationship between ClassDiagram.Class>>MedicalHistory  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
One-To-One relationship between ClassDiagram.Class>>MedicalHistory  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>patient;
Many-To-One relationship from ClassDiagram.Class>>Citizen  to ClassDiagram.Class>>state represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>NaturalIdOnManyToOne  to ClassDiagram.Class>>citizen represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Chaos  to ClassDiagram.Class>>Set<CasimirParticle>;
Many-To-Many relationship between ClassDiagram.Class>>Passport  and ClassDiagram.Class>>collection<stamp>: passport_stamp(Passport_ID:Passport [PK] #FK to Passport,collection<stamp>_ID:collection<stamp> [PK] #FK to collection<stamp>);
Many-To-Many relationship between ClassDiagram.Class>>Passport  and ClassDiagram.Class>>collection<stamp>: passport_stamp(Passport_ID:Passport [PK] #FK to Passport,collection<stamp>_ID:collection<stamp> [PK] #FK to collection<stamp>);passport_visastamp(Passport_ID:Passport [PK] #FK to Passport,collection<stamp>_ID:collection<stamp> [PK] #FK to collection<stamp>);
One-To-Many relationship from ClassDiagram.Class>>UserImpl  to ClassDiagram.Class>>Collection<Contact>;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>Set<Address>;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Bug  and ClassDiagram.Class>>Category: `bug_category`(Bug_ID:Bug [PK] #FK to Bug,Category_ID:Category [PK] #FK to Category);
One-To-Many relationship from ClassDiagram.Class>>Mouth  to ClassDiagram.Class>>Collection<Tooth>;
Many-To-One relationship from ClassDiagram.Class>>Tooth  to ClassDiagram.Class>>tooth represented by ClassDiagram.Atrribute>>leftneighbour;
Many-To-One relationship from ClassDiagram.Class>>Tooth  to ClassDiagram.Class>>tooth represented by ClassDiagram.Atrribute>>rightneighbour;
Many-To-One relationship from ClassDiagram.Class>>Tooth  to ClassDiagram.Class>>mouth represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Employer  and ClassDiagram.Class>>collection: employer_employee(emper_id:Employer [PK] #FK to Employer,empee_id:collection [PK] #FK to collection);
Many-To-Many relationship between ClassDiagram.Class>>Employer  and ClassDiagram.Class>>list: employer_employee(emper_id:Employer [PK] #FK to Employer,empee_id:collection [PK] #FK to collection);employer_contractor(employer_id:Employer [PK] #FK to Employer,contractor_id:list [PK] #FK to list);
Many-To-Many relationship between ClassDiagram.Class>>Woman  and ClassDiagram.Class>>set<man>: man_woman(womanlastname:Woman [PK] #FK to Woman,maniselder:set<man> [PK] #FK to set<man>);
null: man_woman(womanlastname:Woman [PK] #FK to Woman,maniselder:set<man> [PK] #FK to set<man>);
set<permission>: groupwithset_set<permission>(groupwithsetID:groupwithset [PK] #FK to groupwithset,set<permission>ID:set<permission> [PK] #FK to set<permission>);
Many-To-Many relationship between ClassDiagram.Class>>Cat  and ClassDiagram.Class>>set<woman>: tt(Cat_ID:Cat [PK] #FK to Cat,set<woman>_ID:set<woman> [PK] #FK to set<woman>);
set<knownclient>: store_set<knownclient>(storeID:store [PK] #FK to store,set<knownclient>ID:set<knownclient> [PK] #FK to set<knownclient>);
Many-To-Many relationship between ClassDiagram.Class>>Store  and ClassDiagram.Class>>set<supplier>: store_set<knownclient>(storeID:store [PK] #FK to store,set<knownclient>ID:set<knownclient> [PK] #FK to set<knownclient>);storesupplier(store:Store [PK] #FK to Store,supplier:set<supplier> [PK] #FK to set<supplier>);
set<city>: store_set<knownclient>(storeID:store [PK] #FK to store,set<knownclient>ID:set<knownclient> [PK] #FK to set<knownclient>);storesupplier(store:Store [PK] #FK to Store,supplier:set<supplier> [PK] #FK to set<supplier>);store_set<city>(storeID:store [PK] #FK to store,set<city>ID:set<city> [PK] #FK to set<city>);
Many-To-Many relationship between ClassDiagram.Class>>InspectorPrefixes  and ClassDiagram.Class>>list<zone>: deserted_area(inspector_name:InspectorPrefixes [PK] #FK to InspectorPrefixes,area_id:list<zone> [PK] #FK to list<zone>);
Many-To-Many relationship between ClassDiagram.Class>>InspectorPrefixes  and ClassDiagram.Class>>list<zone>: deserted_area(inspector_name:InspectorPrefixes [PK] #FK to InspectorPrefixes,area_id:list<zone> [PK] #FK to list<zone>);inspector_prefixes_areas(inspector_id:InspectorPrefixes [PK] #FK to InspectorPrefixes,area_id:list<zone> [PK] #FK to list<zone>);
One-To-Many relationship from ClassDiagram.Class>>ProgramManager  to ClassDiagram.Class>>Collection<Employee>;
Many-To-One relationship from ClassDiagram.Class>>Building  to ClassDiagram.Class>>buildingcompany represented by ClassDiagram.Atrribute>>name;
collection<permission>: group_collection<permission>(groupID:group [PK] #FK to group,collection<permission>ID:collection<permission> [PK] #FK to collection<permission>);
Many-To-Many relationship between ClassDiagram.Class>>Friend  and ClassDiagram.Class>>set<friend>: friend2friend(from_fr:Friend [PK] #FK to Friend,to_fr:set<friend> [PK] #FK to set<friend>);
One-To-Many relationship from ClassDiagram.Class>>Port  to ClassDiagram.Class>>Set<Boat>;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Child  Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Plane   Descriminator>>planetype: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Drill   Descriminator>>DRILL_TYPE: String ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Car  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>B  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Vehicule  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Person  Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>File  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Vegetable  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Customer  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Clothing  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>File  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Pool  Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Person  Inheritance based on JOINED strategy (DISTINCTION): ROOT>>EventInformation  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Asset  Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>File  ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Machine  ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Component  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Hardware   Descriminator>>DeviceType: String ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>AImpl  SubClass>>user SubClass>>organisationuser SubClass>>client SubClass>>wealthyperson Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Boat  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>B  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>ClassA  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Inspector  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Employee  ;
