ClassDiagram.Class>> DataElement =>=>=> RelationalSchema.Table>> dataelement;
ClassDiagram.Class>> Assertion =>=>=> RelationalSchema.Table>> assertion;
ClassDiagram.Class>> LanguageIdentification =>=>=> RelationalSchema.Table>> languageidentification;
ClassDiagram.Class>> DefinitionContext =>=>=> RelationalSchema.Table>> definitioncontext;
ClassDiagram.Class>> ConceptSystem =>=>=> RelationalSchema.Table>> conceptsystem;
ClassDiagram.Class>> ItemLink =>=>=> RelationalSchema.Table>> itemlink;
ClassDiagram.Class>> Session =>=>=> RelationalSchema.Table>> session;
ClassDiagram.Class>> Vote =>=>=> RelationalSchema.Table>> vote;
ClassDiagram.Class>> IndexElement =>=>=> RelationalSchema.Table>> indexelement;
ClassDiagram.Class>> UserGroup =>=>=> RelationalSchema.Table>> usergroup;
ClassDiagram.Class>> Document =>=>=> RelationalSchema.Table>> document;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> DesignationContext =>=>=> RelationalSchema.Table>> designationcontext;
ClassDiagram.Class>> LinkEnd =>=>=> RelationalSchema.Table>> linkend;
ClassDiagram.Class>> Characteristic =>=>=> RelationalSchema.Table>> characteristic;
ClassDiagram.Class>> ValueDomain =>=>=> RelationalSchema.Table>> valuedomain;
ClassDiagram.Class>> Link =>=>=> RelationalSchema.Table>> link;
ClassDiagram.Class>> Dimensionality =>=>=> RelationalSchema.Table>> dimensionality;
ClassDiagram.Class>> ValueMeaning =>=>=> RelationalSchema.Table>> valuemeaning;
ClassDiagram.Class>> Namespace =>=>=> RelationalSchema.Table>> namespace;
ClassDiagram.Class>> ConceptualDomain =>=>=> RelationalSchema.Table>> conceptualdomain;
ClassDiagram.Class>> PermissibleValue =>=>=> RelationalSchema.Table>> permissiblevalue;
ClassDiagram.Class>> Context =>=>=> RelationalSchema.Table>> context;
ClassDiagram.Class>> ObjectClass =>=>=> RelationalSchema.Table>> objectclass;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> UnitOfMeasure =>=>=> RelationalSchema.Table>> unitofmeasure;
ClassDiagram.Class>> Designation =>=>=> RelationalSchema.Table>> designation;
ClassDiagram.Class>> Classification =>=>=> RelationalSchema.Table>> classification;
ClassDiagram.Class>> ScopedIdentifier =>=>=> RelationalSchema.Table>> scopedidentifier;
ClassDiagram.Class>> Definition =>=>=> RelationalSchema.Table>> definition;
ClassDiagram.Class>> Concept =>=>=> RelationalSchema.Table>> concept;
ClassDiagram.Class>> Slot =>=>=> RelationalSchema.Table>> slot;
ClassDiagram.Class>> Relation =>=>=> RelationalSchema.Table>> relation;
ClassDiagram.Class>> RelationRole =>=>=> RelationalSchema.Table>> relationrole;
ClassDiagram.Class>> AssertionEnd =>=>=> RelationalSchema.Table>> assertionend;
ClassDiagram.Class>> DataElementConcept =>=>=> RelationalSchema.Table>> dataelementconcept;
ClassDiagram.Class>> DataType =>=>=> RelationalSchema.Table>> datatype;
ClassDiagram.Class>> ReferenceDocument =>=>=> RelationalSchema.Table>> referencedocument;
ClassDiagram.Class>> AbstractEntity =>=>=> RelationalSchema.Table>> abstractentity;
ClassDiagram.Attribut>> DataElement.precision:Integer =>=>=> RelationalSchema.Column>> dataelement.precision;
ClassDiagram.Attribut>> Assertion.formula:String =>=>=> RelationalSchema.Column>> assertion.formula;
ClassDiagram.Attribut>> LanguageIdentification.en_us:String =>=>=> RelationalSchema.Column>> languageidentification.en_us;
ClassDiagram.Attribut>> LanguageIdentification.languageidentifier:String =>=>=> RelationalSchema.Column>> languageidentification.languageidentifier;
ClassDiagram.Attribut>> DefinitionContext.id:Long =>=>=> RelationalSchema.Column>> definitioncontext.id PRIMARY KEY;
ClassDiagram.Attribut>> ItemLink.tag_history:String =>=>=> RelationalSchema.Column>> itemlink.tag_history;
ClassDiagram.Attribut>> ItemLink.tag_favourites:String =>=>=> RelationalSchema.Column>> itemlink.tag_favourites;
ClassDiagram.Attribut>> ItemLink.tag_update:String =>=>=> RelationalSchema.Column>> itemlink.tag_update;
ClassDiagram.Attribut>> ItemLink.id:Long =>=>=> RelationalSchema.Column>> itemlink.id PRIMARY KEY;
ClassDiagram.Attribut>> ItemLink.target:String =>=>=> RelationalSchema.Column>> itemlink.target;
ClassDiagram.Attribut>> ItemLink.created:Date =>=>=> RelationalSchema.Column>> itemlink.created;
ClassDiagram.Attribut>> ItemLink.tag:String =>=>=> RelationalSchema.Column>> itemlink.tag;
ClassDiagram.Attribut>> Session.prime:BigInteger =>=>=> RelationalSchema.Column>> session.prime;
ClassDiagram.Attribut>> Session.max:BigInteger =>=>=> RelationalSchema.Column>> session.max;
ClassDiagram.Attribut>> Session.current_session:ThreadLocal<Session> =>=>=> RelationalSchema.Column>> session.current_session;
ClassDiagram.Attribut>> Session.id:Long =>=>=> RelationalSchema.Column>> session.id PRIMARY KEY;
ClassDiagram.Attribut>> Session.publicid:String =>=>=> RelationalSchema.Column>> session.publicid;
ClassDiagram.Attribut>> Vote.rater:String =>=>=> RelationalSchema.Column>> vote.rater PRIMARY KEY;
ClassDiagram.Attribut>> Vote.target:String =>=>=> RelationalSchema.Column>> vote.target PRIMARY KEY;
ClassDiagram.Attribut>> Vote.value:int =>=>=> RelationalSchema.Column>> vote.value;
ClassDiagram.Attribut>> IndexElement.remove_all:String =>=>=> RelationalSchema.Column>> indexelement.remove_all;
ClassDiagram.Attribut>> IndexElement.remove_by_element:String =>=>=> RelationalSchema.Column>> indexelement.remove_by_element;
ClassDiagram.Attribut>> IndexElement.token:String =>=>=> RelationalSchema.Column>> indexelement.token PRIMARY KEY;
ClassDiagram.Attribut>> IndexElement.element:String =>=>=> RelationalSchema.Column>> indexelement.element PRIMARY KEY;
ClassDiagram.Attribut>> IndexElement.type:String =>=>=> RelationalSchema.Column>> indexelement.type PRIMARY KEY;
ClassDiagram.Attribut>> IndexElement.target:String =>=>=> RelationalSchema.Column>> indexelement.target;
ClassDiagram.Attribut>> Document.id:Long =>=>=> RelationalSchema.Column>> document.id PRIMARY KEY;
ClassDiagram.Attribut>> Document.name:String =>=>=> RelationalSchema.Column>> document.name;
ClassDiagram.Attribut>> Document.type:String =>=>=> RelationalSchema.Column>> document.type;
ClassDiagram.Attribut>> Document.content:byte =>=>=> RelationalSchema.Column>> document.content;
ClassDiagram.Attribut>> User.identifier:String =>=>=> RelationalSchema.Column>> user.identifier;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.fullname:String =>=>=> RelationalSchema.Column>> user.fullname;
ClassDiagram.Attribut>> User.passwordhash:String =>=>=> RelationalSchema.Column>> user.passwordhash;
ClassDiagram.Attribut>> DesignationContext.GeneratedName:Designation =>=>=> RelationalSchema.Column>> designationcontext.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> DesignationContext.GeneratedName:Context =>=>=> RelationalSchema.Column>> designationcontext.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> ValueDomain.maximumcharacterquantity:Integer =>=>=> RelationalSchema.Column>> valuedomain.maximumcharacterquantity;
ClassDiagram.Attribut>> ValueDomain.format:String =>=>=> RelationalSchema.Column>> valuedomain.format;
ClassDiagram.Attribut>> Dimensionality.coordinateindicator:boolean =>=>=> RelationalSchema.Column>> dimensionality.coordinateindicator;
ClassDiagram.Attribut>> ValueMeaning.begin:Date =>=>=> RelationalSchema.Column>> valuemeaning.begin;
ClassDiagram.Attribut>> ValueMeaning.end:Date =>=>=> RelationalSchema.Column>> valuemeaning.end;
ClassDiagram.Attribut>> Namespace.data:String =>=>=> RelationalSchema.Column>> namespace.data;
ClassDiagram.Attribut>> Namespace.//naming_authorityonenameperitem:Boolean =>=>=> RelationalSchema.Column>> namespace.//naming_authorityonenameperitem;
ClassDiagram.Attribut>> Namespace.oneitempername:Boolean =>=>=> RelationalSchema.Column>> namespace.oneitempername;
ClassDiagram.Attribut>> Namespace.mandatorynamingconvention:Boolean =>=>=> RelationalSchema.Column>> namespace.mandatorynamingconvention;
ClassDiagram.Attribut>> Namespace.shorthandprefix:String =>=>=> RelationalSchema.Column>> namespace.shorthandprefix;
ClassDiagram.Attribut>> Namespace.namespaceschemereference:String =>=>=> RelationalSchema.Column>> namespace.namespaceschemereference;
ClassDiagram.Attribut>> ConceptualDomain.description:String =>=>=> RelationalSchema.Column>> conceptualdomain.description;
ClassDiagram.Attribut>> PermissibleValue.permittedvalue:String =>=>=> RelationalSchema.Column>> permissiblevalue.permittedvalue;
ClassDiagram.Attribut>> PermissibleValue.begin:Date =>=>=> RelationalSchema.Column>> permissiblevalue.begin;
ClassDiagram.Attribut>> PermissibleValue.end:Date =>=>=> RelationalSchema.Column>> permissiblevalue.end;
ClassDiagram.Attribut>> Context.log:Logger =>=>=> RelationalSchema.Column>> context.log;
ClassDiagram.Attribut>> Context.mdr:String =>=>=> RelationalSchema.Column>> context.mdr;
ClassDiagram.Attribut>> Item.log:Logger =>=>=> RelationalSchema.Column>> item.log;
ClassDiagram.Attribut>> Designation.id:Long =>=>=> RelationalSchema.Column>> designation.id PRIMARY KEY;
ClassDiagram.Attribut>> Designation.sign:String =>=>=> RelationalSchema.Column>> designation.sign;
ClassDiagram.Attribut>> Classification.id:Long =>=>=> RelationalSchema.Column>> classification.id PRIMARY KEY;
ClassDiagram.Attribut>> ScopedIdentifier.id:Long =>=>=> RelationalSchema.Column>> scopedidentifier.id PRIMARY KEY;
ClassDiagram.Attribut>> ScopedIdentifier.identifier:String =>=>=> RelationalSchema.Column>> scopedidentifier.identifier;
ClassDiagram.Attribut>> ScopedIdentifier.fullexpansion:String =>=>=> RelationalSchema.Column>> scopedidentifier.fullexpansion;
ClassDiagram.Attribut>> ScopedIdentifier.shorthandexpansion:String =>=>=> RelationalSchema.Column>> scopedidentifier.shorthandexpansion;
ClassDiagram.Attribut>> Definition.id:Long =>=>=> RelationalSchema.Column>> definition.id PRIMARY KEY;
ClassDiagram.Attribut>> Definition.text:String =>=>=> RelationalSchema.Column>> definition.text;
ClassDiagram.Attribut>> Slot.id:Long =>=>=> RelationalSchema.Column>> slot.id PRIMARY KEY;
ClassDiagram.Attribut>> Slot.name:String =>=>=> RelationalSchema.Column>> slot.name;
ClassDiagram.Attribut>> Slot.type:String =>=>=> RelationalSchema.Column>> slot.type;
ClassDiagram.Attribut>> Slot.value:String =>=>=> RelationalSchema.Column>> slot.value;
ClassDiagram.Attribut>> AssertionEnd.id:Long =>=>=> RelationalSchema.Column>> assertionend.id PRIMARY KEY;
ClassDiagram.Attribut>> DataType.name:String =>=>=> RelationalSchema.Column>> datatype.name;
ClassDiagram.Attribut>> DataType.description:String =>=>=> RelationalSchema.Column>> datatype.description;
ClassDiagram.Attribut>> DataType.schemereference:String =>=>=> RelationalSchema.Column>> datatype.schemereference;
ClassDiagram.Attribut>> ReferenceDocument.identifier:String =>=>=> RelationalSchema.Column>> referencedocument.identifier;
ClassDiagram.Attribut>> ReferenceDocument.typedescription:String =>=>=> RelationalSchema.Column>> referencedocument.typedescription;
ClassDiagram.Attribut>> ReferenceDocument.title:String =>=>=> RelationalSchema.Column>> referencedocument.title;
ClassDiagram.Attribut>> ReferenceDocument.uri:String =>=>=> RelationalSchema.Column>> referencedocument.uri;
ClassDiagram.Attribut>> AbstractEntity.id:Long =>=>=> RelationalSchema.Column>> abstractentity.id PRIMARY KEY;
Many-To-One relationship from ClassDiagram.Class>>DataElement  to ClassDiagram.Class>>valuedomain represented by ClassDiagram.Atrribute>>domain;
Many-To-One relationship from ClassDiagram.Class>>DataElement  to ClassDiagram.Class>>DataElement represented by ClassDiagram.Atrribute>>meaning;
Many-To-One relationship from ClassDiagram.Class>>Assertion  to ClassDiagram.Class>>ConceptSystem represented by ClassDiagram.Atrribute>>assertor;
One-To-Many relationship from ClassDiagram.Class>>Assertion  to ClassDiagram.Class>>Collection<AssertionEnd>;
Many-To-One relationship from ClassDiagram.Class>>DefinitionContext  to ClassDiagram.Class>>definition represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>DefinitionContext  to ClassDiagram.Class>>context represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>ConceptSystem  to ClassDiagram.Class>>Collection<Assertion>;
One-To-Many relationship from ClassDiagram.Class>>ConceptSystem  to ClassDiagram.Class>>Collection<Concept>;
Many-To-One relationship from ClassDiagram.Class>>ItemLink  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Session  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>subject;
set<user>: usergroup_set<user>(usergroupID:usergroup [PK] #FK to usergroup,set<user>ID:set<user> [PK] #FK to set<user>);
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<ItemLink>;
Many-To-One relationship from ClassDiagram.Class>>DesignationContext  to ClassDiagram.Class>>designation represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>DesignationContext  to ClassDiagram.Class>>context represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Characteristic  to ClassDiagram.Class>>Set<DataElementConcept>;
Many-To-One relationship from ClassDiagram.Class>>ValueDomain  to ClassDiagram.Class>>datatype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ValueDomain  to ClassDiagram.Class>>conceptualdomain represented by ClassDiagram.Atrribute>>meaning;
One-To-Many relationship from ClassDiagram.Class>>ValueDomain  to ClassDiagram.Class>>Collection<DataElement>;
One-To-One relationship between ClassDiagram.Class>>ValueDomain  to ClassDiagram.Class>>unitofmeasure represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>ValueDomain  to ClassDiagram.Class>>Collection<ValueDomain>;
Many-To-One relationship from ClassDiagram.Class>>Link  to ClassDiagram.Class>>relation represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Dimensionality  to ClassDiagram.Class>>List<UnitOfMeasure>;
One-To-Many relationship from ClassDiagram.Class>>ValueMeaning  to ClassDiagram.Class>>Collection<PermissibleValue>;
One-To-Many relationship from ClassDiagram.Class>>ConceptualDomain  to ClassDiagram.Class>>Collection<ValueDomain>;
Many-To-One relationship from ClassDiagram.Class>>PermissibleValue  to ClassDiagram.Class>>valuemeaning represented by ClassDiagram.Atrribute>>meaning;
set<valuedomain>: permissiblevalue_set<valuedomain>(permissiblevalueID:permissiblevalue [PK] #FK to permissiblevalue,set<valuedomain>ID:set<valuedomain> [PK] #FK to set<valuedomain>);
One-To-Many relationship from ClassDiagram.Class>>Context  to ClassDiagram.Class>>Set<DesignationContext>;
One-To-Many relationship from ClassDiagram.Class>>Context  to ClassDiagram.Class>>Set<DefinitionContext>;
One-To-Many relationship from ClassDiagram.Class>>ObjectClass  to ClassDiagram.Class>>Set<DataElementConcept>;
One-To-Many relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>Collection<Designation>;
One-To-Many relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>Collection<Definition>;
One-To-Many relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>Collection<ScopedIdentifier>;
One-To-Many relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>Collection<Classification>;
Many-To-One relationship from ClassDiagram.Class>>UnitOfMeasure  to ClassDiagram.Class>>dimensionality represented by ClassDiagram.Atrribute>>coordinate;
Many-To-One relationship from ClassDiagram.Class>>UnitOfMeasure  to ClassDiagram.Class>>dimensionality represented by ClassDiagram.Atrribute>>noncoordinate;
Many-To-One relationship from ClassDiagram.Class>>Designation  to ClassDiagram.Class>>LanguageIdentification represented by ClassDiagram.Atrribute>>language;
One-To-Many relationship from ClassDiagram.Class>>Designation  to ClassDiagram.Class>>Collection<DesignationContext>;
Many-To-One relationship from ClassDiagram.Class>>Designation  to ClassDiagram.Class>>item represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Classification  to ClassDiagram.Class>>item represented by ClassDiagram.Atrribute>>classified;
Many-To-One relationship from ClassDiagram.Class>>Classification  to ClassDiagram.Class>>concept represented by ClassDiagram.Atrribute>>classifier;
ConceptSystem: classification_ConceptSystem(classificationID:classification [PK] #FK to classification,ConceptSystemID:ConceptSystem [PK] #FK to ConceptSystem);
Many-To-One relationship from ClassDiagram.Class>>ScopedIdentifier  to ClassDiagram.Class>>namespace represented by ClassDiagram.Atrribute>>scope;
Many-To-One relationship from ClassDiagram.Class>>ScopedIdentifier  to ClassDiagram.Class>>item represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Definition  to ClassDiagram.Class>>LanguageIdentification represented by ClassDiagram.Atrribute>>language;
One-To-Many relationship from ClassDiagram.Class>>Definition  to ClassDiagram.Class>>Collection<DefinitionContext>;
Many-To-One relationship from ClassDiagram.Class>>Definition  to ClassDiagram.Class>>item represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Definition  to ClassDiagram.Class>>referencedocument represented by ClassDiagram.Atrribute>>sourcereference;
Many-To-One relationship from ClassDiagram.Class>>Concept  to ClassDiagram.Class>>ConceptSystem represented by ClassDiagram.Atrribute>>including;
One-To-Many relationship from ClassDiagram.Class>>Concept  to ClassDiagram.Class>>Collection<AssertionEnd>;
One-To-Many relationship from ClassDiagram.Class>>Relation  to ClassDiagram.Class>>Collection<RelationRole>;
One-To-Many relationship from ClassDiagram.Class>>Relation  to ClassDiagram.Class>>Collection<Link>;
Many-To-One relationship from ClassDiagram.Class>>RelationRole  to ClassDiagram.Class>>relation represented by ClassDiagram.Atrribute>>source;
collection<linkend>: relationrole_collection<linkend>(relationroleID:relationrole [PK] #FK to relationrole,collection<linkend>ID:collection<linkend> [PK] #FK to collection<linkend>);
Many-To-One relationship from ClassDiagram.Class>>AssertionEnd  to ClassDiagram.Class>>concept represented by ClassDiagram.Atrribute>>end;
Many-To-One relationship from ClassDiagram.Class>>AssertionEnd  to ClassDiagram.Class>>Assertion represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>DataElementConcept  to ClassDiagram.Class>>objectclass represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>DataElementConcept  to ClassDiagram.Class>>characteristic represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>DataElementConcept  to ClassDiagram.Class>>Collection<DataElement>;
Many-To-One relationship from ClassDiagram.Class>>ReferenceDocument  to ClassDiagram.Class>>LanguageIdentification represented by ClassDiagram.Atrribute>>language;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>AbstractEntity  ;
