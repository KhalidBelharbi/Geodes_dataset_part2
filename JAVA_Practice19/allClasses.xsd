<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="simhei" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simsun" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="target" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoany" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedqueries" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discriminatorformula" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedef" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notfound" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formula" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="index" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazytooneoption" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionofelements" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metavalue" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joincolumnorformula" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ondelete" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sort" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlock" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedefs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronize" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeymanytomany" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anymetadefs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkey" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazycollectionoption" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedquery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="type" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="where" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namednativequery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlinsert" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterdefs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sorttype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterjointable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchprofiles" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ondeleteaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flushmodetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlupdate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqldelete" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationtime" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notfoundaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazycollection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderby" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreignkey" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterdef" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="check" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filters" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persister" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericgenerators" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexcolumn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="table" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterjointables" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetch" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchmode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlocktype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paramdef" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchsize" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wherejointable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachemodetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columns" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascade" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anymetadef" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namednativequeries" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joincolumnsorformulas" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheconcurrencystrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="accesstype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generated" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuplizers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinformula" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="forcediscriminator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="any" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tables" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuplizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultcheckstyle" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazytoone" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchprofile" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqldeleteall" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="polymorphismtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="toonefksecondpass" >
      <xs:complexContent>
       <xs:extension base="fksecondpass">
         <xs:sequence>
          <xs:element name="unique" type="xs:anyType" />
          <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
          <xs:element name="path" type="xs:string" />
          <xs:element name="entityclassname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="toonebinder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatesearcheventlistenerregister" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="/***classnameoftheclassneededtoenablesearch.*/full_text_index_event_listener_class" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extendedmappings" >
      <xs:complexContent>
       <xs:extension base="mappings">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertydata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="createkeysecondpass" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wrappedinferreddata" >
      <xs:sequence>
        <xs:element name="wrappedinferreddata" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="verifyfetchprofilereferencesecondpass" >
      <xs:sequence>
        <xs:element name="fetchprofilename" type="xs:string" />
        <xs:element name="fetch" type="xs:anyType" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultcomponentsafenamingstrategy" >
      <xs:complexContent>
       <xs:extension base="ejb3namingstrategy">
         <xs:sequence>
          <xs:element name="instance" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpropertyholder" >
      <xs:sequence>
        <xs:element name="parent" type="abstractpropertyholder" nillable="true" minOccurs="0" />
        <xs:element name="holdercolumnoverride" type="xs:anyType" />
        <xs:element name="currentpropertycolumnoverride" type="xs:anyType" />
        <xs:element name="holderjoincolumnoverride" type="xs:anyType" />
        <xs:element name="currentpropertyjoincolumnoverride" type="xs:anyType" />
        <xs:element name="holderjointableoverride" type="xs:anyType" />
        <xs:element name="currentpropertyjointableoverride" type="xs:anyType" />
        <xs:element name="path" type="xs:string" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="isinidclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertycontainer" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="entityatstake" type="xs:anyType" />
        <xs:element name="fieldaccessmap" type="xs:anyType" />
        <xs:element name="propertyaccessmap" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="explicitclassdefined" type="accesstype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationartefacttype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classpropertyholder" >
      <xs:complexContent>
       <xs:extension base="abstractpropertyholder">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="joins" type="xs:anyType" />
          <xs:element name="joinsperrealtablename" type="xs:anyType" />
          <xs:element name="" type="entitybinder" nillable="true" minOccurs="0" />
          <xs:element name="inheritancestateperclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3column" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="mapping" type="xs:anyType" />
        <xs:element name="insertable" type="xs:anyType" />
        <xs:element name="updatable" type="xs:anyType" />
        <xs:element name="secondarytablename" type="xs:string" />
        <xs:element name="joins" type="xs:anyType" />
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="isimplicit" type="xs:anyType" />
        <xs:element name="default_column_length" type="xs:long" />
        <xs:element name="sqltype" type="xs:string" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="precision" type="xs:long" />
        <xs:element name="scale" type="xs:long" />
        <xs:element name="logicalcolumnname" type="xs:string" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="unique" type="xs:anyType" />
        <xs:element name="nullable" type="xs:anyType" />
        <xs:element name="formula" type="xs:string" />
        <xs:element name="GeneratedName" type="formula" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexcolumn" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="base" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyinferreddata" >
      <xs:sequence>
        <xs:element name="defaultaccess" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="property" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="declaringclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritancestate" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="identifiertype" type="xs:anyType" />
        <xs:element name="/***hassibling(eithermappedsuperclassentity)*/hassiblings" type="xs:anyType" />
        <xs:element name="/***amotherentityisavailable*/hasparents" type="xs:anyType" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="isembeddablesuperclass" type="xs:anyType" />
        <xs:element name="inheritancestateperclass" type="xs:anyType" />
        <xs:element name="classestoprocessformappedsuperclass" type="xs:anyType" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="hasidclassorembeddedid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationconfiguration" >
      <xs:complexContent>
       <xs:extension base="configuration">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="/***settingusedtogivethenameofthedefault{@linkorg.hibernate.annotations.cacheconcurrencystrategy}*tousewheneither{@linkjavax.persistence.cacheable@cacheable}or*{@linkcache@cache}isused.{@linkcache@cache(strategy" type="xs:string" />
          <xs:element name="/***settingwhichindicateswhetherornotthenew{@linkorg.hibernate.id.identifiergenerator}areused*forauto,tableandsequence.*defaulttofalsetokeepbackwardcompatibility.*/use_new_id_generator_mappings" type="xs:string" />
          <xs:element name="/***classnameoftheclassneededtoenablesearch.*/search_startup_class" type="xs:string" />
          <xs:element name="/***methodtocalltoenablesearch.*/search_startup_method" type="xs:string" />
          <xs:element name="artefact_processing_order" type="xs:string" />
          <xs:element name="default_artefact_processing_order" type="configurationartefacttype" nillable="true" minOccurs="0" />
          <xs:element name="namedgenerators" type="xs:anyType" />
          <xs:element name="joins" type="xs:anyType" />
          <xs:element name="classtypes" type="xs:anyType" />
          <xs:element name="defaultnamedquerynames" type="xs:anyType" />
          <xs:element name="defaultnamednativequerynames" type="xs:anyType" />
          <xs:element name="defaultsqlresulsetmappingnames" type="xs:anyType" />
          <xs:element name="defaultnamedgenerators" type="xs:anyType" />
          <xs:element name="generatortables" type="xs:anyType" />
          <xs:element name="uniqueconstraintholdersbytable" type="xs:anyType" />
          <xs:element name="mappedbyresolver" type="xs:anyType" />
          <xs:element name="propertyrefresolver" type="xs:anyType" />
          <xs:element name="anymetadefs" type="xs:anyType" />
          <xs:element name="annotatedclasses" type="xs:anyType" />
          <xs:element name="annotatedclassentities" type="xs:anyType" />
          <xs:element name="hbmentities" type="xs:anyType" />
          <xs:element name="caches" type="xs:anyType" />
          <xs:element name="//userorderingmatters,hencethelisthbmdocuments" type="document" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="configurationartefactprecedence" type="configurationartefacttype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="insecondpass" type="xs:anyType" />
          <xs:element name="transient" type="xs:anyType" />
          <xs:element name="isdefaultprocessed" type="xs:anyType" />
          <xs:element name="isvalidatornotpresentlogged" type="xs:anyType" />
          <xs:element name="propertiesannotatedwithmapsid" type="xs:anyType" />
          <xs:element name="propertiesannotatedwithidandtoone" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typesafeactivator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="factory_property" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationactivator" >
      <xs:sequence>
        <xs:element name="bv_discovery_class" type="xs:string" />
        <xs:element name="type_safe_activator_class" type="xs:string" />
        <xs:element name="type_safe_ddl_method" type="xs:string" />
        <xs:element name="type_safe_activator_method" type="xs:string" />
        <xs:element name="mode_property" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupsperoperation" >
      <xs:sequence>
        <xs:element name="jpa_group_prefix" type="xs:string" />
        <xs:element name="hibernate_group_prefix" type="xs:string" />
        <xs:element name="default_groups" type="xs:anyType" />
        <xs:element name="empty_groups" type="xs:anyType" />
        <xs:element name="groupsperoperation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatetraversableresolver" >
      <xs:sequence>
        <xs:element name="associations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationeventlistener" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="factory" type="xs:anyType" />
        <xs:element name="associationsperentitypersister" type="xs:anyType" />
        <xs:element name="GeneratedName" type="groupsperoperation" nillable="true" minOccurs="0" />
        <xs:element name="initialized" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="copyidentifiercomponentsecondpass" >
      <xs:sequence>
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="GeneratedName" type="component" nillable="true" minOccurs="0" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uniqueconstraintholder" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="columns" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondarytablesecondpass" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="entitybinder" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="annotatedclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedsubclassfksecondpass" >
      <xs:complexContent>
       <xs:extension base="fksecondpass">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listbinder" >
      <xs:complexContent>
       <xs:extension base="collectionbinder">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablebinder" >
      <xs:sequence>
        <xs:element name="//todomoveittoagetter/setterstrategylog" type="xs:anyType" />
        <xs:element name="schema" type="xs:string" />
        <xs:element name="catalog" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="isabstract" type="xs:anyType" />
        <xs:element name="uniqueconstraints" type="uniqueconstraintholder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="uniqueconstraintsconstraints" type="xs:string" />
        <xs:element name="denormalizedsuper" type="table" nillable="true" minOccurs="0" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="ownerentitytable" type="xs:string" />
        <xs:element name="associatedentitytable" type="xs:string" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="ownerentity" type="xs:string" />
        <xs:element name="associatedentity" type="xs:string" />
        <xs:element name="isjpa2elementcollection" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bagbinder" >
      <xs:complexContent>
       <xs:extension base="collectionbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionbinder" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="mappedby" type="xs:string" />
        <xs:element name="collectiontype" type="xs:anyType" />
        <xs:element name="targetentity" type="xs:anyType" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="inversejoincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
        <xs:element name="cascadestrategy" type="xs:string" />
        <xs:element name="cacheconcurrencystrategy" type="xs:string" />
        <xs:element name="cacheregionname" type="xs:string" />
        <xs:element name="onetomany" type="xs:anyType" />
        <xs:element name="GeneratedName" type="indexcolumn" nillable="true" minOccurs="0" />
        <xs:element name="orderby" type="xs:string" />
        <xs:element name="hqlorderby" type="xs:string" />
        <xs:element name="issorted" type="xs:anyType" />
        <xs:element name="comparator" type="xs:anyType" />
        <xs:element name="hastobesorted" type="xs:anyType" />
        <xs:element name="cascadedeleteenabled" type="xs:anyType" />
        <xs:element name="mapkeypropertyname" type="xs:string" />
        <xs:element name="insertable" type="xs:anyType" />
        <xs:element name="updatable" type="xs:anyType" />
        <xs:element name="fkjoincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
        <xs:element name="isexplicitassociationtable" type="xs:anyType" />
        <xs:element name="elementcolumns" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="isembedded" type="xs:anyType" />
        <xs:element name="property" type="xs:anyType" />
        <xs:element name="ignorenotfound" type="xs:anyType" />
        <xs:element name="GeneratedName" type="tablebinder" nillable="true" minOccurs="0" />
        <xs:element name="mapkeycolumns" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="mapkeymanytomanycolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
        <xs:element name="localgenerators" type="xs:anyType" />
        <xs:element name="inheritancestateperclass" type="xs:anyType" />
        <xs:element name="declaringclass" type="xs:anyType" />
        <xs:element name="declaringclassset" type="xs:anyType" />
        <xs:element name="GeneratedName" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="hibernateextensionmapping" type="xs:anyType" />
        <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeyjoincolumndelegator" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="column" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivearraybinder" >
      <xs:complexContent>
       <xs:extension base="arraybinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customizablecolumns" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="s" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullability" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeycolumndelegator" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="column" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraybinder" >
      <xs:complexContent>
       <xs:extension base="listbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitybinder" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="annotatedclass" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="discriminatorvalue" type="xs:string" />
        <xs:element name="dynamicinsert" type="xs:anyType" />
        <xs:element name="dynamicupdate" type="xs:anyType" />
        <xs:element name="explicithibernateentityannotation" type="xs:anyType" />
        <xs:element name="GeneratedName" type="optimisticlocktype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="polymorphismtype" nillable="true" minOccurs="0" />
        <xs:element name="selectbeforeupdate" type="xs:anyType" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="lazy" type="xs:anyType" />
        <xs:element name="proxyclass" type="xs:anyType" />
        <xs:element name="where" type="xs:string" />
        <xs:element name="secondarytables" type="xs:anyType" />
        <xs:element name="secondarytablejoins" type="xs:anyType" />
        <xs:element name="cacheconcurrentstrategy" type="xs:string" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="filters" type="xs:anyType" />
        <xs:element name="GeneratedName" type="inheritancestate" nillable="true" minOccurs="0" />
        <xs:element name="ignoreidannotations" type="xs:anyType" />
        <xs:element name="cachelazyproperty" type="xs:anyType" />
        <xs:element name="property" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="wrapidsinembeddedcomponents" type="xs:anyType" />
        <xs:element name="subselect" type="xs:string" />
        <xs:element name="sec_tbl_ns_helper" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplevaluebinder" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="returnedclassname" type="xs:string" />
        <xs:element name="columns" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="persistentclassname" type="xs:string" />
        <xs:element name="explicittype" type="xs:string" />
        <xs:element name="typeparameters" type="xs:anyType" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="isversion" type="xs:anyType" />
        <xs:element name="//isamapkeykey" type="xs:anyType" />
        <xs:element name="referencedentityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaoverridenannotationreader" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="annotationtoxml" type="xs:anyType" />
          <xs:element name="schema_validation" type="xs:string" />
          <xs:element name="" type="filter" nillable="true" minOccurs="0" />
          <xs:element name="" type="xmlcontext" nillable="true" minOccurs="0" />
          <xs:element name="classname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="s" type="xs:anyType" />
          <xs:element name="annotationsmap" type="xs:anyType" />
          <xs:element name="word_separator" type="xs:string" />
          <xs:element name="transientelementsforproperty" type="xs:anyType" />
          <xs:element name="mirroredattribute" type="xs:anyType" />
          <xs:element name="element" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlcontext" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="globals" type="xs:anyType" />
        <xs:element name="classoverriding" type="xs:anyType" />
        <xs:element name="defaultsoverriding" type="xs:anyType" />
        <xs:element name="defaultelements" type="xs:anyType" />
        <xs:element name="defaultentitylisteners" type="xs:anyType" />
        <xs:element name="hascontext" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpametadataprovider" >
      <xs:sequence>
        <xs:element name="delegate" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xmlcontext" nillable="true" minOccurs="0" />
        <xs:element name="defaults" type="xs:anyType" />
        <xs:element name="cache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapbinder" >
      <xs:complexContent>
       <xs:extension base="collectionbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertybinder" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="returnedclassname" type="xs:string" />
        <xs:element name="lazy" type="xs:anyType" />
        <xs:element name="GeneratedName" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="holder" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="insertable" type="xs:anyType" />
        <xs:element name="updatable" type="xs:anyType" />
        <xs:element name="cascade" type="xs:string" />
        <xs:element name="GeneratedName" type="simplevaluebinder" nillable="true" minOccurs="0" />
        <xs:element name="declaringclass" type="xs:anyType" />
        <xs:element name="declaringclassset" type="xs:anyType" />
        <xs:element name="embedded" type="xs:anyType" />
        <xs:element name="GeneratedName" type="entitybinder" nillable="true" minOccurs="0" />
        <xs:element name="isxtomany" type="xs:anyType" />
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="/*			*propertycanbenull			*preferpropertynametoproperty.getname()sincesomeareoverloaded			*/property" type="xs:anyType" />
        <xs:element name="returnedclass" type="xs:anyType" />
        <xs:element name="isid" type="xs:anyType" />
        <xs:element name="inheritancestateperclass" type="xs:anyType" />
        <xs:element name="mapping" type="property" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querybinder" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setbinder" >
      <xs:complexContent>
       <xs:extension base="collectionbinder">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idbagbinder" >
      <xs:complexContent>
       <xs:extension base="bagbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetmappingsecondpass" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="ann" type="xs:anyType" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="isdefault" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertypreloadeddata" >
      <xs:sequence>
        <xs:element name="defaultaccess" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="returnedclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fksecondpass" >
      <xs:sequence>
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="columns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
        <xs:element name="/***uniquecounterisneededtodifferentiate2instancesoffksecondpass*astheyarecompared.*fairlyhackybutibmvmsometimesreturnsthesamehashcodefor2differentobjects*todoisitdoabletorelyontheejb3joincolumnnames?notsureattheycouldbeinferred*/uniquecounter" type="xs:long" />
        <xs:element name="globalcounter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pkdrivenbydefaultmapsidsecondpass" >
      <xs:sequence>
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="columns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3dtdentityresolver" >
      <xs:complexContent>
       <xs:extension base="dtdentityresolver">
         <xs:sequence>
          <xs:element name="instance" type="xs:anyType" />
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="resolved" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionpropertyholder" >
      <xs:complexContent>
       <xs:extension base="abstractpropertyholder">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyholder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="recoverableexception" >
      <xs:complexContent>
       <xs:extension base="annotationexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyholderbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="binderhelper" >
      <xs:sequence>
        <xs:element name="annotation__default" type="xs:string" />
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="primitive_names" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notyetimplementedexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexoruniquekeysecondpass" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="indexname" type="xs:string" />
        <xs:element name="columns" type="xs:string" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="column" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="unique" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnsbuilder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="nullability" nillable="true" minOccurs="0" />
        <xs:element name="property" type="xs:anyType" />
        <xs:element name="inferreddata" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitybinder" nillable="true" minOccurs="0" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3namingstrategy" >
      <xs:sequence>
        <xs:element name="instance" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3discriminatorcolumn" >
      <xs:complexContent>
       <xs:extension base="ejb3column">
         <xs:sequence>
          <xs:element name="default_discriminator_column_name" type="xs:string" />
          <xs:element name="default_discriminator_type" type="xs:string" />
          <xs:element name="discriminatortypename" type="xs:string" />
          <xs:element name="default_discriminator_length" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setsimplevaluetypesecondpass" >
      <xs:sequence>
        <xs:element name="binder" type="simplevaluebinder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3joincolumn" >
      <xs:complexContent>
       <xs:extension base="ejb3column">
         <xs:sequence>
          <xs:element name="/***propertynamerepatedtothiscolumn*/referencedcolumn" type="xs:string" />
          <xs:element name="mappedby" type="xs:string" />
          <xs:element name="//propertynameonthemappedbysideifanymappedbypropertyname" type="xs:string" />
          <xs:element name="//tablenameonthemappedbysideifanymappedbytablename" type="xs:string" />
          <xs:element name="mappedbyentityname" type="xs:string" />
          <xs:element name="jpa2elementcollection" type="xs:anyType" />
          <xs:element name="manytomanyownersideentityname" type="xs:string" />
          <xs:element name="//keepitjdk1.4compliant//implicitwayno_reference" type="xs:long" />
          <xs:element name="//referencetothepkinanexplicitorderpk_reference" type="xs:long" />
          <xs:element name="//referencetononpkcolumnsnon_pk_reference" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonesecondpass" >
      <xs:sequence>
        <xs:element name="mappedby" type="xs:string" />
        <xs:element name="mappings" type="extendedmappings" nillable="true" minOccurs="0" />
        <xs:element name="ownerentity" type="xs:string" />
        <xs:element name="ownerproperty" type="xs:string" />
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="ignorenotfound" type="xs:anyType" />
        <xs:element name="inferreddata" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="targetentity" type="xs:anyType" />
        <xs:element name="cascadeondelete" type="xs:anyType" />
        <xs:element name="optional" type="xs:anyType" />
        <xs:element name="cascadestrategy" type="xs:string" />
        <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentpropertyholder" >
      <xs:complexContent>
       <xs:extension base="abstractpropertyholder">
         <xs:sequence>
          <xs:element name="//todointroduceaoverridetable()methodforcolumnsheldbysectableratherthanthehack//joinsperrealtablenameinclasspropertyholder" type="component" nillable="true" minOccurs="0" />
          <xs:element name="isorwithinembeddedid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationbinder" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="default_cache_concurrency_strategy" type="cacheconcurrencystrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotatedclasstype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstype" >
      <xs:sequence>
        <xs:element name="accesstype" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="syntheticproperty" >
      <xs:complexContent>
       <xs:extension base="property">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idgenerator" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="identifiergeneratorstrategy" type="xs:string" />
        <xs:element name="params" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bytearrayblobtype" >
      <xs:complexContent>
       <xs:extension base="abstractlobtype">
         <xs:sequence>
          <xs:element name="types" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringclobtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primitivebytearrayblobtype" >
      <xs:complexContent>
       <xs:extension base="bytearrayblobtype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlobtype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumtype" >
      <xs:complexContent>
       <xs:extension base="enum>">
         <xs:sequence>
          <xs:element name="*originallywascachedsuchbecauseofperformanceoflookinguptheloggereachtime*inordertocheckthetrace-enablement.drivingthisviaacentrallog-specificclass*wouldalleviatethatperformancehit,andyetstillallowmore"normal"loggingusage/config.*/is_value_tracing_enabled" type="xs:anyType" />
          <xs:element name="transientlog" type="xs:anyType" />
          <xs:element name="enum" type="xs:string" />
          <xs:element name="schema" type="xs:string" />
          <xs:element name="catalog" type="xs:string" />
          <xs:element name="table" type="xs:string" />
          <xs:element name="column" type="xs:string" />
          <xs:element name="type" type="xs:string" />
          <xs:element name="enumclass" type="xs:anyType" />
          <xs:element name="enumvalues" type="xs:anyType" />
          <xs:element name="catalog" type="xs:string" />
          <xs:element name="schema" type="xs:string" />
          <xs:element name="//beforeanyguessingsqltype" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="characterarrayclobtype" >
      <xs:sequence>
        <xs:element name="buffer_size" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primitivecharacterarrayclobtype" >
      <xs:complexContent>
       <xs:extension base="characterarrayclobtype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrappedmaterializedblobtype" >
      <xs:complexContent>
       <xs:extension base="materializedblobtype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabletoblobtype" >
      <xs:complexContent>
       <xs:extension base="abstractlobtype">
         <xs:sequence>
          <xs:element name="/***classnameoftheserialisableclass*/class_name" type="xs:string" />
          <xs:element name="serializable" type="xs:anyType" />
          <xs:element name="type" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loader.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boat.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tourist4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tourist3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rentalcar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tourist" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tourist2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cook" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="crew" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="asset.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadata-complete" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ferry.hbm" >
      <xs:complexContent>
       <xs:extension base="attribute">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernate.cfg" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cloudtype.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="government.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="habitatspecieslink" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hammer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemautil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alternativenamingstrategy" >
      <xs:complexContent>
       <xs:extension base="ejb3namingstrategy">
         <xs:sequence>
          <xs:element name="instance" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurationtest" >
      <xs:complexContent>
       <xs:extension base="junit.framework.testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitypersister" >
      <xs:complexContent>
       <xs:extension base="singletableentitypersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="card" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="deck" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionpersister" >
      <xs:complexContent>
       <xs:extension base="onetomanypersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deck" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="cards" type="card" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="movingthing" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:complexContent>
       <xs:extension base="movingthing">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="model" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sportcar" >
      <xs:complexContent>
       <xs:extension base="car">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="polymorphismtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//correspondstopktypeofemployeeemppk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="//idattributemappedbyjoincolumndefaultid" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="//matchesnameof@idattributename" type="xs:string" />
        <xs:element name="//matchesnameof@idattributeandtypeofembeddedidofemployeeemp" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityembeddedidparentidclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="//defaultcolumnnameisoverriddenname" type="xs:string" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="//defaultcolumnnamefor"name"attributeisoverriddenid" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emppk" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="//overridingnotallowed...//defaultjoincolumnnameisoverridden@mapsidid" type="xs:string" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="financialhistory" >
      <xs:sequence>
        <xs:element name="//overridingnotallowed...//defaultjoincolumnnameisoverridden@mapsidid" type="xs:string" />
        <xs:element name="lastup" type="xs:dateTime" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="financialhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentsimpledeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
        <xs:element name="xraydata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="personid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="//allattributesmaptorelationship:attributeoverridenotallowedid" type="personid" nillable="true" minOccurs="0" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="personid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employer" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentembeddeddeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idclassgeneratedvaluemanytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="query_all" type="xs:string" />
        <xs:element name="query_count" type="xs:string" />
        <xs:element name="query_by_credit" type="xs:string" />
        <xs:element name="bad_credit" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="contact" type="xs:string" />
        <xs:element name="credit" type="xs:string" />
        <xs:element name="creditlimit" type="xs:anyType" />
        <xs:element name="since" type="xs:anyType" />
        <xs:element name="balance" type="xs:anyType" />
        <xs:element name="ytdpayment" type="xs:anyType" />
        <xs:element name="customerinventories" type="customerinventory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerinventorypk" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="query_by_category" type="xs:string" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="discount" type="xs:anyType" />
        <xs:element name="category" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerinventory" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="vehicle" type="item" nillable="true" minOccurs="0" />
        <xs:element name="totalcost" type="xs:anyType" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentidclassdeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
        <xs:element name="nickname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//correspondstopktypeofemployeeemp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//idattributemappedbyjoincolumndefaultemp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exclusivedependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="//@joincolumn(name" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//correspondstopktypeofemployeeemppk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentembeddediddeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="//allattributesmaptorelationship:attributeoverridenotallowedid" type="personid" nillable="true" minOccurs="0" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreigngeneratorviamapsidtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employerid" >
      <xs:sequence>
        <xs:element name="//matchesnameof@idattributename" type="xs:string" />
        <xs:element name="//matchesnameof@idattributeandtypeofemployeepkemployee" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityidclassparentidclassdeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="//matchesnameof@idattributename" type="xs:string" />
        <xs:element name="//matchesnameofattributeandtypeofemployeepkemp" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emppk" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityidclassparentembeddediddeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flight" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="transientduration" type="xs:long" />
        <xs:element name="durationinsec" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="GeneratedName" type="company" nillable="true" minOccurs="0" />
        <xs:element name="triggereddata" type="xs:string" />
        <xs:element name="factor" type="xs:long" />
        <xs:element name="departure" type="xs:dateTime" />
        <xs:element name="buydate" type="xs:anyType" />
        <xs:element name="alternativedeparturedate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="supporttickets" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="resolution" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchprofiletest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer5" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="tickets" type="supporttickets" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="ordernumber" type="xs:long" />
        <xs:element name="delivery" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderline" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tvmagazinpk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="channel" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="presenter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childpk" >
      <xs:sequence>
        <xs:element name="nthchild" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aid" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="c" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="channel" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tvmagazin" >
      <xs:sequence>
        <xs:element name="id" type="tvmagazinpk" nillable="true" minOccurs="0" />
        <xs:element name="time" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="someentity" >
      <xs:sequence>
        <xs:element name="id" type="someentityid" nillable="true" minOccurs="0" />
        <xs:element name="prop" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="aid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tvprogramidclass" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="channel" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="presenter" nillable="true" minOccurs="0" />
        <xs:element name="time" type="xs:dateTime" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderlinepk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tvprogram" >
      <xs:sequence>
        <xs:element name="id" type="tvmagazinpk" nillable="true" minOccurs="0" />
        <xs:element name="time" type="xs:dateTime" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="parentpk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="littlegenius" >
      <xs:complexContent>
       <xs:extension base="child">
         <xs:sequence>
          <xs:element name="particularskill" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="childpk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="presenter" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="someentityid" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="parent" type="someentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcase" >
      <xs:complexContent>
       <xs:extension base="hibernatetestcase">
         <xs:sequence>
          <xs:element name="sessions" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="charproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="character" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymap" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="properties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integerproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyset" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="some" type="property" nillable="true" minOccurs="0" />
        <xs:element name="generalproperties" type="property" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertylist" >
      <xs:complexContent>
       <xs:extension base="property>">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="somepropery" type="xs:anyType" />
          <xs:element name="generalproperties" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetaryamountusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zipcode" >
      <xs:sequence>
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="washingmachine" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="transientisactive" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basichibernateannotationstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="starred" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formallastname" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="lastname" nillable="true" minOccurs="0" />
        <xs:element name="designation" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertydefaultmappingstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ransom" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="kidnappername" type="xs:string" />
        <xs:element name="amount" type="monetaryamount" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="drill" >
      <xs:complexContent>
       <xs:extension base="tool">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="note" type="starred" nillable="true" minOccurs="0" />
        <xs:element name="editorsnote" type="starred" nillable="true" minOccurs="0" />
        <xs:element name="approved" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soccerteam" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="players" type="player" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="onevone" type="player" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localcontactdetails" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="local" type="phonenumber" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="overseasphonenumber" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contactdetails" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="local" type="phonenumber" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="overseasphonenumber" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="topic" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="narratives" type="narrative" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="narrative" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="GeneratedName" type="topic" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="length" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="race" >
      <xs:sequence>
        <xs:element name="length" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="casterstringtype" >
      <xs:sequence>
        <xs:element name="cast" type="xs:string" />
        <xs:element name="parameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="overseasphonenumber" >
      <xs:complexContent>
       <xs:extension base="phonenumber">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="java5featurestest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="widget" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="firstname" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumbertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tree" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="powerdrill" >
      <xs:complexContent>
       <xs:extension base="drill">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="peugot" >
      <xs:complexContent>
       <xs:extension base="car">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:complexContent>
       <xs:extension base="firstname">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="" type="lastname" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="communitybid" >
      <xs:complexContent>
       <xs:extension base="bid">
         <xs:sequence>
          <xs:element name="communitynote" type="starred" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lastname" >
      <xs:sequence>
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tool" >
      <xs:complexContent>
       <xs:extension base="widget">
         <xs:sequence>
          <xs:element name="category" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="forest" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="longdescription" type="xs:string" />
        <xs:element name="smalltext" type="xs:string" />
        <xs:element name="bigtext" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="near" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="player" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="team" type="soccerteam" nillable="true" minOccurs="0" />
        <xs:element name="//fortheworldcupofoneversusonematches,wehave//teamswithoneplayer(1v1team).onevoneteam" type="soccerteam" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetaryamount" >
      <xs:sequence>
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="GeneratedName" type="currency" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flight" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="maxaltitudeinmilimeter" type="xs:long" />
        <xs:element name="maxaltitude" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ticket" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="americacupclass" >
      <xs:complexContent>
       <xs:extension base="boat">
         <xs:sequence>
          <xs:element name="" type="country" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="voice" >
      <xs:complexContent>
       <xs:extension base="communication">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitynonentitytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="communication" >
      <xs:complexContent>
       <xs:extension base="interaction">
         <xs:sequence>
          <xs:element name="species" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interaction" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:complexContent>
       <xs:extension base="voice">
         <xs:sequence>
          <xs:element name="isnumeric" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gsm" >
      <xs:complexContent>
       <xs:extension base="cellular">
         <xs:sequence>
          <xs:element name="frequency" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cellular" >
      <xs:complexContent>
       <xs:extension base="phone">
         <xs:sequence>
          <xs:element name="brand" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="shortdescription" type="xs:string" />
        <xs:element name="fulltext" type="xs:string" />
        <xs:element name="code" type="character" nillable="true" minOccurs="0" />
        <xs:element name="code2" type="xs:anyType" />
        <xs:element name="GeneratedName" type="editor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="characterarraytexttype" >
      <xs:complexContent>
       <xs:extension base="primitivecharacterarraytexttype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="editor" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primitivecharacterarraytexttype" >
      <xs:complexContent>
       <xs:extension base="texttype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compiledcode" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="header" type="xs:anyType" />
        <xs:element name="fullcode" type="xs:anyType" />
        <xs:element name="metadata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="imagetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="array_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="imageholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="longarray" type="xs:anyType" />
        <xs:element name="GeneratedName" type="dog" nillable="true" minOccurs="0" />
        <xs:element name="picarray" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wrappedimagetype" >
      <xs:complexContent>
       <xs:extension base="imagetype{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longstringholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="whatever" type="character" nillable="true" minOccurs="0" />
        <xs:element name="long" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="texttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="long_string_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabletoimagetype" >
      <xs:complexContent>
       <xs:extension base="imagetype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tooth" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="leftneighbour" type="tooth" nillable="true" minOccurs="0" />
        <xs:element name="rightneighbour" type="tooth" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mouth" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mouth" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="teeth" type="tooth" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedsubclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="isalive" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="b">
         <xs:sequence>
          <xs:element name="age" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sysgroupsorm" >
      <xs:sequence>
        <xs:element name="groupid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="life" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="duration" type="xs:long" />
        <xs:element name="fulldescription" type="xs:string" />
        <xs:element name="owner" type="cat" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sysuserorm" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="groups" type="sysgroupsorm" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="secondname" type="xs:string" />
        <xs:element name="storypart1" type="xs:string" />
        <xs:element name="storypart2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="id" type="dogpk" nillable="true" minOccurs="0" />
        <xs:element name="weight" type="xs:long" />
        <xs:element name="thoroughbredname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="create" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="death" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="howdoesithappen" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jointest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dogpk" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="ownername" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:complexContent>
       <xs:extension base="accountbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="savingsaccountbase" >
      <xs:complexContent>
       <xs:extension base="account">
         <xs:sequence>
          <xs:element name="withdrawallimit" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="savingsaccount" >
      <xs:complexContent>
       <xs:extension base="savingsaccountbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="intermediatemappedsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accountbase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="accountnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="player" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="team" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="team" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="players" type="player" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vanillaswap" >
      <xs:sequence>
        <xs:element name="/***identifieroftheinterestrateswap*/instrumentid" type="xs:string" />
        <xs:element name="/***oftheswap(andofbothlegs).*/" type="currency" nillable="true" minOccurs="0" />
        <xs:element name="/***fixedleg(cashflowswiththefixedrate).*/" type="fixedleg" nillable="true" minOccurs="0" />
        <xs:element name="/***floatingleg(cashflowsboundtoafinancialindex).*/" type="floatleg" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="urlfavorite" >
      <xs:sequence>
        <xs:element name="url" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="internetfavorites" >
      <xs:sequence>
        <xs:element name="links" type="urlfavorite" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="ideas" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="iso2" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="leg" >
      <xs:sequence>
        <xs:element name="/***showshowfrequentpaymentsaccordingtothislegshouldbemade.*/payment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wealthyperson" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="//})vacationhomes" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="legacyvacationhomes" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="explicitvacationhomes" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="spreaddeal" >
      <xs:complexContent>
       <xs:extension base="notonialdeal">
         <xs:sequence>
          <xs:element name="/***withthetenor.*/long" type="swap" nillable="true" minOccurs="0" />
          <xs:element name="/***withthelongertenor.*/short" type="swap" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="regionalarticlepk" >
      <xs:sequence>
        <xs:element name="/***countryiso2code*/iso2" type="xs:string" />
        <xs:element name="localuniquekey" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addresstype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="favoritethings" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="web" type="internetfavorites" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="regionalarticle" >
      <xs:sequence>
        <xs:element name="pk" type="regionalarticlepk" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="isbn" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="summary" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="legalstructure" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="corporationtype" type="corptype" nillable="true" minOccurs="0" />
        <xs:element name="origin" type="nationality" nillable="true" minOccurs="0" />
        <xs:element name="topmanagement" type="manager" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="bornin" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fixedleg" >
      <xs:complexContent>
       <xs:extension base="leg">
         <xs:sequence>
          <xs:element name="/***fixedrate.*/rate" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="floatleg" >
      <xs:complexContent>
       <xs:extension base="leg">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="/***spreadovertheselectedrateindex(inbasispoints).*/ratespread" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nationality" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manager" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="employer" type="internetprovider" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="internetprovider" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brandname" type="xs:string" />
        <xs:element name="owner" type="legalstructure" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="swap" >
      <xs:sequence>
        <xs:element name="/***tenor(duration)oftheswap(inyears).*/tenor" type="xs:long" />
        <xs:element name="/***fixedleg(cashflowswiththefixedrate).*/" type="fixedleg" nillable="true" minOccurs="0" />
        <xs:element name="/***floatingleg(cashflowsboundtoafinancialindex).*/" type="floatleg" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="corptype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="address1" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="type" type="addresstype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alias" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="name" nillable="true" minOccurs="0" />
        <xs:element name="source" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personname" >
      <xs:complexContent>
       <xs:extension base="name">
         <xs:sequence>
          <xs:element name="aliases" type="alias" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="personname" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:sequence>
        <xs:element name="first" type="xs:string" />
        <xs:element name="last" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablewithone2manytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="summary" >
      <xs:sequence>
        <xs:element name="size" type="xs:long" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="summarized" type="book" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notonialdeal" >
      <xs:complexContent>
       <xs:extension base="deal">
         <xs:sequence>
          <xs:element name="/***notionalamountofbothirss.*/notional" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deal" >
      <xs:sequence>
        <xs:element name="/***dealid.*/id" type="xs:string" />
        <xs:element name="/***withthetenor.*/" type="swap" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="line1" type="xs:string" />
        <xs:element name="line2" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="postalcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="iso2" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablewithmany2onetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="roles" type="role" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quotetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="quoteglobaltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitsqlresultsetmappingtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="query" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="role" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brandname" type="xs:string" />
        <xs:element name="price" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flyingobject" >
      <xs:complexContent>
       <xs:extension base="thing">
         <xs:sequence>
          <xs:element name="serial" type="xs:string" />
          <xs:element name="altitude" type="xs:long" />
          <xs:element name="metricaltitude" type="xs:long" />
          <xs:element name="color" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:long" />
        <xs:element name="address" type="addressentry" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressentry" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="addresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummynamingstrategy" >
      <xs:complexContent>
       <xs:extension base="ejb3namingstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namingstrategytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ferry" >
      <xs:complexContent>
       <xs:extension base="boat">
         <xs:sequence>
          <xs:element name="sea" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a320" >
      <xs:complexContent>
       <xs:extension base="plane">
         <xs:sequence>
          <xs:element name="javaembeddedversion" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pricedstuff" >
      <xs:complexContent>
       <xs:extension base="stuff<price>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wildentity" >
      <xs:complexContent>
       <xs:extension base="object>">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="property" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classes" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gene" >
      <xs:complexContent>
       <xs:extension base="enum>">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="state" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dna" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="price" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="amount" type="xs:double" />
        <xs:element name="currency" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paper" >
      <xs:complexContent>
       <xs:extension base="item<papertype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="someguy" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummy" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="transientdummyfield" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stuff" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unresolvedtypetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:complexContent>
       <xs:extension base="pricedstuff">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="" type="type" nillable="true" minOccurs="0" />
          <xs:element name="" type="owner" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="papertype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedgenericstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="edition" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="circle" >
      <xs:complexContent>
       <xs:extension base="shape">
         <xs:sequence>
          <xs:element name="" type="color" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course7" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shape" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="being">
         <xs:sequence>
          <xs:element name="firstname" type="xs:string" />
          <xs:element name="lastname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="horse" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accesstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="position" >
      <xs:sequence>
        <xs:element name="x" type="xs:long" />
        <xs:element name="y" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course6" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accessmappingtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="friends" type="user" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:complexContent>
       <xs:extension base="woody">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="brand" type="xs:string" />
          <xs:element name="weight" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chair" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="pillow" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bigbed" >
      <xs:complexContent>
       <xs:extension base="bed">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bed" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="quality" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="square" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="position" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="being" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gardenshed" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="brand" type="xs:string" />
          <xs:element name="floors" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="color" >
      <xs:sequence>
        <xs:element name="r" type="xs:long" />
        <xs:element name="g" type="xs:long" />
        <xs:element name="b" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="woody" >
      <xs:complexContent>
       <xs:extension base="thingy">
         <xs:sequence>
          <xs:element name="color" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="//shouldn'tbepersistentisalive" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thingy" >
      <xs:sequence>
        <xs:element name="god" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course5" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gardenshed" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="brand" type="xs:string" />
          <xs:element name="floors" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thingy" >
      <xs:sequence>
        <xs:element name="god" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="closet" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="numberofdoors" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlaccesstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="driver" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="waiter" >
      <xs:complexContent>
       <xs:extension base="crew">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cook" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="favouriteknife" type="knive" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="crew" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rentalcar" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="driver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boy" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="nicknames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="knive" >
      <xs:sequence>
        <xs:element name="brand" type="xs:string" />
        <xs:element name="bladelength" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tourist" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="destination" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="woody" >
      <xs:complexContent>
       <xs:extension base="thingy">
         <xs:sequence>
          <xs:element name="color" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="//shouldn'tbepersistentisalive" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigbed" >
      <xs:complexContent>
       <xs:extension base="bed">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chair" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="pillow" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bed" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="quality" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accesstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foobar" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:complexContent>
       <xs:extension base="woody">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="brand" type="xs:string" />
          <xs:element name="weight" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="port" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="boats" type="boat" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dvd" >
      <xs:sequence>
        <xs:element name="id" type="myoid" nillable="true" minOccurs="0" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myoid" >
      <xs:sequence>
        <xs:element name="high" type="xs:long" />
        <xs:element name="middle" type="xs:long" />
        <xs:element name="low" type="xs:long" />
        <xs:element name="other" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myoidgenerator" >
      <xs:sequence>
        <xs:element name="counter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myoidtype" >
      <xs:sequence>
        <xs:element name="property_names" type="xs:string" />
        <xs:element name="s" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:sequence>
        <xs:element name="id" type="catpk" nillable="true" minOccurs="0" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="humancontacts" type="woman" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="knownclient" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stores" type="store" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanymaxfetchdepth0test" >
      <xs:complexContent>
       <xs:extension base="manytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contractor" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="hourlyrate" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobinfo" >
      <xs:sequence>
        <xs:element name="jobdescription" type="xs:string" />
        <xs:element name="//bidirectionalpm" type="programmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customers" type="knownclient" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="suppliers" type="supplier" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="implantedin" type="city" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employers" type="employer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="contactinfo" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jobinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="building" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="company" type="buildingcompany" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="man" >
      <xs:sequence>
        <xs:element name="id" type="manpk" nillable="true" minOccurs="0" />
        <xs:element name="carname" type="xs:string" />
        <xs:element name="womens" type="woman" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permission" >
      <xs:sequence>
        <xs:element name="permission" type="xs:string" />
        <xs:element name="expiration" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="woman" >
      <xs:sequence>
        <xs:element name="id" type="womanpk" nillable="true" minOccurs="0" />
        <xs:element name="carname" type="xs:string" />
        <xs:element name="mens" type="man" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="cats" type="cat" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contactinfo" >
      <xs:sequence>
        <xs:element name="//@manytoone//addressaddress//unidirectional//bidirectionalphonenumbers" type="phonenumber" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="friend" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="friends" type="friend" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="phnumber" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="womanpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inspectorprefixes" >
      <xs:complexContent>
       <xs:extension base="inspector">
         <xs:sequence>
          <xs:element name="prefixes" type="xs:string" />
          <xs:element name="desertedareas" type="zone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="areas" type="zone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employees" type="xs:anyType" />
        <xs:element name="contractors" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inspector" >
      <xs:sequence>
        <xs:element name="_id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="catpk" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="thoroughbred" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programmanager" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="manages" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="buildingcompany" >
      <xs:complexContent>
       <xs:extension base="company">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="foundedin" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="groupwithset" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="permissions" type="permission" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="permissions" type="permission" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="supplier" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="suppstores" type="store" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="iselder" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="domainadmin" >
      <xs:sequence>
        <xs:element name="domainname" type="xs:string" />
        <xs:element name="adminuser" type="xs:string" />
        <xs:element name="nickname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="domainadminid" >
      <xs:sequence>
        <xs:element name="domainname" type="xs:string" />
        <xs:element name="adminuser" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclasscompositepktest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="habitatspecieslink" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="habitatid" type="xs:long" />
        <xs:element name="speciesid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclassxmltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="incorrectentity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securedbindingtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simple" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclassgeneratedvaluetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplepk" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplepk" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="id3" type="xs:long" />
        <xs:element name="//annotationbinder(incorrectly)requiresthistobetransientseehhh-4819andhhh-4820transientcachedhashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple2" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiple" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="id3" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="branch" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="leaves" type="leaf" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="//memberdeclarationid" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="companyname" type="xs:string" />
        <xs:element name="stays" type="stay" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="oldstays" type="stay" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="veryoldstays" type="stay" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="orderedstay" type="stay" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stay" >
      <xs:sequence>
        <xs:element name="//memberdeclarationid" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="old" type="person" nillable="true" minOccurs="0" />
        <xs:element name="veryold" type="person" nillable="true" minOccurs="0" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="vessel" type="xs:string" />
        <xs:element name="authoriser" type="xs:string" />
        <xs:element name="comments" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchingtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="leaf" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="branch" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="products" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="widgets" type="widgets" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcourse" >
      <xs:sequence>
        <xs:element name="testcourseid" type="xs:long" />
        <xs:element name="title" type="localizedstring" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="firstname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="widgets" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="matrix" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="mvalues" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="character" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bugsystem" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="bugs" type="bug" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localizedstring" >
      <xs:sequence>
        <xs:element name="default_" type="xs:anyType" />
        <xs:element name="variations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boy" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="nicknames" type="xs:anyType" />
        <xs:element name="hatednames" type="xs:anyType" />
        <xs:element name="preferrednames" type="xs:anyType" />
        <xs:element name="scorepernickname" type="xs:anyType" />
        <xs:element name="scoreperpreferredname" type="xs:anyType" />
        <xs:element name="favoritenumbers" type="xs:long" />
        <xs:element name="favoritetoys" type="toy" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="characters" type="character" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="foods" type="xs:anyType" />
        <xs:element name="countryattitudes" type="countryattitude" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sale" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="contacts" type="contact" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexedcollectionofelementstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="countryattitude" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="boy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="likes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bug" >
      <xs:sequence>
        <xs:element name="description" type="xs:string" />
        <xs:element name="reportedby" type="person" nillable="true" minOccurs="0" />
        <xs:element name="summary" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toy" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="brand" nillable="true" minOccurs="0" />
        <xs:element name="serial" type="xs:string" />
        <xs:element name="owner" type="boy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="brand" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="surname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionelementtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="favoritefood" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="comment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//@collectionofelementslistofc" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="listofb" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deepcollectionelementtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="boat" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="weight" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="show" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="description" type="showdescription" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trouserszip" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="trousers" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partyaffiliate" >
      <xs:sequence>
        <xs:element name="partyid" type="xs:string" />
        <xs:element name="GeneratedName" type="party" nillable="true" minOccurs="0" />
        <xs:element name="affiliatename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trousers" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="zip" type="trouserszip" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owneraddress" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="address" type="owneraddress" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullableprimarykeytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serialnumber" >
      <xs:sequence>
        <xs:element name="id" type="serialnumberpk" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="heart" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computer" >
      <xs:sequence>
        <xs:element name="id" type="computerpk" nillable="true" minOccurs="0" />
        <xs:element name="cpu" type="xs:string" />
        <xs:element name="serial" type="serialnumber" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="client" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="city" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="father" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computerpk" >
      <xs:sequence>
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serialnumberpk" >
      <xs:sequence>
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="showdescription" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="show" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetooneerrortest" >
      <xs:complexContent>
       <xs:extension base="junit.framework.testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="body" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="heart" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="son" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="father" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="party" >
      <xs:sequence>
        <xs:element name="partyid" type="xs:string" />
        <xs:element name="GeneratedName" type="partyaffiliate" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="devicegroupconfig" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hhh4851test" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hardware" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="parent" type="hardware" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="deleted" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manageddevice" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="" type="device" nillable="true" minOccurs="0" />
          <xs:element name="" type="devicegroupconfig" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="device" >
      <xs:complexContent>
       <xs:extension base="hardware">
         <xs:sequence>
          <xs:element name="" type="manageddevice" nillable="true" minOccurs="0" />
          <xs:element name="tag" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="expectednumberofjoins" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidonsinglemanytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="citizen" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="GeneratedName" type="state" nillable="true" minOccurs="0" />
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidonmanytoone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="citizen" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:complexContent>
       <xs:extension base="parent>">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="arent" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericsinheritancetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childhierarchy2" >
      <xs:complexContent>
       <xs:extension base="parenthierarchy2>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:complexContent>
       <xs:extension base="child>">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="children" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parenthierarchy2" >
      <xs:complexContent>
       <xs:extension base="childhierarchy2>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childhierarchy1" >
      <xs:complexContent>
       <xs:extension base="child<parenthierarchy1>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childhierarchy22" >
      <xs:complexContent>
       <xs:extension base="childhierarchy2<parenthierarchy22>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parenthierarchy22" >
      <xs:complexContent>
       <xs:extension base="parenthierarchy2<childhierarchy22>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parenthierarchy1" >
      <xs:complexContent>
       <xs:extension base="parent<childhierarchy1>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interfacestest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contactimpl" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userimpl" >
      <xs:sequence>
        <xs:element name="contacts" type="contact" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="printer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="printercable" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="printer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="backquotetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bug" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="categories" type="category" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationgroupstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ddlwithoutcallbacktest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tv" >
      <xs:sequence>
        <xs:element name="serial" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="exp" type="xs:dateTime" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="lifetime" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="display" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brand" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="button" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="size" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rock" >
      <xs:complexContent>
       <xs:extension base="music">
         <xs:sequence>
          <xs:element name="bit" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="strict" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationprovidedfactorytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="music" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatetraversableresolvertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanvalidationdisabledtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tvowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="tv" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="displayconnector" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="GeneratedName" type="display" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="color" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ddltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cupholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="radius" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="screen" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="stop" type="button" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="powersupply" nillable="true" minOccurs="0" />
        <xs:element name="connectors" type="displayconnector" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="displaycolors" type="color" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationautotest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="powersupply" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="power" type="xs:anyType" />
        <xs:element name="position" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="blacklistedzipcode" type="xs:string" />
        <xs:element name="line1" type="xs:string" />
        <xs:element name="line2" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="internalvalid" type="xs:anyType" />
        <xs:element name="floor" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="userid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="color" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userpk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="userkey" type="xs:long" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="parentpk" nillable="true" minOccurs="0" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="biggestforest" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="foresttype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lens" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="focal" type="xs:double" />
        <xs:element name="length" type="xs:double" />
        <xs:element name="GeneratedName" type="frame" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="/***isamaleorafemale*///showhetereogenouspktypesismale" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="treetype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="foresttype" nillable="true" minOccurs="0" />
        <xs:element name="alternative" type="foresttype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="carz" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="make" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="manufactured" type="xs:dateTime" />
        <xs:element name="lot" type="lotz" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foresttype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="trees" type="treetype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="biggestrepresentative" type="biggestforest" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="frame" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lenses" type="lens" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lowername" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="id" type="nodepk" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="parent" type="node" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="userkey" type="xs:long" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="createdby" type="xs:long" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="userid" type="xs:string" />
        <xs:element name="prefix" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname1" type="xs:string" />
        <xs:element name="lastname2" type="xs:string" />
        <xs:element name="middlename1" type="xs:string" />
        <xs:element name="middlename2" type="xs:string" />
        <xs:element name="suffix" type="xs:anyType" />
        <xs:element name="birth" type="xs:dateTime" />
        <xs:element name="birthstate" type="xs:anyType" />
        <xs:element name="birthcountry" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="usertype" type="xs:anyType" />
        <xs:element name="privilege" type="xs:anyType" />
        <xs:element name="state" type="xs:anyType" />
        <xs:element name="country" type="xs:anyType" />
        <xs:element name="preferredname" type="xs:string" />
        <xs:element name="birthplace" type="xs:string" />
        <xs:element name="districtusers" type="districtuser" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="school" type="xs:long" />
        <xs:element name="cluster" type="xs:long" />
        <xs:element name="ldtmm" type="xs:long" />
        <xs:element name="ldtmd" type="xs:long" />
        <xs:element name="pmtmp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderline" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="item" type="xs:string" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="districtuser" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="createdby" type="xs:long" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="////@joincolumn(name" type="user" nillable="true" minOccurs="0" />
        <xs:element name="ldtmd" type="xs:long" />
        <xs:element name="pmtmp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodepk" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="level" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lotzpk" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="loccode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonejointest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytooneonnonpktest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="body" type="color" nillable="true" minOccurs="0" />
        <xs:element name="owner" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warehouseitem" >
      <xs:complexContent>
       <xs:extension base="genericobject">
         <xs:sequence>
          <xs:element name="" type="item" nillable="true" minOccurs="0" />
          <xs:element name="" type="vendor" nillable="true" minOccurs="0" />
          <xs:element name="defaultcost" type="zitemcost" nillable="true" minOccurs="0" />
          <xs:element name="qtyinstock" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:complexContent>
       <xs:extension base="genericobject">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vendor" >
      <xs:complexContent>
       <xs:extension base="genericobject">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zitemcost" >
      <xs:complexContent>
       <xs:extension base="genericobject">
         <xs:sequence>
          <xs:element name="" type="item" nillable="true" minOccurs="0" />
          <xs:element name="" type="vendor" nillable="true" minOccurs="0" />
          <xs:element name="cost" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonereferencedcolumnnametest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="ordernbr" type="xs:string" />
        <xs:element name="orderlines" type="orderline" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lotz" >
      <xs:sequence>
        <xs:element name="lotpk" type="lotzpk" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="location" type="xs:string" />
        <xs:element name="cars" type="carz" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deal" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="from" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="to" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="df" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contest" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="results" type="competitor" nillable="true" minOccurs="0" />
        <xs:element name="heldin" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competitor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ticketcomparator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sky" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="color" type="xs:string" />
        <xs:element name="day" type="xs:string" />
        <xs:element name="month" type="xs:string" />
        <xs:element name="area" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storm" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="start" type="location" nillable="true" minOccurs="0" />
        <xs:element name="end" type="location" nillable="true" minOccurs="0" />
        <xs:element name="stormname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strategytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="city" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stamp" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="passport" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stamps" type="stamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="//todotestidentitygeneratorvisastamp" type="stamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiercollectiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="stores" type="storecustomer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storecustomerpk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="store" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cardfield" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="tmp" type="card" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customers" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="customerid" type="xs:long" />
        <xs:element name="shoppingbasketses" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="card" >
      <xs:sequence>
        <xs:element name="primarykey" type="xs:anyType" />
        <xs:element name="fields" type="cardfield" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="main" type="cardfield" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cardkey" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="children" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alphabeticalmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="droitacces" >
      <xs:sequence>
        <xs:element name="idpk" type="xs:anyType" />
        <xs:element name="idpkbenef" type="benefserv" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cid" >
      <xs:sequence>
        <xs:element name="prent" type="a" nillable="true" minOccurs="0" />
        <xs:element name="sequencenumber" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="acces" >
      <xs:sequence>
        <xs:element name="idpk" type="xs:anyType" />
        <xs:element name="idpkdracc" type="droitacces" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="parent" type="c" nillable="true" minOccurs="0" />
        <xs:element name="sequencenumber" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="idpk" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="parent" type="c" nillable="true" minOccurs="0" />
        <xs:element name="sequencenumber" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alphabeticalidmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="prent" type="a" nillable="true" minOccurs="0" />
        <xs:element name="sequencenumber" type="xs:long" />
        <xs:element name="children" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="benefserv" >
      <xs:sequence>
        <xs:element name="idpk" type="xs:anyType" />
        <xs:element name="idpkser" type="service" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shoppingbasketspk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="owner" type="customers" nillable="true" minOccurs="0" />
        <xs:element name="basketdatetime" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="customers" type="storecustomer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storecustomer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="store" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basketitems" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="GeneratedName" type="shoppingbaskets" nillable="true" minOccurs="0" />
        <xs:element name="cost" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="project" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basketitemspk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="GeneratedName" type="shoppingbaskets" nillable="true" minOccurs="0" />
        <xs:element name="cost" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shoppingbaskets" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="owner" type="customers" nillable="true" minOccurs="0" />
        <xs:element name="basketdatetime" type="xs:anyType" />
        <xs:element name="items" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="b">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classa" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fkcircularitytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classd" >
      <xs:complexContent>
       <xs:extension base="classc">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classb" >
      <xs:complexContent>
       <xs:extension base="classa">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:sequence>
        <xs:element name="id" type="d_pk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="d_pk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="c" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="a_pk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classc" >
      <xs:complexContent>
       <xs:extension base="classb">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a_pk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="d" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="passport" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="owner" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newschemeidtest" >
      <xs:complexContent>
       <xs:extension base="idtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bunny" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="teeth" type="pointytooth" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="toes" type="twinkletoes" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twinkletoes" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bunny" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballer" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="club" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tree" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planetcheatsheet" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="planet" nillable="true" minOccurs="0" />
        <xs:element name="mass" type="xs:double" />
        <xs:element name="radius" type="xs:double" />
        <xs:element name="numberofinhabitants" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballerpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shoe" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ball" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tower" >
      <xs:complexContent>
       <xs:extension base="militarybuilding">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="breakdance" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="goalkeeper" >
      <xs:complexContent>
       <xs:extension base="footballer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planet" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="firtree" >
      <xs:complexContent>
       <xs:extension base="tree">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pointytooth" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bunny" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="militarybuilding" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soundsystem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="serialnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monkey" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnoverridetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumidtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumidtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pointytooth" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bunny" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planet" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soundsystem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballerpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="militarybuilding" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monkey" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="firtree" >
      <xs:complexContent>
       <xs:extension base="tree">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shoe" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ball" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bunny" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="teeth" type="pointytooth" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="toes" type="twinkletoes" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="serialnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballer" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="club" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planetcheatsheet" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="planet" nillable="true" minOccurs="0" />
        <xs:element name="mass" type="xs:double" />
        <xs:element name="radius" type="xs:double" />
        <xs:element name="numberofinhabitants" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tower" >
      <xs:complexContent>
       <xs:extension base="militarybuilding">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="breakdance" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tree" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="goalkeeper" >
      <xs:complexContent>
       <xs:extension base="footballer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="twinkletoes" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bunny" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newschemeidtest" >
      <xs:complexContent>
       <xs:extension base="idtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="completesequenceentity" >
      <xs:sequence>
        <xs:element name="seq_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newgeneratormappingstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="minimaltableentity" >
      <xs:sequence>
        <xs:element name="tbl_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="minimalsequenceentity" >
      <xs:sequence>
        <xs:element name="seq_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joincolumnoverridetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="plane" >
      <xs:complexContent>
       <xs:extension base="flyingobject">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="nbrofseats" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foobar" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutabletest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="states" type="state" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="coin" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="currency" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="currency" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notfoundtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="language" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fooditem" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="item" type="xs:string" />
        <xs:element name="order" type="menu" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contractid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="companycode" type="xs:anyType" />
        <xs:element name="contractnumber" type="xs:long" />
        <xs:element name="contractsequencenumber" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manufacturerid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="companycode" type="xs:anyType" />
        <xs:element name="manufacturercode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="model" >
      <xs:sequence>
        <xs:element name="id" type="modelid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="companyid" type="xs:long" />
        <xs:element name="defaultflag" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonewithformulatest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="message" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="languagecode" type="xs:string" />
        <xs:element name="languagename" type="xs:string" />
        <xs:element name="GeneratedName" type="language" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modelid" >
      <xs:sequence>
        <xs:element name="/***/serialversionuid" type="xs:long" />
        <xs:element name="companycode" type="xs:anyType" />
        <xs:element name="manufacturercode" type="xs:anyType" />
        <xs:element name="modelcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contract" >
      <xs:sequence>
        <xs:element name="contractnumber" type="xs:string" />
        <xs:element name="//integercompanycodeid" type="contractid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="manufacturer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="model" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="menu" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="ordernbr" type="xs:string" />
        <xs:element name="isdefault" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manufacturer" >
      <xs:sequence>
        <xs:element name="id" type="manufacturerid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="duplicatetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flight" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a320b" >
      <xs:complexContent>
       <xs:extension base="a320">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primeminister" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="current" type="government" nillable="true" minOccurs="0" />
        <xs:element name="governments" type="government" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cloudtype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aimpl" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="aid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hbmwithidentitytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hbmtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="z" >
      <xs:complexContent>
       <xs:extension base="java.io.serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sky" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="cloudtypes" type="cloudtype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="maincloud" type="cloudtype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:complexContent>
       <xs:extension base="java.io.serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bimpl" >
      <xs:complexContent>
       <xs:extension base="aimpl">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zimpl" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="zid" type="xs:anyType" />
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="government" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="primeminister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="light" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="model" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="manufacturer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manufacturer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="models" type="model" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3xmltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="carmodel" >
      <xs:complexContent>
       <xs:extension base="model">
         <xs:sequence>
          <xs:element name="year" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lighter" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="software" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="versions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newspaper" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="news" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alphabeticaldirectory" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressentry" >
      <xs:sequence>
        <xs:element name="person" type="addressentrypk" nillable="true" minOccurs="0" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="book" type="addressbook" nillable="true" minOccurs="0" />
        <xs:element name="directory" type="alphabeticaldirectory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationuser" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="ref" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gas" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="painting" >
      <xs:sequence>
        <xs:element name="sizex" type="xs:long" />
        <xs:element name="sizey" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="painter" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="atmosphere" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="gases" type="xs:anyType" />
        <xs:element name="colorperdate" type="xs:anyType" />
        <xs:element name="colorperlevel" type="xs:anyType" />
        <xs:element name="gasesperkey" type="xs:anyType" />
        <xs:element name="composition" type="xs:anyType" />
        <xs:element name="gasesdef" type="xs:anyType" />
        <xs:element name="gasesdefleg" type="xs:anyType" />
        <xs:element name="gasesperkeydef" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressentrypk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="paintingpk" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="painter" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trainee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressbook" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="owner" type="xs:string" />
        <xs:element name="entries" type="xs:anyType" />
        <xs:element name="lastnameentries" type="xs:anyType" />
        <xs:element name="directoryentries" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="drawer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="dresses" type="dress" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationgroup" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="generation" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="painter" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="paintings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generation" >
      <xs:sequence>
        <xs:element name="age" type="xs:string" />
        <xs:element name="culture" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="codename" type="xs:string" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="GeneratedName" type="software" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wardrobe" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="drawers" type="drawer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pressreleaseagency" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="providednews" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="training" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="trainees" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dress" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gaskey" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="news" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="detail" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="safemappingtest" >
      <xs:complexContent>
       <xs:extension base="junit.framework.testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="contactinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="move" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="from" type="location" nillable="true" minOccurs="0" />
        <xs:element name="to" type="location" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="socialsite" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="website" type="xs:string" />
        <xs:element name="employee" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trip" >
      <xs:complexContent>
       <xs:extension base="move">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="associationoverridetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="socialtouchpoints" >
      <xs:sequence>
        <xs:element name="//owningsideofmanytomanywebsite" type="socialsite" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addr" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="zipcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyrecord" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parcels" type="xs:anyType" />
        <xs:element name="legacyparcels" type="xs:anyType" />
        <xs:element name="unsortedparcels" type="propertyinfo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="legacyunsortedparcels" type="propertyinfo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyinfo" >
      <xs:sequence>
        <xs:element name="parcelnumber" type="xs:anyType" />
        <xs:element name="size" type="xs:anyType" />
        <xs:element name="tax" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contactinfo" >
      <xs:sequence>
        <xs:element name="ess" type="addr" nillable="true" minOccurs="0" />
        <xs:element name="phonenumbers" type="phonenumber" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="social" type="socialtouchpoints" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributeoverridetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="highestbid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="amount" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="itemid" type="xs:long" />
        <xs:element name="amount" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identity" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synonymousdictionary" >
      <xs:complexContent>
       <xs:extension base="dictionary">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="twilight" >
      <xs:complexContent>
       <xs:extension base="darkness">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="spaceship" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="speed" type="xs:double" />
        <xs:element name="GeneratedName" type="captain" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dimensions" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="night" >
      <xs:complexContent>
       <xs:extension base="darkness">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="duration" type="xs:long" />
          <xs:element name="" type="xs:dateTime" />
          <xs:element name="" type="area" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="area" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="darkness" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mark" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="captain" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="casimirparticle" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dictionary" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="editor" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryandsqltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chaos" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nickname" type="xs:string" />
        <xs:element name="particles" type="casimirparticle" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dimensions" >
      <xs:sequence>
        <xs:element name="length" type="xs:long" />
        <xs:element name="width" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="manufacturerpartnumber" type="xs:string" />
        <xs:element name="manufacturerid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tableperclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="t800" >
      <xs:complexContent>
       <xs:extension base="robot">
         <xs:sequence>
          <xs:element name="targetname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:complexContent>
       <xs:extension base="component">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="machine" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="weight" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="robot" >
      <xs:complexContent>
       <xs:extension base="machine">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tomato" >
      <xs:complexContent>
       <xs:extension base="vegetable">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="apple" >
      <xs:complexContent>
       <xs:extension base="fruit">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="symboliclink" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="target" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="children" type="file" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="file" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vegetable" >
      <xs:sequence>
        <xs:element name="id" type="vegetablepk" nillable="true" minOccurs="0" />
        <xs:element name="priceincent" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="swimmingpool" >
      <xs:complexContent>
       <xs:extension base="pool">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sweater" >
      <xs:complexContent>
       <xs:extension base="clothing">
         <xs:sequence>
          <xs:element name="issweat" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclassandsecondarytable" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="children" type="file" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="programexecution" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="action" type="xs:string" />
        <xs:element name="applieson" type="file" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="legalentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:complexContent>
       <xs:extension base="customer">
         <xs:sequence>
          <xs:element name="companyname" type="xs:string" />
          <xs:element name="companyaddress" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="firtsname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="client" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="street" type="xs:string" />
          <xs:element name="code" type="xs:string" />
          <xs:element name="city" type="xs:string" />
          <xs:element name="" type="account" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="clients" type="client" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="balance" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pool" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="legalentity">
         <xs:sequence>
          <xs:element name="customername" type="xs:string" />
          <xs:element name="customercode" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alarm" >
      <xs:complexContent>
       <xs:extension base="eventinformation">
         <xs:sequence>
          <xs:element name="eventinfo" type="eventinformation" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="financialasset" >
      <xs:complexContent>
       <xs:extension base="asset">
         <xs:sequence>
          <xs:element name="price" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clothing" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="symboliclink" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="target" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventinformation" >
      <xs:sequence>
        <xs:element name="notificationid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="propertyass" type="xs:anyType" />
        <xs:element name="financialass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="file" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyasset" >
      <xs:complexContent>
       <xs:extension base="asset">
         <xs:sequence>
          <xs:element name="price" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="asset" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vegetablepk" >
      <xs:sequence>
        <xs:element name="farmer" type="xs:string" />
        <xs:element name="harvestdate" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="carrot" >
      <xs:complexContent>
       <xs:extension base="vegetable">
         <xs:sequence>
          <xs:element name="length" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="file" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="symboliclink" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="target" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="children" type="file" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fruit" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="papertrash" >
      <xs:complexContent>
       <xs:extension base="trash">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="house" >
      <xs:complexContent>
       <xs:extension base="building">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="noise" >
      <xs:complexContent>
       <xs:extension base="music">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="building" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="street" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trash" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rock" >
      <xs:complexContent>
       <xs:extension base="music">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="funk" >
      <xs:complexContent>
       <xs:extension base="music">
         <xs:sequence>
          <xs:element name="starred" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="music" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="avgbeat" type="xs:long" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bustrip" >
      <xs:sequence>
        <xs:element name="id" type="bustrippk" nillable="true" minOccurs="0" />
        <xs:element name="status" type="availability" nillable="true" minOccurs="0" />
        <xs:element name="serial" type="xs:anyType" />
        <xs:element name="terminustime" type="xs:dateTime" />
        <xs:element name="players" type="xs:anyType" />
        <xs:element name="roads" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaoverridenannotationreadertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="socialsecuritynumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="countrycode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="match" >
      <xs:complexContent>
       <xs:extension base="competition">
         <xs:sequence>
          <xs:element name="competitor1point" type="xs:string" />
          <xs:element name="version" type="xs:anyType" />
          <xs:element name="playerassn" type="socialsecuritynumber" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="socialsecuritymoralaccount" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="countrycode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="availability" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="otherloglistener" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="socialsecurityphysicalaccount" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="countrycode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bustrippk" >
      <xs:sequence>
        <xs:element name="busnumber" type="xs:string" />
        <xs:element name="busdriver" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tennismatch" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="administration" >
      <xs:complexContent>
       <xs:extension base="organization">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="firstname" type="xs:string" />
          <xs:element name="lastname" type="xs:string" />
          <xs:element name="address" type="xs:string" />
          <xs:element name="version" type="xs:anyType" />
          <xs:element name="transientfield" type="xs:string" />
          <xs:element name="default" type="bustrip" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="organization" >
      <xs:sequence>
        <xs:element name="organizationid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlcontexttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loglistener" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warehouseitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="vendor" nillable="true" minOccurs="0" />
        <xs:element name="defaultcost" type="itemcost" nillable="true" minOccurs="0" />
        <xs:element name="qtyinstock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="luggage" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="owner" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="hasinside" type="clothes" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rambler" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bags" type="bag" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bag" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="serial" type="xs:string" />
        <xs:element name="owner" type="rambler" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vendor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clothes" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="flavor" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="referencedcolumnnametest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postman" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="house" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="GeneratedName" type="postman" nillable="true" minOccurs="0" />
        <xs:element name="hasinhabitants" type="inhabitant" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="itemcost" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="vendor" nillable="true" minOccurs="0" />
        <xs:element name="cost" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inhabitant" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="livesin" type="house" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discount" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="discount" type="xs:double" />
        <xs:element name="owner" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicinstantiator" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamiccomponenttuplizer" >
      <xs:complexContent>
       <xs:extension base="pojocomponenttuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dataproxyhandler" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="data" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="pojoentitytuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitynameinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cuisine" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuplizertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hammer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tool" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxybreakingtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="schoolid" type="xs:string" />
        <xs:element name="schoolidsort" type="xs:anyType" />
        <xs:element name="academicyear" type="xs:anyType" />
        <xs:element name="itemlist" type="orderitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="idperson" type="xs:long" />
        <xs:element name="firstname,lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="/***isamaleorafemale*///showhetereogenouspktypesismale" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="favoritesuperhero" type="xs:string" />
        <xs:element name="favoritesinger" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monkey" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trainer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="trainedtigers" type="tiger" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="trainedmonkeys" type="monkey" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="model" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="manufacturer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderitemid" >
      <xs:sequence>
        <xs:element name="schoolid" type="xs:string" />
        <xs:element name="academicyear" type="xs:anyType" />
        <xs:element name="dayno" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="streets" type="street" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="mainstreets" type="street" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manufacturer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="models" type="model" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="street" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="streetname" type="xs:string" />
        <xs:element name="streetnamecopy" type="xs:string" />
        <xs:element name="GeneratedName" type="city" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="parentpk" nillable="true" minOccurs="0" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="organisation" >
      <xs:sequence>
        <xs:element name="idorganisation" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="organisationusers" type="organisationuser" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="troop" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="soldiers" type="soldier" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderitem" >
      <xs:sequence>
        <xs:element name="schoolid" type="xs:string" />
        <xs:element name="academicyear" type="xs:anyType" />
        <xs:element name="dayno" type="xs:anyType" />
        <xs:element name="dayname" type="xs:string" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="politicalparty" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="politicians" type="politician" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderid" >
      <xs:sequence>
        <xs:element name="schoolid" type="xs:string" />
        <xs:element name="academicyear" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="politician" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="party" type="politicalparty" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="organisationuser" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="sometext" type="xs:string" />
          <xs:element name="" type="organisation" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="soldier" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="troop" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tiger" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicule" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="registrationnumber" type="xs:string" />
        <xs:element name="current" type="conductor" nillable="true" minOccurs="0" />
        <xs:element name="year" type="xs:anyType" />
        <xs:element name="previous" type="conductor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conductor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="professionalagreement" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="expiration" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indextest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generatedtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="truck" >
      <xs:complexContent>
       <xs:extension base="vehicule">
         <xs:sequence>
          <xs:element name="weight" type="xs:long" />
          <xs:element name="agreement" type="professionalagreement" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="antenna" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="longitude" type="xs:string" />
        <xs:element name="latitude" type="xs:string" />
        <xs:element name="power" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="tickets" type="ticket" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="discounttickets" type="xs:anyType" />
        <xs:element name="GeneratedName" type="passport" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
</xs:schema> 