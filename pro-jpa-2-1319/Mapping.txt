ClassDiagram.Class>> ProjectAssignment =>=>=> RelationalSchema.Table>> projectassignment;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Attribut>> ProjectAssignment.GeneratedName:Employee =>=>=> RelationalSchema.Column>> projectassignment.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> ProjectAssignment.GeneratedName:Project =>=>=> RelationalSchema.Column>> projectassignment.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> ProjectAssignment.start:Date =>=>=> RelationalSchema.Column>> projectassignment.start;
ClassDiagram.Attribut>> Project.id:int =>=>=> RelationalSchema.Column>> project.id PRIMARY KEY;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.salary:long =>=>=> RelationalSchema.Column>> employee.salary;
Many-To-One relationship from ClassDiagram.Class>>ProjectAssignment  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProjectAssignment  to ClassDiagram.Class>>Project represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Project  to ClassDiagram.Class>>Collection<ProjectAssignment>;
One-To-Many relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Collection<ProjectAssignment>;
