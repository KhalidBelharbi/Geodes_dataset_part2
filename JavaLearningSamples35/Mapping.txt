ClassDiagram.Class>> Note =>=>=> RelationalSchema.Table>> note;
ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Class>> Comment =>=>=> RelationalSchema.Table>> comment;
ClassDiagram.Class>> AuditModel =>=>=> RelationalSchema.Table>> auditmodel;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> UserProfile =>=>=> RelationalSchema.Table>> userprofile;
ClassDiagram.Class>> Tag =>=>=> RelationalSchema.Table>> tag;
ClassDiagram.Class>> Player =>=>=> RelationalSchema.Table>> player;
ClassDiagram.Class>> FootballPosition =>=>=> RelationalSchema.Table>> footballposition;
ClassDiagram.Attribut>> Note.id:Long =>=>=> RelationalSchema.Column>> note.id PRIMARY KEY;
ClassDiagram.Attribut>> Note.//notnullorempty.title:String =>=>=> RelationalSchema.Column>> note.//notnullorempty.title;
ClassDiagram.Attribut>> Note.content:String =>=>=> RelationalSchema.Column>> note.content;
ClassDiagram.Attribut>> Note.createdat:Date =>=>=> RelationalSchema.Column>> note.createdat;
ClassDiagram.Attribut>> Note.updat:Date =>=>=> RelationalSchema.Column>> note.updat;
ClassDiagram.Attribut>> Post.id:Long =>=>=> RelationalSchema.Column>> post.id PRIMARY KEY;
ClassDiagram.Attribut>> Post.title:String =>=>=> RelationalSchema.Column>> post.title;
ClassDiagram.Attribut>> Post.description:String =>=>=> RelationalSchema.Column>> post.description;
ClassDiagram.Attribut>> Post.content:String =>=>=> RelationalSchema.Column>> post.content;
ClassDiagram.Attribut>> Post.postedat:Date =>=>=> RelationalSchema.Column>> post.postedat;
ClassDiagram.Attribut>> Post.lastupdat:Date =>=>=> RelationalSchema.Column>> post.lastupdat;
ClassDiagram.Attribut>> Comment.id:Long =>=>=> RelationalSchema.Column>> comment.id PRIMARY KEY;
ClassDiagram.Attribut>> Comment.text:String =>=>=> RelationalSchema.Column>> comment.text;
ClassDiagram.Attribut>> AuditModel.createdat:Date =>=>=> RelationalSchema.Column>> auditmodel.createdat;
ClassDiagram.Attribut>> AuditModel.updat:Date =>=>=> RelationalSchema.Column>> auditmodel.updat;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> UserProfile.id:Long =>=>=> RelationalSchema.Column>> userprofile.id PRIMARY KEY;
ClassDiagram.Attribut>> UserProfile.phonenumber:String =>=>=> RelationalSchema.Column>> userprofile.phonenumber;
ClassDiagram.Attribut>> UserProfile.GeneratedName:Gender =>=>=> RelationalSchema.Column>> userprofile.GeneratedName;
ClassDiagram.Attribut>> UserProfile.ofbirth:Date =>=>=> RelationalSchema.Column>> userprofile.ofbirth;
ClassDiagram.Attribut>> UserProfile.address1:String =>=>=> RelationalSchema.Column>> userprofile.address1;
ClassDiagram.Attribut>> UserProfile.address2:String =>=>=> RelationalSchema.Column>> userprofile.address2;
ClassDiagram.Attribut>> UserProfile.street:String =>=>=> RelationalSchema.Column>> userprofile.street;
ClassDiagram.Attribut>> UserProfile.city:String =>=>=> RelationalSchema.Column>> userprofile.city;
ClassDiagram.Attribut>> UserProfile.state:String =>=>=> RelationalSchema.Column>> userprofile.state;
ClassDiagram.Attribut>> UserProfile.country:String =>=>=> RelationalSchema.Column>> userprofile.country;
ClassDiagram.Attribut>> UserProfile.zipcode:String =>=>=> RelationalSchema.Column>> userprofile.zipcode;
ClassDiagram.Attribut>> Tag.id:Long =>=>=> RelationalSchema.Column>> tag.id PRIMARY KEY;
ClassDiagram.Attribut>> Tag.name:String =>=>=> RelationalSchema.Column>> tag.name;
ClassDiagram.Attribut>> Player.id:Long =>=>=> RelationalSchema.Column>> player.id PRIMARY KEY;
ClassDiagram.Attribut>> Player.fname:String =>=>=> RelationalSchema.Column>> player.fname;
ClassDiagram.Attribut>> Player.birth:Date =>=>=> RelationalSchema.Column>> player.birth;
ClassDiagram.Attribut>> FootballPosition.id:Long =>=>=> RelationalSchema.Column>> footballposition.id PRIMARY KEY;
ClassDiagram.Attribut>> FootballPosition.positionname:String =>=>=> RelationalSchema.Column>> footballposition.positionname;
Many-To-Many relationship between ClassDiagram.Class>>Post  and ClassDiagram.Class>>set<tag>: post_tags(post_id:Post [PK] #FK to Post,tag_id:set<tag> [PK] #FK to set<tag>);
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>Post represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>userprofile represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>UserProfile  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Player  to ClassDiagram.Class>>footballposition represented by ClassDiagram.Atrribute>>GeneratedName;
