ClassDiagram.Class>> Team =>=>=> RelationalSchema.Table>> team;
ClassDiagram.Class>> Solve =>=>=> RelationalSchema.Table>> solve;
ClassDiagram.Class>> TeamMember =>=>=> RelationalSchema.Table>> teammember;
ClassDiagram.Class>> Problem =>=>=> RelationalSchema.Table>> problem;
ClassDiagram.Class>> Ranking =>=>=> RelationalSchema.Table>> ranking;
ClassDiagram.Class>> Member =>=>=> RelationalSchema.Table>> member;
ClassDiagram.Attribut>> Team.id:Integer =>=>=> RelationalSchema.Column>> team.id PRIMARY KEY;
ClassDiagram.Attribut>> Team.name:String =>=>=> RelationalSchema.Column>> team.name;
ClassDiagram.Attribut>> Solve.problemid:Integer =>=>=> RelationalSchema.Column>> solve.problemid PRIMARY KEY;
ClassDiagram.Attribut>> Solve.id:Integer =>=>=> RelationalSchema.Column>> solve.id PRIMARY KEY;
ClassDiagram.Attribut>> Solve.solvedate:Timestamp =>=>=> RelationalSchema.Column>> solve.solvedate;
ClassDiagram.Attribut>> TeamMember.id:Integer =>=>=> RelationalSchema.Column>> teammember.id PRIMARY KEY;
ClassDiagram.Attribut>> TeamMember.teamid:Integer =>=>=> RelationalSchema.Column>> teammember.teamid PRIMARY KEY;
ClassDiagram.Attribut>> Problem.problemid:Integer =>=>=> RelationalSchema.Column>> problem.problemid PRIMARY KEY;
ClassDiagram.Attribut>> Problem.title:String =>=>=> RelationalSchema.Column>> problem.title;
ClassDiagram.Attribut>> Problem.level:Integer =>=>=> RelationalSchema.Column>> problem.level;
ClassDiagram.Attribut>> Problem.solvecount:Integer =>=>=> RelationalSchema.Column>> problem.solvecount;
ClassDiagram.Attribut>> Problem.averagetry:Float =>=>=> RelationalSchema.Column>> problem.averagetry;
ClassDiagram.Attribut>> Ranking.weekid:Integer =>=>=> RelationalSchema.Column>> ranking.weekid PRIMARY KEY;
ClassDiagram.Attribut>> Ranking.rank:Integer =>=>=> RelationalSchema.Column>> ranking.rank;
ClassDiagram.Attribut>> Ranking.id:Integer =>=>=> RelationalSchema.Column>> ranking.id PRIMARY KEY;
ClassDiagram.Attribut>> Ranking.score:Integer =>=>=> RelationalSchema.Column>> ranking.score;
ClassDiagram.Attribut>> Member.id:Integer =>=>=> RelationalSchema.Column>> member.id PRIMARY KEY;
ClassDiagram.Attribut>> Member.handle:String =>=>=> RelationalSchema.Column>> member.handle;
ClassDiagram.Attribut>> Member.rating:Integer =>=>=> RelationalSchema.Column>> member.rating;
ClassDiagram.Attribut>> Member.solvedclass:String =>=>=> RelationalSchema.Column>> member.solvedclass;
ClassDiagram.Attribut>> Member.rank:Integer =>=>=> RelationalSchema.Column>> member.rank;
Many-To-One relationship from ClassDiagram.Class>>Solve  to ClassDiagram.Class>>integer represented by ClassDiagram.Atrribute>>problemid;
Many-To-One relationship from ClassDiagram.Class>>Solve  to ClassDiagram.Class>>integer represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>TeamMember  to ClassDiagram.Class>>integer represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>TeamMember  to ClassDiagram.Class>>integer represented by ClassDiagram.Atrribute>>teamid;
Many-To-One relationship from ClassDiagram.Class>>Ranking  to ClassDiagram.Class>>integer represented by ClassDiagram.Atrribute>>id;
