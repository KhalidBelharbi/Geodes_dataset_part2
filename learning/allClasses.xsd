<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="solution" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="solution_java_stdinandout2" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stack" >
      <xs:sequence>
        <xs:element name="//链式栈head" type="node" nillable="true" minOccurs="0" />
        <xs:element name="current" type="node" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="result" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="solution" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deadlock" >
      <xs:sequence>
        <xs:element name="/*publicobjectlock1" type="xs:anyType" />
        <xs:element name="lock1" type="object" nillable="true" minOccurs="0" />
        <xs:element name="lock2" type="object" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplelist" >
      <xs:sequence>
        <xs:element name="//头节点head" type="node" nillable="true" minOccurs="0" />
        <xs:element name="//nodetaillength" type="xs:long" />
        <xs:element name="value" type="object" nillable="true" minOccurs="0" />
        <xs:element name="next" type="node" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="looptest" >
      <xs:sequence>
        <xs:element name="result" type="xs:long" />
        <xs:element name="some" type="xs:long" />
        <xs:element name="so" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="factorial" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bubblesort" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="route" >
      <xs:sequence>
        <xs:element name="from" type="town" nillable="true" minOccurs="0" />
        <xs:element name="to" type="town" nillable="true" minOccurs="0" />
        <xs:element name="distance" type="xs:long" />
        <xs:element name="//thisvirableisusedtodrawthegraphnext" type="route" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="town" >
      <xs:sequence>
        <xs:element name="townname" type="xs:string" />
        <xs:element name="//checkifhavevisitthistownwhenpathvisited" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computedistanceutil" >
      <xs:sequence>
        <xs:element name="no_such_route" type="xs:string" />
        <xs:element name="//thedirectedgraphroutes" type="route" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="vertex_list" type="xs:string" />
        <xs:element name="adjtotown" type="xs:long" />
        <xs:element name="maxdistance" type="xs:long" />
        <xs:element name="routescount" type="xs:long" />
        <xs:element name="totalcount" type="xs:long" />
        <xs:element name="path" type="xs:string" />
        <xs:element name="totalcount7" type="xs:long" />
        <xs:element name="totalcount10" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computedistancetest" >
      <xs:sequence>
        <xs:element name="/*expectedoutput:output#1:9output#2:5output#3:13output#4:22output#5:nosuchrouteoutput#6:2output#7:3output#8:9output#9:9output#10:7*//*1~5arethesamekindofproblem6,7,10arethesamekindofproblem8,9arethesamekindofproblempreparationbeforethetest,weshouldbuildagraphwith:ab5,bc4,cd8,dc8,de6,ad5,ce2,eb3,ae7maybecaninitonthebelowconstructor,parametersshouldbeanarrayofthepathsfromooaspect,idefinethenodeasanobjectinsteadofjustusestring*/a" type="town" nillable="true" minOccurs="0" />
        <xs:element name="b" type="town" nillable="true" minOccurs="0" />
        <xs:element name="c" type="town" nillable="true" minOccurs="0" />
        <xs:element name="d" type="town" nillable="true" minOccurs="0" />
        <xs:element name="e" type="town" nillable="true" minOccurs="0" />
        <xs:element name="ab" type="route" nillable="true" minOccurs="0" />
        <xs:element name="bc" type="route" nillable="true" minOccurs="0" />
        <xs:element name="cd" type="route" nillable="true" minOccurs="0" />
        <xs:element name="dc" type="route" nillable="true" minOccurs="0" />
        <xs:element name="de" type="route" nillable="true" minOccurs="0" />
        <xs:element name="ad" type="route" nillable="true" minOccurs="0" />
        <xs:element name="ce" type="route" nillable="true" minOccurs="0" />
        <xs:element name="eb" type="route" nillable="true" minOccurs="0" />
        <xs:element name="ae" type="route" nillable="true" minOccurs="0" />
        <xs:element name="routes" type="route" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="computedistanceutil" nillable="true" minOccurs="0" />
        <xs:element name="expectedex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trainmap7" >
      <xs:sequence>
        <xs:element name="map" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trainmap8" >
      <xs:sequence>
        <xs:element name="map" type="xs:long" />
        <xs:element name="bestpath" type="xs:string" />
        <xs:element name="bestcost" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trainmap10" >
      <xs:sequence>
        <xs:element name="map" type="xs:long" />
        <xs:element name="totoal" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="graphmain6" >
      <xs:sequence>
        <xs:element name="map" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="badrequestexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="main" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="town" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="visited" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="edge" >
      <xs:sequence>
        <xs:element name="origin" type="town" nillable="true" minOccurs="0" />
        <xs:element name="destination" type="town" nillable="true" minOccurs="0" />
        <xs:element name="weight" type="xs:long" />
        <xs:element name="next" type="edge" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="routes" >
      <xs:complexContent>
       <xs:extension base="exception">
         <xs:sequence>
          <xs:element name="routingtable" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="computedistancetest" >
      <xs:sequence>
        <xs:element name="/*expectedoutput:output#1:9output#2:5output#3:13output#4:22output#5:nosuchrouteoutput#6:2output#7:3output#8:9output#9:9output#10:7*//*1~5arethesamekindofproblem6,7,10arethesamekindofproblem8,9arethesamekindofproblempreparationbeforethetest,weshouldbuildagraphwith:ab5,bc4,cd8,dc8,de6,ad5,ce2,eb3,ae7maybecaninitonthebelowconstructor,parametersshouldbeanarrayofthepathsfromooaspect,idefinethenodeasanobjectinsteadofjustusestring*/a" type="town" nillable="true" minOccurs="0" />
        <xs:element name="b" type="town" nillable="true" minOccurs="0" />
        <xs:element name="c" type="town" nillable="true" minOccurs="0" />
        <xs:element name="d" type="town" nillable="true" minOccurs="0" />
        <xs:element name="e" type="town" nillable="true" minOccurs="0" />
        <xs:element name="ab" type="route" nillable="true" minOccurs="0" />
        <xs:element name="bc" type="route" nillable="true" minOccurs="0" />
        <xs:element name="cd" type="route" nillable="true" minOccurs="0" />
        <xs:element name="dc" type="route" nillable="true" minOccurs="0" />
        <xs:element name="de" type="route" nillable="true" minOccurs="0" />
        <xs:element name="ad" type="route" nillable="true" minOccurs="0" />
        <xs:element name="ce" type="route" nillable="true" minOccurs="0" />
        <xs:element name="eb" type="route" nillable="true" minOccurs="0" />
        <xs:element name="ae" type="route" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="computedistanceutil" nillable="true" minOccurs="0" />
        <xs:element name="expectedex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computedistanceutil" >
      <xs:sequence>
        <xs:element name="no_such_route" type="xs:string" />
        <xs:element name="graph" type="xs:anyType" />
        <xs:element name="towns" type="xs:anyType" />
        <xs:element name="//therearetwosuchtrips:c-d-c(2stops).andc-e-b-c(3stops)./*a|{b,5},{d,5},{e,7}b|{c,4}c|{d,8},{e,2}d|{c,8},{e,6}e|{b,3}*/totalcount6" type="xs:long" />
        <xs:element name="totalcount10" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="graphtest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="graph" nillable="true" minOccurs="0" />
        <xs:element name="expectedex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="town" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="visited" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="edge" >
      <xs:sequence>
        <xs:element name="origin" type="town" nillable="true" minOccurs="0" />
        <xs:element name="destination" type="town" nillable="true" minOccurs="0" />
        <xs:element name="weight" type="xs:long" />
        <xs:element name="next" type="edge" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="routes" >
      <xs:complexContent>
       <xs:extension base="exception">
         <xs:sequence>
          <xs:element name="routingtable" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="main" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="graph" >
      <xs:sequence>
        <xs:element name="no_such_route" type="xs:string" />
        <xs:element name="vertexsmap" type="xs:anyType" />
        <xs:element name="totalcount" type="xs:long" />
        <xs:element name="/*ac*/totalcount4stops" type="xs:long" />
        <xs:element name="/**/totaldistance89" type="xs:long" />
        <xs:element name="totalcount10" type="xs:long" />
        <xs:element name="totaldistance" type="xs:long" />
        <xs:element name="path" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trainpathgraph" >
      <xs:sequence>
        <xs:element name="townlist" type="xs:anyType" />
        <xs:element name="no_such_route" type="xs:string" />
        <xs:element name="adj/*edges[0]" type="route" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="allpath" type="xs:anyType" />
        <xs:element name="to" type="xs:long" />
        <xs:element name="maxdistance" type="xs:long" />
        <xs:element name="stops" type="xs:long" />
        <xs:element name="routescount" type="xs:long" />
        <xs:element name="tripscount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trainpathgraphtest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="trainpathgraph" nillable="true" minOccurs="0" />
        <xs:element name="expectedex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="badrequestexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="main" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="route" >
      <xs:sequence>
        <xs:element name="from" type="xs:long" />
        <xs:element name="to" type="xs:long" />
        <xs:element name="weight" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="graph" >
      <xs:sequence>
        <xs:element name="vertex_list" type="xs:string" />
        <xs:element name="adges" type="edge" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="allpath" type="xs:anyType" />
        <xs:element name="to" type="xs:long" />
        <xs:element name="maxdistance" type="xs:long" />
        <xs:element name="stops" type="xs:long" />
        <xs:element name="routescount" type="xs:long" />
        <xs:element name="tripscount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="edge" >
      <xs:sequence>
        <xs:element name="//rowfrom" type="xs:long" />
        <xs:element name="//columnto" type="xs:long" />
        <xs:element name="//distanceweight" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="main" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tinystack" >
      <xs:sequence>
        <xs:element name="array" type="xs:long" />
        <xs:element name="stacktopposition" type="xs:long" />
        <xs:element name="length" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getallsubcollection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="convertdecimaltobinary" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="convertdecimaltooctonary" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javasyntax" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getallsubcollection2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="brread" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirlist" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="writedemo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filestreamtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filestreamtest2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletefiledemo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="createdir" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="brreadlines" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reverseint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twosum" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selfdividingnumbers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="palindrome" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="findmediansortedarrays" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="substringlength" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addtwonumbers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="substringlength2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreach" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jscienceunits" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rex" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="staticfactorymethod" >
      <xs:sequence>
        <xs:element name="a" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="treemain" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mytreenodetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringsize" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deptdao" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="treetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonpatchtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myunits" >
      <xs:complexContent>
       <xs:extension base="systemofunits">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stream" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wsdl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="card" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="treenode" >
      <xs:sequence>
        <xs:element name="childid" type="xs:anyType" />
        <xs:element name="cname" type="xs:string" />
        <xs:element name="parentid" type="xs:anyType" />
        <xs:element name="nodes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="linkedtreenode" >
      <xs:sequence>
        <xs:element name="//存储的数据mdata" type="object" nillable="true" minOccurs="0" />
        <xs:element name="//父亲节点的下标mparent" type="linkedtreenode" nillable="true" minOccurs="0" />
        <xs:element name="//孩子节点的引用mchild" type="linkedtreenode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dept" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="dname" type="xs:string" />
        <xs:element name="children" type="dept" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mytreenode" >
      <xs:sequence>
        <xs:element name="daa" type="xs:anyType" />
        <xs:element name="children" type="mytreenode" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="parent" type="mytreenode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hierarchynode" >
      <xs:sequence>
        <xs:element name="customerid" type="xs:string" />
        <xs:element name="parent" type="hierarchynode" nillable="true" minOccurs="0" />
        <xs:element name="children" type="hierarchynode" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javatree" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="app" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tcity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="map" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tcityrepository" >
      <xs:complexContent>
       <xs:extension base="jparepository<tcity,long>,querydslpredicateexecutor<tcity>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thotelrepositorycustom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thotelrepositoryimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thotelrepository" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tcityrepositorycustom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baserepository" >
      <xs:sequence>
        <xs:element name="em" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tcityrepositoryimpl" >
      <xs:complexContent>
       <xs:extension base="baserepository">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="/***默认方向*/default_direction" type="xs:anyType" />
        <xs:element name="/***属性*/property" type="xs:string" />
        <xs:element name="/***方向*/direction" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thotel" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="city" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryparams" >
      <xs:sequence>
        <xs:element name="/***属性分隔符*/property_separator" type="xs:string" />
        <xs:element name="/***and条件*/andfilters" type="filter" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***or条件*/orfilters" type="filter" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***排序属性*/orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filter" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="/***默认是否忽略大小写*/default_ignore_case" type="xs:anyType" />
        <xs:element name="/***属性*/property" type="xs:string" />
        <xs:element name="/***运算符*/operator" type="xs:anyType" />
        <xs:element name="/***值*/value" type="object" nillable="true" minOccurs="0" />
        <xs:element name="/***是否忽略大小写*/ignorecase" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unittest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="useannotation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testannotationimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleannotation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="businesslogic" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testannotationreport" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testannotation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="saveandread" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="myobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="myobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
        <xs:element name="volatile" type="myobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
        <xs:element name="instance" type="myobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="myobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="myobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="myobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
        <xs:element name="//立即加载" type="myobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="i" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="i" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="i" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread2" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread1" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread1" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread2" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myrunnable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="countoperate" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="synchronizedobject" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="i" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="i" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="countoperate" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="i" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="count" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="count" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="count" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="count" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blogin" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alogin" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loginservlet" >
      <xs:sequence>
        <xs:element name="usernameref" type="xs:string" />
        <xs:element name="passwordref" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread2" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread1" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread2" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread1" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run2later" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run2" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run1timerisdaemon" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run1" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run3" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run2" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run2_1" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run4" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
          <xs:element name="i" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run6" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run2" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="runcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run3" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="runcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run5" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run1" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="runcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run4" >
      <xs:complexContent>
       <xs:extension base="timertask">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="runcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="publicclass" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="publicvar" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="publicvar" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread2" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="list" type="myonelist" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myonelist" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread1" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="list" type="myonelist" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runthread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="volatileisrunning" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="volatilecount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addcountthread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="count" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="main" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sub" >
      <xs:complexContent>
       <xs:extension base="main">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythreadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="sub" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythreada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="sub" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="usernameparam" type="xs:string" />
        <xs:element name="passwordparam" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="1" type="object" nillable="true" minOccurs="0" />
        <xs:element name="2" type="object" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="object" type="myobject" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="object" type="myobject" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="hasselfnumnumref" type="hasselfprivatenum" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hasselfprivatenum" >
      <xs:sequence>
        <xs:element name="num" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="hasselfnumnumref" type="hasselfprivatenum" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
          <xs:element name="" type="userinfo" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="userinfo" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
          <xs:element name="" type="userinfo" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sub" >
      <xs:complexContent>
       <xs:extension base="main">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="main" >
      <xs:sequence>
        <xs:element name="i" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread2" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="task" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread1" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="task" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="task" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="lock" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dealthread" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="lock1" type="object" nillable="true" minOccurs="0" />
        <xs:element name="lock2" type="object" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commonutils" >
      <xs:sequence>
        <xs:element name="begintime1" type="xs:long" />
        <xs:element name="endtime1" type="xs:long" />
        <xs:element name="begintime2" type="xs:long" />
        <xs:element name="endtime2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread1" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="task" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread2" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="task" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="task" >
      <xs:sequence>
        <xs:element name="getdata1" type="xs:string" />
        <xs:element name="getdata2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="printstring" >
      <xs:sequence>
        <xs:element name="iscontinueprint" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="objectservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="objectservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myobject" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="object" type="myobject" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="object" type="myobject" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="any" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread1" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="task" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread2" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="task" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="task" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="hasselfnumnumref" type="hasselfprivatenum" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="hasselfnumnumref" type="hasselfprivatenum" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hasselfprivatenum" >
      <xs:sequence>
        <xs:element name="num" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadc" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="printstring" >
      <xs:sequence>
        <xs:element name="iscontinueprint" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="publicclass" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread1" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="task" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commonutils" >
      <xs:sequence>
        <xs:element name="begintime1" type="xs:long" />
        <xs:element name="endtime1" type="xs:long" />
        <xs:element name="begintime2" type="xs:long" />
        <xs:element name="endtime2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread2" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="task" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="task" >
      <xs:sequence>
        <xs:element name="getdata1" type="xs:string" />
        <xs:element name="getdata2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="iscontinuerun" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="hasselfnumnumref" type="hasselfprivatenum" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hasselfprivatenum" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="hasselfnumnumref" type="hasselfprivatenum" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="myserivce" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="airef" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mylist" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythreadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="list" type="mylist" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythreada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="list" type="mylist" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:sequence>
        <xs:element name="a" type="objecta" nillable="true" minOccurs="0" />
        <xs:element name="b" type="objectb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectb" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada1" >
      <xs:complexContent>
       <xs:extension base="thread{">
         <xs:sequence>
          <xs:element name="a" type="objecta" nillable="true" minOccurs="0" />
          <xs:element name="b" type="objectb" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:sequence>
        <xs:element name="a" type="objecta" nillable="true" minOccurs="0" />
        <xs:element name="b" type="objectb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="main" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objecta" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb1" >
      <xs:complexContent>
       <xs:extension base="thread{">
         <xs:sequence>
          <xs:element name="a" type="objecta" nillable="true" minOccurs="0" />
          <xs:element name="b" type="objectb" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread1" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread2" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lock" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
          <xs:element name="showchar" type="xs:string" />
          <xs:element name="shownumposition" type="xs:long" />
          <xs:element name="//统计打印几个字符prcount" type="xs:long" />
          <xs:element name="volatileaddnumber" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tools" >
      <xs:sequence>
        <xs:element name="tl" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mystack" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="p" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mystack" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c_thread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="r" type="c" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="p_thread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="p" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mystack" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mystack" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="p_thread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="p" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c_thread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="r" type="c" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="p" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mystack" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mystack" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readdata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="writedata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="read" type="readdata" nillable="true" minOccurs="0" />
          <xs:element name="input" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadwrite" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="write" type="writedata" nillable="true" minOccurs="0" />
          <xs:element name="out" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritablethreadlocalext" >
      <xs:complexContent>
       <xs:extension base="inheritablethreadlocal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tools" >
      <xs:sequence>
        <xs:element name="tl" type="inheritablethreadlocalext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c_thread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="r" type="c" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="p_thread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="p" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mystack" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mystack" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="p" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mystack" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tools" >
      <xs:sequence>
        <xs:element name="tl" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tools" >
      <xs:sequence>
        <xs:element name="tl" type="threadlocalext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadlocalext" >
      <xs:complexContent>
       <xs:extension base="threadlocal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="backupa" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="dbtools" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="backupb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="dbtools" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dbtools" >
      <xs:sequence>
        <xs:element name="volatileprevisa" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadc" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="threadb" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="b" type="threadb" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myrunnable" >
      <xs:sequence>
        <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
        <xs:element name="1" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tools" >
      <xs:sequence>
        <xs:element name="tl" type="inheritablethreadlocalext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritablethreadlocalext" >
      <xs:complexContent>
       <xs:extension base="inheritablethreadlocal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synnotifymethodthread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notifythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
        <xs:element name="tl" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadr" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="r" type="c" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadp" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="p" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="lock" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="p" >
      <xs:sequence>
        <xs:element name="lock" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valueobject" >
      <xs:sequence>
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="add" >
      <xs:sequence>
        <xs:element name="lock" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valueobject" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subtract" >
      <xs:sequence>
        <xs:element name="lock" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadadd" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="p" type="add" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadsubtract" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="r" type="subtract" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mystack" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="p" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mystack" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mystack" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c_thread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="r" type="c" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="p_thread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="p" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runfirst" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="b" type="threadb" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythread1" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread2" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="lock" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valueobject" >
      <xs:sequence>
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="p" >
      <xs:sequence>
        <xs:element name="lock" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadc" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="r" type="c" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadp" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="p" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="b" type="threadb" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadc" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="threadb" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="p" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mystack" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mystack" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mystack" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c_thread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="r" type="c" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="p_thread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="p" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadc" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="threadb" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mylist" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="list" type="mylist" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="list" type="mylist" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myrun" >
      <xs:sequence>
        <xs:element name="lock" type="xs:string" />
        <xs:element name="isfirstrunb" type="xs:anyType" />
        <xs:element name="a" type="xs:anyType" />
        <xs:element name="b" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="writedata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readdata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadwrite" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="write" type="writedata" nillable="true" minOccurs="0" />
          <xs:element name="out" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="read" type="readdata" nillable="true" minOccurs="0" />
          <xs:element name="input" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
        <xs:element name="tl" type="threadlocalext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadlocalext" >
      <xs:complexContent>
       <xs:extension base="threadlocal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mylist" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadp" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="p" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadc" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="r" type="c" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valueobject" >
      <xs:sequence>
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="p" >
      <xs:sequence>
        <xs:element name="lock" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="lock" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mystack" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mystack" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="p" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mystack" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="p_thread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="p" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c_thread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="r" type="c" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notifythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadc" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notifythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadc" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="lock" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lock" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadaa" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadbb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lock" nillable="true" minOccurs="0" />
        <xs:element name="a" type="xs:anyType" />
        <xs:element name="b" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="f" >
      <xs:sequence>
        <xs:element name="volatilenextprwho" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
        <xs:element name="volatilenextprwho" type="xs:long" />
        <xs:element name="lock" type="xs:anyType" />
        <xs:element name="a" type="xs:anyType" />
        <xs:element name="b" type="xs:anyType" />
        <xs:element name="c" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythreada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lock" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
        <xs:element name="new" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runfair" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runnotfair" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythreada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythreadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lock" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythread" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lock" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
        <xs:element name="new" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
        <xs:element name="new" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="service" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lock" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="hasvalue" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythreadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythreada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="service" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="run" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myservice" >
      <xs:sequence>
        <xs:element name="lock" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="hasvalue" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mythreadb" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mythreada" >
      <xs:complexContent>
       <xs:extension base="thread">
         <xs:sequence>
          <xs:element name="" type="myservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accountingsyncclass" >
      <xs:sequence>
        <xs:element name="i" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accountingsync" >
      <xs:sequence>
        <xs:element name="instance" type="accountingsync" nillable="true" minOccurs="0" />
        <xs:element name="i" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accountingsync" >
      <xs:sequence>
        <xs:element name="//共享资源(临界资源)i" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accountingsyncbad" >
      <xs:sequence>
        <xs:element name="i" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testassertions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testemployeedetails" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="empbusinesslogic" nillable="true" minOccurs="0" />
        <xs:element name="employee" type="employeedetails" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testjunitingore" >
      <xs:sequence>
        <xs:element name="message" type="xs:string" />
        <xs:element name="GeneratedName" type="messageutil" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messageutil" >
      <xs:sequence>
        <xs:element name="message" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeedetails" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="monthlysalary" type="xs:double" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="empbusinesslogic" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beforeadvice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subject" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subjectdynamicproxy" >
      <xs:complexContent>
       <xs:extension base="dynamicproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="client" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicproxy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myafteradvice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subjectimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iadvice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myinvocationhandler" >
      <xs:sequence>
        <xs:element name="//被代理的对象target" type="object" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cglibproxy" >
      <xs:sequence>
        <xs:element name="s,methodproxymethodproxy)throwsthrowable{returnnull}*///根据目标对象生成一个子类作为他的代理类target" type="object" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rayproxy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="object" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdkproxy" >
      <xs:complexContent>
       <xs:extension base="proxy">
         <xs:sequence>
          <xs:element name="args)throwsthrowable{returnnull}*/target" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxygeneratorutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="$proxy" >
      <xs:complexContent>
       <xs:extension base="proxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxytest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usermanager" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usermanagerimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdaoproxy" >
      <xs:sequence>
        <xs:element name="//接收保存目标对象target" type="iuserdao" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iuserdao" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdao" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="app" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="igameplayer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="client" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gameplayer" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gameplayerproxy" >
      <xs:sequence>
        <xs:element name="gameplayer" type="igameplayer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="client" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ifractory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="muloperationfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addoperation" >
      <xs:complexContent>
       <xs:extension base="operation">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="operation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suboperation" >
      <xs:complexContent>
       <xs:extension base="operation">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="divoperation" >
      <xs:complexContent>
       <xs:extension base="operation">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="muloperation" >
      <xs:complexContent>
       <xs:extension base="operation">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="divoperationfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suboperationfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addoperationfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blackhuman" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="yellowhuman" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="humanfactory" >
      <xs:complexContent>
       <xs:extension base="abstracthumanfactory">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracthumanfactory" >
      <xs:complexContent>
       <xs:extension base="human>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="whitehuman" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nvwa" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlserverdepartment" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idepartment" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlserveruser" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accessdepartment" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accessuser" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlserverfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accessfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ifacfory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="main" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iuser" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletoneager" >
      <xs:sequence>
        <xs:element name="//无人调用，主动实例化instance" type="singletoneager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singleton1notthreadsafe" >
      <xs:sequence>
        <xs:element name="instance" type="singleton1notthreadsafe" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletonthreadsafebutslowlazyloading" >
      <xs:sequence>
        <xs:element name="instance" type="singletonthreadsafebutslowlazyloading" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletondoublecheck" >
      <xs:sequence>
        <xs:element name="instance" type="singletondoublecheck" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singleton5" >
      <xs:sequence>
        <xs:element name="instance" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletoninnerstaticclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maintest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dppmetadata" >
      <xs:sequence>
        <xs:element name="namespace" type="xs:string" />
        <xs:element name="entities" type="object" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonconvert" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gsontest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testjsonschema3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="demo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testgetclas" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constructors" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="//**********字段*************//name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="sex" type="xs:anyType" />
        <xs:element name="phonenum" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fields" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arraylisttest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="linkedlisttest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test1" >
      <xs:complexContent>
       <xs:extension base="cycle">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="continuetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoboxing" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
        <xs:element name="str2" type="xs:string" />
        <xs:element name="1" type="xs:string" />
        <xs:element name="a" type="xs:anyType" />
        <xs:element name="b" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unsafetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadid" >
      <xs:sequence>
        <xs:element name="//atomicintegercontainingthenextthreadidtobeassignednextid" type="xs:anyType" />
        <xs:element name="//threadlocalvariablecontainingeachthread'sidthreadid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testoverloading" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="breaktest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="calculaterows" >
      <xs:sequence>
        <xs:element name="//java类的数量classcount" type="xs:long" />
        <xs:element name="//空行normallines" type="xs:long" />
        <xs:element name="//注释行commentlines" type="xs:long" />
        <xs:element name="//代码行writelines" type="xs:long" />
        <xs:element name="//代码行alllines" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="class" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="array" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teststatic" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aaa" >
      <xs:complexContent>
       <xs:extension base="object{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="object" >
      <xs:sequence>
        <xs:element name="i" type="xs:long" />
        <xs:element name="o" type="object" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testgeneric" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="equalstest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericandoverloading" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="casecompile" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="recursion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newtask" >
      <xs:sequence>
        <xs:element name="task_queue_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="worker" >
      <xs:sequence>
        <xs:element name="task_queue_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="worker2" >
      <xs:sequence>
        <xs:element name="task_queue_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emitlogtopic" >
      <xs:sequence>
        <xs:element name="exchange_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="receivelogstopic" >
      <xs:sequence>
        <xs:element name="exchange_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="recv" >
      <xs:sequence>
        <xs:element name="//thenamesameassenderqueue_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="send" >
      <xs:sequence>
        <xs:element name="//thenameofthequeuequeue_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emitlog" >
      <xs:sequence>
        <xs:element name="exchange_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="receivelogs" >
      <xs:sequence>
        <xs:element name="exchange_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metaspace" >
      <xs:sequence>
        <xs:element name="cp" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usermanagerimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdkproxy" >
      <xs:complexContent>
       <xs:extension base="proxy">
         <xs:sequence>
          <xs:element name="args)throwsthrowable{returnnull}*///需要代理的目标对象target" type="object" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cglibproxy" >
      <xs:sequence>
        <xs:element name="s,methodproxymethodproxy)throwsthrowable{returnnull}*///cglib需要代理的目标对象target" type="object" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usermanager" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tes1" >
      <xs:sequence>
        <xs:element name="ourinstance" type="tes1" nillable="true" minOccurs="0" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="b" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="currenthashmaptest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maptest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="hash" type="xs:long" />
        <xs:element name="ey" type="xs:anyType" />
        <xs:element name="alue" type="xs:anyType" />
        <xs:element name="next" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shellsort" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bubblesort" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quicksortmyversion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quicksort2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="leetcode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quicksort" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="directinsertsort" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simperecuriosonproblems" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hierarchystructurenode" >
      <xs:sequence>
        <xs:element name="customerid" type="xs:string" />
        <xs:element name="hierarchyitems" type="hierarchyitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hierarchystructure" >
      <xs:complexContent>
       <xs:extension base="hierarchystructurenode">
         <xs:sequence>
          <xs:element name="id" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hierarchyitem" >
      <xs:sequence>
        <xs:element name="hieararchystructure" type="hierarchystructure" nillable="true" minOccurs="0" />
        <xs:element name="hieararchystructurenode" type="hierarchystructurenode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stackimplement" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtime" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vmexceptions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringpractise" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teststatic" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methods" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testfinal" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testhashmap" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gcd" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testhashtable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deadlock" >
      <xs:sequence>
        <xs:element name="//必须有两个可以被加锁的对象才能产生死锁，只有一个不会产生死锁问题obj1" type="object" nillable="true" minOccurs="0" />
        <xs:element name="obj2" type="object" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oo" >
      <xs:sequence>
        <xs:element name="a" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stacktraceanalysis" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="a{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="a{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ia" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="e" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testjdbc" >
      <xs:sequence>
        <xs:element name="url" type="xs:string" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="postgresqldrive" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testjdbctemplate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongodbjdbc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="json1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manage accounts" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ii_mdg_bp_rplctco" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="demo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nameid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tcitytest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 