ClassDiagram.Class>> Comment =>=>=> RelationalSchema.Table>> comment;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Attribut>> Comment.author:String =>=>=> RelationalSchema.Column>> comment.author;
ClassDiagram.Attribut>> Comment.content:String =>=>=> RelationalSchema.Column>> comment.content;
ClassDiagram.Attribut>> User.fullname:String =>=>=> RelationalSchema.Column>> user.fullname;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> Post.title:String =>=>=> RelationalSchema.Column>> post.title;
ClassDiagram.Attribut>> Post.content:String =>=>=> RelationalSchema.Column>> post.content;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>post represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Post  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Post  to ClassDiagram.Class>>List<Comment>;
