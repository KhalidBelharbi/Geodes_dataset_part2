<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="artistimportexternal" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="livetemplates" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dataflowcompletion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hippiecompletion" >
      <xs:sequence>
        <xs:element name="somejson" type="xs:string" />
        <xs:element name="data1" type="xs:string" />
        <xs:element name="data2" type="xs:string" />
        <xs:element name="data3" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querycompletion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dataflowanalysisforarrays" >
      <xs:sequence>
        <xs:element name="days_in_month" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dataflowanalysis" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dataflow" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dataflowusage" >
      <xs:sequence>
        <xs:element name="in" type="dataflow" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loopintentions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transformtosingleexitpoint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="regexchecker" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="controlflow" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bindparameterstofields" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="booleanintentions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exceptionintentions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multilineexpressions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="asyncstacktraces" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="markingobject" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="memoryview" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singlelinelambda" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="throwexceptionwhiledebugging" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="smartstep" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="asyncschedulerexample" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lambdaevaluation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inlinedebugging" >
      <xs:sequence>
        <xs:element name="list" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dropframe" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stacktraceexplorer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datatyperendering" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multilinestrings" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="regularexpressions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customisingcolours" >
      <xs:sequence>
        <xs:element name="factor" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postfixcompletion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterhints" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="notes" type="xs:string" />
        <xs:element name="price" type="xs:anyType" />
        <xs:element name="orderitemsbyid" type="orderitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="byid" type="vendor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vendor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="phone" type="xs:string" />
        <xs:element name="email" type="xs:string" />
        <xs:element name="notes" type="xs:string" />
        <xs:element name="productsbyid" type="product" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderitem" >
      <xs:sequence>
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="byid" type="order" nillable="true" minOccurs="0" />
        <xs:element name="byid" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="middlename" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="phone" type="xs:string" />
        <xs:element name="email" type="xs:string" />
        <xs:element name="notes" type="xs:string" />
        <xs:element name="ordersbyid" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="createddate" type="xs:anyType" />
        <xs:element name="deliveryaddress" type="xs:string" />
        <xs:element name="deliverynotes" type="xs:string" />
        <xs:element name="delivereddate" type="xs:anyType" />
        <xs:element name="byid" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="orderitemsbyid" type="orderitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="app" >
      <xs:sequence>
        <xs:element name="select_query" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generateswitchbranches" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generatehashcode" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:string" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="an" type="xs:long" />
        <xs:element name="a" type="xs:anyType" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="a" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="java10inspections" >
      <xs:complexContent>
       <xs:extension base="string,">
         <xs:sequence>
          <xs:element name="" type="person" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="java8inspections" >
      <xs:sequence>
        <xs:element name="integerstringmap" type="xs:anyType" />
        <xs:element name="array" type="xs:string" />
        <xs:element name="converters" type="converter" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="booleaninspections" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="java9inspections" >
      <xs:sequence>
        <xs:element name="example_list" type="xs:anyType" />
        <xs:element name="example_set" type="xs:anyType" />
        <xs:element name="word_to_score" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="java11inspections" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unusedcodecalled" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="java12inspections" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="structuralsearchreplace" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unusedcode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="java13inspections" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="duplicatecodeinspection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="converter" >
      <xs:sequence>
        <xs:element name="identity_" type="converter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="employed" type="xs:anyType" />
          <xs:element name="customer" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="counter" >
      <xs:sequence>
        <xs:element name="empty" type="counter" nillable="true" minOccurs="0" />
        <xs:element name="count" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inspections20183" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullityinference" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optionalinspections" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inspections20173" >
      <xs:sequence>
        <xs:element name="mutablecollection" type="xs:anyType" />
        <xs:element name="mapwithduplicatekeys" type="xs:anyType" />
        <xs:element name="setwithduplicatevalues" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inspections20182" >
      <xs:complexContent>
       <xs:extension base="long>">
         <xs:sequence>
          <xs:element name="big_button_width" type="xs:long" />
          <xs:element name="button_height" type="xs:long" />
          <xs:element name="button_y" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="redundantcode" >
      <xs:sequence>
        <xs:element name="word_to_mood" type="xs:anyType" />
        <xs:element name="words_in_message" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myannotation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="smellycode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deprecation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="java8" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extractfunctionalparameter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typemigrations" >
      <xs:sequence>
        <xs:element name="myresult" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inlinedmethodautomaticallyconverttosingleexitpoint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strings" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extractmethod" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extractinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extractdelegatedelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extractinterfacename" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extractvariable" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="fullname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rateprovider" >
      <xs:sequence>
        <xs:element name="instance" type="rateprovider" nillable="true" minOccurs="0" />
        <xs:element name="sampleapp" type="java8" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rename" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pushmembersdown" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pullmembersup" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extractdelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invertboolean" >
      <xs:sequence>
        <xs:element name="isvalid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="superclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extractparameter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="replaceinheritance" >
      <xs:complexContent>
       <xs:extension base="superclass">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="echo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="makestatic" >
      <xs:sequence>
        <xs:element name="s" type="xs:string" />
        <xs:element name="i" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="callheirarchy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="streams" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localhistory" >
      <xs:sequence>
        <xs:element name="change" type="xs:string" />
        <xs:element name="changes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newfeature" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergechanges" >
      <xs:sequence>
        <xs:element name="an" type="xs:long" />
        <xs:element name="a" type="xs:double" />
        <xs:element name="flag" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:string" />
        <xs:element name="a" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="feature" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="surroundwith" >
      <xs:sequence>
        <xs:element name="workplace" type="location" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="codeformatting" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="everyone" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alphabet" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlcustomerrepository" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inmemorycustomerrepository" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="navigatetotest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongodbcustomerrepository" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerrepository" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="navigatetotesttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customerrepositorytest" >
      <xs:sequence>
        <xs:element name="repository" type="customerrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exceptionstacktracetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="moodtestdata" >
      <xs:sequence>
        <xs:element name="possible_moods" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usertestdata" >
      <xs:sequence>
        <xs:element name="example_handles" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="asyncdebuggingtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="debuggingtest" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alphabettest" >
      <xs:sequence>
        <xs:element name="s" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="java11inspectionstest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unusedcodetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 