ClassDiagram.Class>> EntityMojo =>=>=> RelationalSchema.Table>> entitymojo;
ClassDiagram.Attribut>> EntityMojo.designs:String =>=>=> RelationalSchema.Column>> entitymojo.designs;
ClassDiagram.Attribut>> EntityMojo.outputdirectory:String =>=>=> RelationalSchema.Column>> entitymojo.outputdirectory;
ClassDiagram.Attribut>> EntityMojo.tablepattern:String =>=>=> RelationalSchema.Column>> entitymojo.tablepattern;
ClassDiagram.Attribut>> EntityMojo.targetmodule:String =>=>=> RelationalSchema.Column>> entitymojo.targetmodule;
ClassDiagram.Attribut>> EntityMojo.maxsymbollength:Integer =>=>=> RelationalSchema.Column>> entitymojo.maxsymbollength;
ClassDiagram.Attribut>> EntityMojo./***使用新的基于sequencestylegenerator的id支持，同时要求hibernate版本4.1以上。如果为false，则使用nativegenerator，向下兼容。*/useenhancedsequencegenerator:boolean =>=>=> RelationalSchema.Column>> entitymojo./***使用新的基于sequencestylegenerator的id支持，同时要求hibernate版本4.1以上。如果为false，则使用nativegenerator，向下兼容。*/useenhancedsequencegenerator;
ClassDiagram.Attribut>> EntityMojo./***是否在entity中加入常量table_name,以便于在客户端之类的环境下得到对应的表名*/tablenameconstant:boolean =>=>=> RelationalSchema.Column>> entitymojo./***是否在entity中加入常量table_name,以便于在客户端之类的环境下得到对应的表名*/tablenameconstant;
ClassDiagram.Attribut>> EntityMojo.project:MavenProject =>=>=> RelationalSchema.Column>> entitymojo.project;
ClassDiagram.Attribut>> EntityMojo.GeneratedName:BuildContext =>=>=> RelationalSchema.Column>> entitymojo.GeneratedName;
ClassDiagram.Attribut>> EntityMojo.generators:List<Generator> =>=>=> RelationalSchema.Column>> entitymojo.generators;
