ClassDiagram.Class>> ArticleTag =>=>=> RelationalSchema.Table>> articletag;
ClassDiagram.Class>> Tag =>=>=> RelationalSchema.Table>> tag;
ClassDiagram.Class>> Like =>=>=> RelationalSchema.Table>> like;
ClassDiagram.Class>> Accuse =>=>=> RelationalSchema.Table>> accuse;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Class>> Participant =>=>=> RelationalSchema.Table>> participant;
ClassDiagram.Class>> Auth =>=>=> RelationalSchema.Table>> auth;
ClassDiagram.Class>> Comment =>=>=> RelationalSchema.Table>> comment;
ClassDiagram.Attribut>> ArticleTag.no:int =>=>=> RelationalSchema.Column>> articletag.no PRIMARY KEY;
ClassDiagram.Attribut>> ArticleTag.articleid:int =>=>=> RelationalSchema.Column>> articletag.articleid;
ClassDiagram.Attribut>> ArticleTag.tagid:int =>=>=> RelationalSchema.Column>> articletag.tagid;
ClassDiagram.Attribut>> Tag.tagid:int =>=>=> RelationalSchema.Column>> tag.tagid PRIMARY KEY;
ClassDiagram.Attribut>> Tag.name:String =>=>=> RelationalSchema.Column>> tag.name;
ClassDiagram.Attribut>> Tag.articleid:int =>=>=> RelationalSchema.Column>> tag.articleid;
ClassDiagram.Attribut>> Like.no:int =>=>=> RelationalSchema.Column>> like.no PRIMARY KEY;
ClassDiagram.Attribut>> Like.userid:int =>=>=> RelationalSchema.Column>> like.userid;
ClassDiagram.Attribut>> Like.articleid:int =>=>=> RelationalSchema.Column>> like.articleid;
ClassDiagram.Attribut>> Accuse.accuseid:int =>=>=> RelationalSchema.Column>> accuse.accuseid PRIMARY KEY;
ClassDiagram.Attribut>> Accuse.reporter:String =>=>=> RelationalSchema.Column>> accuse.reporter;
ClassDiagram.Attribut>> Accuse.defendant:String =>=>=> RelationalSchema.Column>> accuse.defendant;
ClassDiagram.Attribut>> Accuse.accusekind:int =>=>=> RelationalSchema.Column>> accuse.accusekind;
ClassDiagram.Attribut>> Accuse.accusereason:String =>=>=> RelationalSchema.Column>> accuse.accusereason;
ClassDiagram.Attribut>> Accuse.accuseurl:String =>=>=> RelationalSchema.Column>> accuse.accuseurl;
ClassDiagram.Attribut>> Accuse.accuseconfirm:int =>=>=> RelationalSchema.Column>> accuse.accuseconfirm;
ClassDiagram.Attribut>> Category.categoryid:int =>=>=> RelationalSchema.Column>> category.categoryid PRIMARY KEY;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> User.userid:int =>=>=> RelationalSchema.Column>> user.userid PRIMARY KEY;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.nickname:String =>=>=> RelationalSchema.Column>> user.nickname;
ClassDiagram.Attribut>> User.address:String =>=>=> RelationalSchema.Column>> user.address;
ClassDiagram.Attribut>> User.grade:int =>=>=> RelationalSchema.Column>> user.grade;
ClassDiagram.Attribut>> User.userpo:int =>=>=> RelationalSchema.Column>> user.userpo;
ClassDiagram.Attribut>> User.birthday:LocalDate =>=>=> RelationalSchema.Column>> user.birthday;
ClassDiagram.Attribut>> User.createtime:LocalDateTime =>=>=> RelationalSchema.Column>> user.createtime;
ClassDiagram.Attribut>> Post.articleid:int =>=>=> RelationalSchema.Column>> post.articleid PRIMARY KEY;
ClassDiagram.Attribut>> Post.categoryid:int =>=>=> RelationalSchema.Column>> post.categoryid;
ClassDiagram.Attribut>> Post.userid:int =>=>=> RelationalSchema.Column>> post.userid;
ClassDiagram.Attribut>> Post.title:String =>=>=> RelationalSchema.Column>> post.title;
ClassDiagram.Attribut>> Post.writer:String =>=>=> RelationalSchema.Column>> post.writer;
ClassDiagram.Attribut>> Post.address:String =>=>=> RelationalSchema.Column>> post.address;
ClassDiagram.Attribut>> Post.description:String =>=>=> RelationalSchema.Column>> post.description;
ClassDiagram.Attribut>> Post.minprice:int =>=>=> RelationalSchema.Column>> post.minprice;
ClassDiagram.Attribut>> Post.sumprice:int =>=>=> RelationalSchema.Column>> post.sumprice;
ClassDiagram.Attribut>> Post.likenum:int =>=>=> RelationalSchema.Column>> post.likenum;
ClassDiagram.Attribut>> Post.commentnum:int =>=>=> RelationalSchema.Column>> post.commentnum;
ClassDiagram.Attribut>> Post.tag:String =>=>=> RelationalSchema.Column>> post.tag;
ClassDiagram.Attribut>> Post.urllink:String =>=>=> RelationalSchema.Column>> post.urllink;
ClassDiagram.Attribut>> Post.image:String =>=>=> RelationalSchema.Column>> post.image;
ClassDiagram.Attribut>> Post.temp:int =>=>=> RelationalSchema.Column>> post.temp;
ClassDiagram.Attribut>> Post.endtime:LocalDateTime =>=>=> RelationalSchema.Column>> post.endtime;
ClassDiagram.Attribut>> Post.//생성시간은자동생성createtime:LocalDateTime =>=>=> RelationalSchema.Column>> post.//생성시간은자동생성createtime;
ClassDiagram.Attribut>> Participant.no:int =>=>=> RelationalSchema.Column>> participant.no PRIMARY KEY;
ClassDiagram.Attribut>> Participant.userid:int =>=>=> RelationalSchema.Column>> participant.userid;
ClassDiagram.Attribut>> Participant.articleid:int =>=>=> RelationalSchema.Column>> participant.articleid;
ClassDiagram.Attribut>> Participant.title:String =>=>=> RelationalSchema.Column>> participant.title;
ClassDiagram.Attribut>> Participant.price:int =>=>=> RelationalSchema.Column>> participant.price;
ClassDiagram.Attribut>> Participant.writer:String =>=>=> RelationalSchema.Column>> participant.writer;
ClassDiagram.Attribut>> Participant.description:String =>=>=> RelationalSchema.Column>> participant.description;
ClassDiagram.Attribut>> Auth.authid:int =>=>=> RelationalSchema.Column>> auth.authid PRIMARY KEY;
ClassDiagram.Attribut>> Auth.email:String =>=>=> RelationalSchema.Column>> auth.email;
ClassDiagram.Attribut>> Auth.authnumber:int =>=>=> RelationalSchema.Column>> auth.authnumber;
ClassDiagram.Attribut>> Comment.commentid:int =>=>=> RelationalSchema.Column>> comment.commentid PRIMARY KEY;
ClassDiagram.Attribut>> Comment.articleid:int =>=>=> RelationalSchema.Column>> comment.articleid;
ClassDiagram.Attribut>> Comment.userid:int =>=>=> RelationalSchema.Column>> comment.userid;
ClassDiagram.Attribut>> Comment.writer:String =>=>=> RelationalSchema.Column>> comment.writer;
ClassDiagram.Attribut>> Comment.content:String =>=>=> RelationalSchema.Column>> comment.content;
ClassDiagram.Attribut>> Comment.createtime:LocalDateTime =>=>=> RelationalSchema.Column>> comment.createtime;
