ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Class>> Tag =>=>=> RelationalSchema.Table>> tag;
ClassDiagram.Attribut>> Post.id:Long =>=>=> RelationalSchema.Column>> post.id PRIMARY KEY;
ClassDiagram.Attribut>> Post.title:String =>=>=> RelationalSchema.Column>> post.title;
ClassDiagram.Attribut>> Post.description:String =>=>=> RelationalSchema.Column>> post.description;
ClassDiagram.Attribut>> Post.content:String =>=>=> RelationalSchema.Column>> post.content;
ClassDiagram.Attribut>> Post.postedat:Date =>=>=> RelationalSchema.Column>> post.postedat;
ClassDiagram.Attribut>> Post.lastupdat:Date =>=>=> RelationalSchema.Column>> post.lastupdat;
ClassDiagram.Attribut>> Tag.id:Long =>=>=> RelationalSchema.Column>> tag.id PRIMARY KEY;
ClassDiagram.Attribut>> Tag.name:String =>=>=> RelationalSchema.Column>> tag.name;
Many-To-Many relationship between ClassDiagram.Class>>Post  and ClassDiagram.Class>>set<tag>: post_tags(post_id:Post [PK] #FK to Post,tag_id:set<tag> [PK] #FK to set<tag>);
