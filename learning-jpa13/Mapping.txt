ClassDiagram.Class>> ExMember =>=>=> RelationalSchema.Table>> exmember;
ClassDiagram.Class>> PerformanceOrder1 =>=>=> RelationalSchema.Table>> performanceorder1;
ClassDiagram.Class>> PerformanceMember1 =>=>=> RelationalSchema.Table>> performancemember1;
ClassDiagram.Class>> ProxyOrderItem =>=>=> RelationalSchema.Table>> proxyorderitem;
ClassDiagram.Class>> ProxyBook =>=>=> RelationalSchema.Table>> proxybook;
ClassDiagram.Class>> ProxyItem =>=>=> RelationalSchema.Table>> proxyitem;
ClassDiagram.Class>> ProxyMember =>=>=> RelationalSchema.Table>> proxymember;
ClassDiagram.Class>> ProxyMovie =>=>=> RelationalSchema.Table>> proxymovie;
ClassDiagram.Attribut>> ExMember.id:Long =>=>=> RelationalSchema.Column>> exmember.id PRIMARY KEY;
ClassDiagram.Attribut>> ExMember.username:String =>=>=> RelationalSchema.Column>> exmember.username;
ClassDiagram.Attribut>> ExMember.age:int =>=>=> RelationalSchema.Column>> exmember.age;
ClassDiagram.Attribut>> ExMember.vip:boolean =>=>=> RelationalSchema.Column>> exmember.vip;
ClassDiagram.Attribut>> PerformanceOrder1.id:Long =>=>=> RelationalSchema.Column>> performanceorder1.id PRIMARY KEY;
ClassDiagram.Attribut>> PerformanceMember1.id:Long =>=>=> RelationalSchema.Column>> performancemember1.id PRIMARY KEY;
ClassDiagram.Attribut>> ProxyOrderItem.id:Long =>=>=> RelationalSchema.Column>> proxyorderitem.id PRIMARY KEY;
ClassDiagram.Attribut>> ProxyBook.author:String =>=>=> RelationalSchema.Column>> proxybook.author;
ClassDiagram.Attribut>> ProxyBook.isbn:String =>=>=> RelationalSchema.Column>> proxybook.isbn;
ClassDiagram.Attribut>> ProxyItem.id:Long =>=>=> RelationalSchema.Column>> proxyitem.id PRIMARY KEY;
ClassDiagram.Attribut>> ProxyItem.name:String =>=>=> RelationalSchema.Column>> proxyitem.name;
ClassDiagram.Attribut>> ProxyItem.price:int =>=>=> RelationalSchema.Column>> proxyitem.price;
ClassDiagram.Attribut>> ProxyItem.stockquantity:int =>=>=> RelationalSchema.Column>> proxyitem.stockquantity;
ClassDiagram.Attribut>> ProxyMember.id:String =>=>=> RelationalSchema.Column>> proxymember.id PRIMARY KEY;
ClassDiagram.Attribut>> ProxyMember.username:String =>=>=> RelationalSchema.Column>> proxymember.username;
ClassDiagram.Attribut>> ProxyMovie.director:String =>=>=> RelationalSchema.Column>> proxymovie.director;
ClassDiagram.Attribut>> ProxyMovie.actor:String =>=>=> RelationalSchema.Column>> proxymovie.actor;
Many-To-One relationship from ClassDiagram.Class>>PerformanceOrder1  to ClassDiagram.Class>>performancemember1 represented by ClassDiagram.Atrribute>>member;
One-To-Many relationship from ClassDiagram.Class>>PerformanceMember1  to ClassDiagram.Class>>List<PerformanceOrder1>;
Many-To-One relationship from ClassDiagram.Class>>ProxyOrderItem  to ClassDiagram.Class>>proxyitem represented by ClassDiagram.Atrribute>>item;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>ProxyItem   Descriminator>>DTYPE: String ;
