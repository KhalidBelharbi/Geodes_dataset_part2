ClassDiagram.Class>> FoodSize =>=>=> RelationalSchema.Table>> foodsize;
ClassDiagram.Class>> Roles =>=>=> RelationalSchema.Table>> roles;
ClassDiagram.Class>> Users =>=>=> RelationalSchema.Table>> users;
ClassDiagram.Class>> Orders =>=>=> RelationalSchema.Table>> orders;
ClassDiagram.Class>> OrderItems =>=>=> RelationalSchema.Table>> orderitems;
ClassDiagram.Class>> FoodMenu =>=>=> RelationalSchema.Table>> foodmenu;
ClassDiagram.Class>> FoodCategory =>=>=> RelationalSchema.Table>> foodcategory;
ClassDiagram.Class>> Clients =>=>=> RelationalSchema.Table>> clients;
ClassDiagram.Class>> FoodPrices =>=>=> RelationalSchema.Table>> foodprices;
ClassDiagram.Attribut>> FoodSize.id:Long =>=>=> RelationalSchema.Column>> foodsize.id PRIMARY KEY;
ClassDiagram.Attribut>> FoodSize.name:String =>=>=> RelationalSchema.Column>> foodsize.name;
ClassDiagram.Attribut>> FoodSize.isactive:Long =>=>=> RelationalSchema.Column>> foodsize.isactive;
ClassDiagram.Attribut>> Roles.id:Long =>=>=> RelationalSchema.Column>> roles.id PRIMARY KEY;
ClassDiagram.Attribut>> Roles.name:String =>=>=> RelationalSchema.Column>> roles.name;
ClassDiagram.Attribut>> Users.fullname:String =>=>=> RelationalSchema.Column>> users.fullname;
ClassDiagram.Attribut>> Users.id:Long =>=>=> RelationalSchema.Column>> users.id PRIMARY KEY;
ClassDiagram.Attribut>> Users.isactive:Long =>=>=> RelationalSchema.Column>> users.isactive;
ClassDiagram.Attribut>> Users.password:String =>=>=> RelationalSchema.Column>> users.password;
ClassDiagram.Attribut>> Users.roleid:Long =>=>=> RelationalSchema.Column>> users.roleid;
ClassDiagram.Attribut>> Users.username:String =>=>=> RelationalSchema.Column>> users.username;
ClassDiagram.Attribut>> FoodCategory.id:Long =>=>=> RelationalSchema.Column>> foodcategory.id PRIMARY KEY;
ClassDiagram.Attribut>> FoodCategory.name:String =>=>=> RelationalSchema.Column>> foodcategory.name;
ClassDiagram.Attribut>> Clients.address:String =>=>=> RelationalSchema.Column>> clients.address;
ClassDiagram.Attribut>> Clients.blockedreason:String =>=>=> RelationalSchema.Column>> clients.blockedreason;
ClassDiagram.Attribut>> Clients.id:Long =>=>=> RelationalSchema.Column>> clients.id PRIMARY KEY;
ClassDiagram.Attribut>> Clients.isactive:Long =>=>=> RelationalSchema.Column>> clients.isactive;
ClassDiagram.Attribut>> Clients.isblocked:Long =>=>=> RelationalSchema.Column>> clients.isblocked;
ClassDiagram.Attribut>> Clients.mobile1:String =>=>=> RelationalSchema.Column>> clients.mobile1;
ClassDiagram.Attribut>> Clients.mobile2:String =>=>=> RelationalSchema.Column>> clients.mobile2;
ClassDiagram.Attribut>> Clients.name:String =>=>=> RelationalSchema.Column>> clients.name;
ClassDiagram.Attribut>> Clients.notes:String =>=>=> RelationalSchema.Column>> clients.notes;
