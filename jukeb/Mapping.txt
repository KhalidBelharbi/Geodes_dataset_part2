ClassDiagram.Class>> PartyUser =>=>=> RelationalSchema.Table>> partyuser;
ClassDiagram.Class>> Picture =>=>=> RelationalSchema.Table>> picture;
ClassDiagram.Class>> Song =>=>=> RelationalSchema.Table>> song;
ClassDiagram.Class>> Artist =>=>=> RelationalSchema.Table>> artist;
ClassDiagram.Class>> Vote =>=>=> RelationalSchema.Table>> vote;
ClassDiagram.Class>> Album =>=>=> RelationalSchema.Table>> album;
ClassDiagram.Class>> Party =>=>=> RelationalSchema.Table>> party;
ClassDiagram.Attribut>> PartyUser.id:long =>=>=> RelationalSchema.Column>> partyuser.id PRIMARY KEY;
ClassDiagram.Attribut>> PartyUser.name:String =>=>=> RelationalSchema.Column>> partyuser.name;
ClassDiagram.Attribut>> PartyUser.picture:URI =>=>=> RelationalSchema.Column>> partyuser.picture;
ClassDiagram.Attribut>> Picture.id:Long =>=>=> RelationalSchema.Column>> picture.id PRIMARY KEY;
ClassDiagram.Attribut>> Picture.file:byte =>=>=> RelationalSchema.Column>> picture.file;
ClassDiagram.Attribut>> Song.id:long =>=>=> RelationalSchema.Column>> song.id PRIMARY KEY;
ClassDiagram.Attribut>> Song.name:String =>=>=> RelationalSchema.Column>> song.name;
ClassDiagram.Attribut>> Song.location:URI =>=>=> RelationalSchema.Column>> song.location;
ClassDiagram.Attribut>> Song.lyrics:String =>=>=> RelationalSchema.Column>> song.lyrics;
ClassDiagram.Attribut>> Song.listposition:long =>=>=> RelationalSchema.Column>> song.listposition;
ClassDiagram.Attribut>> Song.//@manytoone//partyuserproposer//@type(type:LocalDateTime =>=>=> RelationalSchema.Column>> song.//@manytoone//partyuserproposer//@type(type;
ClassDiagram.Attribut>> Song.GeneratedName:SongStatus =>=>=> RelationalSchema.Column>> song.GeneratedName;
ClassDiagram.Attribut>> Artist.name:String =>=>=> RelationalSchema.Column>> artist.name PRIMARY KEY;
ClassDiagram.Attribut>> Artist.picture:URI =>=>=> RelationalSchema.Column>> artist.picture;
ClassDiagram.Attribut>> Vote.id:long =>=>=> RelationalSchema.Column>> vote.id PRIMARY KEY;
ClassDiagram.Attribut>> Vote.vote:int =>=>=> RelationalSchema.Column>> vote.vote;
ClassDiagram.Attribut>> Album.name:String =>=>=> RelationalSchema.Column>> album.name PRIMARY KEY;
ClassDiagram.Attribut>> Album.picture:URI =>=>=> RelationalSchema.Column>> album.picture;
ClassDiagram.Attribut>> Party.name:String =>=>=> RelationalSchema.Column>> party.name PRIMARY KEY;
Many-To-One relationship from ClassDiagram.Class>>Picture  to ClassDiagram.Class>>partyuser represented by ClassDiagram.Atrribute>>//filefileuploader;
Many-To-One relationship from ClassDiagram.Class>>Picture  to ClassDiagram.Class>>party represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Song  to ClassDiagram.Class>>party represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Song  to ClassDiagram.Class>>album represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Song  to ClassDiagram.Class>>List<Vote>;
Many-To-One relationship from ClassDiagram.Class>>Vote  to ClassDiagram.Class>>partyuser represented by ClassDiagram.Atrribute>>voter;
Many-To-One relationship from ClassDiagram.Class>>Album  to ClassDiagram.Class>>artist represented by ClassDiagram.Atrribute>>GeneratedName;
