ClassDiagram.Class>> Request =>=>=> RelationalSchema.Table>> request;
ClassDiagram.Class>> PrivateChat =>=>=> RelationalSchema.Table>> privatechat;
ClassDiagram.Class>> UserPosition =>=>=> RelationalSchema.Table>> userposition;
ClassDiagram.Class>> Relationship =>=>=> RelationalSchema.Table>> relationship;
ClassDiagram.Class>> ChatGroup =>=>=> RelationalSchema.Table>> chatgroup;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Attribut>> Request.id:Long =>=>=> RelationalSchema.Column>> request.id PRIMARY KEY;
ClassDiagram.Attribut>> Request.type:RelationshipType =>=>=> RelationalSchema.Column>> request.type;
ClassDiagram.Attribut>> Request.createdat:LocalDateTime =>=>=> RelationalSchema.Column>> request.createdat;
ClassDiagram.Attribut>> Request.acceptedat:LocalDateTime =>=>=> RelationalSchema.Column>> request.acceptedat;
ClassDiagram.Attribut>> Request.declinedat:LocalDateTime =>=>=> RelationalSchema.Column>> request.declinedat;
ClassDiagram.Attribut>> PrivateChat.firstuser:Long =>=>=> RelationalSchema.Column>> privatechat.firstuser PRIMARY KEY;
ClassDiagram.Attribut>> PrivateChat.seconduser:Long =>=>=> RelationalSchema.Column>> privatechat.seconduser PRIMARY KEY;
ClassDiagram.Attribut>> UserPosition.id:Long =>=>=> RelationalSchema.Column>> userposition.id PRIMARY KEY;
ClassDiagram.Attribut>> UserPosition.latitude:Double =>=>=> RelationalSchema.Column>> userposition.latitude;
ClassDiagram.Attribut>> UserPosition.longitude:Double =>=>=> RelationalSchema.Column>> userposition.longitude;
ClassDiagram.Attribut>> UserPosition.accuracy:Double =>=>=> RelationalSchema.Column>> userposition.accuracy;
ClassDiagram.Attribut>> UserPosition.speed:Double =>=>=> RelationalSchema.Column>> userposition.speed;
ClassDiagram.Attribut>> UserPosition.heading:Double =>=>=> RelationalSchema.Column>> userposition.heading;
ClassDiagram.Attribut>> Relationship.firstuser:Long =>=>=> RelationalSchema.Column>> relationship.firstuser PRIMARY KEY;
ClassDiagram.Attribut>> Relationship.seconduser:Long =>=>=> RelationalSchema.Column>> relationship.seconduser PRIMARY KEY;
ClassDiagram.Attribut>> Relationship.type:RelationshipType =>=>=> RelationalSchema.Column>> relationship.type;
ClassDiagram.Attribut>> Relationship.createdat:LocalDateTime =>=>=> RelationalSchema.Column>> relationship.createdat;
ClassDiagram.Attribut>> Relationship.updatedat:LocalDateTime =>=>=> RelationalSchema.Column>> relationship.updatedat;
ClassDiagram.Attribut>> ChatGroup.id:Long =>=>=> RelationalSchema.Column>> chatgroup.id PRIMARY KEY;
ClassDiagram.Attribut>> ChatGroup.title:String =>=>=> RelationalSchema.Column>> chatgroup.title;
ClassDiagram.Attribut>> ChatGroup.type:ChatGroupType =>=>=> RelationalSchema.Column>> chatgroup.type;
ClassDiagram.Attribut>> ChatGroup.createdat:LocalDateTime =>=>=> RelationalSchema.Column>> chatgroup.createdat;
ClassDiagram.Attribut>> ChatGroup.updatedat:LocalDateTime =>=>=> RelationalSchema.Column>> chatgroup.updatedat;
ClassDiagram.Attribut>> ChatGroup.excludedat:LocalDateTime =>=>=> RelationalSchema.Column>> chatgroup.excludedat;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.createdat:LocalDateTime =>=>=> RelationalSchema.Column>> user.createdat;
ClassDiagram.Attribut>> User.updatedat:LocalDateTime =>=>=> RelationalSchema.Column>> user.updatedat;
ClassDiagram.Attribut>> User.lastlogin:LocalDateTime =>=>=> RelationalSchema.Column>> user.lastlogin;
ClassDiagram.Attribut>> User.avatarimage:byte =>=>=> RelationalSchema.Column>> user.avatarimage;
Many-To-One relationship from ClassDiagram.Class>>Request  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>sender;
Many-To-One relationship from ClassDiagram.Class>>Request  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>destination;
One-To-One relationship between ClassDiagram.Class>>UserPosition  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ChatGroup  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
list<user>: chatgroup_list<user>(chatgroupID:chatgroup [PK] #FK to chatgroup,list<user>ID:list<user> [PK] #FK to list<user>);
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>userposition represented by ClassDiagram.Atrribute>>GeneratedName;
list<chatgroup>: user_list<chatgroup>(userID:user [PK] #FK to user,list<chatgroup>ID:list<chatgroup> [PK] #FK to list<chatgroup>);
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Request>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Request>;
