ClassDiagram.Class>> TravelAccount =>=>=> RelationalSchema.Table>> travelaccount;
ClassDiagram.Class>> FiscalOfficer =>=>=> RelationalSchema.Table>> fiscalofficer;
ClassDiagram.Class>> TravelAccountExtension =>=>=> RelationalSchema.Table>> travelaccountextension;
ClassDiagram.Class>> TravelAccountUseRate =>=>=> RelationalSchema.Table>> travelaccountuserate;
ClassDiagram.Class>> TravelAccountType =>=>=> RelationalSchema.Table>> travelaccounttype;
ClassDiagram.Class>> TravelDocument2 =>=>=> RelationalSchema.Table>> traveldocument2;
ClassDiagram.Attribut>> TravelAccount.serialversionuid:long =>=>=> RelationalSchema.Column>> travelaccount.serialversionuid;
ClassDiagram.Attribut>> TravelAccount.number:String =>=>=> RelationalSchema.Column>> travelaccount.number PRIMARY KEY;
ClassDiagram.Attribut>> TravelAccount.subaccount:String =>=>=> RelationalSchema.Column>> travelaccount.subaccount;
ClassDiagram.Attribut>> TravelAccount.name:String =>=>=> RelationalSchema.Column>> travelaccount.name;
ClassDiagram.Attribut>> TravelAccount.subaccountname:String =>=>=> RelationalSchema.Column>> travelaccount.subaccountname;
ClassDiagram.Attribut>> TravelAccount.subsidizedpercent:KualiPercent =>=>=> RelationalSchema.Column>> travelaccount.subsidizedpercent;
ClassDiagram.Attribut>> TravelAccount.create:Date =>=>=> RelationalSchema.Column>> travelaccount.create;
ClassDiagram.Attribut>> TravelAccount.foid:Long =>=>=> RelationalSchema.Column>> travelaccount.foid;
ClassDiagram.Attribut>> FiscalOfficer.serialversionuid:long =>=>=> RelationalSchema.Column>> fiscalofficer.serialversionuid;
ClassDiagram.Attribut>> FiscalOfficer.id:Long =>=>=> RelationalSchema.Column>> fiscalofficer.id PRIMARY KEY;
ClassDiagram.Attribut>> FiscalOfficer.username:String =>=>=> RelationalSchema.Column>> fiscalofficer.username;
ClassDiagram.Attribut>> FiscalOfficer.firstname:String =>=>=> RelationalSchema.Column>> fiscalofficer.firstname;
ClassDiagram.Attribut>> TravelAccountExtension.serialversionuid:long =>=>=> RelationalSchema.Column>> travelaccountextension.serialversionuid;
ClassDiagram.Attribut>> TravelAccountExtension.number:String =>=>=> RelationalSchema.Column>> travelaccountextension.number PRIMARY KEY;
ClassDiagram.Attribut>> TravelAccountExtension.accounttypecode:String =>=>=> RelationalSchema.Column>> travelaccountextension.accounttypecode;
ClassDiagram.Attribut>> TravelAccountUseRate.serialversionuid:long =>=>=> RelationalSchema.Column>> travelaccountuserate.serialversionuid;
ClassDiagram.Attribut>> TravelAccountUseRate.id:String =>=>=> RelationalSchema.Column>> travelaccountuserate.id PRIMARY KEY;
ClassDiagram.Attribut>> TravelAccountUseRate.number:String =>=>=> RelationalSchema.Column>> travelaccountuserate.number;
ClassDiagram.Attribut>> TravelAccountUseRate.rate:KualiPercent =>=>=> RelationalSchema.Column>> travelaccountuserate.rate;
ClassDiagram.Attribut>> TravelAccountType.serialversionuid:long =>=>=> RelationalSchema.Column>> travelaccounttype.serialversionuid;
ClassDiagram.Attribut>> TravelAccountType.accounttypecode:String =>=>=> RelationalSchema.Column>> travelaccounttype.accounttypecode PRIMARY KEY;
ClassDiagram.Attribut>> TravelAccountType.name:String =>=>=> RelationalSchema.Column>> travelaccounttype.name;
ClassDiagram.Attribut>> TravelDocument2.traveler:String =>=>=> RelationalSchema.Column>> traveldocument2.traveler;
ClassDiagram.Attribut>> TravelDocument2.origin:String =>=>=> RelationalSchema.Column>> traveldocument2.origin;
ClassDiagram.Attribut>> TravelDocument2.destination:String =>=>=> RelationalSchema.Column>> traveldocument2.destination;
ClassDiagram.Attribut>> TravelDocument2.requesttype:String =>=>=> RelationalSchema.Column>> traveldocument2.requesttype;
ClassDiagram.Attribut>> TravelDocument2.accounttype:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
Many-To-One relationship from ClassDiagram.Class>>TravelAccount  to ClassDiagram.Class>>fiscalofficer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>FiscalOfficer  to ClassDiagram.Class>>List<TravelAccount>;
One-To-One relationship between ClassDiagram.Class>>TravelAccountExtension  to ClassDiagram.Class>>travelaccounttype represented by ClassDiagram.Atrribute>>accounttype;
Many-To-Many relationship between ClassDiagram.Class>>TravelDocument2  and ClassDiagram.Class>>list<travelaccount>: trav_doc_2_accounts(fdoc_nbr:TravelDocument2 [PK] #FK to TravelDocument2,acct_num:list<travelaccount> [PK] #FK to list<travelaccount>);
