ClassDiagram.Class>> CommunityComment =>=>=> RelationalSchema.Table>> communitycomment;
ClassDiagram.Class>> AnimalUserAdopt =>=>=> RelationalSchema.Table>> animaluseradopt;
ClassDiagram.Class>> CardnewsContents =>=>=> RelationalSchema.Table>> cardnewscontents;
ClassDiagram.Class>> Hashtag =>=>=> RelationalSchema.Table>> hashtag;
ClassDiagram.Class>> UserCardnewsEducate =>=>=> RelationalSchema.Table>> usercardnewseducate;
ClassDiagram.Class>> Care =>=>=> RelationalSchema.Table>> care;
ClassDiagram.Class>> Community =>=>=> RelationalSchema.Table>> community;
ClassDiagram.Class>> HashtagAnimal =>=>=> RelationalSchema.Table>> hashtaganimal;
ClassDiagram.Class>> DateEntity =>=>=> RelationalSchema.Table>> dateentity;
ClassDiagram.Class>> PublicAnimal =>=>=> RelationalSchema.Table>> publicanimal;
ClassDiagram.Class>> Cardnews =>=>=> RelationalSchema.Table>> cardnews;
ClassDiagram.Class>> Mailbox =>=>=> RelationalSchema.Table>> mailbox;
ClassDiagram.Class>> RegistrationHistory =>=>=> RelationalSchema.Table>> registrationhistory;
ClassDiagram.Class>> AnimalCheckup =>=>=> RelationalSchema.Table>> animalcheckup;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> AnimalStory =>=>=> RelationalSchema.Table>> animalstory;
ClassDiagram.Class>> UserCardnewsScrap =>=>=> RelationalSchema.Table>> usercardnewsscrap;
ClassDiagram.Class>> PushHistory =>=>=> RelationalSchema.Table>> pushhistory;
ClassDiagram.Class>> Code =>=>=> RelationalSchema.Table>> code;
ClassDiagram.Class>> CommunityImg =>=>=> RelationalSchema.Table>> communityimg;
ClassDiagram.Class>> Registration =>=>=> RelationalSchema.Table>> registration;
ClassDiagram.Class>> UserAnimalLike =>=>=> RelationalSchema.Table>> useranimallike;
ClassDiagram.Class>> Animal =>=>=> RelationalSchema.Table>> animal;
ClassDiagram.Class>> MailboxReservation =>=>=> RelationalSchema.Table>> mailboxreservation;
ClassDiagram.Attribut>> CommunityComment.id:int =>=>=> RelationalSchema.Column>> communitycomment.id PRIMARY KEY;
ClassDiagram.Attribut>> CommunityComment.detail:String =>=>=> RelationalSchema.Column>> communitycomment.detail;
ClassDiagram.Attribut>> AnimalUserAdopt.id:int =>=>=> RelationalSchema.Column>> animaluseradopt.id PRIMARY KEY;
ClassDiagram.Attribut>> AnimalUserAdopt.name:String =>=>=> RelationalSchema.Column>> animaluseradopt.name;
ClassDiagram.Attribut>> AnimalUserAdopt.gender:String =>=>=> RelationalSchema.Column>> animaluseradopt.gender;
ClassDiagram.Attribut>> AnimalUserAdopt.kind:String =>=>=> RelationalSchema.Column>> animaluseradopt.kind;
ClassDiagram.Attribut>> AnimalUserAdopt.age:String =>=>=> RelationalSchema.Column>> animaluseradopt.age;
ClassDiagram.Attribut>> AnimalUserAdopt.weight:String =>=>=> RelationalSchema.Column>> animaluseradopt.weight;
ClassDiagram.Attribut>> AnimalUserAdopt.neuteryn:boolean =>=>=> RelationalSchema.Column>> animaluseradopt.neuteryn;
ClassDiagram.Attribut>> AnimalUserAdopt.profileimg:String =>=>=> RelationalSchema.Column>> animaluseradopt.profileimg;
ClassDiagram.Attribut>> AnimalUserAdopt.inoculationarray:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> AnimalUserAdopt.profileimgfile:MultipartFile =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CardnewsContents.id:int =>=>=> RelationalSchema.Column>> cardnewscontents.id PRIMARY KEY;
ClassDiagram.Attribut>> CardnewsContents.title:String =>=>=> RelationalSchema.Column>> cardnewscontents.title;
ClassDiagram.Attribut>> CardnewsContents.thumnailimg:String =>=>=> RelationalSchema.Column>> cardnewscontents.thumnailimg;
ClassDiagram.Attribut>> CardnewsContents.cardnewscontentsimgfile:MultipartFile =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CardnewsContents.detail:String =>=>=> RelationalSchema.Column>> cardnewscontents.detail;
ClassDiagram.Attribut>> Hashtag.id:int =>=>=> RelationalSchema.Column>> hashtag.id PRIMARY KEY;
ClassDiagram.Attribut>> Hashtag.keyword:String =>=>=> RelationalSchema.Column>> hashtag.keyword;
ClassDiagram.Attribut>> UserCardnewsEducate.GeneratedName:User =>=>=> RelationalSchema.Column>> usercardnewseducate.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> UserCardnewsEducate.GeneratedName:Cardnews =>=>=> RelationalSchema.Column>> usercardnewseducate.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Care.id:int =>=>=> RelationalSchema.Column>> care.id PRIMARY KEY;
ClassDiagram.Attribut>> Care.careuserid:String =>=>=> RelationalSchema.Column>> care.careuserid;
ClassDiagram.Attribut>> Care.password:String =>=>=> RelationalSchema.Column>> care.password;
ClassDiagram.Attribut>> Care.region:String =>=>=> RelationalSchema.Column>> care.region;
ClassDiagram.Attribut>> Care.address:String =>=>=> RelationalSchema.Column>> care.address;
ClassDiagram.Attribut>> Care.name:String =>=>=> RelationalSchema.Column>> care.name;
ClassDiagram.Attribut>> Care.tel:String =>=>=> RelationalSchema.Column>> care.tel;
ClassDiagram.Attribut>> Care.status:boolean =>=>=> RelationalSchema.Column>> care.status;
ClassDiagram.Attribut>> Community.id:int =>=>=> RelationalSchema.Column>> community.id PRIMARY KEY;
ClassDiagram.Attribut>> Community.title:String =>=>=> RelationalSchema.Column>> community.title;
ClassDiagram.Attribut>> Community.detail:String =>=>=> RelationalSchema.Column>> community.detail;
ClassDiagram.Attribut>> Community.removeimgarray:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Community.communityimgfiles:List<MultipartFile> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> HashtagAnimal.GeneratedName:Hashtag =>=>=> RelationalSchema.Column>> hashtaganimal.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> HashtagAnimal.GeneratedName:Animal =>=>=> RelationalSchema.Column>> hashtaganimal.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> DateEntity.//@temporal(temporaltype.timestamp)createdat:LocalDateTime =>=>=> RelationalSchema.Column>> dateentity.//@temporal(temporaltype.timestamp)createdat;
ClassDiagram.Attribut>> DateEntity.//@temporal(temporaltype.timestamp)updatedat:LocalDateTime =>=>=> RelationalSchema.Column>> dateentity.//@temporal(temporaltype.timestamp)updatedat;
ClassDiagram.Attribut>> PublicAnimal.id:int =>=>=> RelationalSchema.Column>> publicanimal.id PRIMARY KEY;
ClassDiagram.Attribut>> PublicAnimal.noticeno:String =>=>=> RelationalSchema.Column>> publicanimal.noticeno;
ClassDiagram.Attribut>> PublicAnimal.age:String =>=>=> RelationalSchema.Column>> publicanimal.age;
ClassDiagram.Attribut>> PublicAnimal.careaddr:String =>=>=> RelationalSchema.Column>> publicanimal.careaddr;
ClassDiagram.Attribut>> PublicAnimal.carenm:String =>=>=> RelationalSchema.Column>> publicanimal.carenm;
ClassDiagram.Attribut>> PublicAnimal.caretel:String =>=>=> RelationalSchema.Column>> publicanimal.caretel;
ClassDiagram.Attribut>> PublicAnimal.chargenm:String =>=>=> RelationalSchema.Column>> publicanimal.chargenm;
ClassDiagram.Attribut>> PublicAnimal.colorcd:String =>=>=> RelationalSchema.Column>> publicanimal.colorcd;
ClassDiagram.Attribut>> PublicAnimal.desertionno:String =>=>=> RelationalSchema.Column>> publicanimal.desertionno;
ClassDiagram.Attribut>> PublicAnimal.filename:String =>=>=> RelationalSchema.Column>> publicanimal.filename;
ClassDiagram.Attribut>> PublicAnimal.//profilehappendt:String =>=>=> RelationalSchema.Column>> publicanimal.//profilehappendt;
ClassDiagram.Attribut>> PublicAnimal.happenplace:String =>=>=> RelationalSchema.Column>> publicanimal.happenplace;
ClassDiagram.Attribut>> PublicAnimal.kindcd:String =>=>=> RelationalSchema.Column>> publicanimal.kindcd;
ClassDiagram.Attribut>> PublicAnimal.neuteryn:String =>=>=> RelationalSchema.Column>> publicanimal.neuteryn;
ClassDiagram.Attribut>> PublicAnimal.noticeedt:String =>=>=> RelationalSchema.Column>> publicanimal.noticeedt;
ClassDiagram.Attribut>> PublicAnimal.noticesdt:String =>=>=> RelationalSchema.Column>> publicanimal.noticesdt;
ClassDiagram.Attribut>> PublicAnimal.specialmark:String =>=>=> RelationalSchema.Column>> publicanimal.specialmark;
ClassDiagram.Attribut>> PublicAnimal.//입양공고진행상태,notice:공고중,step:입양절차진행중,end:공고끝processstate:String =>=>=> RelationalSchema.Column>> publicanimal.//입양공고진행상태,notice:공고중,step:입양절차진행중,end:공고끝processstate;
ClassDiagram.Attribut>> PublicAnimal.sexcd:String =>=>=> RelationalSchema.Column>> publicanimal.sexcd;
ClassDiagram.Attribut>> PublicAnimal.weight:String =>=>=> RelationalSchema.Column>> publicanimal.weight;
ClassDiagram.Attribut>> PublicAnimal.officetel:String =>=>=> RelationalSchema.Column>> publicanimal.officetel;
ClassDiagram.Attribut>> PublicAnimal.popfile:String =>=>=> RelationalSchema.Column>> publicanimal.popfile;
ClassDiagram.Attribut>> PublicAnimal.orgnm:String =>=>=> RelationalSchema.Column>> publicanimal.orgnm;
ClassDiagram.Attribut>> PublicAnimal.noticecomment:String =>=>=> RelationalSchema.Column>> publicanimal.noticecomment;
ClassDiagram.Attribut>> Cardnews.id:int =>=>=> RelationalSchema.Column>> cardnews.id PRIMARY KEY;
ClassDiagram.Attribut>> Cardnews.title:String =>=>=> RelationalSchema.Column>> cardnews.title;
ClassDiagram.Attribut>> Cardnews.subtitle:String =>=>=> RelationalSchema.Column>> cardnews.subtitle;
ClassDiagram.Attribut>> Cardnews.type:String =>=>=> RelationalSchema.Column>> cardnews.type;
ClassDiagram.Attribut>> Cardnews.imgpath:String =>=>=> RelationalSchema.Column>> cardnews.imgpath;
ClassDiagram.Attribut>> Cardnews.complete:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Cardnews.cardnewsimgfile:MultipartFile =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Mailbox.id:int =>=>=> RelationalSchema.Column>> mailbox.id PRIMARY KEY;
ClassDiagram.Attribut>> Mailbox.title:String =>=>=> RelationalSchema.Column>> mailbox.title;
ClassDiagram.Attribut>> Mailbox.detail:String =>=>=> RelationalSchema.Column>> mailbox.detail;
ClassDiagram.Attribut>> Mailbox.type:String =>=>=> RelationalSchema.Column>> mailbox.type;
ClassDiagram.Attribut>> Mailbox.complete:boolean =>=>=> RelationalSchema.Column>> mailbox.complete;
ClassDiagram.Attribut>> RegistrationHistory.id:int =>=>=> RelationalSchema.Column>> registrationhistory.id PRIMARY KEY;
ClassDiagram.Attribut>> AnimalCheckup.id:int =>=>=> RelationalSchema.Column>> animalcheckup.id PRIMARY KEY;
ClassDiagram.Attribut>> AnimalCheckup.//code테이블것사용할예정접종한것의이름inoculation:String =>=>=> RelationalSchema.Column>> animalcheckup.//code테이블것사용할예정접종한것의이름inoculation;
ClassDiagram.Attribut>> User.id:String =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.birth:String =>=>=> RelationalSchema.Column>> user.birth;
ClassDiagram.Attribut>> User.phone:String =>=>=> RelationalSchema.Column>> user.phone;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.gender:String =>=>=> RelationalSchema.Column>> user.gender;
ClassDiagram.Attribut>> User.devicetoken:String =>=>=> RelationalSchema.Column>> user.devicetoken;
ClassDiagram.Attribut>> User.type:String =>=>=> RelationalSchema.Column>> user.type;
ClassDiagram.Attribut>> User.profileimg:String =>=>=> RelationalSchema.Column>> user.profileimg;
ClassDiagram.Attribut>> User.pushallow:boolean =>=>=> RelationalSchema.Column>> user.pushallow;
ClassDiagram.Attribut>> AnimalStory.id:int =>=>=> RelationalSchema.Column>> animalstory.id PRIMARY KEY;
ClassDiagram.Attribut>> AnimalStory.filepath:String =>=>=> RelationalSchema.Column>> animalstory.filepath;
ClassDiagram.Attribut>> AnimalStory.filepathaos:String =>=>=> RelationalSchema.Column>> animalstory.filepathaos;
ClassDiagram.Attribut>> AnimalStory.//privatestringoriginfilenameanimalstoryfiles:MultipartFile =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> AnimalStory.animalstoryfilesaos:MultipartFile =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> UserCardnewsScrap.GeneratedName:User =>=>=> RelationalSchema.Column>> usercardnewsscrap.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> UserCardnewsScrap.GeneratedName:Cardnews =>=>=> RelationalSchema.Column>> usercardnewsscrap.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> PushHistory.id:int =>=>=> RelationalSchema.Column>> pushhistory.id PRIMARY KEY;
ClassDiagram.Attribut>> Code.id:int =>=>=> RelationalSchema.Column>> code.id PRIMARY KEY;
ClassDiagram.Attribut>> Code.codegroup:String =>=>=> RelationalSchema.Column>> code.codegroup;
ClassDiagram.Attribut>> Code.code:String =>=>=> RelationalSchema.Column>> code.code;
ClassDiagram.Attribut>> Code.codename:String =>=>=> RelationalSchema.Column>> code.codename;
ClassDiagram.Attribut>> CommunityImg.id:int =>=>=> RelationalSchema.Column>> communityimg.id PRIMARY KEY;
ClassDiagram.Attribut>> CommunityImg.filepath:String =>=>=> RelationalSchema.Column>> communityimg.filepath;
ClassDiagram.Attribut>> CommunityImg.originfilename:String =>=>=> RelationalSchema.Column>> communityimg.originfilename;
ClassDiagram.Attribut>> Registration.id:int =>=>=> RelationalSchema.Column>> registration.id PRIMARY KEY;
ClassDiagram.Attribut>> Registration.phone:String =>=>=> RelationalSchema.Column>> registration.phone;
ClassDiagram.Attribut>> Registration.email:String =>=>=> RelationalSchema.Column>> registration.email;
ClassDiagram.Attribut>> Registration.address:String =>=>=> RelationalSchema.Column>> registration.address;
ClassDiagram.Attribut>> Registration.job:String =>=>=> RelationalSchema.Column>> registration.job;
ClassDiagram.Attribut>> Registration.havepet:boolean =>=>=> RelationalSchema.Column>> registration.havepet;
ClassDiagram.Attribut>> Registration.petinfo:String =>=>=> RelationalSchema.Column>> registration.petinfo;
ClassDiagram.Attribut>> Registration.//adopt,tempadopttype:String =>=>=> RelationalSchema.Column>> registration.//adopt,tempadopttype;
ClassDiagram.Attribut>> Registration.tempperiod:String =>=>=> RelationalSchema.Column>> registration.tempperiod;
ClassDiagram.Attribut>> Registration.//deny,step0,step1,step2,completeregstatus:String =>=>=> RelationalSchema.Column>> registration.//deny,step0,step1,step2,completeregstatus;
ClassDiagram.Attribut>> Registration.meetplace:String =>=>=> RelationalSchema.Column>> registration.meetplace;
ClassDiagram.Attribut>> Registration.meettime:String =>=>=> RelationalSchema.Column>> registration.meettime;
ClassDiagram.Attribut>> Registration.meetmaterial:String =>=>=> RelationalSchema.Column>> registration.meetmaterial;
ClassDiagram.Attribut>> Registration.//true진행중,false종료validreg:boolean =>=>=> RelationalSchema.Column>> registration.//true진행중,false종료validreg;
ClassDiagram.Attribut>> Registration.//true유저가확인함,false유저가확인안함usercheck:boolean =>=>=> RelationalSchema.Column>> registration.//true유저가확인함,false유저가확인안함usercheck;
ClassDiagram.Attribut>> Registration.코드테이블추가해야됨regtype:String =>=>=> RelationalSchema.Column>> registration.코드테이블추가해야됨regtype;
ClassDiagram.Attribut>> Registration.animalfileimgpath:String =>=>=> RelationalSchema.Column>> registration.animalfileimgpath;
ClassDiagram.Attribut>> UserAnimalLike.GeneratedName:User =>=>=> RelationalSchema.Column>> useranimallike.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> UserAnimalLike.GeneratedName:Animal =>=>=> RelationalSchema.Column>> useranimallike.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Animal.id:Integer =>=>=> RelationalSchema.Column>> animal.id PRIMARY KEY;
ClassDiagram.Attribut>> Animal.//dog,cattype:String =>=>=> RelationalSchema.Column>> animal.//dog,cattype;
ClassDiagram.Attribut>> Animal.//@temporal(temporaltype.date)noticeeddt:LocalDate =>=>=> RelationalSchema.Column>> animal.//@temporal(temporaltype.date)noticeeddt;
ClassDiagram.Attribut>> Animal.//입양공고진행상태,notice:공고중,step:입양절차진행중,adopt:입양됨,temp:임보됨,end:안락사processstate:String =>=>=> RelationalSchema.Column>> animal.//입양공고진행상태,notice:공고중,step:입양절차진행중,adopt:입양됨,temp:임보됨,end:안락사processstate;
ClassDiagram.Attribut>> Animal.sexcd:String =>=>=> RelationalSchema.Column>> animal.sexcd;
ClassDiagram.Attribut>> Animal.neuteryn:Boolean =>=>=> RelationalSchema.Column>> animal.neuteryn;
ClassDiagram.Attribut>> Animal.specialmark:String =>=>=> RelationalSchema.Column>> animal.specialmark;
ClassDiagram.Attribut>> Animal.happenplace:String =>=>=> RelationalSchema.Column>> animal.happenplace;
ClassDiagram.Attribut>> Animal.kindcd:String =>=>=> RelationalSchema.Column>> animal.kindcd;
ClassDiagram.Attribut>> Animal.age:String =>=>=> RelationalSchema.Column>> animal.age;
ClassDiagram.Attribut>> Animal.weight:String =>=>=> RelationalSchema.Column>> animal.weight;
ClassDiagram.Attribut>> Animal.//@temporal(temporaltype.date)noticestdt:LocalDate =>=>=> RelationalSchema.Column>> animal.//@temporal(temporaltype.date)noticestdt;
ClassDiagram.Attribut>> Animal.thumbnailimg:String =>=>=> RelationalSchema.Column>> animal.thumbnailimg;
ClassDiagram.Attribut>> Animal.liked:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Animal.thumbnailimgfile:MultipartFile =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> MailboxReservation.//예약에대해서id:int =>=>=> RelationalSchema.Column>> mailboxreservation.//예약에대해서id PRIMARY KEY;
ClassDiagram.Attribut>> MailboxReservation.time:LocalDate =>=>=> RelationalSchema.Column>> mailboxreservation.time;
ClassDiagram.Attribut>> MailboxReservation.title:String =>=>=> RelationalSchema.Column>> mailboxreservation.title;
ClassDiagram.Attribut>> MailboxReservation.detail:String =>=>=> RelationalSchema.Column>> mailboxreservation.detail;
ClassDiagram.Attribut>> MailboxReservation.type:String =>=>=> RelationalSchema.Column>> mailboxreservation.type;
ClassDiagram.Attribut>> MailboxReservation.state:String =>=>=> RelationalSchema.Column>> mailboxreservation.state;
Many-To-One relationship from ClassDiagram.Class>>CommunityComment  to ClassDiagram.Class>>community represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>CommunityComment  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>AnimalUserAdopt  to ClassDiagram.Class>>List<AnimalCheckup>;
Many-To-One relationship from ClassDiagram.Class>>AnimalUserAdopt  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>AnimalUserAdopt  to ClassDiagram.Class>>registration represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CardnewsContents  to ClassDiagram.Class>>cardnews represented by ClassDiagram.Atrribute>>//@joincolumn(name;
One-To-Many relationship from ClassDiagram.Class>>Hashtag  to ClassDiagram.Class>>List<HashtagAnimal>;
Many-To-One relationship from ClassDiagram.Class>>UserCardnewsEducate  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>UserCardnewsEducate  to ClassDiagram.Class>>cardnews represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Care  to ClassDiagram.Class>>List<Animal>;
One-To-Many relationship from ClassDiagram.Class>>Community  to ClassDiagram.Class>>List<CommunityImg>;
Many-To-One relationship from ClassDiagram.Class>>Community  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>HashtagAnimal  to ClassDiagram.Class>>hashtag represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>HashtagAnimal  to ClassDiagram.Class>>animal represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Cardnews  to ClassDiagram.Class>>List<UserCardnewsEducate>;
One-To-Many relationship from ClassDiagram.Class>>Cardnews  to ClassDiagram.Class>>List<UserCardnewsScrap>;
Many-To-One relationship from ClassDiagram.Class>>Mailbox  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>//@jsonignore;
Many-To-One relationship from ClassDiagram.Class>>AnimalCheckup  to ClassDiagram.Class>>animaluseradopt represented by ClassDiagram.Atrribute>>//입양동물정보;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Community>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Registration>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Mailbox>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<UserAnimalLike>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<UserCardnewsScrap>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<UserCardnewsEducate>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<AnimalUserAdopt>;
Many-To-One relationship from ClassDiagram.Class>>AnimalStory  to ClassDiagram.Class>>animal represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>UserCardnewsScrap  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>UserCardnewsScrap  to ClassDiagram.Class>>cardnews represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CommunityImg  to ClassDiagram.Class>>community represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Registration  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Registration  to ClassDiagram.Class>>animal represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>UserAnimalLike  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>UserAnimalLike  to ClassDiagram.Class>>animal represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Animal  to ClassDiagram.Class>>care represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Animal  to ClassDiagram.Class>>List<AnimalStory>;
One-To-Many relationship from ClassDiagram.Class>>Animal  to ClassDiagram.Class>>List<AnimalStory>;
Many-To-One relationship from ClassDiagram.Class>>MailboxReservation  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
