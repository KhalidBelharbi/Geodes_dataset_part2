ClassDiagram.Class>> Rollback =>=>=> RelationalSchema.Table>> rollback;
ClassDiagram.Class>> AppRoleChildExport =>=>=> RelationalSchema.Table>> approlechildexport;
ClassDiagram.Class>> OntologyUserAccess =>=>=> RelationalSchema.Table>> ontologyuseraccess;
ClassDiagram.Class>> I18nResources =>=>=> RelationalSchema.Table>> i18nresources;
ClassDiagram.Class>> Viewer =>=>=> RelationalSchema.Table>> viewer;
ClassDiagram.Class>> OntologyKPI =>=>=> RelationalSchema.Table>> ontologykpi;
ClassDiagram.Class>> AppRoleListOauth =>=>=> RelationalSchema.Table>> approlelistoauth;
ClassDiagram.Class>> AppUserList =>=>=> RelationalSchema.Table>> appuserlist;
ClassDiagram.Class>> OntologyRestSecurity =>=>=> RelationalSchema.Table>> ontologyrestsecurity;
ClassDiagram.Class>> DatasetResource =>=>=> RelationalSchema.Table>> datasetresource;
ClassDiagram.Class>> OntologyVirtualDatasource =>=>=> RelationalSchema.Table>> ontologyvirtualdatasource;
ClassDiagram.Class>> KsqlRelation =>=>=> RelationalSchema.Table>> ksqlrelation;
ClassDiagram.Class>> OntologyVirtual =>=>=> RelationalSchema.Table>> ontologyvirtual;
ClassDiagram.Class>> AppRoleChild =>=>=> RelationalSchema.Table>> approlechild;
ClassDiagram.Class>> Internationalization =>=>=> RelationalSchema.Table>> internationalization;
ClassDiagram.Class>> OntologyCategory =>=>=> RelationalSchema.Table>> ontologycategory;
ClassDiagram.Class>> Subscription =>=>=> RelationalSchema.Table>> subscription;
ClassDiagram.Class>> Ontology =>=>=> RelationalSchema.Table>> ontology;
ClassDiagram.Class>> CategorizationUser =>=>=> RelationalSchema.Table>> categorizationuser;
ClassDiagram.Class>> BinaryFileAccess =>=>=> RelationalSchema.Table>> binaryfileaccess;
ClassDiagram.Class>> VideoCapture =>=>=> RelationalSchema.Table>> videocapture;
ClassDiagram.Class>> ProjectResourceAccessExport =>=>=> RelationalSchema.Table>> projectresourceaccessexport;
ClassDiagram.Class>> MigrationData =>=>=> RelationalSchema.Table>> migrationdata;
ClassDiagram.Class>> RestPlanner =>=>=> RelationalSchema.Table>> restplanner;
ClassDiagram.Class>> Report =>=>=> RelationalSchema.Table>> report;
ClassDiagram.Class>> AppUserExport =>=>=> RelationalSchema.Table>> appuserexport;
ClassDiagram.Class>> ApiOperation =>=>=> RelationalSchema.Table>> apioperation;
ClassDiagram.Class>> ClientConnection =>=>=> RelationalSchema.Table>> clientconnection;
ClassDiagram.Class>> OntologyTimeSeries =>=>=> RelationalSchema.Table>> ontologytimeseries;
ClassDiagram.Class>> OPResource =>=>=> RelationalSchema.Table>> opresource;
ClassDiagram.Class>> AuditableEntityWithUUID =>=>=> RelationalSchema.Table>> auditableentitywithuuid;
ClassDiagram.Class>> AuditableEntity =>=>=> RelationalSchema.Table>> auditableentity;
ClassDiagram.Class>> UserExport =>=>=> RelationalSchema.Table>> userexport;
ClassDiagram.Class>> Themes =>=>=> RelationalSchema.Table>> themes;
ClassDiagram.Class>> OntologyTimeSeriesWindow =>=>=> RelationalSchema.Table>> ontologytimeserieswindow;
ClassDiagram.Class>> GadgetTemplate =>=>=> RelationalSchema.Table>> gadgettemplate;
ClassDiagram.Class>> DigitalTwinType =>=>=> RelationalSchema.Table>> digitaltwintype;
ClassDiagram.Class>> Cache =>=>=> RelationalSchema.Table>> cache;
ClassDiagram.Class>> UserToken =>=>=> RelationalSchema.Table>> usertoken;
ClassDiagram.Class>> OntologyUserAccessType =>=>=> RelationalSchema.Table>> ontologyuseraccesstype;
ClassDiagram.Class>> ClientPlatformOntology =>=>=> RelationalSchema.Table>> clientplatformontology;
ClassDiagram.Class>> ODTypology =>=>=> RelationalSchema.Table>> odtypology;
ClassDiagram.Class>> FlowNode =>=>=> RelationalSchema.Table>> flownode;
ClassDiagram.Class>> FlowDomain =>=>=> RelationalSchema.Table>> flowdomain;
ClassDiagram.Class>> Dashboard =>=>=> RelationalSchema.Table>> dashboard;
ClassDiagram.Class>> ProjectResourceAccessList =>=>=> RelationalSchema.Table>> projectresourceaccesslist;
ClassDiagram.Class>> AppRoleList =>=>=> RelationalSchema.Table>> approlelist;
ClassDiagram.Class>> DataModel =>=>=> RelationalSchema.Table>> datamodel;
ClassDiagram.Class>> NotebookUserAccessType =>=>=> RelationalSchema.Table>> notebookuseraccesstype;
ClassDiagram.Class>> EventsDigitalTwinType =>=>=> RelationalSchema.Table>> eventsdigitaltwintype;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> ProjectResourceAccess =>=>=> RelationalSchema.Table>> projectresourceaccess;
ClassDiagram.Class>> BinaryFile =>=>=> RelationalSchema.Table>> binaryfile;
ClassDiagram.Class>> AppChildExport =>=>=> RelationalSchema.Table>> appchildexport;
ClassDiagram.Class>> Microservice =>=>=> RelationalSchema.Table>> microservice;
ClassDiagram.Class>> GadgetTemplateType =>=>=> RelationalSchema.Table>> gadgettemplatetype;
ClassDiagram.Class>> MarketAsset =>=>=> RelationalSchema.Table>> marketasset;
ClassDiagram.Class>> ProjectExport =>=>=> RelationalSchema.Table>> projectexport;
ClassDiagram.Class>> AppRoleExport =>=>=> RelationalSchema.Table>> approleexport;
ClassDiagram.Class>> GadgetMeasure =>=>=> RelationalSchema.Table>> gadgetmeasure;
ClassDiagram.Class>> App =>=>=> RelationalSchema.Table>> app;
ClassDiagram.Class>> Configuration =>=>=> RelationalSchema.Table>> configuration;
ClassDiagram.Class>> AppUserChildExport =>=>=> RelationalSchema.Table>> appuserchildexport;
ClassDiagram.Class>> DashboardUserAccessType =>=>=> RelationalSchema.Table>> dashboarduseraccesstype;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Api =>=>=> RelationalSchema.Table>> api;
ClassDiagram.Class>> Model =>=>=> RelationalSchema.Table>> model;
ClassDiagram.Class>> DataflowInstance =>=>=> RelationalSchema.Table>> dataflowinstance;
ClassDiagram.Class>> PipelineUserAccess =>=>=> RelationalSchema.Table>> pipelineuseraccess;
ClassDiagram.Class>> Flow =>=>=> RelationalSchema.Table>> flow;
ClassDiagram.Class>> AppUser =>=>=> RelationalSchema.Table>> appuser;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Notebook =>=>=> RelationalSchema.Table>> notebook;
ClassDiagram.Class>> OntologyRestOperation =>=>=> RelationalSchema.Table>> ontologyrestoperation;
ClassDiagram.Class>> DroolsRuleDomain =>=>=> RelationalSchema.Table>> droolsruledomain;
ClassDiagram.Class>> AppList =>=>=> RelationalSchema.Table>> applist;
ClassDiagram.Class>> SupportRequest =>=>=> RelationalSchema.Table>> supportrequest;
ClassDiagram.Class>> ConsoleMenu =>=>=> RelationalSchema.Table>> consolemenu;
ClassDiagram.Class>> DashboardUserAccess =>=>=> RelationalSchema.Table>> dashboarduseraccess;
ClassDiagram.Class>> ApiQueryParameter =>=>=> RelationalSchema.Table>> apiqueryparameter;
ClassDiagram.Class>> GadgetDatasource =>=>=> RelationalSchema.Table>> gadgetdatasource;
ClassDiagram.Class>> GadgetFavorite =>=>=> RelationalSchema.Table>> gadgetfavorite;
ClassDiagram.Class>> KsqlResource =>=>=> RelationalSchema.Table>> ksqlresource;
ClassDiagram.Class>> ODTypologyDataset =>=>=> RelationalSchema.Table>> odtypologydataset;
ClassDiagram.Class>> DashboardConf =>=>=> RelationalSchema.Table>> dashboardconf;
ClassDiagram.Class>> ProjectList =>=>=> RelationalSchema.Table>> projectlist;
ClassDiagram.Class>> AppUserListOauth =>=>=> RelationalSchema.Table>> appuserlistoauth;
ClassDiagram.Class>> Gadget =>=>=> RelationalSchema.Table>> gadget;
ClassDiagram.Class>> PipelineUserAccessType =>=>=> RelationalSchema.Table>> pipelineuseraccesstype;
ClassDiagram.Class>> DigitalTwinDevice =>=>=> RelationalSchema.Table>> digitaltwindevice;
ClassDiagram.Class>> OntologyRestHeaders =>=>=> RelationalSchema.Table>> ontologyrestheaders;
ClassDiagram.Class>> Token =>=>=> RelationalSchema.Table>> token;
ClassDiagram.Class>> WebProject =>=>=> RelationalSchema.Table>> webproject;
ClassDiagram.Class>> OntologyKafkaTopic =>=>=> RelationalSchema.Table>> ontologykafkatopic;
ClassDiagram.Class>> AppChild =>=>=> RelationalSchema.Table>> appchild;
ClassDiagram.Class>> OntologyTimeSeriesProperty =>=>=> RelationalSchema.Table>> ontologytimeseriesproperty;
ClassDiagram.Class>> NotebookUserAccess =>=>=> RelationalSchema.Table>> notebookuseraccess;
ClassDiagram.Class>> AppListOauth =>=>=> RelationalSchema.Table>> applistoauth;
ClassDiagram.Class>> OntologyRestOperationParam =>=>=> RelationalSchema.Table>> ontologyrestoperationparam;
ClassDiagram.Class>> ODBinaryFilesDataset =>=>=> RelationalSchema.Table>> odbinaryfilesdataset;
ClassDiagram.Class>> Categorization =>=>=> RelationalSchema.Table>> categorization;
ClassDiagram.Class>> OntologyDataAccess =>=>=> RelationalSchema.Table>> ontologydataaccess;
ClassDiagram.Class>> AppExport =>=>=> RelationalSchema.Table>> appexport;
ClassDiagram.Class>> UserComment =>=>=> RelationalSchema.Table>> usercomment;
ClassDiagram.Class>> Subscriptor =>=>=> RelationalSchema.Table>> subscriptor;
ClassDiagram.Class>> DroolsRule =>=>=> RelationalSchema.Table>> droolsrule;
ClassDiagram.Class>> QueryTemplate =>=>=> RelationalSchema.Table>> querytemplate;
ClassDiagram.Class>> ParameterModel =>=>=> RelationalSchema.Table>> parametermodel;
ClassDiagram.Class>> Subcategory =>=>=> RelationalSchema.Table>> subcategory;
ClassDiagram.Class>> UserApi =>=>=> RelationalSchema.Table>> userapi;
ClassDiagram.Class>> ClientPlatformInstance =>=>=> RelationalSchema.Table>> clientplatforminstance;
ClassDiagram.Class>> OntologyRest =>=>=> RelationalSchema.Table>> ontologyrest;
ClassDiagram.Class>> KsqlFlow =>=>=> RelationalSchema.Table>> ksqlflow;
ClassDiagram.Class>> Layer =>=>=> RelationalSchema.Table>> layer;
ClassDiagram.Class>> UserRatings =>=>=> RelationalSchema.Table>> userratings;
ClassDiagram.Class>> TwitterListening =>=>=> RelationalSchema.Table>> twitterlistening;
ClassDiagram.Class>> AppRole =>=>=> RelationalSchema.Table>> approle;
ClassDiagram.Class>> ModelExecution =>=>=> RelationalSchema.Table>> modelexecution;
ClassDiagram.Class>> AppUserChild =>=>=> RelationalSchema.Table>> appuserchild;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> ClientPlatformInstanceSimulation =>=>=> RelationalSchema.Table>> clientplatforminstancesimulation;
ClassDiagram.Class>> CategoryRelation =>=>=> RelationalSchema.Table>> categoryrelation;
ClassDiagram.Class>> ActionsDigitalTwinType =>=>=> RelationalSchema.Table>> actionsdigitaltwintype;
ClassDiagram.Class>> PropertyDigitalTwinType =>=>=> RelationalSchema.Table>> propertydigitaltwintype;
ClassDiagram.Class>> ClientPlatform =>=>=> RelationalSchema.Table>> clientplatform;
ClassDiagram.Class>> Pipeline =>=>=> RelationalSchema.Table>> pipeline;
ClassDiagram.Class>> BaseLayer =>=>=> RelationalSchema.Table>> baselayer;
ClassDiagram.Class>> TenantLazy =>=>=> RelationalSchema.Table>> tenantlazy;
ClassDiagram.Class>> VerticalLazy =>=>=> RelationalSchema.Table>> verticallazy;
ClassDiagram.Class>> MasterUserLazy =>=>=> RelationalSchema.Table>> masteruserlazy;
ClassDiagram.Class>> IoTSession =>=>=> RelationalSchema.Table>> iotsession;
ClassDiagram.Class>> OAuthRefreshToken =>=>=> RelationalSchema.Table>> oauthrefreshtoken;
ClassDiagram.Class>> Tenant =>=>=> RelationalSchema.Table>> tenant;
ClassDiagram.Class>> MasterConfiguration =>=>=> RelationalSchema.Table>> masterconfiguration;
ClassDiagram.Class>> MasterDeviceToken =>=>=> RelationalSchema.Table>> masterdevicetoken;
ClassDiagram.Class>> MasterDigitalTwinDeviceToken =>=>=> RelationalSchema.Table>> masterdigitaltwindevicetoken;
ClassDiagram.Class>> OAuthAccessToken =>=>=> RelationalSchema.Table>> oauthaccesstoken;
ClassDiagram.Class>> OAuthClientToken =>=>=> RelationalSchema.Table>> oauthclienttoken;
ClassDiagram.Class>> Vertical =>=>=> RelationalSchema.Table>> vertical;
ClassDiagram.Class>> OAuthClientDetails =>=>=> RelationalSchema.Table>> oauthclientdetails;
ClassDiagram.Class>> MasterUserToken =>=>=> RelationalSchema.Table>> masterusertoken;
ClassDiagram.Class>> MasterUser =>=>=> RelationalSchema.Table>> masteruser;
ClassDiagram.Class>> MasterUserHistoric =>=>=> RelationalSchema.Table>> masteruserhistoric;
ClassDiagram.Class>> OAuthCode =>=>=> RelationalSchema.Table>> oauthcode;
ClassDiagram.Attribut>> Rollback.serialversionuid:long =>=>=> RelationalSchema.Column>> rollback.serialversionuid;
ClassDiagram.Attribut>> Rollback.entityid:String =>=>=> RelationalSchema.Column>> rollback.entityid;
ClassDiagram.Attribut>> Rollback.type:EntityType =>=>=> RelationalSchema.Column>> rollback.type;
ClassDiagram.Attribut>> Rollback.serialization:String =>=>=> RelationalSchema.Column>> rollback.serialization;
ClassDiagram.Attribut>> AppRoleChildExport./***/serialversionuid:long =>=>=> RelationalSchema.Column>> approlechildexport./***/serialversionuid;
ClassDiagram.Attribut>> OntologyUserAccess.serialversionuid:long =>=>=> RelationalSchema.Column>> ontologyuseraccess.serialversionuid;
ClassDiagram.Attribut>> I18nResources.serialversionuid:long =>=>=> RelationalSchema.Column>> i18nresources.serialversionuid;
ClassDiagram.Attribut>> Viewer.serialversionuid:long =>=>=> RelationalSchema.Column>> viewer.serialversionuid;
ClassDiagram.Attribut>> Viewer.description:String =>=>=> RelationalSchema.Column>> viewer.description;
ClassDiagram.Attribut>> Viewer.ispublic:boolean =>=>=> RelationalSchema.Column>> viewer.ispublic;
ClassDiagram.Attribut>> Viewer.js:String =>=>=> RelationalSchema.Column>> viewer.js;
ClassDiagram.Attribut>> Viewer.latitude:String =>=>=> RelationalSchema.Column>> viewer.latitude;
ClassDiagram.Attribut>> Viewer.longitude:String =>=>=> RelationalSchema.Column>> viewer.longitude;
ClassDiagram.Attribut>> Viewer.height:String =>=>=> RelationalSchema.Column>> viewer.height;
ClassDiagram.Attribut>> OntologyKPI./***/serialversionuid:long =>=>=> RelationalSchema.Column>> ontologykpi./***/serialversionuid;
ClassDiagram.Attribut>> OntologyKPI.cron:String =>=>=> RelationalSchema.Column>> ontologykpi.cron;
ClassDiagram.Attribut>> OntologyKPI.from:Date =>=>=> RelationalSchema.Column>> ontologykpi.from;
ClassDiagram.Attribut>> OntologyKPI.to:Date =>=>=> RelationalSchema.Column>> ontologykpi.to;
ClassDiagram.Attribut>> OntologyKPI.query:String =>=>=> RelationalSchema.Column>> ontologykpi.query;
ClassDiagram.Attribut>> OntologyKPI.jobname:String =>=>=> RelationalSchema.Column>> ontologykpi.jobname;
ClassDiagram.Attribut>> OntologyKPI.active:boolean =>=>=> RelationalSchema.Column>> ontologykpi.active;
ClassDiagram.Attribut>> OntologyKPI.postprocess:String =>=>=> RelationalSchema.Column>> ontologykpi.postprocess;
ClassDiagram.Attribut>> AppRoleListOauth./***/serialversionuid:long =>=>=> RelationalSchema.Column>> approlelistoauth./***/serialversionuid;
ClassDiagram.Attribut>> AppUserList./***/serialversionuid:long =>=>=> RelationalSchema.Column>> appuserlist./***/serialversionuid;
ClassDiagram.Attribut>> OntologyRestSecurity./***/serialversionuid:long =>=>=> RelationalSchema.Column>> ontologyrestsecurity./***/serialversionuid;
ClassDiagram.Attribut>> OntologyRestSecurity.config:String =>=>=> RelationalSchema.Column>> ontologyrestsecurity.config;
ClassDiagram.Attribut>> DatasetResource.id:String =>=>=> RelationalSchema.Column>> datasetresource.id;
ClassDiagram.Attribut>> DatasetResource.query:String =>=>=> RelationalSchema.Column>> datasetresource.query;
ClassDiagram.Attribut>> OntologyVirtualDatasource./***/serialversionuid:long =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource./***/serialversionuid;
ClassDiagram.Attribut>> OntologyVirtualDatasource.datasourcename:String =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource.datasourcename;
ClassDiagram.Attribut>> OntologyVirtualDatasource.datasourcedomain:String =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource.datasourcedomain;
ClassDiagram.Attribut>> OntologyVirtualDatasource.sgdb:VirtualDatasourceType =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource.sgdb;
ClassDiagram.Attribut>> OntologyVirtualDatasource.connection:String =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource.connection;
ClassDiagram.Attribut>> OntologyVirtualDatasource.user:String =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource.user;
ClassDiagram.Attribut>> OntologyVirtualDatasource.credentials:String =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource.credentials;
ClassDiagram.Attribut>> OntologyVirtualDatasource.querylimit:int =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource.querylimit;
ClassDiagram.Attribut>> OntologyVirtualDatasource.poolsize:String =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource.poolsize;
ClassDiagram.Attribut>> OntologyVirtualDatasource.ispublic:boolean =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource.ispublic;
ClassDiagram.Attribut>> OntologyVirtualDatasource.validationquerytimeout:Integer =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource.validationquerytimeout;
ClassDiagram.Attribut>> OntologyVirtualDatasource.testonborrow:Boolean =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource.testonborrow;
ClassDiagram.Attribut>> OntologyVirtualDatasource.testwhileidle:Boolean =>=>=> RelationalSchema.Column>> ontologyvirtualdatasource.testwhileidle;
ClassDiagram.Attribut>> KsqlRelation.serialversionuid:long =>=>=> RelationalSchema.Column>> ksqlrelation.serialversionuid;
ClassDiagram.Attribut>> OntologyVirtual./***/serialversionuid:long =>=>=> RelationalSchema.Column>> ontologyvirtual./***/serialversionuid;
ClassDiagram.Attribut>> OntologyVirtual.datasourcetablename:String =>=>=> RelationalSchema.Column>> ontologyvirtual.datasourcetablename;
ClassDiagram.Attribut>> OntologyVirtual.objectid:String =>=>=> RelationalSchema.Column>> ontologyvirtual.objectid;
ClassDiagram.Attribut>> OntologyVirtual.objectgeometry:String =>=>=> RelationalSchema.Column>> ontologyvirtual.objectgeometry;
ClassDiagram.Attribut>> AppRoleChild./***/serialversionuid:long =>=>=> RelationalSchema.Column>> approlechild./***/serialversionuid;
ClassDiagram.Attribut>> Internationalization.serialversionuid:long =>=>=> RelationalSchema.Column>> internationalization.serialversionuid;
ClassDiagram.Attribut>> Internationalization.jsoni18n:String =>=>=> RelationalSchema.Column>> internationalization.jsoni18n;
ClassDiagram.Attribut>> Internationalization.ispublic:boolean =>=>=> RelationalSchema.Column>> internationalization.ispublic;
ClassDiagram.Attribut>> Internationalization.description:String =>=>=> RelationalSchema.Column>> internationalization.description;
ClassDiagram.Attribut>> Internationalization.language:String =>=>=> RelationalSchema.Column>> internationalization.language;
ClassDiagram.Attribut>> OntologyCategory.serialversionuid:long =>=>=> RelationalSchema.Column>> ontologycategory.serialversionuid;
ClassDiagram.Attribut>> OntologyCategory.identification:String =>=>=> RelationalSchema.Column>> ontologycategory.identification;
ClassDiagram.Attribut>> OntologyCategory.description:String =>=>=> RelationalSchema.Column>> ontologycategory.description;
ClassDiagram.Attribut>> Subscription.serialversionuid:long =>=>=> RelationalSchema.Column>> subscription.serialversionuid;
ClassDiagram.Attribut>> Subscription.description:String =>=>=> RelationalSchema.Column>> subscription.description;
ClassDiagram.Attribut>> Subscription.queryfield:String =>=>=> RelationalSchema.Column>> subscription.queryfield;
ClassDiagram.Attribut>> Subscription.queryoperator:String =>=>=> RelationalSchema.Column>> subscription.queryoperator;
ClassDiagram.Attribut>> Subscription.projection:String =>=>=> RelationalSchema.Column>> subscription.projection;
ClassDiagram.Attribut>> Ontology.serialversionuid:long =>=>=> RelationalSchema.Column>> ontology.serialversionuid;
ClassDiagram.Attribut>> Ontology.jsonschema:String =>=>=> RelationalSchema.Column>> ontology.jsonschema;
ClassDiagram.Attribut>> Ontology.xmldiagram:String =>=>=> RelationalSchema.Column>> ontology.xmldiagram;
ClassDiagram.Attribut>> Ontology.ontologyclass:String =>=>=> RelationalSchema.Column>> ontology.ontologyclass;
ClassDiagram.Attribut>> Ontology.active:boolean =>=>=> RelationalSchema.Column>> ontology.active;
ClassDiagram.Attribut>> Ontology.rtdbclean:boolean =>=>=> RelationalSchema.Column>> ontology.rtdbclean;
ClassDiagram.Attribut>> Ontology.GeneratedName:RtdbCleanLapse =>=>=> RelationalSchema.Column>> ontology.GeneratedName;
ClassDiagram.Attribut>> Ontology.rtdbtohdb:boolean =>=>=> RelationalSchema.Column>> ontology.rtdbtohdb;
ClassDiagram.Attribut>> Ontology.GeneratedName:RtdbToHdbStorage =>=>=> RelationalSchema.Column>> ontology.GeneratedName;
ClassDiagram.Attribut>> Ontology.ispublic:boolean =>=>=> RelationalSchema.Column>> ontology.ispublic;
ClassDiagram.Attribut>> Ontology.description:String =>=>=> RelationalSchema.Column>> ontology.description;
ClassDiagram.Attribut>> Ontology.metainf:String =>=>=> RelationalSchema.Column>> ontology.metainf;
ClassDiagram.Attribut>> Ontology.datamodelversion:String =>=>=> RelationalSchema.Column>> ontology.datamodelversion;
ClassDiagram.Attribut>> Ontology.GeneratedName:RtdbDatasource =>=>=> RelationalSchema.Column>> ontology.GeneratedName;
ClassDiagram.Attribut>> Ontology.allowscypherfields:boolean =>=>=> RelationalSchema.Column>> ontology.allowscypherfields;
ClassDiagram.Attribut>> Ontology.allowscreatetopic:boolean =>=>=> RelationalSchema.Column>> ontology.allowscreatetopic;
ClassDiagram.Attribut>> Ontology.//@column(name:boolean =>=>=> RelationalSchema.Column>> ontology.//@column(name;
ClassDiagram.Attribut>> Ontology.//@column(name:String =>=>=> RelationalSchema.Column>> ontology.//@column(name;
ClassDiagram.Attribut>> CategorizationUser.serialversionuid:long =>=>=> RelationalSchema.Column>> categorizationuser.serialversionuid;
ClassDiagram.Attribut>> CategorizationUser.id:String =>=>=> RelationalSchema.Column>> categorizationuser.id PRIMARY KEY;
ClassDiagram.Attribut>> CategorizationUser.active:boolean =>=>=> RelationalSchema.Column>> categorizationuser.active;
ClassDiagram.Attribut>> CategorizationUser.authorizationtype:String =>=>=> RelationalSchema.Column>> categorizationuser.authorizationtype;
ClassDiagram.Attribut>> BinaryFileAccess.serialversionuid:long =>=>=> RelationalSchema.Column>> binaryfileaccess.serialversionuid;
ClassDiagram.Attribut>> BinaryFileAccess.access:Type =>=>=> RelationalSchema.Column>> binaryfileaccess.access;
ClassDiagram.Attribut>> VideoCapture.serialversionuid:long =>=>=> RelationalSchema.Column>> videocapture.serialversionuid;
ClassDiagram.Attribut>> VideoCapture.GeneratedName:Protocol =>=>=> RelationalSchema.Column>> videocapture.GeneratedName;
ClassDiagram.Attribut>> VideoCapture.GeneratedName:Processor =>=>=> RelationalSchema.Column>> videocapture.GeneratedName;
ClassDiagram.Attribut>> VideoCapture.ip:String =>=>=> RelationalSchema.Column>> videocapture.ip;
ClassDiagram.Attribut>> VideoCapture.port:String =>=>=> RelationalSchema.Column>> videocapture.port;
ClassDiagram.Attribut>> VideoCapture.path:String =>=>=> RelationalSchema.Column>> videocapture.path;
ClassDiagram.Attribut>> VideoCapture.username:String =>=>=> RelationalSchema.Column>> videocapture.username;
ClassDiagram.Attribut>> VideoCapture.password:String =>=>=> RelationalSchema.Column>> videocapture.password;
ClassDiagram.Attribut>> VideoCapture.url:String =>=>=> RelationalSchema.Column>> videocapture.url;
ClassDiagram.Attribut>> VideoCapture.GeneratedName:State =>=>=> RelationalSchema.Column>> videocapture.GeneratedName;
ClassDiagram.Attribut>> VideoCapture.samplinginterval:long =>=>=> RelationalSchema.Column>> videocapture.samplinginterval;
ClassDiagram.Attribut>> ProjectResourceAccessExport.serialversionuid:long =>=>=> RelationalSchema.Column>> projectresourceaccessexport.serialversionuid;
ClassDiagram.Attribut>> MigrationData.serialversionuid:long =>=>=> RelationalSchema.Column>> migrationdata.serialversionuid;
ClassDiagram.Attribut>> MigrationData.description:String =>=>=> RelationalSchema.Column>> migrationdata.description;
ClassDiagram.Attribut>> MigrationData.type:DataType =>=>=> RelationalSchema.Column>> migrationdata.type;
ClassDiagram.Attribut>> MigrationData.GeneratedName:Status =>=>=> RelationalSchema.Column>> migrationdata.GeneratedName;
ClassDiagram.Attribut>> MigrationData.filename:String =>=>=> RelationalSchema.Column>> migrationdata.filename;
ClassDiagram.Attribut>> MigrationData.file:byte =>=>=> RelationalSchema.Column>> migrationdata.file;
ClassDiagram.Attribut>> RestPlanner.serialversionuid:long =>=>=> RelationalSchema.Column>> restplanner.serialversionuid;
ClassDiagram.Attribut>> RestPlanner.identification:String =>=>=> RelationalSchema.Column>> restplanner.identification;
ClassDiagram.Attribut>> RestPlanner.description:String =>=>=> RelationalSchema.Column>> restplanner.description;
ClassDiagram.Attribut>> RestPlanner.cron:String =>=>=> RelationalSchema.Column>> restplanner.cron;
ClassDiagram.Attribut>> RestPlanner.from:Date =>=>=> RelationalSchema.Column>> restplanner.from;
ClassDiagram.Attribut>> RestPlanner.to:Date =>=>=> RelationalSchema.Column>> restplanner.to;
ClassDiagram.Attribut>> RestPlanner.url:String =>=>=> RelationalSchema.Column>> restplanner.url;
ClassDiagram.Attribut>> RestPlanner.method:String =>=>=> RelationalSchema.Column>> restplanner.method;
ClassDiagram.Attribut>> RestPlanner.jobname:String =>=>=> RelationalSchema.Column>> restplanner.jobname;
ClassDiagram.Attribut>> RestPlanner.active:boolean =>=>=> RelationalSchema.Column>> restplanner.active;
ClassDiagram.Attribut>> RestPlanner.body:String =>=>=> RelationalSchema.Column>> restplanner.body;
ClassDiagram.Attribut>> RestPlanner.headers:String =>=>=> RelationalSchema.Column>> restplanner.headers;
ClassDiagram.Attribut>> Report.serialversionuid:long =>=>=> RelationalSchema.Column>> report.serialversionuid;
ClassDiagram.Attribut>> Report.description:String =>=>=> RelationalSchema.Column>> report.description;
ClassDiagram.Attribut>> Report.ispublic:Boolean =>=>=> RelationalSchema.Column>> report.ispublic;
ClassDiagram.Attribut>> Report.active:Boolean =>=>=> RelationalSchema.Column>> report.active;
ClassDiagram.Attribut>> Report.file:byte =>=>=> RelationalSchema.Column>> report.file;
ClassDiagram.Attribut>> Report.datasourceurl:String =>=>=> RelationalSchema.Column>> report.datasourceurl;
ClassDiagram.Attribut>> Report.extension:ReportExtension =>=>=> RelationalSchema.Column>> report.extension;
ClassDiagram.Attribut>> AppUserExport./***/serialversionuid:long =>=>=> RelationalSchema.Column>> appuserexport./***/serialversionuid;
ClassDiagram.Attribut>> ApiOperation.serialversionuid:long =>=>=> RelationalSchema.Column>> apioperation.serialversionuid;
ClassDiagram.Attribut>> ApiOperation.identification:String =>=>=> RelationalSchema.Column>> apioperation.identification;
ClassDiagram.Attribut>> ApiOperation.description:String =>=>=> RelationalSchema.Column>> apioperation.description;
ClassDiagram.Attribut>> ApiOperation.operation:Type =>=>=> RelationalSchema.Column>> apioperation.operation;
ClassDiagram.Attribut>> ApiOperation.endpoint:String =>=>=> RelationalSchema.Column>> apioperation.endpoint;
ClassDiagram.Attribut>> ApiOperation.basepath:String =>=>=> RelationalSchema.Column>> apioperation.basepath;
ClassDiagram.Attribut>> ApiOperation.path:String =>=>=> RelationalSchema.Column>> apioperation.path;
ClassDiagram.Attribut>> ApiOperation.postprocess:String =>=>=> RelationalSchema.Column>> apioperation.postprocess;
ClassDiagram.Attribut>> ClientConnection.serialversionuid:long =>=>=> RelationalSchema.Column>> clientconnection.serialversionuid;
ClassDiagram.Attribut>> ClientConnection.identification:String =>=>=> RelationalSchema.Column>> clientconnection.identification;
ClassDiagram.Attribut>> ClientConnection.lastip:String =>=>=> RelationalSchema.Column>> clientconnection.lastip;
ClassDiagram.Attribut>> ClientConnection.ipstrict:boolean =>=>=> RelationalSchema.Column>> clientconnection.ipstrict;
ClassDiagram.Attribut>> ClientConnection.lastconnection:Calendar =>=>=> RelationalSchema.Column>> clientconnection.lastconnection;
ClassDiagram.Attribut>> ClientConnection.ip:boolean =>=>=> RelationalSchema.Column>> clientconnection.ip;
ClassDiagram.Attribut>> OntologyTimeSeries./***/serialversionuid:long =>=>=> RelationalSchema.Column>> ontologytimeseries./***/serialversionuid;
ClassDiagram.Attribut>> OPResource.serialversionuid:long =>=>=> RelationalSchema.Column>> opresource.serialversionuid;
ClassDiagram.Attribut>> OPResource.id:String =>=>=> RelationalSchema.Column>> opresource.id PRIMARY KEY;
ClassDiagram.Attribut>> OPResource.identification:String =>=>=> RelationalSchema.Column>> opresource.identification;
ClassDiagram.Attribut>> AuditableEntityWithUUID.serialversionuid:long =>=>=> RelationalSchema.Column>> auditableentitywithuuid.serialversionuid;
ClassDiagram.Attribut>> AuditableEntityWithUUID.id:String =>=>=> RelationalSchema.Column>> auditableentitywithuuid.id PRIMARY KEY;
ClassDiagram.Attribut>> AuditableEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> auditableentity.serialversionuid;
ClassDiagram.Attribut>> AuditableEntity.createdat:Date =>=>=> RelationalSchema.Column>> auditableentity.createdat;
ClassDiagram.Attribut>> AuditableEntity.updat:Date =>=>=> RelationalSchema.Column>> auditableentity.updat;
ClassDiagram.Attribut>> UserExport.serialversionuid:long =>=>=> RelationalSchema.Column>> userexport.serialversionuid;
ClassDiagram.Attribut>> Themes.serialversionuid:long =>=>=> RelationalSchema.Column>> themes.serialversionuid;
ClassDiagram.Attribut>> Themes.id:String =>=>=> RelationalSchema.Column>> themes.id PRIMARY KEY;
ClassDiagram.Attribut>> Themes.identification:String =>=>=> RelationalSchema.Column>> themes.identification;
ClassDiagram.Attribut>> Themes.json:String =>=>=> RelationalSchema.Column>> themes.json;
ClassDiagram.Attribut>> Themes.active:boolean =>=>=> RelationalSchema.Column>> themes.active;
ClassDiagram.Attribut>> OntologyTimeSeriesWindow./***/serialversionuid:long =>=>=> RelationalSchema.Column>> ontologytimeserieswindow./***/serialversionuid;
ClassDiagram.Attribut>> OntologyTimeSeriesWindow.GeneratedName:WindowType =>=>=> RelationalSchema.Column>> ontologytimeserieswindow.GeneratedName;
ClassDiagram.Attribut>> OntologyTimeSeriesWindow.frecuency:Integer =>=>=> RelationalSchema.Column>> ontologytimeserieswindow.frecuency;
ClassDiagram.Attribut>> OntologyTimeSeriesWindow.GeneratedName:FrecuencyUnit =>=>=> RelationalSchema.Column>> ontologytimeserieswindow.GeneratedName;
ClassDiagram.Attribut>> OntologyTimeSeriesWindow.GeneratedName:AggregationFunction =>=>=> RelationalSchema.Column>> ontologytimeserieswindow.GeneratedName;
ClassDiagram.Attribut>> OntologyTimeSeriesWindow.retentionbefore:Integer =>=>=> RelationalSchema.Column>> ontologytimeserieswindow.retentionbefore;
ClassDiagram.Attribut>> OntologyTimeSeriesWindow.GeneratedName:RetentionUnit =>=>=> RelationalSchema.Column>> ontologytimeserieswindow.GeneratedName;
ClassDiagram.Attribut>> OntologyTimeSeriesWindow.bdh:boolean =>=>=> RelationalSchema.Column>> ontologytimeserieswindow.bdh;
ClassDiagram.Attribut>> GadgetTemplate.serialversionuid:long =>=>=> RelationalSchema.Column>> gadgettemplate.serialversionuid;
ClassDiagram.Attribut>> GadgetTemplate.description:String =>=>=> RelationalSchema.Column>> gadgettemplate.description;
ClassDiagram.Attribut>> GadgetTemplate.type:String =>=>=> RelationalSchema.Column>> gadgettemplate.type;
ClassDiagram.Attribut>> GadgetTemplate.ispublic:boolean =>=>=> RelationalSchema.Column>> gadgettemplate.ispublic;
ClassDiagram.Attribut>> GadgetTemplate.template:String =>=>=> RelationalSchema.Column>> gadgettemplate.template;
ClassDiagram.Attribut>> GadgetTemplate.templatejs:String =>=>=> RelationalSchema.Column>> gadgettemplate.templatejs;
ClassDiagram.Attribut>> GadgetTemplate.headerlibs:String =>=>=> RelationalSchema.Column>> gadgettemplate.headerlibs;
ClassDiagram.Attribut>> DigitalTwinType.serialversionuid:long =>=>=> RelationalSchema.Column>> digitaltwintype.serialversionuid;
ClassDiagram.Attribut>> DigitalTwinType.type:String =>=>=> RelationalSchema.Column>> digitaltwintype.type;
ClassDiagram.Attribut>> DigitalTwinType.description:String =>=>=> RelationalSchema.Column>> digitaltwintype.description;
ClassDiagram.Attribut>> DigitalTwinType.json:String =>=>=> RelationalSchema.Column>> digitaltwintype.json;
ClassDiagram.Attribut>> DigitalTwinType.logic:String =>=>=> RelationalSchema.Column>> digitaltwintype.logic;
ClassDiagram.Attribut>> Cache.serialversionuid:long =>=>=> RelationalSchema.Column>> cache.serialversionuid;
ClassDiagram.Attribut>> Cache.GeneratedName:Type =>=>=> RelationalSchema.Column>> cache.GeneratedName;
ClassDiagram.Attribut>> Cache.GeneratedName:MaxSizePolicy =>=>=> RelationalSchema.Column>> cache.GeneratedName;
ClassDiagram.Attribut>> Cache.size:int =>=>=> RelationalSchema.Column>> cache.size;
ClassDiagram.Attribut>> Cache.GeneratedName:EvictionPolicy =>=>=> RelationalSchema.Column>> cache.GeneratedName;
ClassDiagram.Attribut>> UserToken.serialversionuid:long =>=>=> RelationalSchema.Column>> usertoken.serialversionuid;
ClassDiagram.Attribut>> UserToken.token:String =>=>=> RelationalSchema.Column>> usertoken.token;
ClassDiagram.Attribut>> OntologyUserAccessType.serialversionuid:long =>=>=> RelationalSchema.Column>> ontologyuseraccesstype.serialversionuid;
ClassDiagram.Attribut>> OntologyUserAccessType.name:String =>=>=> RelationalSchema.Column>> ontologyuseraccesstype.name;
ClassDiagram.Attribut>> OntologyUserAccessType.description:String =>=>=> RelationalSchema.Column>> ontologyuseraccesstype.description;
ClassDiagram.Attribut>> ClientPlatformOntology.serialversionuid:long =>=>=> RelationalSchema.Column>> clientplatformontology.serialversionuid;
ClassDiagram.Attribut>> ClientPlatformOntology.access:AccessType =>=>=> RelationalSchema.Column>> clientplatformontology.access;
ClassDiagram.Attribut>> ODTypology.serialversionuid:long =>=>=> RelationalSchema.Column>> odtypology.serialversionuid;
ClassDiagram.Attribut>> ODTypology.description:String =>=>=> RelationalSchema.Column>> odtypology.description;
ClassDiagram.Attribut>> FlowNode.serialversionuid:long =>=>=> RelationalSchema.Column>> flownode.serialversionuid;
ClassDiagram.Attribut>> FlowNode.identification:String =>=>=> RelationalSchema.Column>> flownode.identification;
ClassDiagram.Attribut>> FlowNode.flownode:Type =>=>=> RelationalSchema.Column>> flownode.flownode;
ClassDiagram.Attribut>> FlowNode.noderednodeid:String =>=>=> RelationalSchema.Column>> flownode.noderednodeid;
ClassDiagram.Attribut>> FlowNode.partialurl:String =>=>=> RelationalSchema.Column>> flownode.partialurl;
ClassDiagram.Attribut>> FlowNode.GeneratedName:MessageType =>=>=> RelationalSchema.Column>> flownode.GeneratedName;
ClassDiagram.Attribut>> FlowNode.retryonfailure:Boolean =>=>=> RelationalSchema.Column>> flownode.retryonfailure;
ClassDiagram.Attribut>> FlowNode.discardafterelapsedtime:Boolean =>=>=> RelationalSchema.Column>> flownode.discardafterelapsedtime;
ClassDiagram.Attribut>> FlowNode.maxretryelapsedtime:Integer =>=>=> RelationalSchema.Column>> flownode.maxretryelapsedtime;
ClassDiagram.Attribut>> FlowDomain.serialversionuid:long =>=>=> RelationalSchema.Column>> flowdomain.serialversionuid;
ClassDiagram.Attribut>> FlowDomain.state:String =>=>=> RelationalSchema.Column>> flowdomain.state;
ClassDiagram.Attribut>> FlowDomain.port:Integer =>=>=> RelationalSchema.Column>> flowdomain.port;
ClassDiagram.Attribut>> FlowDomain.serviceport:Integer =>=>=> RelationalSchema.Column>> flowdomain.serviceport;
ClassDiagram.Attribut>> FlowDomain.home:String =>=>=> RelationalSchema.Column>> flowdomain.home;
ClassDiagram.Attribut>> FlowDomain.active:Boolean =>=>=> RelationalSchema.Column>> flowdomain.active;
ClassDiagram.Attribut>> FlowDomain.accesstoken:String =>=>=> RelationalSchema.Column>> flowdomain.accesstoken;
ClassDiagram.Attribut>> FlowDomain.autorecover:Boolean =>=>=> RelationalSchema.Column>> flowdomain.autorecover;
ClassDiagram.Attribut>> FlowDomain.thresholds:String =>=>=> RelationalSchema.Column>> flowdomain.thresholds;
ClassDiagram.Attribut>> Dashboard.serialversionuid:long =>=>=> RelationalSchema.Column>> dashboard.serialversionuid;
ClassDiagram.Attribut>> Dashboard.description:String =>=>=> RelationalSchema.Column>> dashboard.description;
ClassDiagram.Attribut>> Dashboard.jsoni18n:String =>=>=> RelationalSchema.Column>> dashboard.jsoni18n;
ClassDiagram.Attribut>> Dashboard.customcss:String =>=>=> RelationalSchema.Column>> dashboard.customcss;
ClassDiagram.Attribut>> Dashboard.customjs:String =>=>=> RelationalSchema.Column>> dashboard.customjs;
ClassDiagram.Attribut>> Dashboard.ispublic:boolean =>=>=> RelationalSchema.Column>> dashboard.ispublic;
ClassDiagram.Attribut>> Dashboard.model:String =>=>=> RelationalSchema.Column>> dashboard.model;
ClassDiagram.Attribut>> Dashboard.image:byte =>=>=> RelationalSchema.Column>> dashboard.image;
ClassDiagram.Attribut>> Dashboard.headerlibs:String =>=>=> RelationalSchema.Column>> dashboard.headerlibs;
ClassDiagram.Attribut>> Dashboard.type:DashboardType =>=>=> RelationalSchema.Column>> dashboard.type;
ClassDiagram.Attribut>> ProjectResourceAccessList./***/serialversionuid:long =>=>=> RelationalSchema.Column>> projectresourceaccesslist./***/serialversionuid;
ClassDiagram.Attribut>> AppRoleList./***/serialversionuid:long =>=>=> RelationalSchema.Column>> approlelist./***/serialversionuid;
ClassDiagram.Attribut>> DataModel.serialversionuid:long =>=>=> RelationalSchema.Column>> datamodel.serialversionuid;
ClassDiagram.Attribut>> DataModel.jsonschema:String =>=>=> RelationalSchema.Column>> datamodel.jsonschema;
ClassDiagram.Attribut>> DataModel.type:String =>=>=> RelationalSchema.Column>> datamodel.type;
ClassDiagram.Attribut>> DataModel.description:String =>=>=> RelationalSchema.Column>> datamodel.description;
ClassDiagram.Attribut>> DataModel.labels:String =>=>=> RelationalSchema.Column>> datamodel.labels;
ClassDiagram.Attribut>> NotebookUserAccessType.serialversionuid:long =>=>=> RelationalSchema.Column>> notebookuseraccesstype.serialversionuid;
ClassDiagram.Attribut>> NotebookUserAccessType.id:String =>=>=> RelationalSchema.Column>> notebookuseraccesstype.id PRIMARY KEY;
ClassDiagram.Attribut>> NotebookUserAccessType.name:String =>=>=> RelationalSchema.Column>> notebookuseraccesstype.name;
ClassDiagram.Attribut>> NotebookUserAccessType.description:String =>=>=> RelationalSchema.Column>> notebookuseraccesstype.description;
ClassDiagram.Attribut>> EventsDigitalTwinType.serialversionuid:long =>=>=> RelationalSchema.Column>> eventsdigitaltwintype.serialversionuid;
ClassDiagram.Attribut>> EventsDigitalTwinType.name:String =>=>=> RelationalSchema.Column>> eventsdigitaltwintype.name;
ClassDiagram.Attribut>> EventsDigitalTwinType.description:String =>=>=> RelationalSchema.Column>> eventsdigitaltwintype.description;
ClassDiagram.Attribut>> EventsDigitalTwinType.status:boolean =>=>=> RelationalSchema.Column>> eventsdigitaltwintype.status;
ClassDiagram.Attribut>> EventsDigitalTwinType.type:String =>=>=> RelationalSchema.Column>> eventsdigitaltwintype.type;
ClassDiagram.Attribut>> Project.serialversionuid:long =>=>=> RelationalSchema.Column>> project.serialversionuid;
ClassDiagram.Attribut>> Project.type:ProjectType =>=>=> RelationalSchema.Column>> project.type;
ClassDiagram.Attribut>> ProjectResourceAccess.serialversionuid:long =>=>=> RelationalSchema.Column>> projectresourceaccess.serialversionuid;
ClassDiagram.Attribut>> BinaryFile.serialversionuid:long =>=>=> RelationalSchema.Column>> binaryfile.serialversionuid;
ClassDiagram.Attribut>> BinaryFile.filename:String =>=>=> RelationalSchema.Column>> binaryfile.filename;
ClassDiagram.Attribut>> BinaryFile.fileextension:String =>=>=> RelationalSchema.Column>> binaryfile.fileextension;
ClassDiagram.Attribut>> BinaryFile.metadata:String =>=>=> RelationalSchema.Column>> binaryfile.metadata;
ClassDiagram.Attribut>> BinaryFile.path:String =>=>=> RelationalSchema.Column>> binaryfile.path;
ClassDiagram.Attribut>> BinaryFile.mime:String =>=>=> RelationalSchema.Column>> binaryfile.mime;
ClassDiagram.Attribut>> BinaryFile.ispublic:boolean =>=>=> RelationalSchema.Column>> binaryfile.ispublic;
ClassDiagram.Attribut>> BinaryFile.repository:RepositoryType =>=>=> RelationalSchema.Column>> binaryfile.repository;
ClassDiagram.Attribut>> AppChildExport./***/serialversionuid:long =>=>=> RelationalSchema.Column>> appchildexport./***/serialversionuid;
ClassDiagram.Attribut>> Microservice.serialversionuid:long =>=>=> RelationalSchema.Column>> microservice.serialversionuid;
ClassDiagram.Attribut>> Microservice.port:Integer =>=>=> RelationalSchema.Column>> microservice.port;
ClassDiagram.Attribut>> Microservice.contextpath:String =>=>=> RelationalSchema.Column>> microservice.contextpath;
ClassDiagram.Attribut>> Microservice.GeneratedName:JenkinsConfiguration =>=>=> RelationalSchema.Column>> microservice.GeneratedName;
ClassDiagram.Attribut>> Microservice.jenkinsxml:String =>=>=> RelationalSchema.Column>> microservice.jenkinsxml;
ClassDiagram.Attribut>> Microservice.jobname:String =>=>=> RelationalSchema.Column>> microservice.jobname;
ClassDiagram.Attribut>> Microservice.joburl:String =>=>=> RelationalSchema.Column>> microservice.joburl;
ClassDiagram.Attribut>> Microservice.GeneratedName:GitlabConfiguration =>=>=> RelationalSchema.Column>> microservice.GeneratedName;
ClassDiagram.Attribut>> Microservice.gitlabrepository:String =>=>=> RelationalSchema.Column>> microservice.gitlabrepository;
ClassDiagram.Attribut>> Microservice.GeneratedName:CaaS =>=>=> RelationalSchema.Column>> microservice.GeneratedName;
ClassDiagram.Attribut>> Microservice.GeneratedName:RancherConfiguration =>=>=> RelationalSchema.Column>> microservice.GeneratedName;
ClassDiagram.Attribut>> Microservice.openshiftconfiguration:CaasOpenshiftConfiguration =>=>=> RelationalSchema.Column>> microservice.openshiftconfiguration;
ClassDiagram.Attribut>> Microservice.rancherenv:String =>=>=> RelationalSchema.Column>> microservice.rancherenv;
ClassDiagram.Attribut>> Microservice.rancherstack:String =>=>=> RelationalSchema.Column>> microservice.rancherstack;
ClassDiagram.Attribut>> Microservice.openshiftnamespace:String =>=>=> RelationalSchema.Column>> microservice.openshiftnamespace;
ClassDiagram.Attribut>> Microservice.openshiftdeploymenturl:String =>=>=> RelationalSchema.Column>> microservice.openshiftdeploymenturl;
ClassDiagram.Attribut>> Microservice.jenkinsqueueid:Integer =>=>=> RelationalSchema.Column>> microservice.jenkinsqueueid;
ClassDiagram.Attribut>> Microservice.dockerimage:String =>=>=> RelationalSchema.Column>> microservice.dockerimage;
ClassDiagram.Attribut>> Microservice.GeneratedName:TemplateType =>=>=> RelationalSchema.Column>> microservice.GeneratedName;
ClassDiagram.Attribut>> Microservice.active:boolean =>=>=> RelationalSchema.Column>> microservice.active;
ClassDiagram.Attribut>> GadgetTemplateType.serialversionuid:long =>=>=> RelationalSchema.Column>> gadgettemplatetype.serialversionuid;
ClassDiagram.Attribut>> GadgetTemplateType.id:String =>=>=> RelationalSchema.Column>> gadgettemplatetype.id PRIMARY KEY;
ClassDiagram.Attribut>> GadgetTemplateType.identification:String =>=>=> RelationalSchema.Column>> gadgettemplatetype.identification;
ClassDiagram.Attribut>> GadgetTemplateType.template:String =>=>=> RelationalSchema.Column>> gadgettemplatetype.template;
ClassDiagram.Attribut>> GadgetTemplateType.templatejs:String =>=>=> RelationalSchema.Column>> gadgettemplatetype.templatejs;
ClassDiagram.Attribut>> GadgetTemplateType.headerlibs:String =>=>=> RelationalSchema.Column>> gadgettemplatetype.headerlibs;
ClassDiagram.Attribut>> MarketAsset.serialversionuid:long =>=>=> RelationalSchema.Column>> marketasset.serialversionuid;
ClassDiagram.Attribut>> MarketAsset.ispublic:boolean =>=>=> RelationalSchema.Column>> marketasset.ispublic;
ClassDiagram.Attribut>> MarketAsset.state:MarketAssetState =>=>=> RelationalSchema.Column>> marketasset.state;
ClassDiagram.Attribut>> MarketAsset.GeneratedName:MarketAssetType =>=>=> RelationalSchema.Column>> marketasset.GeneratedName;
ClassDiagram.Attribut>> MarketAsset.paymentmode:MarketAssetPaymentMode =>=>=> RelationalSchema.Column>> marketasset.paymentmode;
ClassDiagram.Attribut>> MarketAsset.image:byte =>=>=> RelationalSchema.Column>> marketasset.image;
ClassDiagram.Attribut>> MarketAsset.imagetype:String =>=>=> RelationalSchema.Column>> marketasset.imagetype;
ClassDiagram.Attribut>> MarketAsset.content:byte =>=>=> RelationalSchema.Column>> marketasset.content;
ClassDiagram.Attribut>> MarketAsset.contentid:String =>=>=> RelationalSchema.Column>> marketasset.contentid;
ClassDiagram.Attribut>> MarketAsset.jsondesc:String =>=>=> RelationalSchema.Column>> marketasset.jsondesc;
ClassDiagram.Attribut>> MarketAsset.rejectionreason:String =>=>=> RelationalSchema.Column>> marketasset.rejectionreason;
ClassDiagram.Attribut>> MarketAsset.deletedat:Date =>=>=> RelationalSchema.Column>> marketasset.deletedat;
ClassDiagram.Attribut>> ProjectExport.serialversionuid:long =>=>=> RelationalSchema.Column>> projectexport.serialversionuid;
ClassDiagram.Attribut>> ProjectExport.type:ProjectType =>=>=> RelationalSchema.Column>> projectexport.type;
ClassDiagram.Attribut>> AppRoleExport./***/serialversionuid:long =>=>=> RelationalSchema.Column>> approleexport./***/serialversionuid;
ClassDiagram.Attribut>> GadgetMeasure.serialversionuid:long =>=>=> RelationalSchema.Column>> gadgetmeasure.serialversionuid;
ClassDiagram.Attribut>> GadgetMeasure.config:String =>=>=> RelationalSchema.Column>> gadgetmeasure.config;
ClassDiagram.Attribut>> App./***/serialversionuid:long =>=>=> RelationalSchema.Column>> app./***/serialversionuid;
ClassDiagram.Attribut>> Configuration.serialversionuid:long =>=>=> RelationalSchema.Column>> configuration.serialversionuid;
ClassDiagram.Attribut>> Configuration.ymlconfig:String =>=>=> RelationalSchema.Column>> configuration.ymlconfig;
ClassDiagram.Attribut>> Configuration.environment:String =>=>=> RelationalSchema.Column>> configuration.environment;
ClassDiagram.Attribut>> Configuration.GeneratedName:Type =>=>=> RelationalSchema.Column>> configuration.GeneratedName;
ClassDiagram.Attribut>> Configuration.suffix:String =>=>=> RelationalSchema.Column>> configuration.suffix;
ClassDiagram.Attribut>> Configuration.description:String =>=>=> RelationalSchema.Column>> configuration.description;
ClassDiagram.Attribut>> AppUserChildExport./***/serialversionuid:long =>=>=> RelationalSchema.Column>> appuserchildexport./***/serialversionuid;
ClassDiagram.Attribut>> DashboardUserAccessType.serialversionuid:long =>=>=> RelationalSchema.Column>> dashboarduseraccesstype.serialversionuid;
ClassDiagram.Attribut>> DashboardUserAccessType.name:String =>=>=> RelationalSchema.Column>> dashboarduseraccesstype.name;
ClassDiagram.Attribut>> DashboardUserAccessType.description:String =>=>=> RelationalSchema.Column>> dashboarduseraccesstype.description;
ClassDiagram.Attribut>> Category.serialversionuid:long =>=>=> RelationalSchema.Column>> category.serialversionuid;
ClassDiagram.Attribut>> Category.identification:String =>=>=> RelationalSchema.Column>> category.identification;
ClassDiagram.Attribut>> Category.description:String =>=>=> RelationalSchema.Column>> category.description;
ClassDiagram.Attribut>> Api.serialversionuid:long =>=>=> RelationalSchema.Column>> api.serialversionuid;
ClassDiagram.Attribut>> Api.image:byte =>=>=> RelationalSchema.Column>> api.image;
ClassDiagram.Attribut>> Api.ssl_certificate:boolean =>=>=> RelationalSchema.Column>> api.ssl_certificate;
ClassDiagram.Attribut>> Api.numversion:Integer =>=>=> RelationalSchema.Column>> api.numversion;
ClassDiagram.Attribut>> Api.description:String =>=>=> RelationalSchema.Column>> api.description;
ClassDiagram.Attribut>> Api.category:ApiCategories =>=>=> RelationalSchema.Column>> api.category;
ClassDiagram.Attribut>> Api.endpointext:String =>=>=> RelationalSchema.Column>> api.endpointext;
ClassDiagram.Attribut>> Api.state:ApiStates =>=>=> RelationalSchema.Column>> api.state;
ClassDiagram.Attribut>> Api.metainf:String =>=>=> RelationalSchema.Column>> api.metainf;
ClassDiagram.Attribut>> Api.imagetype:String =>=>=> RelationalSchema.Column>> api.imagetype;
ClassDiagram.Attribut>> Api.ispublic:boolean =>=>=> RelationalSchema.Column>> api.ispublic;
ClassDiagram.Attribut>> Api.apicachetimeout:Integer =>=>=> RelationalSchema.Column>> api.apicachetimeout;
ClassDiagram.Attribut>> Api.apilimit:Integer =>=>=> RelationalSchema.Column>> api.apilimit;
ClassDiagram.Attribut>> Api.GeneratedName:ApiType =>=>=> RelationalSchema.Column>> api.GeneratedName;
ClassDiagram.Attribut>> Api.assessment:Double =>=>=> RelationalSchema.Column>> api.assessment;
ClassDiagram.Attribut>> Api.swaggerjson:String =>=>=> RelationalSchema.Column>> api.swaggerjson;
ClassDiagram.Attribut>> Model.serialversionuid:long =>=>=> RelationalSchema.Column>> model.serialversionuid;
ClassDiagram.Attribut>> Model.description:String =>=>=> RelationalSchema.Column>> model.description;
ClassDiagram.Attribut>> Model.outputparagraphid:String =>=>=> RelationalSchema.Column>> model.outputparagraphid;
ClassDiagram.Attribut>> Model.inputparagraphid:String =>=>=> RelationalSchema.Column>> model.inputparagraphid;
ClassDiagram.Attribut>> DataflowInstance.serialversionuid:long =>=>=> RelationalSchema.Column>> dataflowinstance.serialversionuid;
ClassDiagram.Attribut>> DataflowInstance.id:String =>=>=> RelationalSchema.Column>> dataflowinstance.id PRIMARY KEY;
ClassDiagram.Attribut>> DataflowInstance.identification:String =>=>=> RelationalSchema.Column>> dataflowinstance.identification;
ClassDiagram.Attribut>> DataflowInstance.url:String =>=>=> RelationalSchema.Column>> dataflowinstance.url;
ClassDiagram.Attribut>> DataflowInstance.admincredentials:String =>=>=> RelationalSchema.Column>> dataflowinstance.admincredentials;
ClassDiagram.Attribut>> DataflowInstance.usercredentials:String =>=>=> RelationalSchema.Column>> dataflowinstance.usercredentials;
ClassDiagram.Attribut>> DataflowInstance.guestcredentials:String =>=>=> RelationalSchema.Column>> dataflowinstance.guestcredentials;
ClassDiagram.Attribut>> DataflowInstance.defaultinstance:boolean =>=>=> RelationalSchema.Column>> dataflowinstance.defaultinstance;
ClassDiagram.Attribut>> PipelineUserAccess.serialversionuid:long =>=>=> RelationalSchema.Column>> pipelineuseraccess.serialversionuid;
ClassDiagram.Attribut>> Flow.serialversionuid:long =>=>=> RelationalSchema.Column>> flow.serialversionuid;
ClassDiagram.Attribut>> Flow.identification:String =>=>=> RelationalSchema.Column>> flow.identification;
ClassDiagram.Attribut>> Flow.noderedflowid:String =>=>=> RelationalSchema.Column>> flow.noderedflowid;
ClassDiagram.Attribut>> Flow.active:Boolean =>=>=> RelationalSchema.Column>> flow.active;
ClassDiagram.Attribut>> AppUser./***/serialversionuid:long =>=>=> RelationalSchema.Column>> appuser./***/serialversionuid;
ClassDiagram.Attribut>> Role.serialversionuid:long =>=>=> RelationalSchema.Column>> role.serialversionuid;
ClassDiagram.Attribut>> Role.id:String =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> Role.description:String =>=>=> RelationalSchema.Column>> role.description;
ClassDiagram.Attribut>> Notebook.serialversionuid:long =>=>=> RelationalSchema.Column>> notebook.serialversionuid;
ClassDiagram.Attribut>> Notebook.idzep:String =>=>=> RelationalSchema.Column>> notebook.idzep;
ClassDiagram.Attribut>> Notebook.ispublic:boolean =>=>=> RelationalSchema.Column>> notebook.ispublic;
ClassDiagram.Attribut>> OntologyRestOperation./***/serialversionuid:long =>=>=> RelationalSchema.Column>> ontologyrestoperation./***/serialversionuid;
ClassDiagram.Attribut>> OntologyRestOperation.name:String =>=>=> RelationalSchema.Column>> ontologyrestoperation.name;
ClassDiagram.Attribut>> OntologyRestOperation.path:String =>=>=> RelationalSchema.Column>> ontologyrestoperation.path;
ClassDiagram.Attribut>> OntologyRestOperation.description:String =>=>=> RelationalSchema.Column>> ontologyrestoperation.description;
ClassDiagram.Attribut>> OntologyRestOperation.origin:String =>=>=> RelationalSchema.Column>> ontologyrestoperation.origin;
ClassDiagram.Attribut>> OntologyRestOperation.type:OperationType =>=>=> RelationalSchema.Column>> ontologyrestoperation.type;
ClassDiagram.Attribut>> OntologyRestOperation.GeneratedName:DefaultOperationType =>=>=> RelationalSchema.Column>> ontologyrestoperation.GeneratedName;
ClassDiagram.Attribut>> DroolsRuleDomain.serialversionuid:long =>=>=> RelationalSchema.Column>> droolsruledomain.serialversionuid;
ClassDiagram.Attribut>> DroolsRuleDomain.active:boolean =>=>=> RelationalSchema.Column>> droolsruledomain.active;
ClassDiagram.Attribut>> AppList./***/serialversionuid:long =>=>=> RelationalSchema.Column>> applist./***/serialversionuid;
ClassDiagram.Attribut>> SupportRequest.serialversionuid:long =>=>=> RelationalSchema.Column>> supportrequest.serialversionuid;
ClassDiagram.Attribut>> SupportRequest.type:String =>=>=> RelationalSchema.Column>> supportrequest.type;
ClassDiagram.Attribut>> SupportRequest.status:String =>=>=> RelationalSchema.Column>> supportrequest.status;
ClassDiagram.Attribut>> SupportRequest.json:String =>=>=> RelationalSchema.Column>> supportrequest.json;
ClassDiagram.Attribut>> ConsoleMenu.serialversionuid:long =>=>=> RelationalSchema.Column>> consolemenu.serialversionuid;
ClassDiagram.Attribut>> ConsoleMenu.id:String =>=>=> RelationalSchema.Column>> consolemenu.id PRIMARY KEY;
ClassDiagram.Attribut>> ConsoleMenu.json:String =>=>=> RelationalSchema.Column>> consolemenu.json;
ClassDiagram.Attribut>> DashboardUserAccess.serialversionuid:long =>=>=> RelationalSchema.Column>> dashboarduseraccess.serialversionuid;
ClassDiagram.Attribut>> ApiQueryParameter.serialversionuid:long =>=>=> RelationalSchema.Column>> apiqueryparameter.serialversionuid;
ClassDiagram.Attribut>> ApiQueryParameter.name:String =>=>=> RelationalSchema.Column>> apiqueryparameter.name;
ClassDiagram.Attribut>> ApiQueryParameter.GeneratedName:DataType =>=>=> RelationalSchema.Column>> apiqueryparameter.GeneratedName;
ClassDiagram.Attribut>> ApiQueryParameter.description:String =>=>=> RelationalSchema.Column>> apiqueryparameter.description;
ClassDiagram.Attribut>> ApiQueryParameter.value:String =>=>=> RelationalSchema.Column>> apiqueryparameter.value;
ClassDiagram.Attribut>> ApiQueryParameter.condition:String =>=>=> RelationalSchema.Column>> apiqueryparameter.condition;
ClassDiagram.Attribut>> ApiQueryParameter.GeneratedName:HeaderType =>=>=> RelationalSchema.Column>> apiqueryparameter.GeneratedName;
ClassDiagram.Attribut>> GadgetDatasource.serialversionuid:long =>=>=> RelationalSchema.Column>> gadgetdatasource.serialversionuid;
ClassDiagram.Attribut>> GadgetDatasource.mode:String =>=>=> RelationalSchema.Column>> gadgetdatasource.mode;
ClassDiagram.Attribut>> GadgetDatasource.query:String =>=>=> RelationalSchema.Column>> gadgetdatasource.query;
ClassDiagram.Attribut>> GadgetDatasource.dbtype:String =>=>=> RelationalSchema.Column>> gadgetdatasource.dbtype;
ClassDiagram.Attribut>> GadgetDatasource.refresh:Integer =>=>=> RelationalSchema.Column>> gadgetdatasource.refresh;
ClassDiagram.Attribut>> GadgetDatasource.maxvalues:Integer =>=>=> RelationalSchema.Column>> gadgetdatasource.maxvalues;
ClassDiagram.Attribut>> GadgetDatasource.description:String =>=>=> RelationalSchema.Column>> gadgetdatasource.description;
ClassDiagram.Attribut>> GadgetDatasource.config:String =>=>=> RelationalSchema.Column>> gadgetdatasource.config;
ClassDiagram.Attribut>> GadgetFavorite.serialversionuid:long =>=>=> RelationalSchema.Column>> gadgetfavorite.serialversionuid;
ClassDiagram.Attribut>> GadgetFavorite.type:String =>=>=> RelationalSchema.Column>> gadgetfavorite.type;
ClassDiagram.Attribut>> GadgetFavorite.config:String =>=>=> RelationalSchema.Column>> gadgetfavorite.config;
ClassDiagram.Attribut>> KsqlResource.serialversionuid:long =>=>=> RelationalSchema.Column>> ksqlresource.serialversionuid;
ClassDiagram.Attribut>> KsqlResource.identification:String =>=>=> RelationalSchema.Column>> ksqlresource.identification;
ClassDiagram.Attribut>> KsqlResource.description:String =>=>=> RelationalSchema.Column>> ksqlresource.description;
ClassDiagram.Attribut>> KsqlResource.ksqltype:KsqlResourceType =>=>=> RelationalSchema.Column>> ksqlresource.ksqltype;
ClassDiagram.Attribut>> KsqlResource.resourcetype:FlowResourceType =>=>=> RelationalSchema.Column>> ksqlresource.resourcetype;
ClassDiagram.Attribut>> KsqlResource.statementtext:String =>=>=> RelationalSchema.Column>> ksqlresource.statementtext;
ClassDiagram.Attribut>> KsqlResource.kafkatopic:String =>=>=> RelationalSchema.Column>> ksqlresource.kafkatopic;
ClassDiagram.Attribut>> KsqlResource.iscreatedas:boolean =>=>=> RelationalSchema.Column>> ksqlresource.iscreatedas;
ClassDiagram.Attribut>> ODTypologyDataset.id:String =>=>=> RelationalSchema.Column>> odtypologydataset.id PRIMARY KEY;
ClassDiagram.Attribut>> ODTypologyDataset.typologyid:String =>=>=> RelationalSchema.Column>> odtypologydataset.typologyid;
ClassDiagram.Attribut>> ODTypologyDataset.datasetid:String =>=>=> RelationalSchema.Column>> odtypologydataset.datasetid;
ClassDiagram.Attribut>> DashboardConf.serialversionuid:long =>=>=> RelationalSchema.Column>> dashboardconf.serialversionuid;
ClassDiagram.Attribut>> DashboardConf.identification:String =>=>=> RelationalSchema.Column>> dashboardconf.identification;
ClassDiagram.Attribut>> DashboardConf.description:String =>=>=> RelationalSchema.Column>> dashboardconf.description;
ClassDiagram.Attribut>> DashboardConf.model:String =>=>=> RelationalSchema.Column>> dashboardconf.model;
ClassDiagram.Attribut>> DashboardConf.headerlibs:String =>=>=> RelationalSchema.Column>> dashboardconf.headerlibs;
ClassDiagram.Attribut>> ProjectList.serialversionuid:long =>=>=> RelationalSchema.Column>> projectlist.serialversionuid;
ClassDiagram.Attribut>> ProjectList.type:ProjectType =>=>=> RelationalSchema.Column>> projectlist.type;
ClassDiagram.Attribut>> AppUserListOauth./***/serialversionuid:long =>=>=> RelationalSchema.Column>> appuserlistoauth./***/serialversionuid;
ClassDiagram.Attribut>> Gadget.serialversionuid:long =>=>=> RelationalSchema.Column>> gadget.serialversionuid;
ClassDiagram.Attribut>> Gadget.type:String =>=>=> RelationalSchema.Column>> gadget.type;
ClassDiagram.Attribut>> Gadget.description:String =>=>=> RelationalSchema.Column>> gadget.description;
ClassDiagram.Attribut>> Gadget.ispublic:boolean =>=>=> RelationalSchema.Column>> gadget.ispublic;
ClassDiagram.Attribut>> Gadget.config:String =>=>=> RelationalSchema.Column>> gadget.config;
ClassDiagram.Attribut>> PipelineUserAccessType.serialversionuid:long =>=>=> RelationalSchema.Column>> pipelineuseraccesstype.serialversionuid;
ClassDiagram.Attribut>> PipelineUserAccessType.id:String =>=>=> RelationalSchema.Column>> pipelineuseraccesstype.id PRIMARY KEY;
ClassDiagram.Attribut>> PipelineUserAccessType.name:String =>=>=> RelationalSchema.Column>> pipelineuseraccesstype.name;
ClassDiagram.Attribut>> PipelineUserAccessType.description:String =>=>=> RelationalSchema.Column>> pipelineuseraccesstype.description;
ClassDiagram.Attribut>> DigitalTwinDevice.serialversionuid:long =>=>=> RelationalSchema.Column>> digitaltwindevice.serialversionuid;
ClassDiagram.Attribut>> DigitalTwinDevice.url:String =>=>=> RelationalSchema.Column>> digitaltwindevice.url;
ClassDiagram.Attribut>> DigitalTwinDevice.urlschema:String =>=>=> RelationalSchema.Column>> digitaltwindevice.urlschema;
ClassDiagram.Attribut>> DigitalTwinDevice.digitalkey:String =>=>=> RelationalSchema.Column>> digitaltwindevice.digitalkey;
ClassDiagram.Attribut>> DigitalTwinDevice.intrface:String =>=>=> RelationalSchema.Column>> digitaltwindevice.intrface;
ClassDiagram.Attribut>> DigitalTwinDevice.ip:String =>=>=> RelationalSchema.Column>> digitaltwindevice.ip;
ClassDiagram.Attribut>> DigitalTwinDevice.ipv6:Boolean =>=>=> RelationalSchema.Column>> digitaltwindevice.ipv6;
ClassDiagram.Attribut>> DigitalTwinDevice.port:Integer =>=>=> RelationalSchema.Column>> digitaltwindevice.port;
ClassDiagram.Attribut>> DigitalTwinDevice.contextpath:String =>=>=> RelationalSchema.Column>> digitaltwindevice.contextpath;
ClassDiagram.Attribut>> DigitalTwinDevice.latitude:String =>=>=> RelationalSchema.Column>> digitaltwindevice.latitude;
ClassDiagram.Attribut>> DigitalTwinDevice.longitude:String =>=>=> RelationalSchema.Column>> digitaltwindevice.longitude;
ClassDiagram.Attribut>> OntologyRestHeaders./***/serialversionuid:long =>=>=> RelationalSchema.Column>> ontologyrestheaders./***/serialversionuid;
ClassDiagram.Attribut>> OntologyRestHeaders.config:String =>=>=> RelationalSchema.Column>> ontologyrestheaders.config;
ClassDiagram.Attribut>> Token.serialversionuid:long =>=>=> RelationalSchema.Column>> token.serialversionuid;
ClassDiagram.Attribut>> Token.tokenname:String =>=>=> RelationalSchema.Column>> token.tokenname;
ClassDiagram.Attribut>> Token.lastconnection:Calendar =>=>=> RelationalSchema.Column>> token.lastconnection;
ClassDiagram.Attribut>> Token.active:boolean =>=>=> RelationalSchema.Column>> token.active;
ClassDiagram.Attribut>> WebProject.serialversionuid:long =>=>=> RelationalSchema.Column>> webproject.serialversionuid;
ClassDiagram.Attribut>> WebProject.description:String =>=>=> RelationalSchema.Column>> webproject.description;
ClassDiagram.Attribut>> WebProject.mainfile:String =>=>=> RelationalSchema.Column>> webproject.mainfile;
ClassDiagram.Attribut>> OntologyKafkaTopic.serialversionuid:long =>=>=> RelationalSchema.Column>> ontologykafkatopic.serialversionuid;
ClassDiagram.Attribut>> OntologyKafkaTopic.GeneratedName:TopicType =>=>=> RelationalSchema.Column>> ontologykafkatopic.GeneratedName;
ClassDiagram.Attribut>> OntologyKafkaTopic.identification:String =>=>=> RelationalSchema.Column>> ontologykafkatopic.identification;
ClassDiagram.Attribut>> AppChild./***/serialversionuid:long =>=>=> RelationalSchema.Column>> appchild./***/serialversionuid;
ClassDiagram.Attribut>> OntologyTimeSeriesProperty./***/serialversionuid:long =>=>=> RelationalSchema.Column>> ontologytimeseriesproperty./***/serialversionuid;
ClassDiagram.Attribut>> OntologyTimeSeriesProperty.GeneratedName:PropertyType =>=>=> RelationalSchema.Column>> ontologytimeseriesproperty.GeneratedName;
ClassDiagram.Attribut>> OntologyTimeSeriesProperty.propertyname:String =>=>=> RelationalSchema.Column>> ontologytimeseriesproperty.propertyname;
ClassDiagram.Attribut>> OntologyTimeSeriesProperty.GeneratedName:PropertyDataType =>=>=> RelationalSchema.Column>> ontologytimeseriesproperty.GeneratedName;
ClassDiagram.Attribut>> NotebookUserAccess.serialversionuid:long =>=>=> RelationalSchema.Column>> notebookuseraccess.serialversionuid;
ClassDiagram.Attribut>> AppListOauth./***/serialversionuid:long =>=>=> RelationalSchema.Column>> applistoauth./***/serialversionuid;
ClassDiagram.Attribut>> OntologyRestOperationParam./***/serialversionuid:long =>=>=> RelationalSchema.Column>> ontologyrestoperationparam./***/serialversionuid;
ClassDiagram.Attribut>> OntologyRestOperationParam.indexparam:Integer =>=>=> RelationalSchema.Column>> ontologyrestoperationparam.indexparam;
ClassDiagram.Attribut>> OntologyRestOperationParam.name:String =>=>=> RelationalSchema.Column>> ontologyrestoperationparam.name;
ClassDiagram.Attribut>> OntologyRestOperationParam.field:String =>=>=> RelationalSchema.Column>> ontologyrestoperationparam.field;
ClassDiagram.Attribut>> OntologyRestOperationParam.type:ParamOperationType =>=>=> RelationalSchema.Column>> ontologyrestoperationparam.type;
ClassDiagram.Attribut>> ODBinaryFilesDataset.id:String =>=>=> RelationalSchema.Column>> odbinaryfilesdataset.id PRIMARY KEY;
ClassDiagram.Attribut>> ODBinaryFilesDataset.filesid:String =>=>=> RelationalSchema.Column>> odbinaryfilesdataset.filesid;
ClassDiagram.Attribut>> ODBinaryFilesDataset.datasetid:String =>=>=> RelationalSchema.Column>> odbinaryfilesdataset.datasetid;
ClassDiagram.Attribut>> Categorization.serialversionuid:long =>=>=> RelationalSchema.Column>> categorization.serialversionuid;
ClassDiagram.Attribut>> Categorization.json:String =>=>=> RelationalSchema.Column>> categorization.json;
ClassDiagram.Attribut>> OntologyDataAccess.serialversionuid:long =>=>=> RelationalSchema.Column>> ontologydataaccess.serialversionuid;
ClassDiagram.Attribut>> OntologyDataAccess.rule:String =>=>=> RelationalSchema.Column>> ontologydataaccess.rule;
ClassDiagram.Attribut>> AppExport./***/serialversionuid:long =>=>=> RelationalSchema.Column>> appexport./***/serialversionuid;
ClassDiagram.Attribut>> UserComment.serialversionuid:long =>=>=> RelationalSchema.Column>> usercomment.serialversionuid;
ClassDiagram.Attribut>> UserComment.title:String =>=>=> RelationalSchema.Column>> usercomment.title;
ClassDiagram.Attribut>> UserComment.comment:String =>=>=> RelationalSchema.Column>> usercomment.comment;
ClassDiagram.Attribut>> Subscriptor.serialversionuid:long =>=>=> RelationalSchema.Column>> subscriptor.serialversionuid;
ClassDiagram.Attribut>> Subscriptor.subscriptionid:String =>=>=> RelationalSchema.Column>> subscriptor.subscriptionid;
ClassDiagram.Attribut>> Subscriptor.subscriptiongw:String =>=>=> RelationalSchema.Column>> subscriptor.subscriptiongw;
ClassDiagram.Attribut>> Subscriptor.callbackendpoint:String =>=>=> RelationalSchema.Column>> subscriptor.callbackendpoint;
ClassDiagram.Attribut>> Subscriptor.queryvalue:String =>=>=> RelationalSchema.Column>> subscriptor.queryvalue;
ClassDiagram.Attribut>> Subscriptor.clientid:String =>=>=> RelationalSchema.Column>> subscriptor.clientid;
ClassDiagram.Attribut>> DroolsRule.serialversionuid:long =>=>=> RelationalSchema.Column>> droolsrule.serialversionuid;
ClassDiagram.Attribut>> DroolsRule.drl:String =>=>=> RelationalSchema.Column>> droolsrule.drl;
ClassDiagram.Attribut>> DroolsRule.GeneratedName:Type =>=>=> RelationalSchema.Column>> droolsrule.GeneratedName;
ClassDiagram.Attribut>> DroolsRule.active:boolean =>=>=> RelationalSchema.Column>> droolsrule.active;
ClassDiagram.Attribut>> QueryTemplate.serialversionuid:long =>=>=> RelationalSchema.Column>> querytemplate.serialversionuid;
ClassDiagram.Attribut>> QueryTemplate.name:String =>=>=> RelationalSchema.Column>> querytemplate.name;
ClassDiagram.Attribut>> QueryTemplate.description:String =>=>=> RelationalSchema.Column>> querytemplate.description;
ClassDiagram.Attribut>> QueryTemplate.queryselector:String =>=>=> RelationalSchema.Column>> querytemplate.queryselector;
ClassDiagram.Attribut>> QueryTemplate.querygenerator:String =>=>=> RelationalSchema.Column>> querytemplate.querygenerator;
ClassDiagram.Attribut>> QueryTemplate.type:QueryType =>=>=> RelationalSchema.Column>> querytemplate.type;
ClassDiagram.Attribut>> ParameterModel.serialversionuid:long =>=>=> RelationalSchema.Column>> parametermodel.serialversionuid;
ClassDiagram.Attribut>> ParameterModel.identification:String =>=>=> RelationalSchema.Column>> parametermodel.identification;
ClassDiagram.Attribut>> ParameterModel.GeneratedName:Type =>=>=> RelationalSchema.Column>> parametermodel.GeneratedName;
ClassDiagram.Attribut>> ParameterModel.rangefrom:Integer =>=>=> RelationalSchema.Column>> parametermodel.rangefrom;
ClassDiagram.Attribut>> ParameterModel.rangeto:Integer =>=>=> RelationalSchema.Column>> parametermodel.rangeto;
ClassDiagram.Attribut>> ParameterModel.enumerators:String =>=>=> RelationalSchema.Column>> parametermodel.enumerators;
ClassDiagram.Attribut>> Subcategory.serialversionuid:long =>=>=> RelationalSchema.Column>> subcategory.serialversionuid;
ClassDiagram.Attribut>> Subcategory.identification:String =>=>=> RelationalSchema.Column>> subcategory.identification;
ClassDiagram.Attribut>> Subcategory.description:String =>=>=> RelationalSchema.Column>> subcategory.description;
ClassDiagram.Attribut>> UserApi.serialversionuid:long =>=>=> RelationalSchema.Column>> userapi.serialversionuid;
ClassDiagram.Attribut>> ClientPlatformInstance.serialversionuid:long =>=>=> RelationalSchema.Column>> clientplatforminstance.serialversionuid;
ClassDiagram.Attribut>> ClientPlatformInstance.identification:String =>=>=> RelationalSchema.Column>> clientplatforminstance.identification;
ClassDiagram.Attribut>> ClientPlatformInstance.connected:boolean =>=>=> RelationalSchema.Column>> clientplatforminstance.connected;
ClassDiagram.Attribut>> ClientPlatformInstance.status:String =>=>=> RelationalSchema.Column>> clientplatforminstance.status;
ClassDiagram.Attribut>> ClientPlatformInstance.jsonactions:String =>=>=> RelationalSchema.Column>> clientplatforminstance.jsonactions;
ClassDiagram.Attribut>> ClientPlatformInstance.protocol:String =>=>=> RelationalSchema.Column>> clientplatforminstance.protocol;
ClassDiagram.Attribut>> ClientPlatformInstance.disabled:boolean =>=>=> RelationalSchema.Column>> clientplatforminstance.disabled;
ClassDiagram.Attribut>> ClientPlatformInstance.tags:String =>=>=> RelationalSchema.Column>> clientplatforminstance.tags;
ClassDiagram.Attribut>> ClientPlatformInstance.location:double =>=>=> RelationalSchema.Column>> clientplatforminstance.location;
ClassDiagram.Attribut>> OntologyRest./***/serialversionuid:long =>=>=> RelationalSchema.Column>> ontologyrest./***/serialversionuid;
ClassDiagram.Attribut>> OntologyRest.baseurl:String =>=>=> RelationalSchema.Column>> ontologyrest.baseurl;
ClassDiagram.Attribut>> OntologyRest.//@column(name:String =>=>=> RelationalSchema.Column>> ontologyrest.//@column(name;
ClassDiagram.Attribut>> OntologyRest.GeneratedName:SecurityType =>=>=> RelationalSchema.Column>> ontologyrest.GeneratedName;
ClassDiagram.Attribut>> OntologyRest.jsonschema:String =>=>=> RelationalSchema.Column>> ontologyrest.jsonschema;
ClassDiagram.Attribut>> KsqlFlow.serialversionuid:long =>=>=> RelationalSchema.Column>> ksqlflow.serialversionuid;
ClassDiagram.Attribut>> KsqlFlow.description:String =>=>=> RelationalSchema.Column>> ksqlflow.description;
ClassDiagram.Attribut>> KsqlFlow.jsonflow:String =>=>=> RelationalSchema.Column>> ksqlflow.jsonflow;
ClassDiagram.Attribut>> Layer.serialversionuid:long =>=>=> RelationalSchema.Column>> layer.serialversionuid;
ClassDiagram.Attribut>> Layer.description:String =>=>=> RelationalSchema.Column>> layer.description;
ClassDiagram.Attribut>> Layer.geometrytype:String =>=>=> RelationalSchema.Column>> layer.geometrytype;
ClassDiagram.Attribut>> Layer.geometryfield:String =>=>=> RelationalSchema.Column>> layer.geometryfield;
ClassDiagram.Attribut>> Layer.symbol:String =>=>=> RelationalSchema.Column>> layer.symbol;
ClassDiagram.Attribut>> Layer.innercolor:String =>=>=> RelationalSchema.Column>> layer.innercolor;
ClassDiagram.Attribut>> Layer.outercolor:String =>=>=> RelationalSchema.Column>> layer.outercolor;
ClassDiagram.Attribut>> Layer.size:String =>=>=> RelationalSchema.Column>> layer.size;
ClassDiagram.Attribut>> Layer.outerthin:String =>=>=> RelationalSchema.Column>> layer.outerthin;
ClassDiagram.Attribut>> Layer.url:String =>=>=> RelationalSchema.Column>> layer.url;
ClassDiagram.Attribut>> Layer.externaltype:String =>=>=> RelationalSchema.Column>> layer.externaltype;
ClassDiagram.Attribut>> Layer.layertypewms:String =>=>=> RelationalSchema.Column>> layer.layertypewms;
ClassDiagram.Attribut>> Layer.infobox:String =>=>=> RelationalSchema.Column>> layer.infobox;
ClassDiagram.Attribut>> Layer.filters:String =>=>=> RelationalSchema.Column>> layer.filters;
ClassDiagram.Attribut>> Layer.queryparams:String =>=>=> RelationalSchema.Column>> layer.queryparams;
ClassDiagram.Attribut>> Layer.query:String =>=>=> RelationalSchema.Column>> layer.query;
ClassDiagram.Attribut>> Layer.ispublic:boolean =>=>=> RelationalSchema.Column>> layer.ispublic;
ClassDiagram.Attribut>> Layer.isvirtual:boolean =>=>=> RelationalSchema.Column>> layer.isvirtual;
ClassDiagram.Attribut>> Layer.isheatmap:boolean =>=>=> RelationalSchema.Column>> layer.isheatmap;
ClassDiagram.Attribut>> Layer.isfilter:boolean =>=>=> RelationalSchema.Column>> layer.isfilter;
ClassDiagram.Attribut>> Layer.weightfield:String =>=>=> RelationalSchema.Column>> layer.weightfield;
ClassDiagram.Attribut>> Layer.heatmapmin:Integer =>=>=> RelationalSchema.Column>> layer.heatmapmin;
ClassDiagram.Attribut>> Layer.refreshtime:Integer =>=>=> RelationalSchema.Column>> layer.refreshtime;
ClassDiagram.Attribut>> Layer.heatmapmax:Integer =>=>=> RelationalSchema.Column>> layer.heatmapmax;
ClassDiagram.Attribut>> Layer.heatmapradius:Integer =>=>=> RelationalSchema.Column>> layer.heatmapradius;
ClassDiagram.Attribut>> Layer.east:Double =>=>=> RelationalSchema.Column>> layer.east;
ClassDiagram.Attribut>> Layer.west:Double =>=>=> RelationalSchema.Column>> layer.west;
ClassDiagram.Attribut>> Layer.north:Double =>=>=> RelationalSchema.Column>> layer.north;
ClassDiagram.Attribut>> Layer.south:Double =>=>=> RelationalSchema.Column>> layer.south;
ClassDiagram.Attribut>> UserRatings.serialversionuid:long =>=>=> RelationalSchema.Column>> userratings.serialversionuid;
ClassDiagram.Attribut>> UserRatings.value:Double =>=>=> RelationalSchema.Column>> userratings.value;
ClassDiagram.Attribut>> TwitterListening.serialversionuid:long =>=>=> RelationalSchema.Column>> twitterlistening.serialversionuid;
ClassDiagram.Attribut>> TwitterListening.from:Date =>=>=> RelationalSchema.Column>> twitterlistening.from;
ClassDiagram.Attribut>> TwitterListening.to:Date =>=>=> RelationalSchema.Column>> twitterlistening.to;
ClassDiagram.Attribut>> TwitterListening.topics:String =>=>=> RelationalSchema.Column>> twitterlistening.topics;
ClassDiagram.Attribut>> TwitterListening.cron:String =>=>=> RelationalSchema.Column>> twitterlistening.cron;
ClassDiagram.Attribut>> TwitterListening.jobname:String =>=>=> RelationalSchema.Column>> twitterlistening.jobname;
ClassDiagram.Attribut>> AppRole./***/serialversionuid:long =>=>=> RelationalSchema.Column>> approle./***/serialversionuid;
ClassDiagram.Attribut>> ModelExecution.serialversionuid:long =>=>=> RelationalSchema.Column>> modelexecution.serialversionuid;
ClassDiagram.Attribut>> ModelExecution.ideject:String =>=>=> RelationalSchema.Column>> modelexecution.ideject;
ClassDiagram.Attribut>> ModelExecution.parameters:String =>=>=> RelationalSchema.Column>> modelexecution.parameters;
ClassDiagram.Attribut>> ModelExecution.idzeppelin:String =>=>=> RelationalSchema.Column>> modelexecution.idzeppelin;
ClassDiagram.Attribut>> ModelExecution.description:String =>=>=> RelationalSchema.Column>> modelexecution.description;
ClassDiagram.Attribut>> AppUserChild./***/serialversionuid:long =>=>=> RelationalSchema.Column>> appuserchild./***/serialversionuid;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> ClientPlatformInstanceSimulation.serialversionuid:long =>=>=> RelationalSchema.Column>> clientplatforminstancesimulation.serialversionuid;
ClassDiagram.Attribut>> ClientPlatformInstanceSimulation.json:String =>=>=> RelationalSchema.Column>> clientplatforminstancesimulation.json;
ClassDiagram.Attribut>> ClientPlatformInstanceSimulation.from:Date =>=>=> RelationalSchema.Column>> clientplatforminstancesimulation.from;
ClassDiagram.Attribut>> ClientPlatformInstanceSimulation.to:Date =>=>=> RelationalSchema.Column>> clientplatforminstancesimulation.to;
ClassDiagram.Attribut>> ClientPlatformInstanceSimulation.cron:String =>=>=> RelationalSchema.Column>> clientplatforminstancesimulation.cron;
ClassDiagram.Attribut>> ClientPlatformInstanceSimulation.erval:int =>=>=> RelationalSchema.Column>> clientplatforminstancesimulation.erval;
ClassDiagram.Attribut>> ClientPlatformInstanceSimulation.active:boolean =>=>=> RelationalSchema.Column>> clientplatforminstancesimulation.active;
ClassDiagram.Attribut>> ClientPlatformInstanceSimulation.jobname:String =>=>=> RelationalSchema.Column>> clientplatforminstancesimulation.jobname;
ClassDiagram.Attribut>> CategoryRelation.serialversionuid:long =>=>=> RelationalSchema.Column>> categoryrelation.serialversionuid;
ClassDiagram.Attribut>> CategoryRelation.typeid:String =>=>=> RelationalSchema.Column>> categoryrelation.typeid;
ClassDiagram.Attribut>> CategoryRelation.GeneratedName:Type =>=>=> RelationalSchema.Column>> categoryrelation.GeneratedName;
ClassDiagram.Attribut>> CategoryRelation.category:String =>=>=> RelationalSchema.Column>> categoryrelation.category;
ClassDiagram.Attribut>> CategoryRelation.subcategory:String =>=>=> RelationalSchema.Column>> categoryrelation.subcategory;
ClassDiagram.Attribut>> ActionsDigitalTwinType.serialversionuid:long =>=>=> RelationalSchema.Column>> actionsdigitaltwintype.serialversionuid;
ClassDiagram.Attribut>> ActionsDigitalTwinType.name:String =>=>=> RelationalSchema.Column>> actionsdigitaltwintype.name;
ClassDiagram.Attribut>> ActionsDigitalTwinType.description:String =>=>=> RelationalSchema.Column>> actionsdigitaltwintype.description;
ClassDiagram.Attribut>> PropertyDigitalTwinType.serialversionuid:long =>=>=> RelationalSchema.Column>> propertydigitaltwintype.serialversionuid;
ClassDiagram.Attribut>> PropertyDigitalTwinType.name:String =>=>=> RelationalSchema.Column>> propertydigitaltwintype.name;
ClassDiagram.Attribut>> PropertyDigitalTwinType.type:String =>=>=> RelationalSchema.Column>> propertydigitaltwintype.type;
ClassDiagram.Attribut>> PropertyDigitalTwinType.description:String =>=>=> RelationalSchema.Column>> propertydigitaltwintype.description;
ClassDiagram.Attribut>> PropertyDigitalTwinType.unit:String =>=>=> RelationalSchema.Column>> propertydigitaltwintype.unit;
ClassDiagram.Attribut>> PropertyDigitalTwinType.direction:String =>=>=> RelationalSchema.Column>> propertydigitaltwintype.direction;
ClassDiagram.Attribut>> PropertyDigitalTwinType.href:String =>=>=> RelationalSchema.Column>> propertydigitaltwintype.href;
ClassDiagram.Attribut>> ClientPlatform.serialversionuid:long =>=>=> RelationalSchema.Column>> clientplatform.serialversionuid;
ClassDiagram.Attribut>> ClientPlatform.encryptionkey:String =>=>=> RelationalSchema.Column>> clientplatform.encryptionkey;
ClassDiagram.Attribut>> ClientPlatform.metadata:String =>=>=> RelationalSchema.Column>> clientplatform.metadata;
ClassDiagram.Attribut>> ClientPlatform.description:String =>=>=> RelationalSchema.Column>> clientplatform.description;
ClassDiagram.Attribut>> Pipeline.serialversionuid:long =>=>=> RelationalSchema.Column>> pipeline.serialversionuid;
ClassDiagram.Attribut>> Pipeline.idstreamsets:String =>=>=> RelationalSchema.Column>> pipeline.idstreamsets;
ClassDiagram.Attribut>> Pipeline.ispublic:boolean =>=>=> RelationalSchema.Column>> pipeline.ispublic;
ClassDiagram.Attribut>> Pipeline.accesstype:PipelineUserAccessType.Type =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Pipeline.type:PipelineType =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Pipeline.status:PipelineStatus =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> BaseLayer.serialversionuid:long =>=>=> RelationalSchema.Column>> baselayer.serialversionuid;
ClassDiagram.Attribut>> BaseLayer.identification:String =>=>=> RelationalSchema.Column>> baselayer.identification;
ClassDiagram.Attribut>> BaseLayer.name:String =>=>=> RelationalSchema.Column>> baselayer.name;
ClassDiagram.Attribut>> BaseLayer.technology:String =>=>=> RelationalSchema.Column>> baselayer.technology;
ClassDiagram.Attribut>> BaseLayer.url:String =>=>=> RelationalSchema.Column>> baselayer.url;
ClassDiagram.Attribut>> TenantLazy./***/serialversionuid:long =>=>=> RelationalSchema.Column>> tenantlazy./***/serialversionuid;
ClassDiagram.Attribut>> VerticalLazy./***/serialversionuid:long =>=>=> RelationalSchema.Column>> verticallazy./***/serialversionuid;
ClassDiagram.Attribut>> MasterUserLazy./***/serialversionuid:long =>=>=> RelationalSchema.Column>> masteruserlazy./***/serialversionuid;
ClassDiagram.Attribut>> IoTSession.serialversionuid:long =>=>=> RelationalSchema.Column>> iotsession.serialversionuid;
ClassDiagram.Attribut>> IoTSession.sessionkey:String =>=>=> RelationalSchema.Column>> iotsession.sessionkey;
ClassDiagram.Attribut>> IoTSession.clientplatform:String =>=>=> RelationalSchema.Column>> iotsession.clientplatform;
ClassDiagram.Attribut>> IoTSession.clientplatformid:String =>=>=> RelationalSchema.Column>> iotsession.clientplatformid;
ClassDiagram.Attribut>> IoTSession.device:String =>=>=> RelationalSchema.Column>> iotsession.device;
ClassDiagram.Attribut>> IoTSession.userid:String =>=>=> RelationalSchema.Column>> iotsession.userid;
ClassDiagram.Attribut>> IoTSession.username:String =>=>=> RelationalSchema.Column>> iotsession.username;
ClassDiagram.Attribut>> IoTSession.expiration:long =>=>=> RelationalSchema.Column>> iotsession.expiration;
ClassDiagram.Attribut>> IoTSession.lastaccess:ZonedDateTime =>=>=> RelationalSchema.Column>> iotsession.lastaccess;
ClassDiagram.Attribut>> OAuthRefreshToken.tokenid:String =>=>=> RelationalSchema.Column>> oauthrefreshtoken.tokenid PRIMARY KEY;
ClassDiagram.Attribut>> OAuthRefreshToken.token:Blob =>=>=> RelationalSchema.Column>> oauthrefreshtoken.token;
ClassDiagram.Attribut>> OAuthRefreshToken.authentication:Blob =>=>=> RelationalSchema.Column>> oauthrefreshtoken.authentication;
ClassDiagram.Attribut>> Tenant./***/serialversionuid:long =>=>=> RelationalSchema.Column>> tenant./***/serialversionuid;
ClassDiagram.Attribut>> MasterConfiguration.serialversionuid:long =>=>=> RelationalSchema.Column>> masterconfiguration.serialversionuid;
ClassDiagram.Attribut>> MasterConfiguration.ymlconfig:String =>=>=> RelationalSchema.Column>> masterconfiguration.ymlconfig;
ClassDiagram.Attribut>> MasterConfiguration.GeneratedName:Type =>=>=> RelationalSchema.Column>> masterconfiguration.GeneratedName;
ClassDiagram.Attribut>> MasterConfiguration.description:String =>=>=> RelationalSchema.Column>> masterconfiguration.description;
ClassDiagram.Attribut>> MasterDeviceToken./***/serialversionuid:long =>=>=> RelationalSchema.Column>> masterdevicetoken./***/serialversionuid;
ClassDiagram.Attribut>> MasterDeviceToken.tokenname:String =>=>=> RelationalSchema.Column>> masterdevicetoken.tokenname;
ClassDiagram.Attribut>> MasterDeviceToken.tenant:String =>=>=> RelationalSchema.Column>> masterdevicetoken.tenant;
ClassDiagram.Attribut>> MasterDeviceToken.verticalschema:String =>=>=> RelationalSchema.Column>> masterdevicetoken.verticalschema;
ClassDiagram.Attribut>> MasterDigitalTwinDeviceToken./***/serialversionuid:long =>=>=> RelationalSchema.Column>> masterdigitaltwindevicetoken./***/serialversionuid;
ClassDiagram.Attribut>> MasterDigitalTwinDeviceToken.tokenname:String =>=>=> RelationalSchema.Column>> masterdigitaltwindevicetoken.tokenname;
ClassDiagram.Attribut>> MasterDigitalTwinDeviceToken.tenant:String =>=>=> RelationalSchema.Column>> masterdigitaltwindevicetoken.tenant;
ClassDiagram.Attribut>> MasterDigitalTwinDeviceToken.verticalschema:String =>=>=> RelationalSchema.Column>> masterdigitaltwindevicetoken.verticalschema;
ClassDiagram.Attribut>> OAuthAccessToken.serialversionuid:long =>=>=> RelationalSchema.Column>> oauthaccesstoken.serialversionuid;
ClassDiagram.Attribut>> OAuthAccessToken.tokenid:String =>=>=> RelationalSchema.Column>> oauthaccesstoken.tokenid PRIMARY KEY;
ClassDiagram.Attribut>> OAuthAccessToken.token:Blob =>=>=> RelationalSchema.Column>> oauthaccesstoken.token;
ClassDiagram.Attribut>> OAuthAccessToken.authenticationid:String =>=>=> RelationalSchema.Column>> oauthaccesstoken.authenticationid;
ClassDiagram.Attribut>> OAuthAccessToken.username:String =>=>=> RelationalSchema.Column>> oauthaccesstoken.username;
ClassDiagram.Attribut>> OAuthAccessToken.clientid:String =>=>=> RelationalSchema.Column>> oauthaccesstoken.clientid;
ClassDiagram.Attribut>> OAuthAccessToken.authentication:Blob =>=>=> RelationalSchema.Column>> oauthaccesstoken.authentication;
ClassDiagram.Attribut>> OAuthAccessToken.refreshtoken:String =>=>=> RelationalSchema.Column>> oauthaccesstoken.refreshtoken;
ClassDiagram.Attribut>> OAuthClientToken.tokenid:String =>=>=> RelationalSchema.Column>> oauthclienttoken.tokenid PRIMARY KEY;
ClassDiagram.Attribut>> OAuthClientToken.token:Blob =>=>=> RelationalSchema.Column>> oauthclienttoken.token;
ClassDiagram.Attribut>> OAuthClientToken.authenticationid:String =>=>=> RelationalSchema.Column>> oauthclienttoken.authenticationid;
ClassDiagram.Attribut>> OAuthClientToken.username:String =>=>=> RelationalSchema.Column>> oauthclienttoken.username;
ClassDiagram.Attribut>> OAuthClientToken.clientid:String =>=>=> RelationalSchema.Column>> oauthclienttoken.clientid;
ClassDiagram.Attribut>> Vertical./***/serialversionuid:long =>=>=> RelationalSchema.Column>> vertical./***/serialversionuid;
ClassDiagram.Attribut>> OAuthClientDetails.serialversionuid:long =>=>=> RelationalSchema.Column>> oauthclientdetails.serialversionuid;
ClassDiagram.Attribut>> OAuthClientDetails.clientid:String =>=>=> RelationalSchema.Column>> oauthclientdetails.clientid PRIMARY KEY;
ClassDiagram.Attribut>> OAuthClientDetails.clientsecret:String =>=>=> RelationalSchema.Column>> oauthclientdetails.clientsecret;
ClassDiagram.Attribut>> OAuthClientDetails.resourceids:String =>=>=> RelationalSchema.Column>> oauthclientdetails.resourceids;
ClassDiagram.Attribut>> OAuthClientDetails.scope:String =>=>=> RelationalSchema.Column>> oauthclientdetails.scope;
ClassDiagram.Attribut>> OAuthClientDetails.authorities:String =>=>=> RelationalSchema.Column>> oauthclientdetails.authorities;
ClassDiagram.Attribut>> OAuthClientDetails.authorizedgranttypes:String =>=>=> RelationalSchema.Column>> oauthclientdetails.authorizedgranttypes;
ClassDiagram.Attribut>> OAuthClientDetails.registeredredirecturi:String =>=>=> RelationalSchema.Column>> oauthclientdetails.registeredredirecturi;
ClassDiagram.Attribut>> OAuthClientDetails.accesstokenvalidityseconds:Integer =>=>=> RelationalSchema.Column>> oauthclientdetails.accesstokenvalidityseconds;
ClassDiagram.Attribut>> OAuthClientDetails.refreshtokenvalidityseconds:Integer =>=>=> RelationalSchema.Column>> oauthclientdetails.refreshtokenvalidityseconds;
ClassDiagram.Attribut>> OAuthClientDetails.additionalinformation:String =>=>=> RelationalSchema.Column>> oauthclientdetails.additionalinformation;
ClassDiagram.Attribut>> MasterUserToken.serialversionuid:long =>=>=> RelationalSchema.Column>> masterusertoken.serialversionuid;
ClassDiagram.Attribut>> MasterUserToken.token:String =>=>=> RelationalSchema.Column>> masterusertoken.token;
ClassDiagram.Attribut>> MasterUser./***/serialversionuid:long =>=>=> RelationalSchema.Column>> masteruser./***/serialversionuid;
ClassDiagram.Attribut>> MasterUserHistoric./***/serialversionuid:long =>=>=> RelationalSchema.Column>> masteruserhistoric./***/serialversionuid;
ClassDiagram.Attribut>> MasterUserHistoric.password:String =>=>=> RelationalSchema.Column>> masteruserhistoric.password;
ClassDiagram.Attribut>> OAuthCode.code:String =>=>=> RelationalSchema.Column>> oauthcode.code PRIMARY KEY;
ClassDiagram.Attribut>> OAuthCode.authentication:Blob =>=>=> RelationalSchema.Column>> oauthcode.authentication;
Many-To-One relationship from ClassDiagram.Class>>AppRoleChildExport  to ClassDiagram.Class>>appchildexport represented by ClassDiagram.Atrribute>>app;
Many-To-Many relationship between ClassDiagram.Class>>AppRoleChildExport  and ClassDiagram.Class>>set<approlechildexport>: app_associated_roles(parent_role:AppRoleChildExport [PK] #FK to AppRoleChildExport,child_role:set<approlechildexport> [PK] #FK to set<approlechildexport>);
One-To-Many relationship from ClassDiagram.Class>>AppRoleChildExport  to ClassDiagram.Class>>Set<AppUserChildExport>;
Many-To-One relationship from ClassDiagram.Class>>OntologyUserAccess  to ClassDiagram.Class>>ontologyuseraccesstype represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>OntologyUserAccess  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>OntologyUserAccess  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>I18nResources  to ClassDiagram.Class>>internationalization represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>I18nResources  to ClassDiagram.Class>>opresource represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>Viewer  to ClassDiagram.Class>>baselayer represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>OntologyKPI  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OntologyKPI  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>AppRoleListOauth  to ClassDiagram.Class>>applistoauth represented by ClassDiagram.Atrribute>>app;
One-To-Many relationship from ClassDiagram.Class>>AppRoleListOauth  to ClassDiagram.Class>>Set<AppUserList>;
Many-To-Many relationship between ClassDiagram.Class>>AppRoleListOauth  and ClassDiagram.Class>>set<approlelistoauth>: app_associated_roles(parent_role:AppRoleListOauth [PK] #FK to AppRoleListOauth,child_role:set<approlelistoauth> [PK] #FK to set<approlelistoauth>);
Many-To-One relationship from ClassDiagram.Class>>AppUserList  to ClassDiagram.Class>>approlelist represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>AppUserList  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>DatasetResource  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>OntologyVirtualDatasource  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
One-To-Many relationship from ClassDiagram.Class>>OntologyVirtualDatasource  to ClassDiagram.Class>>Set<OntologyVirtual>;
Many-To-One relationship from ClassDiagram.Class>>KsqlRelation  to ClassDiagram.Class>>ksqlflow represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>KsqlRelation  to ClassDiagram.Class>>ksqlresource represented by ClassDiagram.Atrribute>>id;
Many-To-Many relationship between ClassDiagram.Class>>KsqlRelation  and ClassDiagram.Class>>set<ksqlrelation>: ksql_predecesor_relation(ksql_predecessor_id:KsqlRelation [PK] #FK to KsqlRelation,ksql_sucessor_id:set<ksqlrelation> [PK] #FK to set<ksqlrelation>);
null: ksql_predecesor_relation(ksql_predecessor_id:KsqlRelation [PK] #FK to KsqlRelation,ksql_sucessor_id:set<ksqlrelation> [PK] #FK to set<ksqlrelation>);
One-To-One relationship between ClassDiagram.Class>>OntologyVirtual  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>OntologyVirtual  to ClassDiagram.Class>>ontologyvirtualdatasource represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>AppRoleChild  to ClassDiagram.Class>>app represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>AppRoleChild  and ClassDiagram.Class>>set<approlechild>: app_associated_roles(parent_role:AppRoleChild [PK] #FK to AppRoleChild,child_role:set<approlechild> [PK] #FK to set<approlechild>);
One-To-Many relationship from ClassDiagram.Class>>AppRoleChild  to ClassDiagram.Class>>Set<AppUserChild>;
Many-To-One relationship from ClassDiagram.Class>>Subscription  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>Ontology  to ClassDiagram.Class>>datamodel represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>Ontology  to ClassDiagram.Class>>Set<OntologyUserAccess>;
One-To-One relationship between ClassDiagram.Class>>Ontology  to ClassDiagram.Class>>ontologykpi represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Ontology  to ClassDiagram.Class>>ontologytimeseries represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CategorizationUser  to ClassDiagram.Class>>categorization represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>CategorizationUser  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>BinaryFileAccess  to ClassDiagram.Class>>binaryfile represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>BinaryFileAccess  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>VideoCapture  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ProjectResourceAccessExport  to ClassDiagram.Class>>opresource represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ProjectResourceAccessExport  to ClassDiagram.Class>>projectexport represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ProjectResourceAccessExport  to ClassDiagram.Class>>approleexport represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ProjectResourceAccessExport  to ClassDiagram.Class>>userexport represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>RestPlanner  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-Many relationship between ClassDiagram.Class>>Report  and ClassDiagram.Class>>set<binaryfile>: report_resources(report_id:Report [PK] #FK to Report,resources_id:set<binaryfile> [PK] #FK to set<binaryfile>);
Many-To-One relationship from ClassDiagram.Class>>AppUserExport  to ClassDiagram.Class>>approleexport represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>AppUserExport  to ClassDiagram.Class>>userexport represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>ApiOperation  to ClassDiagram.Class>>api represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>ApiOperation  to ClassDiagram.Class>>Set<ApiQueryParameter>;
Many-To-One relationship from ClassDiagram.Class>>ClientConnection  to ClassDiagram.Class>>clientplatform represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>OntologyTimeSeries  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>OntologyTimeSeries  to ClassDiagram.Class>>Set<OntologyTimeSeriesWindow>;
One-To-Many relationship from ClassDiagram.Class>>OntologyTimeSeries  to ClassDiagram.Class>>Set<OntologyTimeSeriesProperty>;
Many-To-One relationship from ClassDiagram.Class>>OPResource  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-Many relationship between ClassDiagram.Class>>UserExport  and ClassDiagram.Class>>set<projectexport>: user_project(user_id:UserExport [PK] #FK to UserExport,project_id:set<projectexport> [PK] #FK to set<projectexport>);
Many-To-One relationship from ClassDiagram.Class>>OntologyTimeSeriesWindow  to ClassDiagram.Class>>ontologytimeseries represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>DigitalTwinType  to ClassDiagram.Class>>Set<PropertyDigitalTwinType>;
One-To-Many relationship from ClassDiagram.Class>>DigitalTwinType  to ClassDiagram.Class>>Set<ActionsDigitalTwinType>;
One-To-Many relationship from ClassDiagram.Class>>DigitalTwinType  to ClassDiagram.Class>>Set<EventsDigitalTwinType>;
One-To-Many relationship from ClassDiagram.Class>>DigitalTwinType  to ClassDiagram.Class>>Set<DigitalTwinDevice>;
Many-To-One relationship from ClassDiagram.Class>>UserToken  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
One-To-Many relationship from ClassDiagram.Class>>OntologyUserAccessType  to ClassDiagram.Class>>Set<OntologyUserAccess>;
Many-To-One relationship from ClassDiagram.Class>>ClientPlatformOntology  to ClassDiagram.Class>>clientplatform represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ClientPlatformOntology  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>FlowNode  to ClassDiagram.Class>>flow represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>FlowNode  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ProjectResourceAccessList  to ClassDiagram.Class>>opresource represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ProjectResourceAccessList  to ClassDiagram.Class>>project represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ProjectResourceAccessList  to ClassDiagram.Class>>approlelist represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ProjectResourceAccessList  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>AppRoleList  to ClassDiagram.Class>>applist represented by ClassDiagram.Atrribute>>app;
One-To-Many relationship from ClassDiagram.Class>>AppRoleList  to ClassDiagram.Class>>Set<AppUserList>;
One-To-Many relationship from ClassDiagram.Class>>NotebookUserAccessType  to ClassDiagram.Class>>Set<NotebookUserAccess>;
Many-To-One relationship from ClassDiagram.Class>>EventsDigitalTwinType  to ClassDiagram.Class>>digitaltwintype represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>Project  to ClassDiagram.Class>>Set<ProjectResourceAccess>;
One-To-One relationship between ClassDiagram.Class>>Project  to ClassDiagram.Class>>app represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProjectResourceAccess  to ClassDiagram.Class>>opresource represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ProjectResourceAccess  to ClassDiagram.Class>>project represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ProjectResourceAccess  to ClassDiagram.Class>>approle represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ProjectResourceAccess  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
One-To-Many relationship from ClassDiagram.Class>>BinaryFile  to ClassDiagram.Class>>Set<BinaryFileAccess>;
One-To-One relationship between ClassDiagram.Class>>AppChildExport  to ClassDiagram.Class>>projectexport represented by ClassDiagram.Atrribute>>project;
Many-To-One relationship from ClassDiagram.Class>>AppChildExport  to ClassDiagram.Class>>userexport represented by ClassDiagram.Atrribute>>user_id;
One-To-Many relationship from ClassDiagram.Class>>AppChildExport  to ClassDiagram.Class>>Set<AppRoleChildExport>;
Many-To-Many relationship between ClassDiagram.Class>>AppChildExport  and ClassDiagram.Class>>set<appchildexport>: app_associated(parent_app:AppChildExport [PK] #FK to AppChildExport,child_app:set<appchildexport> [PK] #FK to set<appchildexport>);
One-To-Many relationship from ClassDiagram.Class>>ProjectExport  to ClassDiagram.Class>>Set<ProjectResourceAccessExport>;
One-To-One relationship between ClassDiagram.Class>>ProjectExport  to ClassDiagram.Class>>appexport represented by ClassDiagram.Atrribute>>app;
Many-To-One relationship from ClassDiagram.Class>>AppRoleExport  to ClassDiagram.Class>>appexport represented by ClassDiagram.Atrribute>>app;
Many-To-Many relationship between ClassDiagram.Class>>AppRoleExport  and ClassDiagram.Class>>set<approlechildexport>: app_associated_roles(parent_role:AppRoleExport [PK] #FK to AppRoleExport,child_role:set<approlechildexport> [PK] #FK to set<approlechildexport>);
One-To-Many relationship from ClassDiagram.Class>>AppRoleExport  to ClassDiagram.Class>>Set<AppUserExport>;
Many-To-One relationship from ClassDiagram.Class>>GadgetMeasure  to ClassDiagram.Class>>gadget represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>GadgetMeasure  to ClassDiagram.Class>>gadgetdatasource represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>App  to ClassDiagram.Class>>project represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>App  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
One-To-Many relationship from ClassDiagram.Class>>App  to ClassDiagram.Class>>Set<AppRole>;
Many-To-Many relationship between ClassDiagram.Class>>App  and ClassDiagram.Class>>set<appchild>: app_associated(parent_app:App [PK] #FK to App,child_app:set<appchild> [PK] #FK to set<appchild>);
Many-To-One relationship from ClassDiagram.Class>>Configuration  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>AppUserChildExport  to ClassDiagram.Class>>approlechildexport represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>AppUserChildExport  to ClassDiagram.Class>>userexport represented by ClassDiagram.Atrribute>>user_id;
One-To-Many relationship from ClassDiagram.Class>>DashboardUserAccessType  to ClassDiagram.Class>>Set<DashboardUserAccess>;
Many-To-One relationship from ClassDiagram.Class>>Api  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>Api  to ClassDiagram.Class>>Set<UserApi>;
Many-To-One relationship from ClassDiagram.Class>>Model  to ClassDiagram.Class>>notebook represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>Model  to ClassDiagram.Class>>dashboard represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>DataflowInstance  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>PipelineUserAccess  to ClassDiagram.Class>>pipelineuseraccesstype represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>PipelineUserAccess  to ClassDiagram.Class>>pipeline represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>PipelineUserAccess  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>Flow  to ClassDiagram.Class>>flowdomain represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>AppUser  to ClassDiagram.Class>>approle represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>AppUser  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
One-To-One relationship between ClassDiagram.Class>>Role  to ClassDiagram.Class>>role represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>OntologyRestOperation  to ClassDiagram.Class>>ontologyrest represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>OntologyRestOperation  to ClassDiagram.Class>>Set<OntologyRestOperationParam>;
Many-To-Many relationship between ClassDiagram.Class>>AppList  and ClassDiagram.Class>>set<applist>: app_associated(parent_app:AppList [PK] #FK to AppList,child_app:set<applist> [PK] #FK to set<applist>);
One-To-Many relationship from ClassDiagram.Class>>AppList  to ClassDiagram.Class>>Set<AppRoleList>;
One-To-One relationship between ClassDiagram.Class>>AppList  to ClassDiagram.Class>>projectlist represented by ClassDiagram.Atrribute>>project;
Many-To-One relationship from ClassDiagram.Class>>AppList  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>SupportRequest  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>ConsoleMenu  to ClassDiagram.Class>>role represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>DashboardUserAccess  to ClassDiagram.Class>>dashboarduseraccesstype represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>DashboardUserAccess  to ClassDiagram.Class>>dashboard represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>DashboardUserAccess  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>ApiQueryParameter  to ClassDiagram.Class>>apioperation represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>GadgetDatasource  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>GadgetFavorite  to ClassDiagram.Class>>gadget represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>GadgetFavorite  to ClassDiagram.Class>>gadgettemplate represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>GadgetFavorite  to ClassDiagram.Class>>gadgetdatasource represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>KsqlResource  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>ProjectList  to ClassDiagram.Class>>applist represented by ClassDiagram.Atrribute>>app;
Many-To-One relationship from ClassDiagram.Class>>AppUserListOauth  to ClassDiagram.Class>>approlelistoauth represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>AppUserListOauth  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
One-To-Many relationship from ClassDiagram.Class>>PipelineUserAccessType  to ClassDiagram.Class>>Set<PipelineUserAccess>;
Many-To-One relationship from ClassDiagram.Class>>DigitalTwinDevice  to ClassDiagram.Class>>digitaltwintype represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>Token  to ClassDiagram.Class>>clientplatform represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>OntologyKafkaTopic  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>AppChild  to ClassDiagram.Class>>project represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>AppChild  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
One-To-Many relationship from ClassDiagram.Class>>AppChild  to ClassDiagram.Class>>Set<AppRole>;
Many-To-Many relationship between ClassDiagram.Class>>AppChild  and ClassDiagram.Class>>set<appchild>: app_associated(parent_app:AppChild [PK] #FK to AppChild,child_app:set<appchild> [PK] #FK to set<appchild>);
Many-To-One relationship from ClassDiagram.Class>>OntologyTimeSeriesProperty  to ClassDiagram.Class>>ontologytimeseries represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>NotebookUserAccess  to ClassDiagram.Class>>notebookuseraccesstype represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>NotebookUserAccess  to ClassDiagram.Class>>notebook represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>NotebookUserAccess  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-Many relationship between ClassDiagram.Class>>AppListOauth  and ClassDiagram.Class>>set<applistoauth>: app_associated(parent_app:AppListOauth [PK] #FK to AppListOauth,child_app:set<applistoauth> [PK] #FK to set<applistoauth>);
One-To-Many relationship from ClassDiagram.Class>>AppListOauth  to ClassDiagram.Class>>Set<AppRoleListOauth>;
One-To-One relationship between ClassDiagram.Class>>AppListOauth  to ClassDiagram.Class>>projectlist represented by ClassDiagram.Atrribute>>project;
Many-To-One relationship from ClassDiagram.Class>>AppListOauth  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>OntologyRestOperationParam  to ClassDiagram.Class>>ontologyrestoperation represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>OntologyDataAccess  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>OntologyDataAccess  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>OntologyDataAccess  to ClassDiagram.Class>>approle represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>AppExport  to ClassDiagram.Class>>projectexport represented by ClassDiagram.Atrribute>>project;
Many-To-One relationship from ClassDiagram.Class>>AppExport  to ClassDiagram.Class>>userexport represented by ClassDiagram.Atrribute>>user_id;
One-To-Many relationship from ClassDiagram.Class>>AppExport  to ClassDiagram.Class>>Set<AppRoleExport>;
Many-To-Many relationship between ClassDiagram.Class>>AppExport  and ClassDiagram.Class>>set<appchildexport>: app_associated(parent_app:AppExport [PK] #FK to AppExport,child_app:set<appchildexport> [PK] #FK to set<appchildexport>);
Many-To-One relationship from ClassDiagram.Class>>UserComment  to ClassDiagram.Class>>marketasset represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>UserComment  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>Subscriptor  to ClassDiagram.Class>>subscription represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>DroolsRule  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>DroolsRule  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>QueryTemplate  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ParameterModel  to ClassDiagram.Class>>model represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>Subcategory  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>UserApi  to ClassDiagram.Class>>api represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>UserApi  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>ClientPlatformInstance  to ClassDiagram.Class>>clientplatform represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>OntologyRest  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>OntologyRest  to ClassDiagram.Class>>ontologyrestsecurity represented by ClassDiagram.Atrribute>>securityid;
One-To-One relationship between ClassDiagram.Class>>OntologyRest  to ClassDiagram.Class>>ontologyrestheaders represented by ClassDiagram.Atrribute>>headerid;
One-To-Many relationship from ClassDiagram.Class>>OntologyRest  to ClassDiagram.Class>>Set<OntologyRestOperation>;
One-To-Many relationship from ClassDiagram.Class>>KsqlFlow  to ClassDiagram.Class>>Set<KsqlRelation>;
Many-To-One relationship from ClassDiagram.Class>>Layer  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-Many relationship between ClassDiagram.Class>>Layer  and ClassDiagram.Class>>set<viewer>: layer_viewer(layer_id:Layer [PK] #FK to Layer,viewer_id:set<viewer> [PK] #FK to set<viewer>);
Many-To-One relationship from ClassDiagram.Class>>UserRatings  to ClassDiagram.Class>>marketasset represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>UserRatings  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-One relationship from ClassDiagram.Class>>TwitterListening  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>TwitterListening  to ClassDiagram.Class>>configuration represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>TwitterListening  to ClassDiagram.Class>>token represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>AppRole  to ClassDiagram.Class>>app represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>AppRole  and ClassDiagram.Class>>set<approlechild>: app_associated_roles(parent_role:AppRole [PK] #FK to AppRole,child_role:set<approlechild> [PK] #FK to set<approlechild>);
One-To-Many relationship from ClassDiagram.Class>>AppRole  to ClassDiagram.Class>>Set<AppUser>;
Many-To-One relationship from ClassDiagram.Class>>ModelExecution  to ClassDiagram.Class>>model represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>AppUserChild  to ClassDiagram.Class>>approlechild represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>AppUserChild  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<project>: user_project(user_id:User [PK] #FK to User,project_id:set<project> [PK] #FK to set<project>);
Many-To-One relationship from ClassDiagram.Class>>ClientPlatformInstanceSimulation  to ClassDiagram.Class>>ontology represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ClientPlatformInstanceSimulation  to ClassDiagram.Class>>clientplatform represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ClientPlatformInstanceSimulation  to ClassDiagram.Class>>token represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ActionsDigitalTwinType  to ClassDiagram.Class>>digitaltwintype represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>PropertyDigitalTwinType  to ClassDiagram.Class>>digitaltwintype represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>ClientPlatform  to ClassDiagram.Class>>Set<ClientPlatformOntology>;
One-To-Many relationship from ClassDiagram.Class>>ClientPlatform  to ClassDiagram.Class>>Set<Token>;
One-To-Many relationship from ClassDiagram.Class>>ClientPlatform  to ClassDiagram.Class>>Set<ClientConnection>;
One-To-Many relationship from ClassDiagram.Class>>ClientPlatform  to ClassDiagram.Class>>Set<ClientPlatformInstance>;
Many-To-One relationship from ClassDiagram.Class>>Pipeline  to ClassDiagram.Class>>dataflowinstance represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>TenantLazy  to ClassDiagram.Class>>Set<MasterUserLazy>;
Many-To-Many relationship between ClassDiagram.Class>>VerticalLazy  and ClassDiagram.Class>>set<tenantlazy>: vertical_tenant(vertical_id:VerticalLazy [PK] #FK to VerticalLazy,tenant_id:set<tenantlazy> [PK] #FK to set<tenantlazy>);
Many-To-One relationship from ClassDiagram.Class>>MasterUserLazy  to ClassDiagram.Class>>tenantlazy represented by ClassDiagram.Atrribute>>id;
One-To-One relationship between ClassDiagram.Class>>IoTSession  to ClassDiagram.Class>>masterdevicetoken represented by ClassDiagram.Atrribute>>token;
One-To-Many relationship from ClassDiagram.Class>>Tenant  to ClassDiagram.Class>>Set<MasterUser>;
Many-To-Many relationship between ClassDiagram.Class>>Vertical  and ClassDiagram.Class>>set<tenant>: vertical_tenant(vertical_id:Vertical [PK] #FK to Vertical,tenant_id:set<tenant> [PK] #FK to set<tenant>);
One-To-One relationship between ClassDiagram.Class>>MasterUserToken  to ClassDiagram.Class>>masteruser represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>MasterUserToken  to ClassDiagram.Class>>tenant represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>MasterUserToken  to ClassDiagram.Class>>vertical represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>MasterUser  to ClassDiagram.Class>>tenant represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>MasterUserHistoric  to ClassDiagram.Class>>masteruser represented by ClassDiagram.Atrribute>>user_id;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>OPResource  ;
