<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="validationmessages_es" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="empty-my-interface-mapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="my-interface-impl-mapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="my-interface-mapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregateresourcebundlelocatortestbundle2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregateresourcebundlelocatortestbundle1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationmessages" >
      <xs:complexContent>
       <xs:extension base="resourcebundle">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="default_properties_file_name" type="xs:string" />
          <xs:element name="messages" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatevalidatorconfigurationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="game" >
      <xs:sequence>
        <xs:element name="detail" type="gamedetail" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competition" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personcompetition" >
      <xs:complexContent>
       <xs:extension base="competition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gamedetail" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="competition" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fixture" >
      <xs:complexContent>
       <xs:extension base="game">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teamcompetition" >
      <xs:complexContent>
       <xs:extension base="competition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ifixture" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="icompetition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritancemappingstest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="game" >
      <xs:sequence>
        <xs:element name="detail" type="gamedetail" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teamcompetition" >
      <xs:complexContent>
       <xs:extension base="competition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fixture" >
      <xs:complexContent>
       <xs:extension base="game">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gamedetail" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="competition" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competition" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personcompetition" >
      <xs:complexContent>
       <xs:extension base="competition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="properties" >
      <xs:sequence>
        <xs:element name="listofstring" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlmappingtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="middlename" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="customerid" type="xs:string" />
        <xs:element name="password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myinterfaceimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validatortest" >
      <xs:complexContent>
       <xs:extension base="e">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="failfasttest" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="finltestinstnce" type="a" nillable="true" minOccurs="0" />
        <xs:element name="i" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerrormessagetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="isvalidvalidator" >
      <xs:sequence>
        <xs:element name="message" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummytestclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="isvalid" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="driver" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="age" type="xs:long" />
          <xs:element name="hasdrivinglicense" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="driverchecks" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderedchecks" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rentalcar" >
      <xs:complexContent>
       <xs:extension base="car">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="redefiningdefaultgrouptest" >
      <xs:complexContent>
       <xs:extension base="rentalcar">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="carchecks" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="//thedefinitionofthemessageintheconstraintsisjustfortestingpurpose.//inarealworldscenarioyouwouldplaceyourmessagesintoresourcebundles./***byannotatingthefieldwith@notnullwespecify,thatnullisnotavalid*value.*/manufacturer" type="xs:string" />
        <xs:element name="/***thisfieldshallnotonlynotallowedtobenull,itshallalsobetween*2and14characterslong.*/licenseplate" type="xs:string" />
        <xs:element name="/***thisfieldshallhaveavalueofatleast2.*/seatcount" type="xs:long" />
        <xs:element name="passedvehicleinspection" type="xs:anyType" />
        <xs:element name="GeneratedName" type="driver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zipcodecoherencechecker" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cyclicgroupsequence1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zipcodecoherencevalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cyclicgroupsequence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="zipcode" type="xs:string" />
        <xs:element name="city" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupchaingeneratortest" >
      <xs:complexContent>
       <xs:extension base="default">
         <xs:sequence>
          <xs:element name="generator" type="groupchaingenerator" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cyclicgroupsequence2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupchaintest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="first" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupa" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="second" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="last" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupb" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsequence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="admin" type="xs:anyType" />
        <xs:element name="//definemessagetoavoidcomparisonproblemwithvalidationerrormessage//withadifferentlocalethanenpassword" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultgroupsequenceprovidertest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="methodvalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicgroupsequenceprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strongcheck" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="try" >
      <xs:complexContent>
       <xs:extension base="basecomponent">
         <xs:sequence>
          <xs:element name="field1" type="xs:string" />
          <xs:element name="field2" type="xs:string" />
          <xs:element name="field3" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="groupinheritancetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxytest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pathimpltest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unserializableclass" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customconstraintserializabletest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializableclass" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummyemailvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constraintviolationserializationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="email" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="methodlevelvalidationgroupsequencetest" >
      <xs:sequence>
        <xs:element name="customerrepository" type="customerrepositorywithredefineddefaultgroup" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerrepositoryimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerrepositorywithredefineddefaultgroupimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="repositorybase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerrepository" >
      <xs:complexContent>
       <xs:extension base="repositorybase<customer>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customerrepositorywithredefineddefaultgroup" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="illegalmethodparameterconstraintstest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="city" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodlevelvalidationtest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="customerrepository" nillable="true" minOccurs="0" />
        <xs:element name="repositorybase" type="customer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valueformattermessageinterpolatortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messageinterpolationwithdefaultbundletest" >
      <xs:complexContent>
       <xs:extension base="resourcebundlemessageinterpolator">
         <xs:sequence>
          <xs:element name="default" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="messageinterpolationtest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messageinterpolatorcontexttest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="email" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourcebundlemessageinterpolatortest" >
      <xs:complexContent>
       <xs:extension base="resourcebundle">
         <xs:sequence>
          <xs:element name="interpolator" type="resourcebundlemessageinterpolator" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="notnulldescriptor" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sizedescriptor" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpatraversableresolvertest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bookbusinessrules" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cloth" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="books" type="book" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="authorbusinessrules" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachedtraversableresolvertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suit" >
      <xs:sequence>
        <xs:element name="size" type="xs:anyType" />
        <xs:element name="GeneratedName" type="trousers" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jacket" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trousers" >
      <xs:sequence>
        <xs:element name="length" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jacket" >
      <xs:sequence>
        <xs:element name="width" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="author" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constraintvalidatorcontexttest" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializable" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeconstrainttest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validname" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validnamesingleviolation" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="nickname" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullvalidatortest" >
      <xs:sequence>
        <xs:element name="constraint" type="nullvalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emailvalidatortest" >
      <xs:sequence>
        <xs:element name="validator" type="emailvalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="digitsvalidatorfornumbertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="minvalidatorforstringtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maxvalidatorfornumbertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="minmaxvalidatorboundarytest" >
      <xs:sequence>
        <xs:element name="min" type="xs:long" />
        <xs:element name="max" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pastvalidatorfordatetest" >
      <xs:sequence>
        <xs:element name="constraint" type="pastvalidatorfordate" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="futurevalidatorforcalendartest" >
      <xs:sequence>
        <xs:element name="constraint" type="futurevalidatorforcalendar" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notnullvalidatortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pastvalidatorforreadableinstanttest" >
      <xs:sequence>
        <xs:element name="validator" type="pastvalidatorforreadableinstant" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="futurevalidatorforreadableinstanttest" >
      <xs:sequence>
        <xs:element name="validator" type="futurevalidatorforreadableinstant" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blankvalidatortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pastvalidatorforcalendartest" >
      <xs:sequence>
        <xs:element name="constraint" type="pastvalidatorforcalendar" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scriptassertvalidatortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="futurevalidatorfordatetest" >
      <xs:sequence>
        <xs:element name="constraint" type="futurevalidatorfordate" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assertfalsevalidatortest" >
      <xs:sequence>
        <xs:element name="constraint" type="assertfalsevalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maxvalidatorforstringtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pastvalidatorforreadablepartialtest" >
      <xs:sequence>
        <xs:element name="validator" type="pastvalidatorforreadablepartial" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="minvalidatorfornumbertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="digitsvalidatorforstringtest" >
      <xs:sequence>
        <xs:element name="constraint" type="digitsvalidatorforstring" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dateholder" >
      <xs:sequence>
        <xs:element name="withpastdate" type="xs:anyType" />
        <xs:element name="withfuturedate" type="xs:anyType" />
        <xs:element name="past" type="xs:dateTime" />
        <xs:element name="future" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="decimalminmaxvalidatorboundarytest" >
      <xs:sequence>
        <xs:element name="d" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="asserttruevalidatortest" >
      <xs:sequence>
        <xs:element name="constraint" type="asserttruevalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lengthvalidatortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizevalidatortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="futurevalidatorforreadablepartialtest" >
      <xs:sequence>
        <xs:element name="validator" type="futurevalidatorforreadablepartial" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creditcardnumbervalidatortest" >
      <xs:sequence>
        <xs:element name="validator" type="creditcardnumbervalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="patternvalidatortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="urlvalidatortest" >
      <xs:complexContent>
       <xs:extension base="urlcontainer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="futurevalidatortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constrainttest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="supertypearrayvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="interval" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subtype" >
      <xs:complexContent>
       <xs:extension base="supertype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="coordinate" >
      <xs:sequence>
        <xs:element name="itude" type="xs:long" />
        <xs:element name="latitude" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="startlessthanend" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="suburb" >
      <xs:complexContent>
       <xs:extension base="number>">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="facilities" type="xs:anyType" />
          <xs:element name="streetnames" type="xs:anyType" />
          <xs:element name="boundingbox" type="coordinate" nillable="true" minOccurs="0" />
          <xs:element name="includedpostcodes" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elevator" >
      <xs:sequence>
        <xs:element name="currentfloor" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectconstraintvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="supertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cloneable" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="object" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interval" >
      <xs:sequence>
        <xs:element name="start" type="xs:long" />
        <xs:element name="end" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validssn" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blacklist" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="isblank" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="nickname" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ssn" type="xs:string" />
        <xs:element name="anotherssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notnullandsize" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="temporaryssn" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="boolcompositeconstrainttest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ssn" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="patternorsize" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localconstrvaltest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="patternorlong" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longstringvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="nickname" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="smallstring" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="smallstringvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="allowedssn" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializableconstraintvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cloneableconstraintvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="startlessthanendimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postcodelist" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="supertypearray" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classvalidatorwithtypevariabletest" >
      <xs:complexContent>
       <xs:extension base="item>>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constraintvalidatorcontextimpltest" >
      <xs:sequence>
        <xs:element name="message" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validatorresolutiontest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="marathon" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="/***intentionallywithoutagetter/settertotestaddingaconstraintprogrammaticallyusingfieldaccesstype*/numberofhelpers" type="xs:long" />
        <xs:element name="tournament" type="xs:dateTime" />
        <xs:element name="runners" type="runner" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadingwithconstraintmappingtest" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constraintmappingtest" >
      <xs:complexContent>
       <xs:extension base="marathon">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="marathonconstraint" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="methodconstraintmappingtest" >
      <xs:sequence>
        <xs:element name="wrappedobject" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="marathonconstraintvalidator" >
      <xs:sequence>
        <xs:element name="minrunners" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="runner" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="paidentryfee" type="xs:anyType" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tournament" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregateresourcebundlelocatortest" >
      <xs:sequence>
        <xs:element name="bundle_name_1" type="xs:string" />
        <xs:element name="bundle_name_2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregatebundletest" >
      <xs:sequence>
        <xs:element name="bundle_name_1" type="xs:string" />
        <xs:element name="bundle_name_2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="positive" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyvalidatorfactorytest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boundariesconstraintvalidator" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="low" type="xs:long" />
          <xs:element name="high" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validatortypetest" >
      <xs:complexContent>
       <xs:extension base="constraintvalidator<positive,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identitysettest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectionhelpertest" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationfactorytest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="positiveconstraintvalidator" >
      <xs:complexContent>
       <xs:extension base="boundariesconstraintvalidator<positive>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validationtest" >
      <xs:complexContent>
       <xs:extension base="constraintvalidator<?,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="middlename" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="ordernumber" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodmetadatatest" >
      <xs:sequence>
        <xs:element name="beanmetadata" type="customerrepository" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parametermetadatatest" >
      <xs:sequence>
        <xs:element name="beanmetadata" type="customerrepository" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedescriptortest" >
      <xs:complexContent>
       <xs:extension base="parameterconstrainedtype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elementdescriptortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methoddescriptortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanmetadataimpltest" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentwithatvalid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childwithoutatvalid" >
      <xs:complexContent>
       <xs:extension base="parentwithatvalid">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customerrepositoryext" >
      <xs:complexContent>
       <xs:extension base="customerrepository">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentwithoutatvalid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="ordernumber" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterdescriptortest" >
      <xs:sequence>
        <xs:element name="createcustomerparameter1" type="parameterdescriptor" nillable="true" minOccurs="0" />
        <xs:element name="createcustomerparameter2" type="parameterdescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childwithatvalid" >
      <xs:complexContent>
       <xs:extension base="parentwithoutatvalid">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aggregatedmethodmetadatatest" >
      <xs:sequence>
        <xs:element name="beanmetadata" type="customerrepositoryext" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="middlename" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="orderlist" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childwithoutatvalid2" >
      <xs:complexContent>
       <xs:extension base="parentwithoutatvalid">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constrainthelpertest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="constrainthelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerrepository" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="engine" >
      <xs:sequence>
        <xs:element name="serialnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummytraversableresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatetestcase" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="cfg" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constraintviolationassert" >
      <xs:complexContent>
       <xs:extension base="constraintviolation<?>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validatorutil" >
      <xs:complexContent>
       <xs:extension base="configuration<t>,">
         <xs:sequence>
          <xs:element name="hibernate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="countvalidationcalls" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="countvalidationcallsvalidator" >
      <xs:sequence>
        <xs:element name="number_of_validation_calls" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationinvocationhandler" >
      <xs:sequence>
        <xs:element name="wrapped" type="object" nillable="true" minOccurs="0" />
        <xs:element name="validator" type="methodvalidator" nillable="true" minOccurs="0" />
        <xs:element name="parameterindex" type="xs:anyType" />
        <xs:element name="groups" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unit-tests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="site" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="binding-customization" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationmessages_fr" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationmessages_es" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationmessages_zh_cn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationmessages_hu" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationmessages_de" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manifest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javax.validation.spi" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validation-mapping-1.0" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validation-configuration-1.0" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodmetadata" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="/***constrained-relatedmetadataforthismethod'sparameters.*/parametermetadata" type="parametermetadata" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="returnvalueconstraints" type="xs:anyType" />
        <xs:element name="iscascading" type="xs:anyType" />
        <xs:element name="hasparameterconstraints" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parametermetadata" >
      <xs:sequence>
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="index" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="constraints" type="xs:anyType" />
        <xs:element name="iscascading" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elementdescriptorimpl" >
      <xs:sequence>
        <xs:element name="metadatabean" type="xs:anyType" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="constraintdescriptors" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodmetaconstraint" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanmetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constrainthelper" >
      <xs:complexContent>
       <xs:extension base="annotation>,">
         <xs:sequence>
          <xs:element name="joda_time_class_name" type="xs:string" />
          <xs:element name="builtinconstraints" type="xs:anyType" />
          <xs:element name="constraintvalidatordefinitions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterdescriptorimpl" >
      <xs:complexContent>
       <xs:extension base="elementdescriptorimpl">
         <xs:sequence>
          <xs:element name="" type="parametermetadata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertydescriptorimpl" >
      <xs:complexContent>
       <xs:extension base="elementdescriptorimpl">
         <xs:sequence>
          <xs:element name="cascaded" type="xs:anyType" />
          <xs:element name="property" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beandescriptorimpl" >
      <xs:complexContent>
       <xs:extension base="elementdescriptorimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constraintdescriptorimpl" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="overrides_parameter_default_index" type="xs:long" />
          <xs:element name="groups" type="xs:string" />
          <xs:element name="payload" type="xs:string" />
          <xs:element name="/***alistofannotationswhichcanbeignoredwheninvestigatingforcomposingconstraints.*/non_composing_constraint_annotations" type="xs:anyType" />
          <xs:element name="/***heacualconsrainannoaion.*/annoaion" type="xs:anyType" />
          <xs:element name="/***thetypeoftheannotationmadeinstancevariable,because{@codeannotation.annotationtype()}isquiteexpensive.*/annotationtype" type="xs:anyType" />
          <xs:element name="constraintvalidatordefinitionclasses" type="xs:anyType" />
          <xs:element name="/***thegroupsforwhichtoapplythisconstraint.*/groups" type="xs:anyType" />
          <xs:element name="attributes" type="xs:anyType" />
          <xs:element name="/***thespecifiedpayloadoftheconstraint.*/payloads" type="xs:anyType" />
          <xs:element name="/***thecomposingconstraintsforthisconstraint.*/composingconstraints" type="xs:anyType" />
          <xs:element name="/***flagindicatingifincaseofacomposingconstraintasingleerrorormultipleerrorsshouldberaised.*/isreportassingleinvalidconstraint" type="xs:anyType" />
          <xs:element name=")theconstraintwas*definedon.*/" type="xs:anyType" />
          <xs:element name="/***theoriginoftheconstraint.definedontheactualrootclassorsomehwereintheclasshierarchy*/definedon" type="constraintorigin" nillable="true" minOccurs="0" />
          <xs:element name="/***typeindicatinghowcomposingconstraintsshouldbecombined.bydefaultthisissetto{@codeconstraintcomposition..and}.*/" type="compositiontype" nillable="true" minOccurs="0" />
          <xs:element name="/***handletothebuilt-inconstraintimplementations.*///todocanbemadetransientsinceitisonlyusedduringobjectconstruction.itwouldbebetterifwewouldnothavetopassitatalltransient" type="constrainthelper" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constraintlocation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanconstraintlocation" >
      <xs:sequence>
        <xs:element name="/***thetheconstraintwasdefinedon.*/" type="xs:anyType" />
        <xs:element name="/***thejavabeansnameofthefield/propertytheconstraintwasplacedon.{@codenull}ifthisisa*classlevelconstraint.*/propertyname" type="xs:string" />
        <xs:element name="/***theclassofthebeanhostingthisconstraint.*/beanclass" type="xs:anyType" />
        <xs:element name="/***thetypeofelementhostingthisconstraint.oneoftype,fieldormethod.*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodconstraintlocation" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="parameterindex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constraintorigin" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methoddescriptorimpl" >
      <xs:complexContent>
       <xs:extension base="elementdescriptorimpl">
         <xs:sequence>
          <xs:element name="methodmetadata" type="aggregatedmethodmetadata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationignores" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="ignoreannotationdefaults" type="xs:anyType" />
        <xs:element name="ignoreannotationonmember" type="xs:anyType" />
        <xs:element name="ignoreannotationonclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregatedmethodmetadata" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="metadatabydefiningtype" type="xs:anyType" />
        <xs:element name="iscascading" type="xs:anyType" />
        <xs:element name="isconstrained" type="xs:anyType" />
        <xs:element name="returnvalueconstraints" type="xs:anyType" />
        <xs:element name="parametermetadata" type="parametermetadata" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***adeclarationexceptionincasethismethodcontainsanyillegalmethod*parameterconstraints.suchillegalparameterconstraintsshallnot*hinderstandardbean/propertyvalidationasdefinedbythebean*validationapi.thereforethisexceptioniscreatedwhenbuildingupthe*metadataforvalidatedbeans,butitwillonlybethrownbythe*validationenginewhenactuallyamethodvalidationisperformed.*/parameter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanmetadataimpl" >
      <xs:complexContent>
       <xs:extension base="defaultgroupsequenceprovider<?>>">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="/***usedasprefixforparameternames,ifnoexplicitnamesaregiven.*/default_parameter_name_prefix" type="xs:string" />
          <xs:element name="/***therootbeanclassforthismetadata.*/beanclass" type="xs:anyType" />
          <xs:element name="metaconstraints" type="xs:anyType" />
          <xs:element name="/***setofallconstraintsforthisbeantype(definedonanyimplementedinterfacesorsupertypes)*/allmetaconstraints" type="xs:anyType" />
          <xs:element name="/***setofallconstraintswhicharedirectlydefinedonthebeanoranyofthedirectlyimplementedinterfaces*/directmetaconstraints" type="xs:anyType" />
          <xs:element name="/***themainelementdescriptorfor{@link#beanclass}.*/beandescriptor" type="xs:anyType" />
          <xs:element name="methodmetadata" type="xs:anyType" />
          <xs:element name="/***buildersusedforgatheringmethodmetadata.usedonlyatconstruction*time.*/methodmetadatabuilders" type="xs:anyType" />
          <xs:element name="/***listofcascadedmembers.*/cascadedmembers" type="xs:anyType" />
          <xs:element name="propertydescriptors" type="xs:anyType" />
          <xs:element name="/***thedefaultgroupssequenceforthisbeanclass.*/defaultgroupsequence" type="xs:anyType" />
          <xs:element name="/***thedefaultgroupsequenceprovider.**@seeorg.hibernate.validator.group.groupsequenceprovider*@seedefaultgroupsequenceprovider*/defaultgroupsequenceprovider" type="xs:anyType" />
          <xs:element name="/***theclasshierarchyforthisclassstartingwiththeclassitselfgoinguptheinheritancechain.interfaces*arenotincluded.*/classhierarchywithoutinterfaces" type="xs:anyType" />
          <xs:element name="/***objectusedtodeterminewhetheragivenannotationisaconstraint.onlyusedduringinitialization.*/" type="constrainthelper" nillable="true" minOccurs="0" />
          <xs:element name="/***alistofallpropertynamesintheclass(constrainedandun-constrained).*///usedtoavoidreflectionhelper#containsmemberwhichisslowpropertynames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanmetaconstraint" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanmetadatacache" >
      <xs:sequence>
        <xs:element name="metadataproviders" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metaconstraint" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="/***theconstrainttreecreatedfromtheconstraintannotation.*/constrainttree" type="a" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***theconstraintdescriptor.*/constraintdescriptor" type="a" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***thelocationatwhichthisconstraintisdefined.*/location" type="constraintlocation" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatevalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupsequenceprovider" >
      <xs:complexContent>
       <xs:extension base="defaultgroupsequenceprovider<?>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultgroupsequenceprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nulldef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<nulldef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notblankdef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<notblankdef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assertfalsedef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<assertfalsedef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pastdef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<pastdef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rangedef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<rangedef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="decimalmindef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<decimalmindef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mindef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<mindef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="emaildef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<emaildef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creditcardnumberdef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<creditcardnumberdef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="scriptassertdef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<scriptassertdef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="urldef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<urldef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="asserttruedef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<asserttruedef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maxdef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<maxdef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="decimalmaxdef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<decimalmaxdef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sizedef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<sizedef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="futuredef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<futuredef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="patterndef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<patterndef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="digitsdef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<digitsdef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notemptydef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<notemptydef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lengthdef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<lengthdef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notnulldef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<notnulldef,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constraintmapping" >
      <xs:sequence>
        <xs:element name="context" type="constraintmappingcontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericconstraintdef" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="returnvaluetarget" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="returnvalueconstraintmappingcontext" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="methodconstraintmappingcontext" >
      <xs:complexContent>
       <xs:extension base="parametertarget,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametertarget" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typeconstraintmappingcontextimpl" >
      <xs:complexContent>
       <xs:extension base="constraintmappingcontextimplbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterconstraintmappingcontextimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="parameterindex" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="returnvalueconstraintmappingcontextimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constraintmappingcontextimplbase" >
      <xs:sequence>
        <xs:element name="beanclass" type="xs:anyType" />
        <xs:element name="mapping" type="constraintmappingcontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constraintmappingcontext" >
      <xs:complexContent>
       <xs:extension base="defaultgroupsequenceprovider<?>>>">
         <xs:sequence>
          <xs:element name="constraintconfig" type="xs:anyType" />
          <xs:element name="methodconstraintconfig" type="xs:anyType" />
          <xs:element name="cascadeconfig" type="xs:anyType" />
          <xs:element name="methodcascadeconfig" type="xs:anyType" />
          <xs:element name="configuredclasses" type="xs:anyType" />
          <xs:element name="defaultgroupsequences" type="xs:anyType" />
          <xs:element name="defaultgroupsequenceproviders" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyconstraintmappingcontextimpl" >
      <xs:complexContent>
       <xs:extension base="constraintmappingcontextimplbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configuredconstraint" >
      <xs:complexContent>
       <xs:extension base="annotation,">
         <xs:sequence>
          <xs:element name="constraint" type="a" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="finaocation" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="methodconstraintmappingcontextimpl" >
      <xs:sequence>
        <xs:element name="beanclass" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="mapping" type="constraintmappingcontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constrainable" >
      <xs:complexContent>
       <xs:extension base="constrainable<c>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterconstraintmappingcontext" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typeconstraintmappingcontext" >
      <xs:complexContent>
       <xs:extension base="defaultgroupsequenceprovider<?">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadable" >
      <xs:complexContent>
       <xs:extension base="cascadable<c>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typetargets" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyconstraintmappingcontext" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constraintdef" >
      <xs:complexContent>
       <xs:extension base="constraintdef<c,">
         <xs:sequence>
          <xs:element name="//noteonvisibilityofmembers:thesemembersareintentionallymade//andpublishedbyasub-classforinternaluse.therearen't//publicgettersastheywouldpollutethefluentdefinitionapi./***theconstraintannotationtypeofthisdefinition.*/constrainttype" type="a" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="parameters" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resourcebundlemessageinterpolator" >
      <xs:sequence>
        <xs:element name="/***thenameofthedefaultmessagebundle.*/default_validation_messages" type="xs:string" />
        <xs:element name="/***thenameoftheuser-providedmessagebundleasdefinedinthespecification.*/user_validation_messages" type="xs:string" />
        <xs:element name="/***regularexpressionusedtodomessageinterpolation.*/message_parameter_" type="xs:anyType" />
        <xs:element name="/***thedefaultinthecurrentjvm.*/default" type="xs:anyType" />
        <xs:element name="/***loadsuser-specifiedresourcebundles.*/user" type="resourcebundlelocator" nillable="true" minOccurs="0" />
        <xs:element name="/***loadsbuilt-inresourcebundles.*/default" type="resourcebundlelocator" nillable="true" minOccurs="0" />
        <xs:element name="resolvedmessages" type="xs:anyType" />
        <xs:element name="/***flagindicatingwhetherthisinterpolatorshouldchancesomeoftheinterpolationsteps.*/cachemessages" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valueformattermessageinterpolator" >
      <xs:sequence>
        <xs:element name="validated_value_keyword" type="xs:string" />
        <xs:element name="validated_value_format_separator" type="xs:string" />
        <xs:element name="validated_value_start_" type="xs:anyType" />
        <xs:element name="delegate" type="xs:anyType" />
        <xs:element name="default" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatevalidatorfactory" >
      <xs:complexContent>
       <xs:extension base="validatorfactory">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delegatingresourcebundlelocator" >
      <xs:sequence>
        <xs:element name="delegate" type="resourcebundlelocator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregateresourcebundlelocator" >
      <xs:complexContent>
       <xs:extension base="delegatingresourcebundlelocator">
         <xs:sequence>
          <xs:element name="bundlenames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachingresourcebundlelocator" >
      <xs:complexContent>
       <xs:extension base="delegatingresourcebundlelocator">
         <xs:sequence>
          <xs:element name="bundlecache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resourcebundlelocator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="platformresourcebundlelocator" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="bundlename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodconstraintviolation" >
      <xs:complexContent>
       <xs:extension base="constraintviolation<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="methodvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodconstraintviolationexception" >
      <xs:complexContent>
       <xs:extension base="validationexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="constraintviolations" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typedescriptor" >
      <xs:complexContent>
       <xs:extension base="elementdescriptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterdescriptor" >
      <xs:complexContent>
       <xs:extension base="elementdescriptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methoddescriptor" >
      <xs:complexContent>
       <xs:extension base="elementdescriptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatevalidatorconfiguration" >
      <xs:complexContent>
       <xs:extension base="configuration<hibernatevalidatorconfiguration>">
         <xs:sequence>
          <xs:element name="/***propertycorrespondingtothe{@link#failfast}method.*accepts{@codetrue}or{@codefalse}.defaultsto{@codefalse}.*/fail_fast" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validatorimpl" >
      <xs:complexContent>
       <xs:extension base="constraintviolation<t>>">
         <xs:sequence>
          <xs:element name="default_group_array" type="xs:anyType" />
          <xs:element name="/***usedtoresolvethegroupexecutionorderforavalidatecall.*/transient" type="groupchaingenerator" nillable="true" minOccurs="0" />
          <xs:element name="/***referencetoshared{@code}.*/" type="xs:anyType" />
          <xs:element name="/***{@link}aspassedtotheconstructorofthisinstance.*/" type="xs:anyType" />
          <xs:element name="/***{@link}aspassedtotheconstructorofthisinstance.*neveruseitdirectly,alwaysuse{@link#getcaching()}toretrievedthesinglethreadedcachingwrapper.*/" type="xs:anyType" />
          <xs:element name="/***passedatcreationtimeofthisvalidatorinstance.*/" type="constrainthelper" nillable="true" minOccurs="0" />
          <xs:element name="/***usedtogetaccesstothebeanmetadata.usedtoavoidtoparsingtheconstraintconfigurationforeachcall*ofagivenentity.*/" type="beanmetadatacache" nillable="true" minOccurs="0" />
          <xs:element name="/***indicatesifvalidationhastobestoppedonfirstconstraintviolation.*/failfast" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="groupchain" >
      <xs:sequence>
        <xs:element name="/***thelistofsinglegroupstobeusedthisvalidation.*/grouplist" type="group" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="sequencemap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupchaingenerator" >
      <xs:sequence>
        <xs:element name="resolvedsequences" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="/***theactualgroup.*/group" type="xs:anyType" />
        <xs:element name="/***thesequencethegroupispartof({@codenull},ifthisgroupisnotpartofasequence).*/sequence" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardvalidationcontext" >
      <xs:complexContent>
       <xs:extension base="validationcontext<t,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constrainttree" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="max_type_cache_size" type="xs:long" />
          <xs:element name="parent" type="xs:anyType" />
          <xs:element name="children" type="xs:anyType" />
          <xs:element name="/***theconstraintdescriptorfortheconstraintrepresentedbythisconstrainttree.*/descriptor" type="a" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="availablevalidatortypes" type="xs:anyType" />
          <xs:element name="constraintvalidatorcache" type="xs:anyType" />
          <xs:element name="suitabletypemap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validatorcontextimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="factory" type="xs:anyType" />
        <xs:element name="factory" type="xs:anyType" />
        <xs:element name="factory" type="xs:anyType" />
        <xs:element name="GeneratedName" type="constrainthelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="beanmetadatacache" nillable="true" minOccurs="0" />
        <xs:element name="failfast" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodreturnvaluenodeimpl" >
      <xs:complexContent>
       <xs:extension base="nodeimpl">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="name_template" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="methodvalidationcontext" >
      <xs:complexContent>
       <xs:extension base="validationcontext<t,">
         <xs:sequence>
          <xs:element name="/***theofthecurrentvalidationcall.*/" type="xs:anyType" />
          <xs:element name="/***theindexoftheparametertovalidateifthiscontextisusedforvalidationofasingleparameter,nullotherwise.*/parameterindex" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validationcontext" >
      <xs:complexContent>
       <xs:extension base="constraintviolation<t>>">
         <xs:sequence>
          <xs:element name="/***heroobeanofhevalidaion.*/roobean" type="xs:anyType" />
          <xs:element name="/***therootbeanclassofthevalidation.*/rootbeanclass" type="xs:anyType" />
          <xs:element name="processedobjects" type="xs:anyType" />
          <xs:element name="processedpaths" type="xs:anyType" />
          <xs:element name="/***containsallfailingconstraintssofar.*/failingconstraintviolations" type="xs:anyType" />
          <xs:element name="/***flagindicatingwhetheranobjectcanonlybevalidatedoncepergrouporoncepergroupandvalidationpath.*/allowonevalidationperpath" type="xs:anyType" />
          <xs:element name="/***themessageresolverwhichshouldbeusedinthiscontext.*/" type="xs:anyType" />
          <xs:element name="/***theconstraintfactorywhichshouldbeusedinthiscontext.*/" type="xs:anyType" />
          <xs:element name="/***allowsajpaprovidertodecidewhetherapropertyshouldbevalidated.*/" type="xs:anyType" />
          <xs:element name="/***whetherornotvalidationshouldfailonthefirstconstraintviolation.*/failfast" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurationimpl" >
      <xs:complexContent>
       <xs:extension base="validationprovider<?>>">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="default" type="resourcebundlelocator" nillable="true" minOccurs="0" />
          <xs:element name="default" type="xs:anyType" />
          <xs:element name="default" type="xs:anyType" />
          <xs:element name="default" type="xs:anyType" />
          <xs:element name="providerresolver" type="xs:anyType" />
          <xs:element name="" type="validationbootstrapparameters" nillable="true" minOccurs="0" />
          <xs:element name="ignorexmlconfiguration" type="xs:anyType" />
          <xs:element name="configurationstreams" type="xs:anyType" />
          <xs:element name="mapping" type="constraintmapping" nillable="true" minOccurs="0" />
          <xs:element name="failfast" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constraintviolationimpl" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="interpolatedmessage" type="xs:string" />
        <xs:element name="roobean" type="xs:anyType" />
        <xs:element name="value" type="object" nillable="true" minOccurs="0" />
        <xs:element name="property" type="xs:anyType" />
        <xs:element name="leafbeaninstance" type="object" nillable="true" minOccurs="0" />
        <xs:element name="constraintdescriptor" type="xs:anyType" />
        <xs:element name="messagetemplate" type="xs:string" />
        <xs:element name="rootbeanclass" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messageandpath" >
      <xs:sequence>
        <xs:element name="message" type="xs:string" />
        <xs:element name="property" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messageinterpolatorcontext" >
      <xs:sequence>
        <xs:element name="constraintdescriptor" type="xs:anyType" />
        <xs:element name="validatedvalue" type="object" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constraintvalidatorfactoryimpl" >
      <xs:complexContent>
       <xs:extension base="constraintvalidator<?,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="methodconstraintviolationimpl" >
      <xs:complexContent>
       <xs:extension base="constraintviolationimpl<t>">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="parameterindex" type="xs:anyType" />
          <xs:element name="parametername" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuecontext" >
      <xs:sequence>
        <xs:element name="/***hecurrenbeanwhichgesvalidaed.hisishebeanhosingheconsrainswhichgevalidaed.*/currenbean" type="xs:anyType" />
        <xs:element name="/***theclassofthecurrentbean.*/currentbeantype" type="xs:anyType" />
        <xs:element name="/***theindexofthecurrentlyvalidatedparameterifthiscontextisusedforamethodparametervalidation,null*inallothercases(standardbeanvalidation,returnvaluevalidation).*/parameterindex" type="xs:anyType" />
        <xs:element name="/***thenameofthecurrentlyvalidatedparameterifthiscontextisusedforamethodparametervalidation,null*inallothercases(standardbeanvalidation,returnvaluevalidation).*/parametername" type="xs:string" />
        <xs:element name="/***thecurrentpropertypathwearevalidating.*/propertypath" type="pathimpl" nillable="true" minOccurs="0" />
        <xs:element name="/***thecurrentgroupwearevalidating.*/currentgroup" type="xs:anyType" />
        <xs:element name="/***thealuewhichgetscurrentlyealuated.*/currentalue" type="xs:anyType" />
        <xs:element name="/***the{@code}theconstraintwasdefinedon*/" type="xs:anyType" />
        <xs:element name="/***theofannotatedelement.*/ofannotatedelement" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constraintvalidatorcontextimpl" >
      <xs:sequence>
        <xs:element name="messageandpaths" type="messageandpath" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="basepath" type="pathimpl" nillable="true" minOccurs="0" />
        <xs:element name="constraintdescriptor" type="xs:anyType" />
        <xs:element name="defaultdisabled" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodeimpl" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="index_open" type="xs:string" />
        <xs:element name="index_close" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="nodeimpl" nillable="true" minOccurs="0" />
        <xs:element name="isiterable" type="xs:anyType" />
        <xs:element name="index" type="xs:anyType" />
        <xs:element name="key" type="object" nillable="true" minOccurs="0" />
        <xs:element name="hashcode" type="xs:long" />
        <xs:element name="as" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodparameternodeimpl" >
      <xs:complexContent>
       <xs:extension base="nodeimpl">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="name_template" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singlethreadcachedtraversableresolver" >
      <xs:sequence>
        <xs:element name="delegate" type="xs:anyType" />
        <xs:element name="traversables" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaulttraversableresolver" >
      <xs:complexContent>
       <xs:extension base="traversableresolver>">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="/***classtoloadtocheckwhetherjpaisontheclasspath.*/persistence_class_name" type="xs:string" />
          <xs:element name="/***methodtocheckwhetherthefound{@codepersistence}classisoftheversion2*/persistence_util_method" type="xs:string" />
          <xs:element name="/***classtoinstantiateincasejpa2isontheclasspath.*/jpa_aware_traversable_resolver_class_name" type="xs:string" />
          <xs:element name="/***ajpa2awaretraversableresolver.*/jpa" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpatraversableresolver" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validatorfactoryimpl" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="constrainthelper" nillable="true" minOccurs="0" />
          <xs:element name="failfast" type="xs:anyType" />
          <xs:element name="/***usedtocachetheconstraintmetadataforvalidatedentities*/" type="beanmetadatacache" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pathimpl" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="property_path_separator" type="xs:string" />
        <xs:element name="/***regularexpressionusedtosplitapathintoitselements.**@see<ahref" type="xs:string" />
        <xs:element name="optional_index_group" type="xs:string" />
        <xs:element name="//processedrecursivelyremaining_property_" type="xs:string" />
        <xs:element name="path_" type="xs:anyType" />
        <xs:element name="property_name_group" type="xs:long" />
        <xs:element name="indexed_group" type="xs:long" />
        <xs:element name="index_group" type="xs:long" />
        <xs:element name="remaining_string_group" type="xs:long" />
        <xs:element name="nodelist" type="xs:anyType" />
        <xs:element name="currentleafnode" type="nodeimpl" nillable="true" minOccurs="0" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationdescriptor" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="type" type="xs:anyType" />
          <xs:element name="elements" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationfactory" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationproxy" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="annotationtype" type="xs:anyType" />
          <xs:element name="values" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contracts" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectionhelper" >
      <xs:sequence>
        <xs:element name="property_accessor_prefixes" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identityset" >
      <xs:sequence>
        <xs:element name="map" type="xs:anyType" />
        <xs:element name="contains" type="object" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lrumap" >
      <xs:complexContent>
       <xs:extension base="linkedhashmap<k,v>">
         <xs:sequence>
          <xs:element name="maxentries" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iteratorenumeration" >
      <xs:sequence>
        <xs:element name="source" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loggerfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validatortypehelper" >
      <xs:complexContent>
       <xs:extension base="constraintvalidator&gt;&gt;">
         <xs:sequence>
          <xs:element name="validator_type_index" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyvalidatorfactory" >
      <xs:sequence>
        <xs:element name="configuration" type="xs:anyType" />
        <xs:element name="//useasabarriervolatiledelegate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getmethodfrompropertyname" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="property" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getdeclaredmethod" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="methodname" type="xs:string" />
        <xs:element name="parametertypes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getclassloader" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getmethod" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="methodname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadclass" >
      <xs:sequence>
        <xs:element name="hibernate_validator_class_name" type="xs:string" />
        <xs:element name="classname" type="xs:string" />
        <xs:element name="caller" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getdeclaredfield" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="fieldname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getannotationparameter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="parametername" type="xs:string" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newinstance" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="message" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getdeclaredfields" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getmethods" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getconstructor" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="params" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getdeclaredmethods" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setaccessibility" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constructorinstance" >
      <xs:sequence>
        <xs:element name="constructor" type="xs:anyType" />
        <xs:element name="initargs" type="object" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scriptevaluator" >
      <xs:sequence>
        <xs:element name="engine" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scriptevaluatorfactory" >
      <xs:sequence>
        <xs:element name="/***areferencewithaninstanceofthisfactory.allowsthefactorytobereusedseveraltimes,butcanbegc'edifrequired.*/instance" type="scriptevaluatorfactory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="scriptexecutorcache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatevalidatorcontext" >
      <xs:complexContent>
       <xs:extension base="validatorcontext">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="url" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="email" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositiontype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notempty" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constraintcomposition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="futurevalidatorforreadablepartial" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scriptassertvalidator" >
      <xs:sequence>
        <xs:element name="script" type="xs:string" />
        <xs:element name="languagename" type="xs:string" />
        <xs:element name="alias" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizevalidatorforarraysofint" >
      <xs:complexContent>
       <xs:extension base="sizevalidatorforarraysofprimitives">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="futurevalidatorforreadableinstant" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizevalidatorformap" >
      <xs:sequence>
        <xs:element name="min" type="xs:long" />
        <xs:element name="max" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creditcardnumbervalidator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="luhnvalidator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notnullvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="digitsvalidatorfornumber" >
      <xs:sequence>
        <xs:element name="maxegerlength" type="xs:long" />
        <xs:element name="maxfractionlength" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="urlvalidator" >
      <xs:sequence>
        <xs:element name="protocol" type="xs:string" />
        <xs:element name="host" type="xs:string" />
        <xs:element name="port" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pastvalidatorforcalendar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maxvalidatorfornumber" >
      <xs:sequence>
        <xs:element name="maxvalue" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="decimalminvalidatorfornumber" >
      <xs:sequence>
        <xs:element name="minvalue" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notblankvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizevalidatorforarraysofdouble" >
      <xs:complexContent>
       <xs:extension base="sizevalidatorforarraysofprimitives">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sizevalidatorforarraysofboolean" >
      <xs:complexContent>
       <xs:extension base="sizevalidatorforarraysofprimitives">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="futurevalidatorfordate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emailvalidator" >
      <xs:sequence>
        <xs:element name="atom" type="xs:string" />
        <xs:element name="domain" type="xs:string" />
        <xs:element name="ip_domain" type="xs:string" />
        <xs:element name="pattern" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizevalidatorforarraysofbyte" >
      <xs:complexContent>
       <xs:extension base="sizevalidatorforarraysofprimitives">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="decimalmaxvalidatorfornumber" >
      <xs:sequence>
        <xs:element name="maxvalue" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="minvalidatorfornumber" >
      <xs:sequence>
        <xs:element name="minvalue" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pastvalidatorforreadablepartial" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizevalidatorforarraysofshort" >
      <xs:complexContent>
       <xs:extension base="sizevalidatorforarraysofprimitives">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lengthvalidator" >
      <xs:sequence>
        <xs:element name="min" type="xs:long" />
        <xs:element name="max" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pastvalidatorforreadableinstant" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="digitsvalidatorforstring" >
      <xs:sequence>
        <xs:element name="maxegerlength" type="xs:long" />
        <xs:element name="maxfractionlength" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assertfalsevalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="luhnvalidator" >
      <xs:sequence>
        <xs:element name="multiplicator" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="asserttruevalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizevalidatorforcollection" >
      <xs:sequence>
        <xs:element name="min" type="xs:long" />
        <xs:element name="max" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizevalidatorforarraysofchar" >
      <xs:complexContent>
       <xs:extension base="sizevalidatorforarraysofprimitives">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sizevalidatorforarraysoffloat" >
      <xs:complexContent>
       <xs:extension base="sizevalidatorforarraysofprimitives">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="minvalidatorforstring" >
      <xs:sequence>
        <xs:element name="minvalue" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="decimalmaxvalidatorforstring" >
      <xs:sequence>
        <xs:element name="maxvalue" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pastvalidatorfordate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="decimalminvalidatorforstring" >
      <xs:sequence>
        <xs:element name="minvalue" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizevalidatorforarray" >
      <xs:sequence>
        <xs:element name="min" type="xs:long" />
        <xs:element name="max" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizevalidatorforarraysoflong" >
      <xs:complexContent>
       <xs:extension base="sizevalidatorforarraysofprimitives">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="patternvalidator" >
      <xs:sequence>
        <xs:element name="pattern" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maxvalidatorforstring" >
      <xs:sequence>
        <xs:element name="maxvalue" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizevalidatorforarraysofprimitives" >
      <xs:sequence>
        <xs:element name="min" type="xs:long" />
        <xs:element name="max" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizevalidatorforstring" >
      <xs:sequence>
        <xs:element name="min" type="xs:long" />
        <xs:element name="max" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="futurevalidatorforcalendar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="range" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notblank" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="length" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scriptassert" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creditcardnumber" >
      <xs:complexContent>
       <xs:extension base="payload>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validationbootstrapparameters" >
      <xs:complexContent>
       <xs:extension base="validationprovider<?>>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="provider" type="xs:anyType" />
          <xs:element name="providerclass" type="xs:anyType" />
          <xs:element name="configproperties" type="xs:anyType" />
          <xs:element name="mappings" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlmappingparser" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="validation_mapping_xsd" type="xs:string" />
          <xs:element name="message_param" type="xs:string" />
          <xs:element name="groups_param" type="xs:string" />
          <xs:element name="payload_param" type="xs:string" />
          <xs:element name="package_separator" type="xs:string" />
          <xs:element name="processedclasses" type="xs:anyType" />
          <xs:element name="" type="constrainthelper" nillable="true" minOccurs="0" />
          <xs:element name="" type="annotationignores" nillable="true" minOccurs="0" />
          <xs:element name="constraintmap" type="xs:anyType" />
          <xs:element name="cascadedmembers" type="xs:anyType" />
          <xs:element name="defaultsequences" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validationxmlparser" >
      <xs:complexContent>
       <xs:extension base="validationprovider<?>>)">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="validation_xml_file" type="xs:string" />
          <xs:element name="validation_configuration_xsd" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstrapping" >
      <xs:complexContent>
       <xs:extension base="constraintvalidator&lt;?,?&gt;&gt;">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metadataapi" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hv" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="master" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 