ClassDiagram.Class>> Tag =>=>=> RelationalSchema.Table>> tag;
ClassDiagram.Class>> Certificate =>=>=> RelationalSchema.Table>> certificate;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> OrderItem =>=>=> RelationalSchema.Table>> orderitem;
ClassDiagram.Attribut>> Tag.name:String =>=>=> RelationalSchema.Column>> tag.name;
ClassDiagram.Attribut>> Certificate.name:String =>=>=> RelationalSchema.Column>> certificate.name;
ClassDiagram.Attribut>> Certificate.price:BigDecimal =>=>=> RelationalSchema.Column>> certificate.price;
ClassDiagram.Attribut>> Certificate.description:String =>=>=> RelationalSchema.Column>> certificate.description;
ClassDiagram.Attribut>> Certificate.duration:Integer =>=>=> RelationalSchema.Column>> certificate.duration;
ClassDiagram.Attribut>> Certificate.createdate:Instant =>=>=> RelationalSchema.Column>> certificate.createdate;
ClassDiagram.Attribut>> Certificate.updatelastdate:Instant =>=>=> RelationalSchema.Column>> certificate.updatelastdate;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.surname:String =>=>=> RelationalSchema.Column>> user.surname;
ClassDiagram.Attribut>> User.createdate:Instant =>=>=> RelationalSchema.Column>> user.createdate;
ClassDiagram.Attribut>> User.lastupdatedate:Instant =>=>=> RelationalSchema.Column>> user.lastupdatedate;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.GeneratedName:Role =>=>=> RelationalSchema.Column>> user.GeneratedName;
ClassDiagram.Attribut>> User.GeneratedName:Status =>=>=> RelationalSchema.Column>> user.GeneratedName;
ClassDiagram.Attribut>> Order.totalsum:BigDecimal =>=>=> RelationalSchema.Column>> order.totalsum;
ClassDiagram.Attribut>> Order.count:Integer =>=>=> RelationalSchema.Column>> order.count;
ClassDiagram.Attribut>> Order.createdate:Instant =>=>=> RelationalSchema.Column>> order.createdate;
ClassDiagram.Attribut>> OrderItem.count:int =>=>=> RelationalSchema.Column>> orderitem.count;
ClassDiagram.Attribut>> OrderItem.priceofcertificate:BigDecimal =>=>=> RelationalSchema.Column>> orderitem.priceofcertificate;
Many-To-Many relationship between ClassDiagram.Class>>Tag  and ClassDiagram.Class>>set<certificate>: certificates_tags(tags_id:Tag [PK] #FK to Tag,certificates_id:set<certificate> [PK] #FK to set<certificate>);
Many-To-Many relationship between ClassDiagram.Class>>Certificate  and ClassDiagram.Class>>set<tag>: certificates_tags(certificates_id:Certificate [PK] #FK to Certificate,tags_id:set<tag> [PK] #FK to set<tag>);
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Set<OrderItem>;
One-To-One relationship between ClassDiagram.Class>>OrderItem  to ClassDiagram.Class>>certificate represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderItem  to ClassDiagram.Class>>order represented by ClassDiagram.Atrribute>>GeneratedName;
