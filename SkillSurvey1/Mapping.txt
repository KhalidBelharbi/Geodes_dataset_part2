ClassDiagram.Class>> RoleAssignment =>=>=> RelationalSchema.Table>> roleassignment;
ClassDiagram.Class>> Survey =>=>=> RelationalSchema.Table>> survey;
ClassDiagram.Class>> UserType =>=>=> RelationalSchema.Table>> usertype;
ClassDiagram.Class>> FunctionOccupations =>=>=> RelationalSchema.Table>> functionoccupations;
ClassDiagram.Class>> UocGroup =>=>=> RelationalSchema.Table>> uocgroup;
ClassDiagram.Class>> Claim =>=>=> RelationalSchema.Table>> claim;
ClassDiagram.Class>> Individual =>=>=> RelationalSchema.Table>> individual;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Location =>=>=> RelationalSchema.Table>> location;
ClassDiagram.Class>> Level =>=>=> RelationalSchema.Table>> level;
ClassDiagram.Class>> UocGroupMembers =>=>=> RelationalSchema.Table>> uocgroupmembers;
ClassDiagram.Class>> Supervisons =>=>=> RelationalSchema.Table>> supervisons;
ClassDiagram.Class>> OccupationLevel =>=>=> RelationalSchema.Table>> occupationlevel;
ClassDiagram.Class>> Function =>=>=> RelationalSchema.Table>> function;
ClassDiagram.Class>> Occupation =>=>=> RelationalSchema.Table>> occupation;
ClassDiagram.Class>> UserTypeNeeds =>=>=> RelationalSchema.Table>> usertypeneeds;
ClassDiagram.Class>> DapsscoLevel =>=>=> RelationalSchema.Table>> dapsscolevel;
ClassDiagram.Class>> Dapssco =>=>=> RelationalSchema.Table>> dapssco;
ClassDiagram.Class>> Need =>=>=> RelationalSchema.Table>> need;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> UocQuestion =>=>=> RelationalSchema.Table>> uocquestion;
ClassDiagram.Class>> DapsscoSkills =>=>=> RelationalSchema.Table>> dapsscoskills;
ClassDiagram.Class>> Provider =>=>=> RelationalSchema.Table>> provider;
ClassDiagram.Class>> SurveryAnswer =>=>=> RelationalSchema.Table>> surveryanswer;
ClassDiagram.Class>> ClaimAssignments =>=>=> RelationalSchema.Table>> claimassignments;
ClassDiagram.Class>> Uoc =>=>=> RelationalSchema.Table>> uoc;
ClassDiagram.Attribut>> RoleAssignment.serialversionuid:long =>=>=> RelationalSchema.Column>> roleassignment.serialversionuid;
ClassDiagram.Attribut>> RoleAssignment.//@embeddedid//roleassignmentpkidpkroleid:long =>=>=> RelationalSchema.Column>> roleassignment.//@embeddedid//roleassignmentpkidpkroleid PRIMARY KEY;
ClassDiagram.Attribut>> RoleAssignment.individualid:long =>=>=> RelationalSchema.Column>> roleassignment.individualid PRIMARY KEY;
ClassDiagram.Attribut>> Survey.serialversionuid:long =>=>=> RelationalSchema.Column>> survey.serialversionuid;
ClassDiagram.Attribut>> Survey.idsurvey:long =>=>=> RelationalSchema.Column>> survey.idsurvey PRIMARY KEY;
ClassDiagram.Attribut>> Survey.completedat:Date =>=>=> RelationalSchema.Column>> survey.completedat;
ClassDiagram.Attribut>> Survey.startedat:Date =>=>=> RelationalSchema.Column>> survey.startedat;
ClassDiagram.Attribut>> UserType.id:long =>=>=> RelationalSchema.Column>> usertype.id PRIMARY KEY;
ClassDiagram.Attribut>> UserType.usertype:String =>=>=> RelationalSchema.Column>> usertype.usertype;
ClassDiagram.Attribut>> UserType.description:String =>=>=> RelationalSchema.Column>> usertype.description;
ClassDiagram.Attribut>> UserType.serialversionuid:long =>=>=> RelationalSchema.Column>> usertype.serialversionuid;
ClassDiagram.Attribut>> FunctionOccupations.occupationid:long =>=>=> RelationalSchema.Column>> functionoccupations.occupationid PRIMARY KEY;
ClassDiagram.Attribut>> FunctionOccupations.functionid:long =>=>=> RelationalSchema.Column>> functionoccupations.functionid PRIMARY KEY;
ClassDiagram.Attribut>> UocGroup.serialversionuid:long =>=>=> RelationalSchema.Column>> uocgroup.serialversionuid;
ClassDiagram.Attribut>> UocGroup.//@generatedvalue(strategy:String =>=>=> RelationalSchema.Column>> uocgroup.//@generatedvalue(strategy PRIMARY KEY;
ClassDiagram.Attribut>> UocGroup.notes:String =>=>=> RelationalSchema.Column>> uocgroup.notes;
ClassDiagram.Attribut>> Claim.serialversionuid:long =>=>=> RelationalSchema.Column>> claim.serialversionuid;
ClassDiagram.Attribut>> Claim.idclaim:long =>=>=> RelationalSchema.Column>> claim.idclaim PRIMARY KEY;
ClassDiagram.Attribut>> Claim.code:String =>=>=> RelationalSchema.Column>> claim.code;
ClassDiagram.Attribut>> Individual.serialversionuid:long =>=>=> RelationalSchema.Column>> individual.serialversionuid;
ClassDiagram.Attribut>> Individual.idindividual:long =>=>=> RelationalSchema.Column>> individual.idindividual PRIMARY KEY;
ClassDiagram.Attribut>> Individual.gender:String =>=>=> RelationalSchema.Column>> individual.gender;
ClassDiagram.Attribut>> Individual.login:String =>=>=> RelationalSchema.Column>> individual.login;
ClassDiagram.Attribut>> Individual.password:String =>=>=> RelationalSchema.Column>> individual.password;
ClassDiagram.Attribut>> Individual.pathway:long =>=>=> RelationalSchema.Column>> individual.pathway;
ClassDiagram.Attribut>> Individual.ansofqtn1:String =>=>=> RelationalSchema.Column>> individual.ansofqtn1;
ClassDiagram.Attribut>> Individual.ansofqtn2:String =>=>=> RelationalSchema.Column>> individual.ansofqtn2;
ClassDiagram.Attribut>> Individual.mylock:boolean =>=>=> RelationalSchema.Column>> individual.mylock;
ClassDiagram.Attribut>> Individual.mylockedon:Date =>=>=> RelationalSchema.Column>> individual.mylockedon;
ClassDiagram.Attribut>> Individual.pwchangeon:Date =>=>=> RelationalSchema.Column>> individual.pwchangeon;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.iddepartment:long =>=>=> RelationalSchema.Column>> department.iddepartment PRIMARY KEY;
ClassDiagram.Attribut>> Department.code:String =>=>=> RelationalSchema.Column>> department.code;
ClassDiagram.Attribut>> Department.description:String =>=>=> RelationalSchema.Column>> department.description;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> Location.id:long =>=>=> RelationalSchema.Column>> location.id PRIMARY KEY;
ClassDiagram.Attribut>> Location.name:String =>=>=> RelationalSchema.Column>> location.name;
ClassDiagram.Attribut>> Location.serialversionuid:long =>=>=> RelationalSchema.Column>> location.serialversionuid;
ClassDiagram.Attribut>> Level.serialversionuid:long =>=>=> RelationalSchema.Column>> level.serialversionuid;
ClassDiagram.Attribut>> Level.idlevel:long =>=>=> RelationalSchema.Column>> level.idlevel PRIMARY KEY;
ClassDiagram.Attribut>> Level.code:String =>=>=> RelationalSchema.Column>> level.code;
ClassDiagram.Attribut>> Level.description:String =>=>=> RelationalSchema.Column>> level.description;
ClassDiagram.Attribut>> UocGroupMembers.//publicgetuoc_id(){//returnuoc_id//}////publicvoidsetuoc_id(uoc_id){//this.uoc_id:long =>=>=> RelationalSchema.Column>> uocgroupmembers.//publicgetuoc_id(){//returnuoc_id//}////publicvoidsetuoc_id(uoc_id){//this.uoc_id;
ClassDiagram.Attribut>> UocGroupMembers.//longuoc_iduoc_id:String =>=>=> RelationalSchema.Column>> uocgroupmembers.//longuoc_iduoc_id PRIMARY KEY;
ClassDiagram.Attribut>> UocGroupMembers.uoc_groupid:String =>=>=> RelationalSchema.Column>> uocgroupmembers.uoc_groupid PRIMARY KEY;
ClassDiagram.Attribut>> Supervisons./***/serialversionuid:long =>=>=> RelationalSchema.Column>> supervisons./***/serialversionuid;
ClassDiagram.Attribut>> Supervisons.supervisorid:long =>=>=> RelationalSchema.Column>> supervisons.supervisorid PRIMARY KEY;
ClassDiagram.Attribut>> Supervisons.supervisedid:long =>=>=> RelationalSchema.Column>> supervisons.supervisedid PRIMARY KEY;
ClassDiagram.Attribut>> OccupationLevel.serialversionuid:long =>=>=> RelationalSchema.Column>> occupationlevel.serialversionuid;
ClassDiagram.Attribut>> OccupationLevel.occupationid:long =>=>=> RelationalSchema.Column>> occupationlevel.occupationid PRIMARY KEY;
ClassDiagram.Attribut>> OccupationLevel.levelid:long =>=>=> RelationalSchema.Column>> occupationlevel.levelid PRIMARY KEY;
ClassDiagram.Attribut>> Function.serialversionuid:long =>=>=> RelationalSchema.Column>> function.serialversionuid;
ClassDiagram.Attribut>> Function.idfunction:long =>=>=> RelationalSchema.Column>> function.idfunction PRIMARY KEY;
ClassDiagram.Attribut>> Function.description:String =>=>=> RelationalSchema.Column>> function.description;
ClassDiagram.Attribut>> Function.name:String =>=>=> RelationalSchema.Column>> function.name;
ClassDiagram.Attribut>> Occupation.serialversionuid:long =>=>=> RelationalSchema.Column>> occupation.serialversionuid;
ClassDiagram.Attribut>> Occupation.idoccupation:long =>=>=> RelationalSchema.Column>> occupation.idoccupation PRIMARY KEY;
ClassDiagram.Attribut>> Occupation.description:String =>=>=> RelationalSchema.Column>> occupation.description;
ClassDiagram.Attribut>> Occupation.name:String =>=>=> RelationalSchema.Column>> occupation.name;
ClassDiagram.Attribut>> UserTypeNeeds.idusertype:long =>=>=> RelationalSchema.Column>> usertypeneeds.idusertype PRIMARY KEY;
ClassDiagram.Attribut>> UserTypeNeeds.idneed:long =>=>=> RelationalSchema.Column>> usertypeneeds.idneed PRIMARY KEY;
ClassDiagram.Attribut>> UserTypeNeeds.serialversionuid:long =>=>=> RelationalSchema.Column>> usertypeneeds.serialversionuid;
ClassDiagram.Attribut>> DapsscoLevel.dapsscoid:String =>=>=> RelationalSchema.Column>> dapsscolevel.dapsscoid PRIMARY KEY;
ClassDiagram.Attribut>> DapsscoLevel.levelid:long =>=>=> RelationalSchema.Column>> dapsscolevel.levelid PRIMARY KEY;
ClassDiagram.Attribut>> DapsscoLevel./***/serialversionuid:long =>=>=> RelationalSchema.Column>> dapsscolevel./***/serialversionuid;
ClassDiagram.Attribut>> Dapssco.serialversionuid:long =>=>=> RelationalSchema.Column>> dapssco.serialversionuid;
ClassDiagram.Attribut>> Dapssco.//@generatedvalue(strategy:String =>=>=> RelationalSchema.Column>> dapssco.//@generatedvalue(strategy PRIMARY KEY;
ClassDiagram.Attribut>> Need.serialversionuid:long =>=>=> RelationalSchema.Column>> need.serialversionuid;
ClassDiagram.Attribut>> Need.idneed:long =>=>=> RelationalSchema.Column>> need.idneed PRIMARY KEY;
ClassDiagram.Attribut>> Need.description:String =>=>=> RelationalSchema.Column>> need.description;
ClassDiagram.Attribut>> Need.name:String =>=>=> RelationalSchema.Column>> need.name;
ClassDiagram.Attribut>> Role.serialversionuid:long =>=>=> RelationalSchema.Column>> role.serialversionuid;
ClassDiagram.Attribut>> Role.idrole:long =>=>=> RelationalSchema.Column>> role.idrole PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> Role.description:String =>=>=> RelationalSchema.Column>> role.description;
ClassDiagram.Attribut>> UocQuestion.serialversionuid:long =>=>=> RelationalSchema.Column>> uocquestion.serialversionuid;
ClassDiagram.Attribut>> UocQuestion.iduocquestion:String =>=>=> RelationalSchema.Column>> uocquestion.iduocquestion PRIMARY KEY;
ClassDiagram.Attribut>> UocQuestion.//publicgettext(){//returntext//}////publicvoidsettext(text){//this.text:String =>=>=> RelationalSchema.Column>> uocquestion.//publicgettext(){//returntext//}////publicvoidsettext(text){//this.text;
ClassDiagram.Attribut>> UocQuestion.//@column(name:Byte =>=>=> RelationalSchema.Column>> uocquestion.//@column(name;
ClassDiagram.Attribut>> UocQuestion.isprimay:Short =>=>=> RelationalSchema.Column>> uocquestion.isprimay;
ClassDiagram.Attribut>> DapsscoSkills.uocgroupid:String =>=>=> RelationalSchema.Column>> dapsscoskills.uocgroupid PRIMARY KEY;
ClassDiagram.Attribut>> DapsscoSkills.dapsscoid:String =>=>=> RelationalSchema.Column>> dapsscoskills.dapsscoid PRIMARY KEY;
ClassDiagram.Attribut>> Provider.id:long =>=>=> RelationalSchema.Column>> provider.id PRIMARY KEY;
ClassDiagram.Attribut>> Provider.name:String =>=>=> RelationalSchema.Column>> provider.name;
ClassDiagram.Attribut>> Provider.description:String =>=>=> RelationalSchema.Column>> provider.description;
ClassDiagram.Attribut>> Provider.courseurl:Byte =>=>=> RelationalSchema.Column>> provider.courseurl;
ClassDiagram.Attribut>> Provider.serialversionuid:long =>=>=> RelationalSchema.Column>> provider.serialversionuid;
ClassDiagram.Attribut>> SurveryAnswer.surveyid:long =>=>=> RelationalSchema.Column>> surveryanswer.surveyid PRIMARY KEY;
ClassDiagram.Attribut>> SurveryAnswer.uocquestionid:String =>=>=> RelationalSchema.Column>> surveryanswer.uocquestionid PRIMARY KEY;
ClassDiagram.Attribut>> SurveryAnswer.serialversionuid:long =>=>=> RelationalSchema.Column>> surveryanswer.serialversionuid;
ClassDiagram.Attribut>> SurveryAnswer.answeredat:Date =>=>=> RelationalSchema.Column>> surveryanswer.answeredat;
ClassDiagram.Attribut>> SurveryAnswer.value:String =>=>=> RelationalSchema.Column>> surveryanswer.value;
ClassDiagram.Attribut>> ClaimAssignments.claimid:long =>=>=> RelationalSchema.Column>> claimassignments.claimid PRIMARY KEY;
ClassDiagram.Attribut>> ClaimAssignments.roleid:long =>=>=> RelationalSchema.Column>> claimassignments.roleid PRIMARY KEY;
ClassDiagram.Attribut>> ClaimAssignments./***/serialversionuid:long =>=>=> RelationalSchema.Column>> claimassignments./***/serialversionuid;
ClassDiagram.Attribut>> Uoc.serialversionuid:long =>=>=> RelationalSchema.Column>> uoc.serialversionuid;
ClassDiagram.Attribut>> Uoc.////@generatedvalue(strategy:String =>=>=> RelationalSchema.Column>> uoc.////@generatedvalue(strategy PRIMARY KEY;
ClassDiagram.Attribut>> Uoc.description:Byte =>=>=> RelationalSchema.Column>> uoc.description;
ClassDiagram.Attribut>> Uoc.name:String =>=>=> RelationalSchema.Column>> uoc.name;
ClassDiagram.Attribut>> Uoc.type:String =>=>=> RelationalSchema.Column>> uoc.type;
ClassDiagram.Attribut>> Uoc.uid:String =>=>=> RelationalSchema.Column>> uoc.uid;
Many-To-One relationship from ClassDiagram.Class>>Survey  to ClassDiagram.Class>>Individual represented by ClassDiagram.Atrribute>>////bi-directionalmany-to-oneassociationtosurveryanswer//@onetomany//@joincolumn(name;
Many-To-One relationship from ClassDiagram.Class>>Survey  to ClassDiagram.Class>>dapssco represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Survey  to ClassDiagram.Class>>need represented by ClassDiagram.Atrribute>>//bi-directionalmany-to-oneassociationtopathway;
Many-To-Many relationship between ClassDiagram.Class>>Survey  and ClassDiagram.Class>>list<uocquestion>: surveryanswer(surveyid:Survey [PK] #FK to Survey,uocquestionid:list<uocquestion> [PK] #FK to list<uocquestion>);
Many-To-Many relationship between ClassDiagram.Class>>UserType  and ClassDiagram.Class>>list<need>: usertypeneeds(idusertype:UserType [PK] #FK to UserType,idneed:list<need> [PK] #FK to list<need>);
Many-To-One relationship from ClassDiagram.Class>>UocGroup  to ClassDiagram.Class>>need represented by ClassDiagram.Atrribute>>//bi-directionalmany-to-oneassociationto;
Many-To-Many relationship between ClassDiagram.Class>>UocGroup  and ClassDiagram.Class>>list<dapssco>: dapsscoskills(uocgroupid:UocGroup [PK] #FK to UocGroup,dapsscoid:list<dapssco> [PK] #FK to list<dapssco>);
Many-To-One relationship from ClassDiagram.Class>>Individual  to ClassDiagram.Class>>UserType represented by ClassDiagram.Atrribute>>//longsupervisorid//longsupervisedid//bi-directionalmany-to-oneassociationtodepartmentfk;
Many-To-One relationship from ClassDiagram.Class>>Individual  to ClassDiagram.Class>>Location represented by ClassDiagram.Atrribute>>//@joincolumn(name;
Many-To-One relationship from ClassDiagram.Class>>Individual  to ClassDiagram.Class>>Function represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Individual  to ClassDiagram.Class>>Occupation represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Individual  to ClassDiagram.Class>>Level represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Individual  to ClassDiagram.Class>>List<Survey>;
Many-To-Many relationship between ClassDiagram.Class>>Individual  and ClassDiagram.Class>>Individual: supervisons(supervisorid:Individual [PK] #FK to Individual,supervisedid:Individual [PK] #FK to Individual);
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>List<Individual>;
One-To-Many relationship from ClassDiagram.Class>>Level  to ClassDiagram.Class>>List<Individual>;
Many-To-Many relationship between ClassDiagram.Class>>Level  and ClassDiagram.Class>>list<dapssco>: dapsscolevel(levelid:Level [PK] #FK to Level,dapsscoid:list<dapssco> [PK] #FK to list<dapssco>);
One-To-Many relationship from ClassDiagram.Class>>Function  to ClassDiagram.Class>>List<Individual>;
Many-To-Many relationship between ClassDiagram.Class>>Function  and ClassDiagram.Class>>Occupation: functionoccupations(functionid:Function [PK] #FK to Function,occupationid:Occupation [PK] #FK to Occupation);
One-To-Many relationship from ClassDiagram.Class>>Occupation  to ClassDiagram.Class>>List<Dapssco>;
One-To-Many relationship from ClassDiagram.Class>>Occupation  to ClassDiagram.Class>>List<Individual>;
Many-To-Many relationship between ClassDiagram.Class>>Occupation  and ClassDiagram.Class>>Level: occupationslevels(occupationid:Occupation [PK] #FK to Occupation,levelid:Level [PK] #FK to Level);
Many-To-One relationship from ClassDiagram.Class>>Dapssco  to ClassDiagram.Class>>Level represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>Dapssco  to ClassDiagram.Class>>Occupation represented by ClassDiagram.Atrribute>>//bi-directionalmany-to-oneassociationto;
Many-To-One relationship from ClassDiagram.Class>>Dapssco  to ClassDiagram.Class>>Function represented by ClassDiagram.Atrribute>>///newlyadded;
Many-To-Many relationship between ClassDiagram.Class>>Dapssco  and ClassDiagram.Class>>UocGroup: dapsscoskills(dapsscoid:Dapssco [PK] #FK to Dapssco,uocgroupid:UocGroup [PK] #FK to UocGroup);
Many-To-Many relationship between ClassDiagram.Class>>Dapssco  and ClassDiagram.Class>>Level: dapsscoskills(dapsscoid:Dapssco [PK] #FK to Dapssco,uocgroupid:UocGroup [PK] #FK to UocGroup);dapsscolevel(dapsscoid:Dapssco [PK] #FK to Dapssco,levelid:Level [PK] #FK to Level);
One-To-Many relationship from ClassDiagram.Class>>Dapssco  to ClassDiagram.Class>>List<Survey>;
One-To-Many relationship from ClassDiagram.Class>>Need  to ClassDiagram.Class>>List<UocGroup>;
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>Claim: claimassignment(roleid:Role [PK] #FK to Role,claimid:Claim [PK] #FK to Claim);
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>Individual: claimassignment(roleid:Role [PK] #FK to Role,claimid:Claim [PK] #FK to Claim);roleassignment(roleid:Role [PK] #FK to Role,individualid:Individual [PK] #FK to Individual);
Many-To-One relationship from ClassDiagram.Class>>UocQuestion  to ClassDiagram.Class>>uoc represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Uoc  and ClassDiagram.Class>>UocGroup: uocgroupmembers(uocid:Uoc [PK] #FK to Uoc,uocgroupid:UocGroup [PK] #FK to UocGroup);
One-To-Many relationship from ClassDiagram.Class>>Uoc  to ClassDiagram.Class>>List<UocQuestion>;
Many-To-One relationship from ClassDiagram.Class>>Uoc  to ClassDiagram.Class>>provider represented by ClassDiagram.Atrribute>>GeneratedName;
