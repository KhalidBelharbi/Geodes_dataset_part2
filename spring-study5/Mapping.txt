ClassDiagram.Class>> Album =>=>=> RelationalSchema.Table>> album;
ClassDiagram.Class>> SingerAudit =>=>=> RelationalSchema.Table>> singeraudit;
ClassDiagram.Class>> Singer =>=>=> RelationalSchema.Table>> singer;
ClassDiagram.Class>> Instrument =>=>=> RelationalSchema.Table>> instrument;
ClassDiagram.Attribut>> Album.id:Long =>=>=> RelationalSchema.Column>> album.id PRIMARY KEY;
ClassDiagram.Attribut>> Album.title:String =>=>=> RelationalSchema.Column>> album.title;
ClassDiagram.Attribut>> Album.release:Date =>=>=> RelationalSchema.Column>> album.release;
ClassDiagram.Attribut>> Album.version:int =>=>=> RelationalSchema.Column>> album.version;
ClassDiagram.Attribut>> Album.GeneratedName:Singer =>=>=> RelationalSchema.Column>> album.GeneratedName;
ClassDiagram.Attribut>> SingerAudit.id:Long =>=>=> RelationalSchema.Column>> singeraudit.id PRIMARY KEY;
ClassDiagram.Attribut>> SingerAudit.version:int =>=>=> RelationalSchema.Column>> singeraudit.version;
ClassDiagram.Attribut>> SingerAudit.firstname:String =>=>=> RelationalSchema.Column>> singeraudit.firstname;
ClassDiagram.Attribut>> SingerAudit.lastname:String =>=>=> RelationalSchema.Column>> singeraudit.lastname;
ClassDiagram.Attribut>> SingerAudit.birth:Date =>=>=> RelationalSchema.Column>> singeraudit.birth;
ClassDiagram.Attribut>> SingerAudit.created:Date =>=>=> RelationalSchema.Column>> singeraudit.created;
ClassDiagram.Attribut>> SingerAudit.createdby:String =>=>=> RelationalSchema.Column>> singeraudit.createdby;
ClassDiagram.Attribut>> SingerAudit.lastmodifiedby:String =>=>=> RelationalSchema.Column>> singeraudit.lastmodifiedby;
ClassDiagram.Attribut>> SingerAudit.lastmodified:Date =>=>=> RelationalSchema.Column>> singeraudit.lastmodified;
ClassDiagram.Attribut>> Singer.find_all:String =>=>=> RelationalSchema.Column>> singer.find_all;
ClassDiagram.Attribut>> Singer.find_singer_by_id:String =>=>=> RelationalSchema.Column>> singer.find_singer_by_id;
ClassDiagram.Attribut>> Singer.find_all_with_album:String =>=>=> RelationalSchema.Column>> singer.find_all_with_album;
ClassDiagram.Attribut>> Singer.id:Long =>=>=> RelationalSchema.Column>> singer.id PRIMARY KEY;
ClassDiagram.Attribut>> Singer.firstname:String =>=>=> RelationalSchema.Column>> singer.firstname;
ClassDiagram.Attribut>> Singer.lastname:String =>=>=> RelationalSchema.Column>> singer.lastname;
ClassDiagram.Attribut>> Singer.birth:Date =>=>=> RelationalSchema.Column>> singer.birth;
ClassDiagram.Attribut>> Singer.version:int =>=>=> RelationalSchema.Column>> singer.version;
ClassDiagram.Attribut>> Instrument.instrumentid:String =>=>=> RelationalSchema.Column>> instrument.instrumentid PRIMARY KEY;
One-To-Many relationship from ClassDiagram.Class>>Singer  to ClassDiagram.Class>>Set<Album>;
Many-To-Many relationship between ClassDiagram.Class>>Singer  and ClassDiagram.Class>>set<instrument>: singer_instrument(singer_id:Singer [PK] #FK to Singer,instrument_id:set<instrument> [PK] #FK to set<instrument>);
Many-To-Many relationship between ClassDiagram.Class>>Instrument  and ClassDiagram.Class>>set<singer>: singer_instrument(instrument_id:Instrument [PK] #FK to Instrument,singer_id:set<singer> [PK] #FK to set<singer>);
