ClassDiagram.Class>> DefaultPackageEntity =>=>=> RelationalSchema.Table>> defaultpackageentity;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> House =>=>=> RelationalSchema.Table>> house;
ClassDiagram.Class>> SubB =>=>=> RelationalSchema.Table>> subb;
ClassDiagram.Class>> BaseEntity =>=>=> RelationalSchema.Table>> baseentity;
ClassDiagram.Class>> SubA =>=>=> RelationalSchema.Table>> suba;
ClassDiagram.Class>> Plane =>=>=> RelationalSchema.Table>> plane;
ClassDiagram.Class>> JetPlane =>=>=> RelationalSchema.Table>> jetplane;
ClassDiagram.Class>> TemperatureSamples =>=>=> RelationalSchema.Table>> temperaturesamples;
ClassDiagram.Class>> TestEntity =>=>=> RelationalSchema.Table>> testentity;
ClassDiagram.Class>> Image =>=>=> RelationalSchema.Table>> image;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> PhoneBook =>=>=> RelationalSchema.Table>> phonebook;
ClassDiagram.Class>> PersonPhone =>=>=> RelationalSchema.Table>> personphone;
ClassDiagram.Class>> Goods =>=>=> RelationalSchema.Table>> goods;
ClassDiagram.Class>> Cleaner =>=>=> RelationalSchema.Table>> cleaner;
ClassDiagram.Class>> OfficeBuilding =>=>=> RelationalSchema.Table>> officebuilding;
ClassDiagram.Class>> House =>=>=> RelationalSchema.Table>> house;
ClassDiagram.Class>> Homework =>=>=> RelationalSchema.Table>> homework;
ClassDiagram.Class>> OfficeBuildingValidated =>=>=> RelationalSchema.Table>> officebuildingvalidated;
ClassDiagram.Class>> Hotel =>=>=> RelationalSchema.Table>> hotel;
ClassDiagram.Class>> MyEntity =>=>=> RelationalSchema.Table>> myentity;
ClassDiagram.Class>> Stuff =>=>=> RelationalSchema.Table>> stuff;
ClassDiagram.Class>> SimpleEntity =>=>=> RelationalSchema.Table>> simpleentity;
ClassDiagram.Class>> Location =>=>=> RelationalSchema.Table>> location;
ClassDiagram.Class>> Vehicle =>=>=> RelationalSchema.Table>> vehicle;
ClassDiagram.Class>> RentalCar =>=>=> RelationalSchema.Table>> rentalcar;
ClassDiagram.Class>> RentalCompany =>=>=> RelationalSchema.Table>> rentalcompany;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Child =>=>=> RelationalSchema.Table>> child;
ClassDiagram.Class>> Parent =>=>=> RelationalSchema.Table>> parent;
ClassDiagram.Class>> Dummy =>=>=> RelationalSchema.Table>> dummy;
ClassDiagram.Class>> Dummy =>=>=> RelationalSchema.Table>> dummy;
ClassDiagram.Class>> AttachmentGroupPostInTopic =>=>=> RelationalSchema.Table>> attachmentgrouppostintopic;
ClassDiagram.Class>> AttachmentGroupInTopic =>=>=> RelationalSchema.Table>> attachmentgroupintopic;
ClassDiagram.Class>> UserRole =>=>=> RelationalSchema.Table>> userrole;
ClassDiagram.Class>> ConcreteProduct =>=>=> RelationalSchema.Table>> concreteproduct;
ClassDiagram.Class>> Shop =>=>=> RelationalSchema.Table>> shop;
ClassDiagram.Class>> BlobEntity =>=>=> RelationalSchema.Table>> blobentity;
ClassDiagram.Class>> House =>=>=> RelationalSchema.Table>> house;
ClassDiagram.Class>> TestEntity =>=>=> RelationalSchema.Table>> testentity;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> TestEntity =>=>=> RelationalSchema.Table>> testentity;
ClassDiagram.Class>> ContactDetails =>=>=> RelationalSchema.Table>> contactdetails;
ClassDiagram.Class>> PrintJob =>=>=> RelationalSchema.Table>> printjob;
ClassDiagram.Class>> Printer =>=>=> RelationalSchema.Table>> printer;
ClassDiagram.Class>> Hominidae =>=>=> RelationalSchema.Table>> hominidae;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Human =>=>=> RelationalSchema.Table>> human;
ClassDiagram.Class>> Room =>=>=> RelationalSchema.Table>> room;
ClassDiagram.Class>> Mammals =>=>=> RelationalSchema.Table>> mammals;
ClassDiagram.Class>> Shop =>=>=> RelationalSchema.Table>> shop;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> HotelRoom =>=>=> RelationalSchema.Table>> hotelroom;
ClassDiagram.Class>> House =>=>=> RelationalSchema.Table>> house;
ClassDiagram.Class>> HashEntity =>=>=> RelationalSchema.Table>> hashentity;
ClassDiagram.Class>> Foo =>=>=> RelationalSchema.Table>> foo;
ClassDiagram.Class>> EmployeeWithRawType =>=>=> RelationalSchema.Table>> employeewithrawtype;
ClassDiagram.Class>> DeskWithRawType =>=>=> RelationalSchema.Table>> deskwithrawtype;
ClassDiagram.Class>> TestEntity =>=>=> RelationalSchema.Table>> testentity;
ClassDiagram.Class>> Superhero =>=>=> RelationalSchema.Table>> superhero;
ClassDiagram.Attribut>> DefaultPackageEntity.id:long =>=>=> RelationalSchema.Column>> defaultpackageentity.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.nonpersistent:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> House.id:Long =>=>=> RelationalSchema.Column>> house.id PRIMARY KEY;
ClassDiagram.Attribut>> SubB.street:String =>=>=> RelationalSchema.Column>> subb.street;
ClassDiagram.Attribut>> BaseEntity.id:Integer =>=>=> RelationalSchema.Column>> baseentity.id PRIMARY KEY;
ClassDiagram.Attribut>> BaseEntity.name:String =>=>=> RelationalSchema.Column>> baseentity.name;
ClassDiagram.Attribut>> SubA.street:String =>=>=> RelationalSchema.Column>> suba.street;
ClassDiagram.Attribut>> Plane.id:Long =>=>=> RelationalSchema.Column>> plane.id PRIMARY KEY;
ClassDiagram.Attribut>> JetPlane.jets:Integer =>=>=> RelationalSchema.Column>> jetplane.jets;
ClassDiagram.Attribut>> TemperatureSamples.samples:Integer =>=>=> RelationalSchema.Column>> temperaturesamples.samples;
ClassDiagram.Attribut>> TestEntity.id:Integer =>=>=> RelationalSchema.Column>> testentity.id PRIMARY KEY;
ClassDiagram.Attribut>> TestEntity.primitiveannotatedarray:byte =>=>=> RelationalSchema.Column>> testentity.primitiveannotatedarray;
ClassDiagram.Attribut>> TestEntity.primitivearray:byte =>=>=> RelationalSchema.Column>> testentity.primitivearray;
ClassDiagram.Attribut>> TestEntity.//primitivenon-arraytestprimitiveannotated:byte =>=>=> RelationalSchema.Column>> testentity.//primitivenon-arraytestprimitiveannotated;
ClassDiagram.Attribut>> TestEntity.primitive:byte =>=>=> RelationalSchema.Column>> testentity.primitive;
ClassDiagram.Attribut>> TestEntity.nonprimitiveannotatedarray:Byte =>=>=> RelationalSchema.Column>> testentity.nonprimitiveannotatedarray;
ClassDiagram.Attribut>> TestEntity.nonprimitivearray:Byte =>=>=> RelationalSchema.Column>> testentity.nonprimitivearray;
ClassDiagram.Attribut>> TestEntity.//non-primitivenon-arraytestnonprimitiveannotated:Byte =>=>=> RelationalSchema.Column>> testentity.//non-primitivenon-arraytestnonprimitiveannotated;
ClassDiagram.Attribut>> TestEntity.nonprimitive:Byte =>=>=> RelationalSchema.Column>> testentity.nonprimitive;
ClassDiagram.Attribut>> TestEntity.customannotatedarray:CustomType =>=>=> RelationalSchema.Column>> testentity.customannotatedarray;
ClassDiagram.Attribut>> TestEntity.customarray:CustomType =>=>=> RelationalSchema.Column>> testentity.customarray;
ClassDiagram.Attribut>> Image.name:String =>=>=> RelationalSchema.Column>> image.name;
ClassDiagram.Attribut>> Image.data:byte =>=>=> RelationalSchema.Column>> image.data;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.phones:List<String> =>=>=> RelationalSchema.Column>> person.phones;
ClassDiagram.Attribut>> Product.proid:int =>=>=> RelationalSchema.Column>> product.proid PRIMARY KEY;
ClassDiagram.Attribut>> Product.proname:String =>=>=> RelationalSchema.Column>> product.proname;
ClassDiagram.Attribut>> Item.id:Integer =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.roles:Set<Role> =>=>=> RelationalSchema.Column>> item.roles;
ClassDiagram.Attribut>> Item.providers:List<String> =>=>=> RelationalSchema.Column>> item.providers;
ClassDiagram.Attribut>> Item.attributes:Map<Integer,String> =>=>=> RelationalSchema.Column>> item.attributes;
ClassDiagram.Attribut>> PhoneBook.id:Long =>=>=> RelationalSchema.Column>> phonebook.id PRIMARY KEY;
ClassDiagram.Attribut>> PhoneBook.phones:Map<String,String> =>=>=> RelationalSchema.Column>> phonebook.phones;
ClassDiagram.Attribut>> PersonPhone.id:Long =>=>=> RelationalSchema.Column>> personphone.id PRIMARY KEY;
ClassDiagram.Attribut>> PersonPhone.phones:List<Phone> =>=>=> RelationalSchema.Column>> personphone.phones;
ClassDiagram.Attribut>> Goods.id:Long =>=>=> RelationalSchema.Column>> goods.id PRIMARY KEY;
ClassDiagram.Attribut>> Goods.tags:List<String> =>=>=> RelationalSchema.Column>> goods.tags;
ClassDiagram.Attribut>> Cleaner.id:int =>=>=> RelationalSchema.Column>> cleaner.id PRIMARY KEY;
ClassDiagram.Attribut>> Cleaner.name:String =>=>=> RelationalSchema.Column>> cleaner.name;
ClassDiagram.Attribut>> OfficeBuilding.doorcodes:Map<Integer,byte[]> =>=>=> RelationalSchema.Column>> officebuilding.doorcodes;
ClassDiagram.Attribut>> House.roomsbyname:Map<String,Room> =>=>=> RelationalSchema.Column>> house.roomsbyname;
ClassDiagram.Attribut>> Homework.paths:List<String> =>=>=> RelationalSchema.Column>> homework.paths;
ClassDiagram.Attribut>> OfficeBuildingValidated.doorcodes:Map<Integer,byte[]> =>=>=> RelationalSchema.Column>> officebuildingvalidated.doorcodes;
ClassDiagram.Attribut>> OfficeBuildingValidated.computerserialnumbers:Set<String> =>=>=> RelationalSchema.Column>> officebuildingvalidated.computerserialnumbers;
ClassDiagram.Attribut>> OfficeBuildingValidated.employeenames:List<String> =>=>=> RelationalSchema.Column>> officebuildingvalidated.employeenames;
ClassDiagram.Attribut>> OfficeBuildingValidated.rooms:List<Room> =>=>=> RelationalSchema.Column>> officebuildingvalidated.rooms;
ClassDiagram.Attribut>> Hotel.id:int =>=>=> RelationalSchema.Column>> hotel.id PRIMARY KEY;
ClassDiagram.Attribut>> Hotel.roomsbyname:Map =>=>=> RelationalSchema.Column>> hotel.roomsbyname;
ClassDiagram.Attribut>> MyEntity.emb:EmbeddableEntity =>=>=> RelationalSchema.Column>> myentity.emb;
ClassDiagram.Attribut>> SimpleEntity.id:Integer =>=>=> RelationalSchema.Column>> simpleentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleEntity.GeneratedName:SimpleEmbeddable =>=>=> RelationalSchema.Column>> simpleentity.GeneratedName;
ClassDiagram.Attribut>> Location.id:long =>=>=> RelationalSchema.Column>> location.id PRIMARY KEY;
ClassDiagram.Attribut>> Location.description:String =>=>=> RelationalSchema.Column>> location.description;
ClassDiagram.Attribut>> Location.//implicitlyembedded:Coordinates =>=>=> RelationalSchema.Column>> location.//implicitlyembedded;
ClassDiagram.Attribut>> Location.GeneratedName:ZeroCoordinates =>=>=> RelationalSchema.Column>> location.GeneratedName;
ClassDiagram.Attribut>> Vehicle.//defaultaccesstypeforclassesinthishierarchyisfieldid:long =>=>=> RelationalSchema.Column>> vehicle.//defaultaccesstypeforclassesinthishierarchyisfieldid PRIMARY KEY;
ClassDiagram.Attribut>> RentalCar.company:RentalCompany =>=>=> RelationalSchema.Column>> rentalcar.company;
ClassDiagram.Attribut>> RentalCar.hired:CURRENTLY_HIRED =>=>=> RelationalSchema.Column>> rentalcar.hired;
ClassDiagram.Attribut>> RentalCar.chassisnumber:Character =>=>=> RelationalSchema.Column>> rentalcar.chassisnumber;
ClassDiagram.Attribut>> RentalCar.GeneratedName:Insurance =>=>=> RelationalSchema.Column>> rentalcar.GeneratedName;
ClassDiagram.Attribut>> RentalCompany.id:long =>=>=> RelationalSchema.Column>> rentalcompany.id PRIMARY KEY;
ClassDiagram.Attribut>> RentalCompany.name:String =>=>=> RelationalSchema.Column>> rentalcompany.name;
ClassDiagram.Attribut>> Person.id:long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Child.id:Integer =>=>=> RelationalSchema.Column>> child.id PRIMARY KEY;
ClassDiagram.Attribut>> Child.name:String =>=>=> RelationalSchema.Column>> child.name;
ClassDiagram.Attribut>> Parent.id:Integer =>=>=> RelationalSchema.Column>> parent.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent.name:String =>=>=> RelationalSchema.Column>> parent.name;
ClassDiagram.Attribut>> Parent.siblings:Relatives<Child> =>=>=> RelationalSchema.Column>> parent.siblings;
ClassDiagram.Attribut>> Dummy.id:long =>=>=> RelationalSchema.Column>> dummy.id PRIMARY KEY;
ClassDiagram.Attribut>> Dummy.id:long =>=>=> RelationalSchema.Column>> dummy.id PRIMARY KEY;
ClassDiagram.Attribut>> ConcreteProduct.id:long =>=>=> RelationalSchema.Column>> concreteproduct.id PRIMARY KEY;
ClassDiagram.Attribut>> Shop.id:long =>=>=> RelationalSchema.Column>> shop.id PRIMARY KEY;
ClassDiagram.Attribut>> Shop.name:String =>=>=> RelationalSchema.Column>> shop.name;
ClassDiagram.Attribut>> BlobEntity.id:String =>=>=> RelationalSchema.Column>> blobentity.id PRIMARY KEY;
ClassDiagram.Attribut>> BlobEntity.GeneratedName:Blob =>=>=> RelationalSchema.Column>> blobentity.GeneratedName;
ClassDiagram.Attribut>> House.id:long =>=>=> RelationalSchema.Column>> house.id PRIMARY KEY;
ClassDiagram.Attribut>> House.GeneratedName:Address =>=>=> RelationalSchema.Column>> house.GeneratedName;
ClassDiagram.Attribut>> TestEntity.GeneratedName:Ref =>=>=> RelationalSchema.Column>> testentity.GeneratedName;
ClassDiagram.Attribut>> TestEntity.name:String =>=>=> RelationalSchema.Column>> testentity.name;
ClassDiagram.Attribut>> Person.id:PersonId =>=>=> RelationalSchema.Column>> person.id;
ClassDiagram.Attribut>> Person.address:String =>=>=> RelationalSchema.Column>> person.address;
ClassDiagram.Attribut>> TestEntity.id:long =>=>=> RelationalSchema.Column>> testentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ContactDetails.id:long =>=>=> RelationalSchema.Column>> contactdetails.id PRIMARY KEY;
ClassDiagram.Attribut>> ContactDetails.GeneratedName:PhoneNumber =>=>=> RelationalSchema.Column>> contactdetails.GeneratedName;
ClassDiagram.Attribut>> PrintJob.id:long =>=>=> RelationalSchema.Column>> printjob.id PRIMARY KEY;
ClassDiagram.Attribut>> PrintJob.data:byte =>=>=> RelationalSchema.Column>> printjob.data;
ClassDiagram.Attribut>> Printer.id:long =>=>=> RelationalSchema.Column>> printer.id PRIMARY KEY;
ClassDiagram.Attribut>> Hominidae.elligence:int =>=>=> RelationalSchema.Column>> hominidae.elligence;
ClassDiagram.Attribut>> Customer.orders:Set<Order> =>=>=> RelationalSchema.Column>> customer.orders;
ClassDiagram.Attribut>> Customer.nonpersistent:String =>=>=> RelationalSchema.Column>> customer.nonpersistent;
ClassDiagram.Attribut>> Customer.goodpayer:boolean =>=>=> RelationalSchema.Column>> customer.goodpayer;
ClassDiagram.Attribut>> Human.nonpersistent:int =>=>=> RelationalSchema.Column>> human.nonpersistent;
ClassDiagram.Attribut>> Human.name:String =>=>=> RelationalSchema.Column>> human.name;
ClassDiagram.Attribut>> Room.id:Integer =>=>=> RelationalSchema.Column>> room.id PRIMARY KEY;
ClassDiagram.Attribut>> Mammals.id:String =>=>=> RelationalSchema.Column>> mammals.id PRIMARY KEY;
ClassDiagram.Attribut>> Mammals.nbrofmammals:String =>=>=> RelationalSchema.Column>> mammals.nbrofmammals;
ClassDiagram.Attribut>> Shop.id:long =>=>=> RelationalSchema.Column>> shop.id PRIMARY KEY;
ClassDiagram.Attribut>> Shop.name:String =>=>=> RelationalSchema.Column>> shop.name;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.nonpersistent:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> Item.id:long =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.quantity:int =>=>=> RelationalSchema.Column>> item.quantity;
ClassDiagram.Attribut>> Item.GeneratedName:Product =>=>=> RelationalSchema.Column>> item.GeneratedName;
ClassDiagram.Attribut>> Item.GeneratedName:Order =>=>=> RelationalSchema.Column>> item.GeneratedName;
ClassDiagram.Attribut>> Item.GeneratedName:Detail =>=>=> RelationalSchema.Column>> item.GeneratedName;
ClassDiagram.Attribut>> Product.transientnonpersistent:String =>=>=> RelationalSchema.Column>> product.transientnonpersistent;
ClassDiagram.Attribut>> Product.nonpersistent2:String =>=>=> RelationalSchema.Column>> product.nonpersistent2;
ClassDiagram.Attribut>> Product.id:long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.test:int =>=>=> RelationalSchema.Column>> product.test;
ClassDiagram.Attribut>> Product.description:String =>=>=> RelationalSchema.Column>> product.description;
ClassDiagram.Attribut>> Product.price:BigDecimal =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> HotelRoom.GeneratedName:Hotel =>=>=> RelationalSchema.Column>> hotelroom.GeneratedName;
ClassDiagram.Attribut>> House.id:Long =>=>=> RelationalSchema.Column>> house.id PRIMARY KEY;
ClassDiagram.Attribut>> HashEntity.id:long =>=>=> RelationalSchema.Column>> hashentity.id PRIMARY KEY;
ClassDiagram.Attribut>> Foo.id:long =>=>=> RelationalSchema.Column>> foo.id PRIMARY KEY;
ClassDiagram.Attribut>> EmployeeWithRawType.id:String =>=>=> RelationalSchema.Column>> employeewithrawtype.id PRIMARY KEY;
ClassDiagram.Attribut>> EmployeeWithRawType.name:String =>=>=> RelationalSchema.Column>> employeewithrawtype.name;
ClassDiagram.Attribut>> DeskWithRawType.id:String =>=>=> RelationalSchema.Column>> deskwithrawtype.id PRIMARY KEY;
ClassDiagram.Attribut>> DeskWithRawType.name:String =>=>=> RelationalSchema.Column>> deskwithrawtype.name;
ClassDiagram.Attribut>> TestEntity.id:long =>=>=> RelationalSchema.Column>> testentity.id PRIMARY KEY;
ClassDiagram.Attribut>> Superhero.id:long =>=>=> RelationalSchema.Column>> superhero.id PRIMARY KEY;
ClassDiagram.Attribut>> Superhero.name:String =>=>=> RelationalSchema.Column>> superhero.name;
ClassDiagram.Attribut>> Superhero.superpower:String =>=>=> RelationalSchema.Column>> superhero.superpower;
One-To-Many relationship from ClassDiagram.Class>>Goods  to ClassDiagram.Class>>List<Product>;
One-To-Many relationship from ClassDiagram.Class>>Hotel  to ClassDiagram.Class>>Map;
One-To-Many relationship from ClassDiagram.Class>>Parent  to ClassDiagram.Class>>Set<Child>;
One-To-Many relationship from ClassDiagram.Class>>Printer  to ClassDiagram.Class>>SortedSet<PrintJob>;
One-To-Many relationship from ClassDiagram.Class>>Printer  to ClassDiagram.Class>>SortedMap<String,PrintJob>;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>shop represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Set<Item>;
Many-To-Many relationship between ClassDiagram.Class>>DeskWithRawType  and ClassDiagram.Class>>collection: desk_empl(desk_fk:DeskWithRawType [PK] #FK to DeskWithRawType,emplo_fk:collection [PK] #FK to collection);
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Plane   Descriminator>>planetype: String ;
