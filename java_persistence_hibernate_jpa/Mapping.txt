ClassDiagram.Class>> Guide =>=>=> RelationalSchema.Table>> guide;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Passport =>=>=> RelationalSchema.Table>> passport;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Guide =>=>=> RelationalSchema.Table>> guide;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Message =>=>=> RelationalSchema.Table>> message;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Guide =>=>=> RelationalSchema.Table>> guide;
ClassDiagram.Class>> Guide =>=>=> RelationalSchema.Table>> guide;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Guide =>=>=> RelationalSchema.Table>> guide;
ClassDiagram.Class>> Friend =>=>=> RelationalSchema.Table>> friend;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Guide =>=>=> RelationalSchema.Table>> guide;
ClassDiagram.Class>> Message =>=>=> RelationalSchema.Table>> message;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Person2 =>=>=> RelationalSchema.Table>> person2;
ClassDiagram.Class>> Guide =>=>=> RelationalSchema.Table>> guide;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Person3 =>=>=> RelationalSchema.Table>> person3;
ClassDiagram.Class>> Guide =>=>=> RelationalSchema.Table>> guide;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Parent =>=>=> RelationalSchema.Table>> parent;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Section =>=>=> RelationalSchema.Table>> section;
ClassDiagram.Class>> Chapter =>=>=> RelationalSchema.Table>> chapter;
ClassDiagram.Class>> Child =>=>=> RelationalSchema.Table>> child;
ClassDiagram.Class>> Movie2 =>=>=> RelationalSchema.Table>> movie2;
ClassDiagram.Class>> Guide =>=>=> RelationalSchema.Table>> guide;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Animal =>=>=> RelationalSchema.Table>> animal;
ClassDiagram.Class>> Cat =>=>=> RelationalSchema.Table>> cat;
ClassDiagram.Class>> Dog =>=>=> RelationalSchema.Table>> dog;
ClassDiagram.Class>> Movie =>=>=> RelationalSchema.Table>> movie;
ClassDiagram.Class>> Actor =>=>=> RelationalSchema.Table>> actor;
ClassDiagram.Attribut>> Guide.id:Long =>=>=> RelationalSchema.Column>> guide.id PRIMARY KEY;
ClassDiagram.Attribut>> Guide.staffid:String =>=>=> RelationalSchema.Column>> guide.staffid;
ClassDiagram.Attribut>> Guide.name:String =>=>=> RelationalSchema.Column>> guide.name;
ClassDiagram.Attribut>> Guide.salary:Integer =>=>=> RelationalSchema.Column>> guide.salary;
ClassDiagram.Attribut>> Student.id:Long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.enrollmentid:String =>=>=> RelationalSchema.Column>> student.enrollmentid;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Passport.id:Long =>=>=> RelationalSchema.Column>> passport.id PRIMARY KEY;
ClassDiagram.Attribut>> Passport.passportnumber:String =>=>=> RelationalSchema.Column>> passport.passportnumber;
ClassDiagram.Attribut>> Customer.id:Long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Guide.id:Long =>=>=> RelationalSchema.Column>> guide.id PRIMARY KEY;
ClassDiagram.Attribut>> Guide.staffid:String =>=>=> RelationalSchema.Column>> guide.staffid;
ClassDiagram.Attribut>> Guide.name:String =>=>=> RelationalSchema.Column>> guide.name;
ClassDiagram.Attribut>> Guide.salary:Integer =>=>=> RelationalSchema.Column>> guide.salary;
ClassDiagram.Attribut>> Student.id:Long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.enrollmentid:String =>=>=> RelationalSchema.Column>> student.enrollmentid;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Message.id:Long =>=>=> RelationalSchema.Column>> message.id PRIMARY KEY;
ClassDiagram.Attribut>> Message.text:String =>=>=> RelationalSchema.Column>> message.text;
ClassDiagram.Attribut>> Student.id:Long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.enrollmentid:String =>=>=> RelationalSchema.Column>> student.enrollmentid;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Guide.id:Long =>=>=> RelationalSchema.Column>> guide.id PRIMARY KEY;
ClassDiagram.Attribut>> Guide.staffid:String =>=>=> RelationalSchema.Column>> guide.staffid;
ClassDiagram.Attribut>> Guide.name:String =>=>=> RelationalSchema.Column>> guide.name;
ClassDiagram.Attribut>> Guide.salary:Integer =>=>=> RelationalSchema.Column>> guide.salary;
ClassDiagram.Attribut>> Guide.id:Long =>=>=> RelationalSchema.Column>> guide.id PRIMARY KEY;
ClassDiagram.Attribut>> Guide.staffid:String =>=>=> RelationalSchema.Column>> guide.staffid;
ClassDiagram.Attribut>> Guide.name:String =>=>=> RelationalSchema.Column>> guide.name;
ClassDiagram.Attribut>> Guide.salary:Integer =>=>=> RelationalSchema.Column>> guide.salary;
ClassDiagram.Attribut>> Student.id:Long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.enrollmentid:String =>=>=> RelationalSchema.Column>> student.enrollmentid;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Student.id:Long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.enrollmentid:String =>=>=> RelationalSchema.Column>> student.enrollmentid;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Guide.id:Long =>=>=> RelationalSchema.Column>> guide.id PRIMARY KEY;
ClassDiagram.Attribut>> Guide.staffid:String =>=>=> RelationalSchema.Column>> guide.staffid;
ClassDiagram.Attribut>> Guide.name:String =>=>=> RelationalSchema.Column>> guide.name;
ClassDiagram.Attribut>> Guide.salary:Integer =>=>=> RelationalSchema.Column>> guide.salary;
ClassDiagram.Attribut>> Friend.id:Long =>=>=> RelationalSchema.Column>> friend.id PRIMARY KEY;
ClassDiagram.Attribut>> Friend.name:String =>=>=> RelationalSchema.Column>> friend.name;
ClassDiagram.Attribut>> Friend.email:String =>=>=> RelationalSchema.Column>> friend.email;
ClassDiagram.Attribut>> Friend.nicknames:Collection<String> =>=>=> RelationalSchema.Column>> friend.nicknames;
ClassDiagram.Attribut>> Friend.addresses:Collection<Address> =>=>=> RelationalSchema.Column>> friend.addresses;
ClassDiagram.Attribut>> Student.id:Long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.enrollmentid:String =>=>=> RelationalSchema.Column>> student.enrollmentid;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Guide.id:Long =>=>=> RelationalSchema.Column>> guide.id PRIMARY KEY;
ClassDiagram.Attribut>> Guide.staffid:String =>=>=> RelationalSchema.Column>> guide.staffid;
ClassDiagram.Attribut>> Guide.name:String =>=>=> RelationalSchema.Column>> guide.name;
ClassDiagram.Attribut>> Guide.salary:Integer =>=>=> RelationalSchema.Column>> guide.salary;
ClassDiagram.Attribut>> Guide.//whenyou'realteringtheschemaofyourtablestoaddtheversioncolumntouseversioning,//don'tforgettoaddthedefaultforthatcolumnas0like//altertable`guide`add`version`int(11)notnulldefault'0'version:Integer =>=>=> RelationalSchema.Column>> guide.//whenyou'realteringtheschemaofyourtablestoaddtheversioncolumntouseversioning,//don'tforgettoaddthedefaultforthatcolumnas0like//altertable`guide`add`version`int(11)notnulldefault'0'version;
ClassDiagram.Attribut>> Message.//forhibernate4.3.xusersid:Long =>=>=> RelationalSchema.Column>> message.//forhibernate4.3.xusersid PRIMARY KEY;
ClassDiagram.Attribut>> Message.//forhibernate5.xusers//ifyou'reusinghibernate5.x,usegenerationtype.identityidgeneratorstrategyexplicitly//formoreinformationon"generationtype"havealookathttps://www.udemy.com/course/242180/activities/?ids:String =>=>=> RelationalSchema.Column>> message.//forhibernate5.xusers//ifyou'reusinghibernate5.x,usegenerationtype.identityidgeneratorstrategyexplicitly//formoreinformationon"generationtype"havealookathttps://www.udemy.com/course/242180/activities/?ids;
ClassDiagram.Attribut>> Student.id:Long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.enrollmentid:String =>=>=> RelationalSchema.Column>> student.enrollmentid;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Person2.id:Long =>=>=> RelationalSchema.Column>> person2.id PRIMARY KEY;
ClassDiagram.Attribut>> Person2.name:String =>=>=> RelationalSchema.Column>> person2.name;
ClassDiagram.Attribut>> Person2.GeneratedName:Address =>=>=> RelationalSchema.Column>> person2.GeneratedName;
ClassDiagram.Attribut>> Guide.id:Long =>=>=> RelationalSchema.Column>> guide.id PRIMARY KEY;
ClassDiagram.Attribut>> Guide.staffid:String =>=>=> RelationalSchema.Column>> guide.staffid;
ClassDiagram.Attribut>> Guide.name:String =>=>=> RelationalSchema.Column>> guide.name;
ClassDiagram.Attribut>> Guide.salary:Integer =>=>=> RelationalSchema.Column>> guide.salary;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.GeneratedName:Address =>=>=> RelationalSchema.Column>> person.GeneratedName;
ClassDiagram.Attribut>> Person3.id:Long =>=>=> RelationalSchema.Column>> person3.id PRIMARY KEY;
ClassDiagram.Attribut>> Person3.name:String =>=>=> RelationalSchema.Column>> person3.name;
ClassDiagram.Attribut>> Person3.home:Address =>=>=> RelationalSchema.Column>> person3.home;
ClassDiagram.Attribut>> Person3.billing:Address =>=>=> RelationalSchema.Column>> person3.billing;
ClassDiagram.Attribut>> Guide.id:Long =>=>=> RelationalSchema.Column>> guide.id PRIMARY KEY;
ClassDiagram.Attribut>> Guide.staffid:String =>=>=> RelationalSchema.Column>> guide.staffid;
ClassDiagram.Attribut>> Guide.name:String =>=>=> RelationalSchema.Column>> guide.name;
ClassDiagram.Attribut>> Guide.salary:Integer =>=>=> RelationalSchema.Column>> guide.salary;
ClassDiagram.Attribut>> Student.id:Long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.enrollmentid:String =>=>=> RelationalSchema.Column>> student.enrollmentid;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Parent.GeneratedName:ParentPrimaryKey =>=>=> RelationalSchema.Column>> parent.GeneratedName;
ClassDiagram.Attribut>> Employee.email:String =>=>=> RelationalSchema.Column>> employee.email;
ClassDiagram.Attribut>> Employee.GeneratedName:EmployeeId =>=>=> RelationalSchema.Column>> employee.GeneratedName;
ClassDiagram.Attribut>> Department.id:Long =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> Section.sectionnr:Integer =>=>=> RelationalSchema.Column>> section.sectionnr PRIMARY KEY;
ClassDiagram.Attribut>> Section.title:String =>=>=> RelationalSchema.Column>> section.title;
ClassDiagram.Attribut>> Chapter.title:String =>=>=> RelationalSchema.Column>> chapter.title;
ClassDiagram.Attribut>> Chapter.GeneratedName:ChapterId =>=>=> RelationalSchema.Column>> chapter.GeneratedName;
ClassDiagram.Attribut>> Child.id:Long =>=>=> RelationalSchema.Column>> child.id PRIMARY KEY;
ClassDiagram.Attribut>> Child.name:String =>=>=> RelationalSchema.Column>> child.name;
ClassDiagram.Attribut>> Movie2.id:Long =>=>=> RelationalSchema.Column>> movie2.id PRIMARY KEY;
ClassDiagram.Attribut>> Movie2.name:String =>=>=> RelationalSchema.Column>> movie2.name;
ClassDiagram.Attribut>> Movie2.//@enumerated//ordinalbydefault//@enumerated(enumtype.ordinal)bothofthesecasestheindexoftheenum-valuewouldbepersisted(0,1,2,..)filmtype:FilmTypeEnum =>=>=> RelationalSchema.Column>> movie2.//@enumerated//ordinalbydefault//@enumerated(enumtype.ordinal)bothofthesecasestheindexoftheenum-valuewouldbepersisted(0,1,2,..)filmtype;
ClassDiagram.Attribut>> Guide.id:Long =>=>=> RelationalSchema.Column>> guide.id PRIMARY KEY;
ClassDiagram.Attribut>> Guide.staffid:String =>=>=> RelationalSchema.Column>> guide.staffid;
ClassDiagram.Attribut>> Guide.name:String =>=>=> RelationalSchema.Column>> guide.name;
ClassDiagram.Attribut>> Guide.salary:Integer =>=>=> RelationalSchema.Column>> guide.salary;
ClassDiagram.Attribut>> Student.id:Long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.enrollmentid:String =>=>=> RelationalSchema.Column>> student.enrollmentid;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Animal.//)id:Long =>=>=> RelationalSchema.Column>> animal.//)id PRIMARY KEY;
ClassDiagram.Attribut>> Animal.//@column(nullable:String =>=>=> RelationalSchema.Column>> animal.//@column(nullable;
ClassDiagram.Attribut>> Movie.id:Long =>=>=> RelationalSchema.Column>> movie.id PRIMARY KEY;
ClassDiagram.Attribut>> Movie.name:String =>=>=> RelationalSchema.Column>> movie.name;
ClassDiagram.Attribut>> Actor.id:Long =>=>=> RelationalSchema.Column>> actor.id PRIMARY KEY;
ClassDiagram.Attribut>> Actor.name:String =>=>=> RelationalSchema.Column>> actor.name;
One-To-Many relationship from ClassDiagram.Class>>Guide  to ClassDiagram.Class>>Set<Student>;
Many-To-One relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>Guide represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Passport  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Passport represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Guide  to ClassDiagram.Class>>Set<Student>;
Many-To-One relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>Guide represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>Guide represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Guide  to ClassDiagram.Class>>Set<Student>;
One-To-Many relationship from ClassDiagram.Class>>Guide  to ClassDiagram.Class>>Set<Student>;
Many-To-One relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>Guide represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>Guide represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Guide  to ClassDiagram.Class>>Set<Student>;
Many-To-One relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>Guide represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Guide  to ClassDiagram.Class>>Set<Student>;
Many-To-One relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>Guide represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Guide  to ClassDiagram.Class>>Set<Student>;
Many-To-One relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>Guide represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Parent  to ClassDiagram.Class>>Set<Child>;
Many-To-One relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>username;
Many-To-One relationship from ClassDiagram.Class>>Section  to ClassDiagram.Class>>chapter represented by ClassDiagram.Atrribute>>isbn;
One-To-Many relationship from ClassDiagram.Class>>Chapter  to ClassDiagram.Class>>Set<Section>;
Many-To-One relationship from ClassDiagram.Class>>Child  to ClassDiagram.Class>>parent represented by ClassDiagram.Atrribute>>firstname;
One-To-Many relationship from ClassDiagram.Class>>Guide  to ClassDiagram.Class>>Set<Student>;
Many-To-One relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>Guide represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Movie  and ClassDiagram.Class>>set<actor>: movie_actor(movie_id:Movie [PK] #FK to Movie,actor_id:set<actor> [PK] #FK to set<actor>);
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Animal  ;
