ClassDiagram.Class>> BookSales =>=>=> RelationalSchema.Table>> booksales;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> OrderItem =>=>=> RelationalSchema.Table>> orderitem;
ClassDiagram.Attribut>> BookSales.id:int =>=>=> RelationalSchema.Column>> booksales.id PRIMARY KEY;
ClassDiagram.Attribut>> BookSales.noofcopies:int =>=>=> RelationalSchema.Column>> booksales.noofcopies;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.active:Boolean =>=>=> RelationalSchema.Column>> user.active;
ClassDiagram.Attribut>> Book.id:Long =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.name:String =>=>=> RelationalSchema.Column>> book.name;
ClassDiagram.Attribut>> Book.price:Integer =>=>=> RelationalSchema.Column>> book.price;
ClassDiagram.Attribut>> Book.releaseddate:LocalDate =>=>=> RelationalSchema.Column>> book.releaseddate;
ClassDiagram.Attribut>> Order.id:Long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.//@formula("fn_get_order_amount(id)")totalprice:Integer =>=>=> RelationalSchema.Column>> order.//@formula("fn_get_order_amount(id)")totalprice;
ClassDiagram.Attribut>> Order.status:String =>=>=> RelationalSchema.Column>> order.status;
ClassDiagram.Attribut>> Order.ordereddate:LocalDateTime =>=>=> RelationalSchema.Column>> order.ordereddate;
ClassDiagram.Attribut>> Order.cancelleddate:LocalDate =>=>=> RelationalSchema.Column>> order.cancelleddate;
ClassDiagram.Attribut>> Order.delivereddate:LocalDate =>=>=> RelationalSchema.Column>> order.delivereddate;
ClassDiagram.Attribut>> OrderItem.id:Long =>=>=> RelationalSchema.Column>> orderitem.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderItem.quantity:Integer =>=>=> RelationalSchema.Column>> orderitem.quantity;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>List<OrderItem>;
Many-To-One relationship from ClassDiagram.Class>>OrderItem  to ClassDiagram.Class>>order represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderItem  to ClassDiagram.Class>>book represented by ClassDiagram.Atrribute>>//@column(name;
