ClassDiagram.Class>> Adresa =>=>=> RelationalSchema.Table>> adresa;
ClassDiagram.Class>> Bioskop =>=>=> RelationalSchema.Table>> bioskop;
ClassDiagram.Class>> Sala =>=>=> RelationalSchema.Table>> sala;
ClassDiagram.Class>> Ocjena =>=>=> RelationalSchema.Table>> ocjena;
ClassDiagram.Attribut>> Adresa.id:Long =>=>=> RelationalSchema.Column>> adresa.id PRIMARY KEY;
ClassDiagram.Attribut>> Adresa.nazivnaseljenogmesta:String =>=>=> RelationalSchema.Column>> adresa.nazivnaseljenogmesta;
ClassDiagram.Attribut>> Adresa.nazivulice:String =>=>=> RelationalSchema.Column>> adresa.nazivulice;
ClassDiagram.Attribut>> Adresa.broj:int =>=>=> RelationalSchema.Column>> adresa.broj;
ClassDiagram.Attribut>> Adresa.geoduzina:float =>=>=> RelationalSchema.Column>> adresa.geoduzina;
ClassDiagram.Attribut>> Adresa.geosirina:float =>=>=> RelationalSchema.Column>> adresa.geosirina;
ClassDiagram.Attribut>> Bioskop.id:Long =>=>=> RelationalSchema.Column>> bioskop.id PRIMARY KEY;
ClassDiagram.Attribut>> Bioskop.naziv:String =>=>=> RelationalSchema.Column>> bioskop.naziv;
ClassDiagram.Attribut>> Bioskop.ocena:Long =>=>=> RelationalSchema.Column>> bioskop.ocena;
ClassDiagram.Attribut>> Bioskop.prosecnaocena:float =>=>=> RelationalSchema.Column>> bioskop.prosecnaocena;
ClassDiagram.Attribut>> Bioskop.brojac:int =>=>=> RelationalSchema.Column>> bioskop.brojac;
ClassDiagram.Attribut>> Bioskop.sumaocena:float =>=>=> RelationalSchema.Column>> bioskop.sumaocena;
ClassDiagram.Attribut>> Sala.id:Long =>=>=> RelationalSchema.Column>> sala.id PRIMARY KEY;
ClassDiagram.Attribut>> Sala.oznakasale:String =>=>=> RelationalSchema.Column>> sala.oznakasale;
ClassDiagram.Attribut>> Sala.kapacitet:int =>=>=> RelationalSchema.Column>> sala.kapacitet;
ClassDiagram.Attribut>> Sala.brojsedistaredovi:int =>=>=> RelationalSchema.Column>> sala.brojsedistaredovi;
ClassDiagram.Attribut>> Sala.brojsedistakolone:int =>=>=> RelationalSchema.Column>> sala.brojsedistakolone;
ClassDiagram.Attribut>> Sala.tip:SalaTip =>=>=> RelationalSchema.Column>> sala.tip;
ClassDiagram.Attribut>> Ocjena.id:long =>=>=> RelationalSchema.Column>> ocjena.id PRIMARY KEY;
ClassDiagram.Attribut>> Ocjena.username:String =>=>=> RelationalSchema.Column>> ocjena.username;
ClassDiagram.Attribut>> Ocjena.ocjena:float =>=>=> RelationalSchema.Column>> ocjena.ocjena;
One-To-Many relationship from ClassDiagram.Class>>Adresa  to ClassDiagram.Class>>Set<Bioskop>;
Many-To-One relationship from ClassDiagram.Class>>Bioskop  to ClassDiagram.Class>>adresa represented by ClassDiagram.Atrribute>>adresa_id;
One-To-Many relationship from ClassDiagram.Class>>Bioskop  to ClassDiagram.Class>>List<Ocjena>;
One-To-Many relationship from ClassDiagram.Class>>Bioskop  to ClassDiagram.Class>>List<Sala>;
Many-To-One relationship from ClassDiagram.Class>>Sala  to ClassDiagram.Class>>bioskop represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Ocjena  to ClassDiagram.Class>>bioskop represented by ClassDiagram.Atrribute>>bioskop_id;
