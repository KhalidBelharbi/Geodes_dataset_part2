ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Attribut>> Project.id:int =>=>=> RelationalSchema.Column>> project.id PRIMARY KEY;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name;
ClassDiagram.Attribut>> Employee.country:String =>=>=> RelationalSchema.Column>> employee.country PRIMARY KEY;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.salary:long =>=>=> RelationalSchema.Column>> employee.salary;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>country;
One-To-Many relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Collection<Employee>;
Many-To-Many relationship between ClassDiagram.Class>>Employee  and ClassDiagram.Class>>collection<project>: emp_project(emp_country:Employee [PK] #FK to Employee,project_id:collection<project> [PK] #FK to collection<project>);
