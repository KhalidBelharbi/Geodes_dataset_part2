ClassDiagram.Class>> Article =>=>=> RelationalSchema.Table>> article;
ClassDiagram.Class>> Banner =>=>=> RelationalSchema.Table>> banner;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Message =>=>=> RelationalSchema.Table>> message;
ClassDiagram.Class>> AttrVal =>=>=> RelationalSchema.Table>> attrval;
ClassDiagram.Class>> AttrKey =>=>=> RelationalSchema.Table>> attrkey;
ClassDiagram.Class>> Favorite =>=>=> RelationalSchema.Table>> favorite;
ClassDiagram.Class>> Topic =>=>=> RelationalSchema.Table>> topic;
ClassDiagram.Class>> ShopUser =>=>=> RelationalSchema.Table>> shopuser;
ClassDiagram.Class>> Goods =>=>=> RelationalSchema.Table>> goods;
ClassDiagram.Class>> GoodsSku =>=>=> RelationalSchema.Table>> goodssku;
ClassDiagram.Class>> CategoryBannerRel =>=>=> RelationalSchema.Table>> categorybannerrel;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Cart =>=>=> RelationalSchema.Table>> cart;
ClassDiagram.Attribut>> Article.idchannel:Long =>=>=> RelationalSchema.Column>> article.idchannel;
ClassDiagram.Attribut>> Article.title:String =>=>=> RelationalSchema.Column>> article.title;
ClassDiagram.Attribut>> Article.content:String =>=>=> RelationalSchema.Column>> article.content;
ClassDiagram.Attribut>> Article.author:String =>=>=> RelationalSchema.Column>> article.author;
ClassDiagram.Attribut>> Article.img:String =>=>=> RelationalSchema.Column>> article.img;
ClassDiagram.Attribut>> Banner.url:String =>=>=> RelationalSchema.Column>> banner.url;
ClassDiagram.Attribut>> Banner.title:String =>=>=> RelationalSchema.Column>> banner.title;
ClassDiagram.Attribut>> Banner.type:String =>=>=> RelationalSchema.Column>> banner.type;
ClassDiagram.Attribut>> Banner.idfile:String =>=>=> RelationalSchema.Column>> banner.idfile;
ClassDiagram.Attribut>> Banner.page:String =>=>=> RelationalSchema.Column>> banner.page;
ClassDiagram.Attribut>> Banner.param:String =>=>=> RelationalSchema.Column>> banner.param;
ClassDiagram.Attribut>> User.avatar:String =>=>=> RelationalSchema.Column>> user.avatar;
ClassDiagram.Attribut>> User.account:String =>=>=> RelationalSchema.Column>> user.account;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.salt:String =>=>=> RelationalSchema.Column>> user.salt;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.birthday:Date =>=>=> RelationalSchema.Column>> user.birthday;
ClassDiagram.Attribut>> User.sex:Integer =>=>=> RelationalSchema.Column>> user.sex;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.phone:String =>=>=> RelationalSchema.Column>> user.phone;
ClassDiagram.Attribut>> User.roleid:String =>=>=> RelationalSchema.Column>> user.roleid;
ClassDiagram.Attribut>> User.deptid:Long =>=>=> RelationalSchema.Column>> user.deptid;
ClassDiagram.Attribut>> User.status:Integer =>=>=> RelationalSchema.Column>> user.status;
ClassDiagram.Attribut>> User.version:Integer =>=>=> RelationalSchema.Column>> user.version;
ClassDiagram.Attribut>> Message.tplcode:String =>=>=> RelationalSchema.Column>> message.tplcode;
ClassDiagram.Attribut>> Message.content:String =>=>=> RelationalSchema.Column>> message.content;
ClassDiagram.Attribut>> Message.receiver:String =>=>=> RelationalSchema.Column>> message.receiver;
ClassDiagram.Attribut>> Message.type:Integer =>=>=> RelationalSchema.Column>> message.type;
ClassDiagram.Attribut>> Message.state:Integer =>=>=> RelationalSchema.Column>> message.state;
ClassDiagram.Attribut>> AttrVal.idattrkey:Long =>=>=> RelationalSchema.Column>> attrval.idattrkey;
ClassDiagram.Attribut>> AttrVal.attrval:String =>=>=> RelationalSchema.Column>> attrval.attrval;
ClassDiagram.Attribut>> AttrKey.attrname:String =>=>=> RelationalSchema.Column>> attrkey.attrname;
ClassDiagram.Attribut>> AttrKey.idcategory:Long =>=>=> RelationalSchema.Column>> attrkey.idcategory;
ClassDiagram.Attribut>> Favorite.iduser:Long =>=>=> RelationalSchema.Column>> favorite.iduser;
ClassDiagram.Attribut>> Favorite.idgoods:Long =>=>=> RelationalSchema.Column>> favorite.idgoods;
ClassDiagram.Attribut>> Topic.title:String =>=>=> RelationalSchema.Column>> topic.title;
ClassDiagram.Attribut>> Topic.idarticle:Long =>=>=> RelationalSchema.Column>> topic.idarticle;
ClassDiagram.Attribut>> Topic.idgoodslist:String =>=>=> RelationalSchema.Column>> topic.idgoodslist;
ClassDiagram.Attribut>> Topic.pv:Long =>=>=> RelationalSchema.Column>> topic.pv;
ClassDiagram.Attribut>> Topic.disabled:boolean =>=>=> RelationalSchema.Column>> topic.disabled;
ClassDiagram.Attribut>> Topic.goodslist:List<Goods> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ShopUser.id:Long =>=>=> RelationalSchema.Column>> shopuser.id PRIMARY KEY;
ClassDiagram.Attribut>> ShopUser.createtime:Date =>=>=> RelationalSchema.Column>> shopuser.createtime;
ClassDiagram.Attribut>> ShopUser.mobile:String =>=>=> RelationalSchema.Column>> shopuser.mobile;
ClassDiagram.Attribut>> ShopUser.salt:String =>=>=> RelationalSchema.Column>> shopuser.salt;
ClassDiagram.Attribut>> ShopUser.password:String =>=>=> RelationalSchema.Column>> shopuser.password;
ClassDiagram.Attribut>> ShopUser.nickname:String =>=>=> RelationalSchema.Column>> shopuser.nickname;
ClassDiagram.Attribut>> ShopUser.avatar:String =>=>=> RelationalSchema.Column>> shopuser.avatar;
ClassDiagram.Attribut>> ShopUser.gender:String =>=>=> RelationalSchema.Column>> shopuser.gender;
ClassDiagram.Attribut>> ShopUser.lastlogintime:Date =>=>=> RelationalSchema.Column>> shopuser.lastlogintime;
ClassDiagram.Attribut>> ShopUser.wechatopenid:String =>=>=> RelationalSchema.Column>> shopuser.wechatopenid;
ClassDiagram.Attribut>> ShopUser.wechatnickname:String =>=>=> RelationalSchema.Column>> shopuser.wechatnickname;
ClassDiagram.Attribut>> ShopUser.wechatheadimgurl:String =>=>=> RelationalSchema.Column>> shopuser.wechatheadimgurl;
ClassDiagram.Attribut>> Goods.name:String =>=>=> RelationalSchema.Column>> goods.name;
ClassDiagram.Attribut>> Goods.pic:String =>=>=> RelationalSchema.Column>> goods.pic;
ClassDiagram.Attribut>> Goods.gallery:String =>=>=> RelationalSchema.Column>> goods.gallery;
ClassDiagram.Attribut>> Goods.idcategory:Long =>=>=> RelationalSchema.Column>> goods.idcategory;
ClassDiagram.Attribut>> Goods.descript:String =>=>=> RelationalSchema.Column>> goods.descript;
ClassDiagram.Attribut>> Goods.detail:String =>=>=> RelationalSchema.Column>> goods.detail;
ClassDiagram.Attribut>> Goods./***如果商品是多规格，则存所有库存之和*/stock:Integer =>=>=> RelationalSchema.Column>> goods./***如果商品是多规格，则存所有库存之和*/stock;
ClassDiagram.Attribut>> Goods./***如果商品是多规格，则存最低价*/price:BigDecimal =>=>=> RelationalSchema.Column>> goods./***如果商品是多规格，则存最低价*/price;
ClassDiagram.Attribut>> Goods.isdelete:Boolean =>=>=> RelationalSchema.Column>> goods.isdelete;
ClassDiagram.Attribut>> Goods.isonsale:Boolean =>=>=> RelationalSchema.Column>> goods.isonsale;
ClassDiagram.Attribut>> Goods.isnew:Boolean =>=>=> RelationalSchema.Column>> goods.isnew;
ClassDiagram.Attribut>> Goods.ishot:Boolean =>=>=> RelationalSchema.Column>> goods.ishot;
ClassDiagram.Attribut>> Goods.likenum:Integer =>=>=> RelationalSchema.Column>> goods.likenum;
ClassDiagram.Attribut>> GoodsSku.code:String =>=>=> RelationalSchema.Column>> goodssku.code;
ClassDiagram.Attribut>> GoodsSku.codename:String =>=>=> RelationalSchema.Column>> goodssku.codename;
ClassDiagram.Attribut>> GoodsSku.idgoods:Long =>=>=> RelationalSchema.Column>> goodssku.idgoods;
ClassDiagram.Attribut>> GoodsSku.price:BigDecimal =>=>=> RelationalSchema.Column>> goodssku.price;
ClassDiagram.Attribut>> GoodsSku.marketingprice:BigDecimal =>=>=> RelationalSchema.Column>> goodssku.marketingprice;
ClassDiagram.Attribut>> GoodsSku.stock:Integer =>=>=> RelationalSchema.Column>> goodssku.stock;
ClassDiagram.Attribut>> GoodsSku.isdeleted:Boolean =>=>=> RelationalSchema.Column>> goodssku.isdeleted;
ClassDiagram.Attribut>> CategoryBannerRel.idcategory:Long =>=>=> RelationalSchema.Column>> categorybannerrel.idcategory;
ClassDiagram.Attribut>> CategoryBannerRel.idbanner:Long =>=>=> RelationalSchema.Column>> categorybannerrel.idbanner;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> Category.url:String =>=>=> RelationalSchema.Column>> category.url;
ClassDiagram.Attribut>> Category.icon:String =>=>=> RelationalSchema.Column>> category.icon;
ClassDiagram.Attribut>> Category.pid:Long =>=>=> RelationalSchema.Column>> category.pid;
ClassDiagram.Attribut>> Category.descript:String =>=>=> RelationalSchema.Column>> category.descript;
ClassDiagram.Attribut>> Category.isdelete:Boolean =>=>=> RelationalSchema.Column>> category.isdelete;
ClassDiagram.Attribut>> Category./***改字段只对一级菜单生效，也即：只有一级菜单可以显示在首页*/showindex:Boolean =>=>=> RelationalSchema.Column>> category./***改字段只对一级菜单生效，也即：只有一级菜单可以显示在首页*/showindex;
ClassDiagram.Attribut>> Category.sort:Integer =>=>=> RelationalSchema.Column>> category.sort;
ClassDiagram.Attribut>> Category.bannerlist:List<Banner> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Cart.iduser:Long =>=>=> RelationalSchema.Column>> cart.iduser;
ClassDiagram.Attribut>> Cart.idgoods:Long =>=>=> RelationalSchema.Column>> cart.idgoods;
ClassDiagram.Attribut>> Cart.idsku:Long =>=>=> RelationalSchema.Column>> cart.idsku;
ClassDiagram.Attribut>> Cart.count:Integer =>=>=> RelationalSchema.Column>> cart.count;
ClassDiagram.Attribut>> Cart.price:BigDecimal =>=>=> NOT MAPPED -Explanation: Transient Field ;
Many-To-One relationship from ClassDiagram.Class>>AttrVal  to ClassDiagram.Class>>attrkey represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>AttrKey  to ClassDiagram.Class>>List<AttrVal>;
Many-To-One relationship from ClassDiagram.Class>>Favorite  to ClassDiagram.Class>>shopuser represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>Favorite  to ClassDiagram.Class>>goods represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Topic  to ClassDiagram.Class>>article represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Goods  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CategoryBannerRel  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CategoryBannerRel  to ClassDiagram.Class>>banner represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Cart  to ClassDiagram.Class>>shopuser represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>Cart  to ClassDiagram.Class>>goods represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Cart  to ClassDiagram.Class>>goodssku represented by ClassDiagram.Atrribute>>sku;
