<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="common-xhtml" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="common-base" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate-single" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate-eclipse" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="11" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate_getting_started_guide" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationsillustrationtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerillustrationtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enversillustrationtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blueprint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapointserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getallcommand" >
      <xs:sequence>
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteallcommand" >
      <xs:sequence>
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addcommand" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapointservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasource-h2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateutil" >
      <xs:sequence>
        <xs:element name="emf" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testintegrator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtypecontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapointserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="hibernateutil" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teststrategyregistrationprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapointservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addcommand" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatecommand" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getallcommand" >
      <xs:sequence>
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteallcommand" >
      <xs:sequence>
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blueprint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="features" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testintegrator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapointserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="hibernateutil" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teststrategyregistrationprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtypecontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateutil" >
      <xs:sequence>
        <xs:element name="sf" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadcommand" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getrevisionscommand" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getcommand" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addcommand" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteallcommand" >
      <xs:sequence>
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatecommand" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getallcommand" >
      <xs:sequence>
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapointservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pool-one" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blueprint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="event.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativeapiillustrationtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namespacing" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jacc-event-reg-example" >
      <xs:sequence>
        <xs:element name="jacc_duplication_strategy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate_-_relational_persistence_for_idiomatic_java" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate_core_reference_guide" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="icon" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate_development_guide" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="register-event-listeners-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstrapserviceregistrybuilder-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchoverrides" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="project" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectsforanemployeehql" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectsforanemployeecriteria" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loginscalar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectsforanemployeefetchprofile" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="login" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multitenantconnectionproviderimpl-multi-cp" >
      <xs:complexContent>
       <xs:extension base="abstractmultitenantconnectionprovider">
         <xs:sequence>
          <xs:element name="acmeprovider" type="xs:anyType" />
          <xs:element name="jbossprovider" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tenant-identifier-from-sessionfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multitenantconnectionproviderimpl-single-cp" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="from_join_example_plural" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="select_attribute_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="select_multiple_values_array2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="select_wrapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="select_tuple" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="select_multiple_values_array" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameter_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriabuilder_query_creation_snippet" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="from_fetch_example_embedded_and_many2one" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="from_root_example_multiple" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="select_root_entity_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="from_join_example_embedded_and_many2one" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="from_root_methods" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="from_root_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="from_fetch_example_plural" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="database-identity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jvm-identity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="visualizingmerge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidloading" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedupdatewithsession" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadwithem" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getreferencewithsession" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="containswithem" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergewithem" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unwrapwithem" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="checkinglazinesswithjpa2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergewithsession" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reattachingwithsession1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="checkinglazinesswithhibernate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getreferencewithem" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplenaturalidloading" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletingwithsession" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="makingpersistentwithsession" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="refreshwithem" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="makingpersistentwithem" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="refreshwithsession" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="checkinglazinesswithjpa" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reattachingwithsession2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadwithsession" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="containswithsession" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletingwithem" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedupdatewithem" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryscopedexample" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpacallbacksexample" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionscopedexample" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jacc-event-reg-example" >
      <xs:sequence>
        <xs:element name="jacc_duplication_strategy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadlistenerexample" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
          <xs:element name="updates" type="xs:long" />
          <xs:element name="creates" type="xs:long" />
          <xs:element name="loads" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extension_point_blueprint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="agg_func_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statement_select_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="empty_collection_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="root_entity_ref_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplest_query" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="join_example_implicit" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="map_dynamic_instantiation_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searched_case_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locate_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple_case_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statement_update_example_hql" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="predicate_like_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplest_query2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="having_illustration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="predicate_in_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="join_example_fetch" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group_by_illustration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statement_update_example_hql_versioned" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="join_example_with" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arithmetic_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ctor_dynamic_instantiation_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statement_insert_example_named_id" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statement_insert_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statement_update_example_jpql" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="predicate_nullness_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="predicate_comparison_example_using_all" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="named_parameter_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="numeric_literals_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="list_dynamic_instantiation_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpql_positional_parameter_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="join_example_explicit_inner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order_by_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statement_delete_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity_type_exp_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="substring_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qualified_path_expressions_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statement_update_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullif_example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="default-attribute" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version_property" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batch_insert" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="letting_hibernate_find_mapping_files" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version_annotation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="specify_mapping_files_directly" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="specifying_configuration_properties_programmatically" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hql-insert" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flush_and_clear_session" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="evicting_item" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="using_scroll" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestamp_version" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cache_providers_mapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updating_version" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestamp_version" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transaction-bound-session" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embedding_schemaexport" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="comments" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreign-key" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="length-precision-scale" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notnull-unique" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="executeupdate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="opening_a_session" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="check" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="evicting_from_second_level_cache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child-column-elements" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="using_a_statelesssession" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cache_providers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="browsing_cache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setcacheregion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cmt-idiom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bmt-idiom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hql_delete" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sql-type" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 