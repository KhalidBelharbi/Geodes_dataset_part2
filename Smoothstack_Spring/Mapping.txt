ClassDiagram.Class>> Flight =>=>=> RelationalSchema.Table>> flight;
ClassDiagram.Class>> Booking =>=>=> RelationalSchema.Table>> booking;
ClassDiagram.Class>> Traveler =>=>=> RelationalSchema.Table>> traveler;
ClassDiagram.Class>> BookingsHasTravelers =>=>=> RelationalSchema.Table>> bookingshastravelers;
ClassDiagram.Attribut>> Flight.flightid:Integer =>=>=> RelationalSchema.Column>> flight.flightid PRIMARY KEY;
ClassDiagram.Attribut>> Flight.departtime:Timestamp =>=>=> RelationalSchema.Column>> flight.departtime PRIMARY KEY;
ClassDiagram.Attribut>> Flight.departcityid:Integer =>=>=> RelationalSchema.Column>> flight.departcityid PRIMARY KEY;
ClassDiagram.Attribut>> Flight.arrivecityid:Integer =>=>=> RelationalSchema.Column>> flight.arrivecityid PRIMARY KEY;
ClassDiagram.Attribut>> Flight.seatsavailable:Integer =>=>=> RelationalSchema.Column>> flight.seatsavailable;
ClassDiagram.Attribut>> Flight.price:Float =>=>=> RelationalSchema.Column>> flight.price;
ClassDiagram.Attribut>> Booking.bookingid:Integer =>=>=> RelationalSchema.Column>> booking.bookingid PRIMARY KEY;
ClassDiagram.Attribut>> Booking.flightid:Integer =>=>=> RelationalSchema.Column>> booking.flightid PRIMARY KEY;
ClassDiagram.Attribut>> Booking.isactive:Boolean =>=>=> RelationalSchema.Column>> booking.isactive;
ClassDiagram.Attribut>> Booking.stripeid:String =>=>=> RelationalSchema.Column>> booking.stripeid;
ClassDiagram.Attribut>> Booking.bookerid:Integer =>=>=> RelationalSchema.Column>> booking.bookerid;
ClassDiagram.Attribut>> Traveler.travelerid:Integer =>=>=> RelationalSchema.Column>> traveler.travelerid PRIMARY KEY;
ClassDiagram.Attribut>> Traveler.name:String =>=>=> RelationalSchema.Column>> traveler.name;
ClassDiagram.Attribut>> Traveler.address:String =>=>=> RelationalSchema.Column>> traveler.address;
ClassDiagram.Attribut>> Traveler.phone:String =>=>=> RelationalSchema.Column>> traveler.phone;
ClassDiagram.Attribut>> Traveler.email:String =>=>=> RelationalSchema.Column>> traveler.email;
ClassDiagram.Attribut>> Traveler.dob:Timestamp =>=>=> RelationalSchema.Column>> traveler.dob;
ClassDiagram.Attribut>> BookingsHasTravelers.bookingsbookingid:Integer =>=>=> RelationalSchema.Column>> bookingshastravelers.bookingsbookingid PRIMARY KEY;
ClassDiagram.Attribut>> BookingsHasTravelers.bookingsflightid:Integer =>=>=> RelationalSchema.Column>> bookingshastravelers.bookingsflightid PRIMARY KEY;
ClassDiagram.Attribut>> BookingsHasTravelers.travelertravelerid:Integer =>=>=> RelationalSchema.Column>> bookingshastravelers.travelertravelerid PRIMARY KEY;
One-To-Many relationship from ClassDiagram.Class>>Flight  to ClassDiagram.Class>>Set<Booking>;
Many-To-One relationship from ClassDiagram.Class>>Booking  to ClassDiagram.Class>>Flight represented by ClassDiagram.Atrribute>>bookingid;
Many-To-Many relationship between ClassDiagram.Class>>Booking  and ClassDiagram.Class>>set<traveler>: tbl_bookings_has_travelers(bookings_bookingid:Booking [PK] #FK to Booking,traveler_travelerid:set<traveler> [PK] #FK to set<traveler>);
