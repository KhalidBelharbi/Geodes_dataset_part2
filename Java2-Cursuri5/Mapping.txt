ClassDiagram.Class>> Masina =>=>=> RelationalSchema.Table>> masina;
ClassDiagram.Class>> Avocat =>=>=> RelationalSchema.Table>> avocat;
ClassDiagram.Class>> Anagajat =>=>=> RelationalSchema.Table>> anagajat;
ClassDiagram.Class>> Programator =>=>=> RelationalSchema.Table>> programator;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Produs =>=>=> RelationalSchema.Table>> produs;
ClassDiagram.Class>> Bere =>=>=> RelationalSchema.Table>> bere;
ClassDiagram.Class>> Ciocolata =>=>=> RelationalSchema.Table>> ciocolata;
ClassDiagram.Class>> Publicatie =>=>=> RelationalSchema.Table>> publicatie;
ClassDiagram.Class>> Carte =>=>=> RelationalSchema.Table>> carte;
ClassDiagram.Class>> Articol =>=>=> RelationalSchema.Table>> articol;
ClassDiagram.Class>> Cisco =>=>=> RelationalSchema.Table>> cisco;
ClassDiagram.Class>> Java =>=>=> RelationalSchema.Table>> java;
ClassDiagram.Class>> LinieFactura =>=>=> RelationalSchema.Table>> liniefactura;
ClassDiagram.Class>> Factura =>=>=> RelationalSchema.Table>> factura;
ClassDiagram.Attribut>> Masina.GeneratedName:License =>=>=> RelationalSchema.Column>> masina.GeneratedName;
ClassDiagram.Attribut>> Masina.marca:String =>=>=> RelationalSchema.Column>> masina.marca;
ClassDiagram.Attribut>> Avocat.specializare:String =>=>=> RelationalSchema.Column>> avocat.specializare;
ClassDiagram.Attribut>> Anagajat.id:int =>=>=> RelationalSchema.Column>> anagajat.id PRIMARY KEY;
ClassDiagram.Attribut>> Anagajat.nume:String =>=>=> RelationalSchema.Column>> anagajat.nume;
ClassDiagram.Attribut>> Programator.limbaj:String =>=>=> RelationalSchema.Column>> programator.limbaj;
ClassDiagram.Attribut>> Student.nume:String =>=>=> RelationalSchema.Column>> student.nume PRIMARY KEY;
ClassDiagram.Attribut>> Student.prenume:String =>=>=> RelationalSchema.Column>> student.prenume PRIMARY KEY;
ClassDiagram.Attribut>> Student.varsta:int =>=>=> RelationalSchema.Column>> student.varsta;
ClassDiagram.Attribut>> Produs.id:int =>=>=> RelationalSchema.Column>> produs.id PRIMARY KEY;
ClassDiagram.Attribut>> Produs.nume:String =>=>=> RelationalSchema.Column>> produs.nume;
ClassDiagram.Attribut>> Produs.pret:double =>=>=> RelationalSchema.Column>> produs.pret;
ClassDiagram.Attribut>> Bere.procentalcool:double =>=>=> RelationalSchema.Column>> bere.procentalcool;
ClassDiagram.Attribut>> Ciocolata.kcal:int =>=>=> RelationalSchema.Column>> ciocolata.kcal;
ClassDiagram.Attribut>> Publicatie.id:int =>=>=> RelationalSchema.Column>> publicatie.id PRIMARY KEY;
ClassDiagram.Attribut>> Publicatie.titlu:String =>=>=> RelationalSchema.Column>> publicatie.titlu;
ClassDiagram.Attribut>> Carte.isbn:String =>=>=> RelationalSchema.Column>> carte.isbn;
ClassDiagram.Attribut>> Articol.revista:String =>=>=> RelationalSchema.Column>> articol.revista;
ClassDiagram.Attribut>> Cisco.nrechipamente:int =>=>=> RelationalSchema.Column>> cisco.nrechipamente;
ClassDiagram.Attribut>> Java.durata:int =>=>=> RelationalSchema.Column>> java.durata;
ClassDiagram.Attribut>> LinieFactura.id:int =>=>=> RelationalSchema.Column>> liniefactura.id PRIMARY KEY;
ClassDiagram.Attribut>> LinieFactura.produs:String =>=>=> RelationalSchema.Column>> liniefactura.produs;
ClassDiagram.Attribut>> LinieFactura.cantaitate:int =>=>=> RelationalSchema.Column>> liniefactura.cantaitate;
ClassDiagram.Attribut>> LinieFactura.pret:double =>=>=> RelationalSchema.Column>> liniefactura.pret;
ClassDiagram.Attribut>> Factura.id:int =>=>=> RelationalSchema.Column>> factura.id PRIMARY KEY;
ClassDiagram.Attribut>> Factura.serie:String =>=>=> RelationalSchema.Column>> factura.serie;
ClassDiagram.Attribut>> Factura.numar:int =>=>=> RelationalSchema.Column>> factura.numar;
Many-To-One relationship from ClassDiagram.Class>>LinieFactura  to ClassDiagram.Class>>factura represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Factura  to ClassDiagram.Class>>Collection<LinieFactura>;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Anagajat  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Produs  ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Publicatie  SubClass>>Bere SubClass>>Ciocolata ;
