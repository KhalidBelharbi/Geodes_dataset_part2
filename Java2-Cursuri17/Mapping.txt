ClassDiagram.Class>> Angajat =>=>=> RelationalSchema.Table>> angajat;
ClassDiagram.Class>> Persoana =>=>=> RelationalSchema.Table>> persoana;
ClassDiagram.Class>> Departament =>=>=> RelationalSchema.Table>> departament;
ClassDiagram.Class>> Profesor =>=>=> RelationalSchema.Table>> profesor;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Magazin =>=>=> RelationalSchema.Table>> magazin;
ClassDiagram.Class>> Buletin =>=>=> RelationalSchema.Table>> buletin;
ClassDiagram.Attribut>> Angajat.id:int =>=>=> RelationalSchema.Column>> angajat.id PRIMARY KEY;
ClassDiagram.Attribut>> Angajat.nume:String =>=>=> RelationalSchema.Column>> angajat.nume;
ClassDiagram.Attribut>> Persoana.id:int =>=>=> RelationalSchema.Column>> persoana.id PRIMARY KEY;
ClassDiagram.Attribut>> Persoana.nume:String =>=>=> RelationalSchema.Column>> persoana.nume;
ClassDiagram.Attribut>> Departament.id:int =>=>=> RelationalSchema.Column>> departament.id PRIMARY KEY;
ClassDiagram.Attribut>> Departament.nume:String =>=>=> RelationalSchema.Column>> departament.nume;
ClassDiagram.Attribut>> Profesor.id:int =>=>=> RelationalSchema.Column>> profesor.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.id:int =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Magazin.id:int =>=>=> RelationalSchema.Column>> magazin.id PRIMARY KEY;
ClassDiagram.Attribut>> Magazin.telefoane:Collection<String> =>=>=> RelationalSchema.Column>> magazin.telefoane;
ClassDiagram.Attribut>> Buletin.id:int =>=>=> RelationalSchema.Column>> buletin.id PRIMARY KEY;
ClassDiagram.Attribut>> Buletin.cod:String =>=>=> RelationalSchema.Column>> buletin.cod;
Many-To-One relationship from ClassDiagram.Class>>Angajat  to ClassDiagram.Class>>Departament represented by ClassDiagram.Atrribute>>//angajatmanytoone;
One-To-One relationship between ClassDiagram.Class>>Persoana  to ClassDiagram.Class>>Buletin represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Departament  to ClassDiagram.Class>>Collection<Angajat>;
Many-To-Many relationship between ClassDiagram.Class>>Student  and ClassDiagram.Class>>Profesor: student_profesor(id_student:Student [PK] #FK to Student,id_profesor:Profesor [PK] #FK to Profesor);
One-To-One relationship between ClassDiagram.Class>>Buletin  to ClassDiagram.Class>>Persoana represented by ClassDiagram.Atrribute>>//spunemcanubuletinesteowner-ulrelatieici//valoarealuimappedbyestenumeleatributuluidinclasacaremapeazarelatia;
