ClassDiagram.Class>> NewsEntity =>=>=> RelationalSchema.Table>> newsentity;
ClassDiagram.Class>> EventReportEntity =>=>=> RelationalSchema.Table>> eventreportentity;
ClassDiagram.Class>> UserDataStatisticEntity =>=>=> RelationalSchema.Table>> userdatastatisticentity;
ClassDiagram.Class>> ClubEventTicketPrice =>=>=> RelationalSchema.Table>> clubeventticketprice;
ClassDiagram.Class>> BePaidRequest =>=>=> RelationalSchema.Table>> bepaidrequest;
ClassDiagram.Class>> SettingsEntity =>=>=> RelationalSchema.Table>> settingsentity;
ClassDiagram.Class>> MenuCategory =>=>=> RelationalSchema.Table>> menucategory;
ClassDiagram.Class>> MenuItemPrice =>=>=> RelationalSchema.Table>> menuitemprice;
ClassDiagram.Class>> MenuItem =>=>=> RelationalSchema.Table>> menuitem;
ClassDiagram.Class>> MenuItemPricesHasOrders =>=>=> RelationalSchema.Table>> menuitempriceshasorders;
ClassDiagram.Class>> MenuOrder =>=>=> RelationalSchema.Table>> menuorder;
ClassDiagram.Class>> EventEntity =>=>=> RelationalSchema.Table>> evententity;
ClassDiagram.Class>> UserEntity =>=>=> RelationalSchema.Table>> userentity;
ClassDiagram.Class>> FeedBackEntity =>=>=> RelationalSchema.Table>> feedbackentity;
ClassDiagram.Class>> EventReportImageEntity =>=>=> RelationalSchema.Table>> eventreportimageentity;
ClassDiagram.Class>> FileEntity =>=>=> RelationalSchema.Table>> fileentity;
ClassDiagram.Class>> OrderItemEntity =>=>=> RelationalSchema.Table>> orderitementity;
ClassDiagram.Class>> OrderEntity =>=>=> RelationalSchema.Table>> orderentity;
ClassDiagram.Class>> AuthorityEntity =>=>=> RelationalSchema.Table>> authorityentity;
ClassDiagram.Attribut>> NewsEntity.title:String =>=>=> RelationalSchema.Column>> newsentity.title;
ClassDiagram.Attribut>> NewsEntity.descriptionpreview:String =>=>=> RelationalSchema.Column>> newsentity.descriptionpreview;
ClassDiagram.Attribut>> NewsEntity.description:String =>=>=> RelationalSchema.Column>> newsentity.description;
ClassDiagram.Attribut>> NewsEntity.alias:String =>=>=> RelationalSchema.Column>> newsentity.alias;
ClassDiagram.Attribut>> NewsEntity.image:String =>=>=> RelationalSchema.Column>> newsentity.image;
ClassDiagram.Attribut>> EventReportEntity.startevent:LocalDateTime =>=>=> RelationalSchema.Column>> eventreportentity.startevent;
ClassDiagram.Attribut>> EventReportEntity.name:String =>=>=> RelationalSchema.Column>> eventreportentity.name;
ClassDiagram.Attribut>> EventReportEntity.coveruri:String =>=>=> RelationalSchema.Column>> eventreportentity.coveruri;
ClassDiagram.Attribut>> UserDataStatisticEntity.appcodename:String =>=>=> RelationalSchema.Column>> userdatastatisticentity.appcodename;
ClassDiagram.Attribut>> UserDataStatisticEntity.appname:String =>=>=> RelationalSchema.Column>> userdatastatisticentity.appname;
ClassDiagram.Attribut>> UserDataStatisticEntity.appversion:String =>=>=> RelationalSchema.Column>> userdatastatisticentity.appversion;
ClassDiagram.Attribut>> UserDataStatisticEntity.cookieenabled:boolean =>=>=> RelationalSchema.Column>> userdatastatisticentity.cookieenabled;
ClassDiagram.Attribut>> UserDataStatisticEntity.language:String =>=>=> RelationalSchema.Column>> userdatastatisticentity.language;
ClassDiagram.Attribut>> UserDataStatisticEntity.online:boolean =>=>=> RelationalSchema.Column>> userdatastatisticentity.online;
ClassDiagram.Attribut>> UserDataStatisticEntity.platform:String =>=>=> RelationalSchema.Column>> userdatastatisticentity.platform;
ClassDiagram.Attribut>> UserDataStatisticEntity.seconds:int =>=>=> RelationalSchema.Column>> userdatastatisticentity.seconds;
ClassDiagram.Attribut>> UserDataStatisticEntity.useragent:String =>=>=> RelationalSchema.Column>> userdatastatisticentity.useragent;
ClassDiagram.Attribut>> UserDataStatisticEntity.localaddr:String =>=>=> RelationalSchema.Column>> userdatastatisticentity.localaddr;
ClassDiagram.Attribut>> UserDataStatisticEntity.remoteaddr:String =>=>=> RelationalSchema.Column>> userdatastatisticentity.remoteaddr;
ClassDiagram.Attribut>> UserDataStatisticEntity.protocol:String =>=>=> RelationalSchema.Column>> userdatastatisticentity.protocol;
ClassDiagram.Attribut>> ClubEventTicketPrice.cost:BigDecimal =>=>=> RelationalSchema.Column>> clubeventticketprice.cost;
ClassDiagram.Attribut>> ClubEventTicketPrice.quantity:Long =>=>=> RelationalSchema.Column>> clubeventticketprice.quantity;
ClassDiagram.Attribut>> ClubEventTicketPrice.type:EventTicketPriceType =>=>=> RelationalSchema.Column>> clubeventticketprice.type;
ClassDiagram.Attribut>> ClubEventTicketPrice.startactivetime:LocalDateTime =>=>=> RelationalSchema.Column>> clubeventticketprice.startactivetime;
ClassDiagram.Attribut>> ClubEventTicketPrice.endactivetime:LocalDateTime =>=>=> RelationalSchema.Column>> clubeventticketprice.endactivetime;
ClassDiagram.Attribut>> BePaidRequest.requestid:String =>=>=> RelationalSchema.Column>> bepaidrequest.requestid;
ClassDiagram.Attribut>> BePaidRequest.method:String =>=>=> RelationalSchema.Column>> bepaidrequest.method;
ClassDiagram.Attribut>> BePaidRequest.url:String =>=>=> RelationalSchema.Column>> bepaidrequest.url;
ClassDiagram.Attribut>> BePaidRequest.requestbody:String =>=>=> RelationalSchema.Column>> bepaidrequest.requestbody;
ClassDiagram.Attribut>> BePaidRequest.code:int =>=>=> RelationalSchema.Column>> bepaidrequest.code;
ClassDiagram.Attribut>> BePaidRequest.responsebody:String =>=>=> RelationalSchema.Column>> bepaidrequest.responsebody;
ClassDiagram.Attribut>> SettingsEntity.key:String =>=>=> RelationalSchema.Column>> settingsentity.key;
ClassDiagram.Attribut>> SettingsEntity.value:String =>=>=> RelationalSchema.Column>> settingsentity.value;
ClassDiagram.Attribut>> MenuCategory.name:String =>=>=> RelationalSchema.Column>> menucategory.name;
ClassDiagram.Attribut>> MenuCategory.description:String =>=>=> RelationalSchema.Column>> menucategory.description;
ClassDiagram.Attribut>> MenuCategory.categorytype:Integer =>=>=> RelationalSchema.Column>> menucategory.categorytype;
ClassDiagram.Attribut>> MenuItemPrice.starttime:LocalDateTime =>=>=> RelationalSchema.Column>> menuitemprice.starttime;
ClassDiagram.Attribut>> MenuItemPrice.endtime:LocalDateTime =>=>=> RelationalSchema.Column>> menuitemprice.endtime;
ClassDiagram.Attribut>> MenuItemPrice.value:BigDecimal =>=>=> RelationalSchema.Column>> menuitemprice.value;
ClassDiagram.Attribut>> MenuItem.name:String =>=>=> RelationalSchema.Column>> menuitem.name;
ClassDiagram.Attribut>> MenuItem.description:String =>=>=> RelationalSchema.Column>> menuitem.description;
ClassDiagram.Attribut>> MenuItem.descriptionproportions:String =>=>=> RelationalSchema.Column>> menuitem.descriptionproportions;
ClassDiagram.Attribut>> MenuItemPricesHasOrders.count:int =>=>=> RelationalSchema.Column>> menuitempriceshasorders.count;
ClassDiagram.Attribut>> MenuOrder.name:String =>=>=> RelationalSchema.Column>> menuorder.name;
ClassDiagram.Attribut>> MenuOrder.surname:String =>=>=> RelationalSchema.Column>> menuorder.surname;
ClassDiagram.Attribut>> MenuOrder.email:String =>=>=> RelationalSchema.Column>> menuorder.email;
ClassDiagram.Attribut>> MenuOrder.phone:String =>=>=> RelationalSchema.Column>> menuorder.phone;
ClassDiagram.Attribut>> MenuOrder.arrivaltime:String =>=>=> RelationalSchema.Column>> menuorder.arrivaltime;
ClassDiagram.Attribut>> MenuOrder.people:Integer =>=>=> RelationalSchema.Column>> menuorder.people;
ClassDiagram.Attribut>> MenuOrder.description:String =>=>=> RelationalSchema.Column>> menuorder.description;
ClassDiagram.Attribut>> MenuOrder.tablenumber:Integer =>=>=> RelationalSchema.Column>> menuorder.tablenumber;
ClassDiagram.Attribut>> MenuOrder.uuid:String =>=>=> RelationalSchema.Column>> menuorder.uuid;
ClassDiagram.Attribut>> MenuOrder.token:String =>=>=> RelationalSchema.Column>> menuorder.token;
ClassDiagram.Attribut>> MenuOrder.paystatus:GatewayStatus =>=>=> RelationalSchema.Column>> menuorder.paystatus;
ClassDiagram.Attribut>> MenuOrder.uid:String =>=>=> RelationalSchema.Column>> menuorder.uid;
ClassDiagram.Attribut>> EventEntity.starteventfieldname:String =>=>=> RelationalSchema.Column>> evententity.starteventfieldname;
ClassDiagram.Attribut>> EventEntity.costtext:String =>=>=> RelationalSchema.Column>> evententity.costtext;
ClassDiagram.Attribut>> EventEntity.description:String =>=>=> RelationalSchema.Column>> evententity.description;
ClassDiagram.Attribut>> EventEntity.startevent:LocalDateTime =>=>=> RelationalSchema.Column>> evententity.startevent;
ClassDiagram.Attribut>> EventEntity.endevent:LocalDateTime =>=>=> RelationalSchema.Column>> evententity.endevent;
ClassDiagram.Attribut>> EventEntity.name:String =>=>=> RelationalSchema.Column>> evententity.name;
ClassDiagram.Attribut>> EventEntity.coveruri:String =>=>=> RelationalSchema.Column>> evententity.coveruri;
ClassDiagram.Attribut>> EventEntity.recommendation:Boolean =>=>=> RelationalSchema.Column>> evententity.recommendation;
ClassDiagram.Attribut>> EventEntity.republicpay:Boolean =>=>=> RelationalSchema.Column>> evententity.republicpay;
ClassDiagram.Attribut>> EventEntity.costdance:BigDecimal =>=>=> RelationalSchema.Column>> evententity.costdance;
ClassDiagram.Attribut>> EventEntity.costtableplace:BigDecimal =>=>=> RelationalSchema.Column>> evententity.costtableplace;
ClassDiagram.Attribut>> EventEntity.alias:String =>=>=> RelationalSchema.Column>> evententity.alias;
ClassDiagram.Attribut>> EventEntity.cost:BigDecimal =>=>=> RelationalSchema.Column>> evententity.cost;
ClassDiagram.Attribut>> EventEntity.buyticketurl:String =>=>=> RelationalSchema.Column>> evententity.buyticketurl;
ClassDiagram.Attribut>> UserEntity.username:String =>=>=> RelationalSchema.Column>> userentity.username;
ClassDiagram.Attribut>> UserEntity.password:String =>=>=> RelationalSchema.Column>> userentity.password;
ClassDiagram.Attribut>> UserEntity.enabled:Boolean =>=>=> RelationalSchema.Column>> userentity.enabled;
ClassDiagram.Attribut>> UserEntity.name:String =>=>=> RelationalSchema.Column>> userentity.name;
ClassDiagram.Attribut>> UserEntity.surname:String =>=>=> RelationalSchema.Column>> userentity.surname;
ClassDiagram.Attribut>> UserEntity.email:String =>=>=> RelationalSchema.Column>> userentity.email;
ClassDiagram.Attribut>> UserEntity.phone:String =>=>=> RelationalSchema.Column>> userentity.phone;
ClassDiagram.Attribut>> UserEntity.fathername:String =>=>=> RelationalSchema.Column>> userentity.fathername;
ClassDiagram.Attribut>> UserEntity.birthday:OffsetDateTime =>=>=> RelationalSchema.Column>> userentity.birthday;
ClassDiagram.Attribut>> UserEntity.accountnonexpired:Boolean =>=>=> RelationalSchema.Column>> userentity.accountnonexpired;
ClassDiagram.Attribut>> UserEntity.accountnonlocked:Boolean =>=>=> RelationalSchema.Column>> userentity.accountnonlocked;
ClassDiagram.Attribut>> UserEntity.credentialsnonexpired:Boolean =>=>=> RelationalSchema.Column>> userentity.credentialsnonexpired;
ClassDiagram.Attribut>> FeedBackEntity.name:String =>=>=> RelationalSchema.Column>> feedbackentity.name;
ClassDiagram.Attribut>> FeedBackEntity.email:String =>=>=> RelationalSchema.Column>> feedbackentity.email;
ClassDiagram.Attribut>> FeedBackEntity.phone:String =>=>=> RelationalSchema.Column>> feedbackentity.phone;
ClassDiagram.Attribut>> FeedBackEntity.description:String =>=>=> RelationalSchema.Column>> feedbackentity.description;
ClassDiagram.Attribut>> EventReportImageEntity.imageurl:String =>=>=> RelationalSchema.Column>> eventreportimageentity.imageurl;
ClassDiagram.Attribut>> EventReportImageEntity.size:String =>=>=> RelationalSchema.Column>> eventreportimageentity.size;
ClassDiagram.Attribut>> EventReportImageEntity.width:Long =>=>=> RelationalSchema.Column>> eventreportimageentity.width;
ClassDiagram.Attribut>> EventReportImageEntity.height:Long =>=>=> RelationalSchema.Column>> eventreportimageentity.height;
ClassDiagram.Attribut>> FileEntity.filepath:String =>=>=> RelationalSchema.Column>> fileentity.filepath;
ClassDiagram.Attribut>> OrderItemEntity.tablenumber:int =>=>=> RelationalSchema.Column>> orderitementity.tablenumber;
ClassDiagram.Attribut>> OrderItemEntity.place:int =>=>=> RelationalSchema.Column>> orderitementity.place;
ClassDiagram.Attribut>> OrderEntity.name:String =>=>=> RelationalSchema.Column>> orderentity.name;
ClassDiagram.Attribut>> OrderEntity.surname:String =>=>=> RelationalSchema.Column>> orderentity.surname;
ClassDiagram.Attribut>> OrderEntity.email:String =>=>=> RelationalSchema.Column>> orderentity.email;
ClassDiagram.Attribut>> OrderEntity.phone:String =>=>=> RelationalSchema.Column>> orderentity.phone;
ClassDiagram.Attribut>> OrderEntity.description:String =>=>=> RelationalSchema.Column>> orderentity.description;
ClassDiagram.Attribut>> OrderEntity.uuid:String =>=>=> RelationalSchema.Column>> orderentity.uuid;
ClassDiagram.Attribut>> OrderEntity.token:String =>=>=> RelationalSchema.Column>> orderentity.token;
ClassDiagram.Attribut>> OrderEntity.paystatus:GatewayStatus =>=>=> RelationalSchema.Column>> orderentity.paystatus;
ClassDiagram.Attribut>> OrderEntity.uid:String =>=>=> RelationalSchema.Column>> orderentity.uid;
ClassDiagram.Attribut>> OrderEntity.totalorder:BigDecimal =>=>=> RelationalSchema.Column>> orderentity.totalorder;
ClassDiagram.Attribut>> OrderEntity.//paidvaluesdance:Long =>=>=> RelationalSchema.Column>> orderentity.//paidvaluesdance;
ClassDiagram.Attribut>> OrderEntity.entertime:LocalDateTime =>=>=> RelationalSchema.Column>> orderentity.entertime;
ClassDiagram.Attribut>> OrderEntity.GeneratedName:TicketType =>=>=> RelationalSchema.Column>> orderentity.GeneratedName;
ClassDiagram.Attribut>> AuthorityEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> authorityentity.serialversionuid;
ClassDiagram.Attribut>> AuthorityEntity.authority:String =>=>=> RelationalSchema.Column>> authorityentity.authority;
ClassDiagram.Attribut>> AuthorityEntity.username:String =>=>=> RelationalSchema.Column>> authorityentity.username;
Many-To-One relationship from ClassDiagram.Class>>NewsEntity  to ClassDiagram.Class>>userentity represented by ClassDiagram.Atrribute>>owner;
One-To-Many relationship from ClassDiagram.Class>>EventReportEntity  to ClassDiagram.Class>>List<EventReportImageEntity>;
Many-To-One relationship from ClassDiagram.Class>>ClubEventTicketPrice  to ClassDiagram.Class>>evententity represented by ClassDiagram.Atrribute>>event;
Many-To-One relationship from ClassDiagram.Class>>ClubEventTicketPrice  to ClassDiagram.Class>>userentity represented by ClassDiagram.Atrribute>>modifiedby;
Many-To-One relationship from ClassDiagram.Class>>MenuCategory  to ClassDiagram.Class>>menucategory represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>MenuCategory  to ClassDiagram.Class>>List<MenuCategory>;
One-To-Many relationship from ClassDiagram.Class>>MenuCategory  to ClassDiagram.Class>>List<MenuItem>;
Many-To-One relationship from ClassDiagram.Class>>MenuItemPrice  to ClassDiagram.Class>>menuitem represented by ClassDiagram.Atrribute>>item;
Many-To-One relationship from ClassDiagram.Class>>MenuItem  to ClassDiagram.Class>>menucategory represented by ClassDiagram.Atrribute>>category;
One-To-Many relationship from ClassDiagram.Class>>MenuItem  to ClassDiagram.Class>>List<MenuItemPrice>;
Many-To-One relationship from ClassDiagram.Class>>MenuItemPricesHasOrders  to ClassDiagram.Class>>menuorder represented by ClassDiagram.Atrribute>>order;
Many-To-One relationship from ClassDiagram.Class>>MenuItemPricesHasOrders  to ClassDiagram.Class>>menuitemprice represented by ClassDiagram.Atrribute>>itemprice;
One-To-Many relationship from ClassDiagram.Class>>MenuOrder  to ClassDiagram.Class>>List<MenuItemPricesHasOrders>;
Many-To-One relationship from ClassDiagram.Class>>MenuOrder  to ClassDiagram.Class>>evententity represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>EventEntity  to ClassDiagram.Class>>List<ClubEventTicketPrice>;
Many-To-Many relationship between ClassDiagram.Class>>EventEntity  and ClassDiagram.Class>>list<userentity>: event_concert_access(event_id:EventEntity [PK] #FK to EventEntity,user_id:list<userentity> [PK] #FK to list<userentity>);
One-To-Many relationship from ClassDiagram.Class>>UserEntity  to ClassDiagram.Class>>List<AuthorityEntity>;
Many-To-One relationship from ClassDiagram.Class>>EventReportImageEntity  to ClassDiagram.Class>>eventreportentity represented by ClassDiagram.Atrribute>>eventreport;
Many-To-One relationship from ClassDiagram.Class>>FileEntity  to ClassDiagram.Class>>userentity represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>OrderItemEntity  to ClassDiagram.Class>>orderentity represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderEntity  to ClassDiagram.Class>>evententity represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>OrderEntity  to ClassDiagram.Class>>List<OrderItemEntity>;
One-To-Many relationship from ClassDiagram.Class>>OrderEntity  to ClassDiagram.Class>>List<MenuItemPricesHasOrders>;
Many-To-One relationship from ClassDiagram.Class>>OrderEntity  to ClassDiagram.Class>>userentity represented by ClassDiagram.Atrribute>>acceptor;
Many-To-One relationship from ClassDiagram.Class>>OrderEntity  to ClassDiagram.Class>>userentity represented by ClassDiagram.Atrribute>>bookuser;
Many-To-One relationship from ClassDiagram.Class>>AuthorityEntity  to ClassDiagram.Class>>userentity represented by ClassDiagram.Atrribute>>user;
