ClassDiagram.Class>> EmployeeProject =>=>=> RelationalSchema.Table>> employeeproject;
ClassDiagram.Class>> Skill =>=>=> RelationalSchema.Table>> skill;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Attribut>> EmployeeProject.id:int =>=>=> RelationalSchema.Column>> employeeproject.id PRIMARY KEY;
ClassDiagram.Attribut>> EmployeeProject.workedfrom:Date =>=>=> RelationalSchema.Column>> employeeproject.workedfrom;
ClassDiagram.Attribut>> Skill.skillid:int =>=>=> RelationalSchema.Column>> skill.skillid PRIMARY KEY;
ClassDiagram.Attribut>> Skill.skillname:String =>=>=> RelationalSchema.Column>> skill.skillname;
ClassDiagram.Attribut>> Project.projectid:int =>=>=> RelationalSchema.Column>> project.projectid PRIMARY KEY;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name;
ClassDiagram.Attribut>> Project.start:Date =>=>=> RelationalSchema.Column>> project.start;
ClassDiagram.Attribut>> Employee.employeeid:int =>=>=> RelationalSchema.Column>> employee.employeeid PRIMARY KEY;
ClassDiagram.Attribut>> Employee.employeename:String =>=>=> RelationalSchema.Column>> employee.employeename;
ClassDiagram.Attribut>> Address.addressid:int =>=>=> RelationalSchema.Column>> address.addressid PRIMARY KEY;
ClassDiagram.Attribut>> Address.street:String =>=>=> RelationalSchema.Column>> address.street;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
Many-To-One relationship from ClassDiagram.Class>>EmployeeProject  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>EmployeeProject  to ClassDiagram.Class>>project represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>employee;
One-To-Many relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Set<EmployeeProject>;
Many-To-Many relationship between ClassDiagram.Class>>Employee  and ClassDiagram.Class>>set<skill>: employeeskills(empid:Employee [PK] #FK to Employee,skillid:set<skill> [PK] #FK to set<skill>);
