
id_likes(serialversionuid:long, member_idx:int [PK], diary_idx:int [PK]);

infant_diary(idx:int [PK], GeneratedName:Infant #FK to(infant), GeneratedName:Member #FK to(member), subject:String, contents:String, event_date:String, date_created:String, date_updated:String, hashtag:String, share:char, hits:int, likes:int);

id_comment(idx:int [PK], diary_idx:int, GeneratedName:Member #FK to(member), contents:String, date_created:String, date_updated:String, likes:int);

shipping_address(idx:int [PK], member_idx:int, recipient_name:String, recipient_phone:String, recipient_phone2:String, address_name:String, address1:String, address2:String, zipcode:String, default_check:char, member_info:char);

member_infant(GeneratedName:Member [PK] #FK to(member), /*	@column(name:Infant [PK] #FK to(infant));

corp_approval(member_idx:int [PK], license_url:String);

id_file(idx:int [PK], diary_idx:int, original_filename:String, server_filename:String, file_url:String, represent:char);

corporation(member_idx:int [PK], corp_num:String, corp_name:String, //1.서비스업,2.제조업,3.도소매,4.기타field_code:char, //1.지식서비스,2.전자상거래,3.지식서비스+전자상거래service_code:char, approval:char, dname:String, dphone:String);

coupon(idx:int [PK], rate:int, start_date:String, end_date:String);

thumbnail(idx:int [PK], member_idx:int, original_filename:String, server_filename:String, file_size:int, category:char);

alert(idx:int [PK], requester:int, recipient:int, request_date:String, //0:그룹수락알림,1:그룹신청알림,2:게시물댓글알림,3:갤러리댓글알림,4:그룹다이어리작성알림,5:그룹스케쥴작성알림,6:배변알림,7:수유알림,8:저체온알림,9:고체온알림event_type:char, //읽음구분값.'f'또는't'read_chk:char);

infant_thumbnail(/***/serialversionuid:long, infant_idx:int [PK], origin_file:String, server_file:String, url:String);

device(idx:int [PK], member_idx:int, serial_num:String, //temp:1/peepee:2/bottle:3type:char, firmware:String, mac_address:String, unit:char, switch_chk:char, reg_time:String, update_time:String);

infant_schedule(idx:int [PK], GeneratedName:Infant #FK to(infant), GeneratedName:Member #FK to(member), event_date_start:String, event_date_end:String, date_created:String, date_updated:String, title:String, event_type:char);

dashboard(member_idx:int [PK], temp:String, peepee:String, bottle:String, /*@column(name:String, group_info:String);

infant(/***/serialversionuid:long, idx:int [PK], name:String, birth:String, sex:char, nationality:String, weight:float, height:float, blood_type:String, thumbnail:Infant_thumbnail #FK to(infant_thumbnail));

member_mng(member_idx:int [PK], po:int, grade:char, introduction:String, last_login_date:String, login_err_cnt:int, dormant_chk:char, unit:char);

board(idx:int [PK], category:char, subject:String, contents:String, hashtag:String, hits:int, likes:int, date_created:String, date_updated:String, notice:char, public_check:char, GeneratedName:Member #FK to(member));

alert_board(idx:int [PK], board_idx:int, comment_idx:int);

rememberme(series:String [PK], //email속성(회원아이디)username:String, token:String, last_used:Date);

member_log(session_id:String [PK], member_idx:int, log_type:char, ip_address:String, browser:String, login_date:String, logout_date:String);

member_group(member_idx:int [PK], //@idgroup_idx:int, authority:char);

board_file(idx:int [PK], board_idx:int, original_filename:String, server_filename:String, file_url:String, file_size:int);

friends(friend_id:int [PK], member_idx1:int, member_idx2:int, status:char, request_time:String);

family_group(idx:int [PK], name:String);

id_comment_likes(serialversionuid:long, member_idx:int [PK], comment_idx:int [PK]);

gallery(idx:int [PK], GeneratedName:Member #FK to(member), subject:String, contents:String, hashtag:String, hits:int, likes:int, date_created:String, date_updated:String, original_filename:String, server_filename:String, file_url:String, file_size:int);

comment(idx:int [PK], board_idx:int, GeneratedName:Member #FK to(member), category:char, contents:String, likes:int, date_created:String, date_updated:String);

board_likes(serialversionuid:long, member_idx:int [PK], board_idx:int [PK]);

comment_likes(serialversionuid:long, member_idx:int [PK], comment_idx:int [PK]);

member(/***/serialversionuid:long, idx:int [PK], email:String, password:String, name:String, nickname:String, thumbnail:String, phone:String, address1:String, address2:String, zipcode:String, birth:String, sex:char, join_date:String, pw_renew_date:String, social_code:char, country_code:String, member_type:char, dup_info:String);

notify_email(email:String [PK], date_created:String);


** PROGRAM TYPE: JPA+Hibernate(Hybrid)