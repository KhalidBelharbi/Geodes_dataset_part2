ClassDiagram.Class>> SummerLeague =>=>=> RelationalSchema.Table>> summerleague;
ClassDiagram.Class>> League =>=>=> RelationalSchema.Table>> league;
ClassDiagram.Class>> Team =>=>=> RelationalSchema.Table>> team;
ClassDiagram.Class>> Player =>=>=> RelationalSchema.Table>> player;
ClassDiagram.Class>> WinterLeague =>=>=> RelationalSchema.Table>> winterleague;
ClassDiagram.Attribut>> SummerLeague.serialversionuid:long =>=>=> RelationalSchema.Column>> summerleague.serialversionuid;
ClassDiagram.Attribut>> League.serialversionuid:long =>=>=> RelationalSchema.Column>> league.serialversionuid;
ClassDiagram.Attribut>> League.id:String =>=>=> RelationalSchema.Column>> league.id PRIMARY KEY;
ClassDiagram.Attribut>> League.name:String =>=>=> RelationalSchema.Column>> league.name;
ClassDiagram.Attribut>> League.sport:String =>=>=> RelationalSchema.Column>> league.sport;
ClassDiagram.Attribut>> Team.serialversionuid:long =>=>=> RelationalSchema.Column>> team.serialversionuid;
ClassDiagram.Attribut>> Team.id:String =>=>=> RelationalSchema.Column>> team.id PRIMARY KEY;
ClassDiagram.Attribut>> Team.name:String =>=>=> RelationalSchema.Column>> team.name;
ClassDiagram.Attribut>> Team.city:String =>=>=> RelationalSchema.Column>> team.city;
ClassDiagram.Attribut>> Team.GeneratedName:League =>=>=> RelationalSchema.Column>> team.GeneratedName;
ClassDiagram.Attribut>> Player.serialversionuid:long =>=>=> RelationalSchema.Column>> player.serialversionuid;
ClassDiagram.Attribut>> Player.id:String =>=>=> RelationalSchema.Column>> player.id PRIMARY KEY;
ClassDiagram.Attribut>> Player.name:String =>=>=> RelationalSchema.Column>> player.name;
ClassDiagram.Attribut>> Player.position:String =>=>=> RelationalSchema.Column>> player.position;
ClassDiagram.Attribut>> Player.salary:double =>=>=> RelationalSchema.Column>> player.salary;
ClassDiagram.Attribut>> WinterLeague.serialversionuid:long =>=>=> RelationalSchema.Column>> winterleague.serialversionuid;
One-To-Many relationship from ClassDiagram.Class>>League  to ClassDiagram.Class>>Collection<Team>;
Many-To-Many relationship between ClassDiagram.Class>>Team  and ClassDiagram.Class>>collection<player>: persistence_roster_team_player(team_id:Team [PK] #FK to Team,player_id:collection<player> [PK] #FK to collection<player>);
