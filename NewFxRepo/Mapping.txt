ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> ProviderProduct =>=>=> RelationalSchema.Table>> providerproduct;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> BillProviderProduct =>=>=> RelationalSchema.Table>> billproviderproduct;
ClassDiagram.Class>> Provider =>=>=> RelationalSchema.Table>> provider;
ClassDiagram.Class>> Bill =>=>=> RelationalSchema.Table>> bill;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Attribut>> Account.accountid:Integer =>=>=> RelationalSchema.Column>> account.accountid PRIMARY KEY;
ClassDiagram.Attribut>> Account.sum:Double =>=>=> RelationalSchema.Column>> account.sum;
ClassDiagram.Attribut>> ProviderProduct.providerproductid:Integer =>=>=> RelationalSchema.Column>> providerproduct.providerproductid PRIMARY KEY;
ClassDiagram.Attribut>> ProviderProduct.qtyavailable:Integer =>=>=> RelationalSchema.Column>> providerproduct.qtyavailable;
ClassDiagram.Attribut>> User.userid:Integer =>=>=> RelationalSchema.Column>> user.userid PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.userpassword:String =>=>=> RelationalSchema.Column>> user.userpassword;
ClassDiagram.Attribut>> User.iscustomer:Boolean =>=>=> RelationalSchema.Column>> user.iscustomer;
ClassDiagram.Attribut>> User.isprovider:Boolean =>=>=> RelationalSchema.Column>> user.isprovider;
ClassDiagram.Attribut>> User.status:String =>=>=> RelationalSchema.Column>> user.status;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.register:Date =>=>=> RelationalSchema.Column>> user.register;
ClassDiagram.Attribut>> Customer.customerid:Integer =>=>=> RelationalSchema.Column>> customer.customerid PRIMARY KEY;
ClassDiagram.Attribut>> Customer.customername:String =>=>=> RelationalSchema.Column>> customer.customername;
ClassDiagram.Attribut>> Customer.address:String =>=>=> RelationalSchema.Column>> customer.address;
ClassDiagram.Attribut>> BillProviderProduct.billproviderproductid:Integer =>=>=> RelationalSchema.Column>> billproviderproduct.billproviderproductid PRIMARY KEY;
ClassDiagram.Attribut>> BillProviderProduct.qtyrequested:Integer =>=>=> RelationalSchema.Column>> billproviderproduct.qtyrequested;
ClassDiagram.Attribut>> Provider.providerid:Integer =>=>=> RelationalSchema.Column>> provider.providerid PRIMARY KEY;
ClassDiagram.Attribut>> Provider.providername:String =>=>=> RelationalSchema.Column>> provider.providername;
ClassDiagram.Attribut>> Bill.billid:Integer =>=>=> RelationalSchema.Column>> bill.billid PRIMARY KEY;
ClassDiagram.Attribut>> Bill.bill:Date =>=>=> RelationalSchema.Column>> bill.bill;
ClassDiagram.Attribut>> Bill.ispaid:Boolean =>=>=> RelationalSchema.Column>> bill.ispaid;
ClassDiagram.Attribut>> Bill.billamount:Double =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Product.productid:Integer =>=>=> RelationalSchema.Column>> product.productid PRIMARY KEY;
ClassDiagram.Attribut>> Product.productname:String =>=>=> RelationalSchema.Column>> product.productname;
ClassDiagram.Attribut>> Product.description:String =>=>=> RelationalSchema.Column>> product.description;
ClassDiagram.Attribut>> Product.price:Double =>=>=> RelationalSchema.Column>> product.price;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProviderProduct  to ClassDiagram.Class>>provider represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProviderProduct  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>provider represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Set<Bill>;
Many-To-One relationship from ClassDiagram.Class>>BillProviderProduct  to ClassDiagram.Class>>bill represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>BillProviderProduct  to ClassDiagram.Class>>providerproduct represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Provider  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Provider  to ClassDiagram.Class>>Set<ProviderProduct>;
Many-To-One relationship from ClassDiagram.Class>>Bill  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Bill  to ClassDiagram.Class>>Set<BillProviderProduct>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Set<ProviderProduct>;
