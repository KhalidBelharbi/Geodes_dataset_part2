ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Employee2 =>=>=> RelationalSchema.Table>> employee2;
ClassDiagram.Class>> Employee6 =>=>=> RelationalSchema.Table>> employee6;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Employee3 =>=>=> RelationalSchema.Table>> employee3;
ClassDiagram.Class>> Employee7 =>=>=> RelationalSchema.Table>> employee7;
ClassDiagram.Class>> Customer2 =>=>=> RelationalSchema.Table>> customer2;
ClassDiagram.Class>> Hoge4 =>=>=> RelationalSchema.Table>> hoge4;
ClassDiagram.Class>> PartTimeEmployee =>=>=> RelationalSchema.Table>> parttimeemployee;
ClassDiagram.Class>> Employee3 =>=>=> RelationalSchema.Table>> employee3;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Employee2 =>=>=> RelationalSchema.Table>> employee2;
ClassDiagram.Class>> Customer3 =>=>=> RelationalSchema.Table>> customer3;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Hoge7 =>=>=> RelationalSchema.Table>> hoge7;
ClassDiagram.Class>> Employee4 =>=>=> RelationalSchema.Table>> employee4;
ClassDiagram.Class>> ValuedCustomer2 =>=>=> RelationalSchema.Table>> valuedcustomer2;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Hoge3 =>=>=> RelationalSchema.Table>> hoge3;
ClassDiagram.Class>> FTEmployee =>=>=> RelationalSchema.Table>> ftemployee;
ClassDiagram.Class>> PartTimeEmployee2 =>=>=> RelationalSchema.Table>> parttimeemployee2;
ClassDiagram.Class>> Hoge =>=>=> RelationalSchema.Table>> hoge;
ClassDiagram.Class>> ValuedCustomer =>=>=> RelationalSchema.Table>> valuedcustomer;
ClassDiagram.Class>> FullTimeEmployee =>=>=> RelationalSchema.Table>> fulltimeemployee;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Employee5 =>=>=> RelationalSchema.Table>> employee5;
ClassDiagram.Class>> ValuedCustomer3 =>=>=> RelationalSchema.Table>> valuedcustomer3;
ClassDiagram.Class>> Hoge2 =>=>=> RelationalSchema.Table>> hoge2;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Employee5 =>=>=> RelationalSchema.Table>> employee5;
ClassDiagram.Class>> Department2 =>=>=> RelationalSchema.Table>> department2;
ClassDiagram.Class>> ValuedCustomer =>=>=> RelationalSchema.Table>> valuedcustomer;
ClassDiagram.Class>> Department3 =>=>=> RelationalSchema.Table>> department3;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> Employee4 =>=>=> RelationalSchema.Table>> employee4;
ClassDiagram.Attribut>> Department.id:Long =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.deptno:long =>=>=> RelationalSchema.Column>> department.deptno;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> Employee2.id:Long =>=>=> RelationalSchema.Column>> employee2.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee2.empno:long =>=>=> RelationalSchema.Column>> employee2.empno;
ClassDiagram.Attribut>> Employee2.name:String =>=>=> RelationalSchema.Column>> employee2.name;
ClassDiagram.Attribut>> Employee2.period:EmployeePeriod =>=>=> RelationalSchema.Column>> employee2.period;
ClassDiagram.Attribut>> Employee6.id:Long =>=>=> RelationalSchema.Column>> employee6.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee6.empno:long =>=>=> RelationalSchema.Column>> employee6.empno;
ClassDiagram.Attribut>> Employee6.name:String =>=>=> RelationalSchema.Column>> employee6.name;
ClassDiagram.Attribut>> Employee.id:Long =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empno:long =>=>=> RelationalSchema.Column>> employee.empno;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee3.id:Long =>=>=> RelationalSchema.Column>> employee3.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee3.empno:long =>=>=> RelationalSchema.Column>> employee3.empno;
ClassDiagram.Attribut>> Employee3.name:String =>=>=> RelationalSchema.Column>> employee3.name;
ClassDiagram.Attribut>> Employee7.id:Long =>=>=> RelationalSchema.Column>> employee7.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee7.empno:long =>=>=> RelationalSchema.Column>> employee7.empno;
ClassDiagram.Attribut>> Employee7.name:String =>=>=> RelationalSchema.Column>> employee7.name;
ClassDiagram.Attribut>> Customer2.id:Long =>=>=> RelationalSchema.Column>> customer2.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer2.name:String =>=>=> RelationalSchema.Column>> customer2.name;
ClassDiagram.Attribut>> Hoge4.aaa:Long =>=>=> RelationalSchema.Column>> hoge4.aaa PRIMARY KEY;
ClassDiagram.Attribut>> Hoge4.bbb:Integer =>=>=> RelationalSchema.Column>> hoge4.bbb;
ClassDiagram.Attribut>> Hoge4.ccc:java.util.Date =>=>=> RelationalSchema.Column>> hoge4.ccc;
ClassDiagram.Attribut>> PartTimeEmployee.hourlywage:Float =>=>=> RelationalSchema.Column>> parttimeemployee.hourlywage;
ClassDiagram.Attribut>> Employee3.id:Long =>=>=> RelationalSchema.Column>> employee3.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee3.empno:long =>=>=> RelationalSchema.Column>> employee3.empno;
ClassDiagram.Attribut>> Employee3.name:String =>=>=> RelationalSchema.Column>> employee3.name;
ClassDiagram.Attribut>> Department.id:Long =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.deptno:long =>=>=> RelationalSchema.Column>> department.deptno;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> Employee2.id:Long =>=>=> RelationalSchema.Column>> employee2.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee2.empno:long =>=>=> RelationalSchema.Column>> employee2.empno;
ClassDiagram.Attribut>> Employee2.name:String =>=>=> RelationalSchema.Column>> employee2.name;
ClassDiagram.Attribut>> Employee2.period:EmployeePeriod =>=>=> RelationalSchema.Column>> employee2.period;
ClassDiagram.Attribut>> Customer3.id:Long =>=>=> RelationalSchema.Column>> customer3.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer3.name:String =>=>=> RelationalSchema.Column>> customer3.name;
ClassDiagram.Attribut>> Address.id:Long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Hoge7.hoge7:String =>=>=> RelationalSchema.Column>> hoge7.hoge7;
ClassDiagram.Attribut>> Employee4.id:Long =>=>=> RelationalSchema.Column>> employee4.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee4.empno:long =>=>=> RelationalSchema.Column>> employee4.empno;
ClassDiagram.Attribut>> Employee4.name:String =>=>=> RelationalSchema.Column>> employee4.name;
ClassDiagram.Attribut>> Employee4.period:EmployeePeriod =>=>=> RelationalSchema.Column>> employee4.period;
ClassDiagram.Attribut>> ValuedCustomer2.rank:Integer =>=>=> RelationalSchema.Column>> valuedcustomer2.rank;
ClassDiagram.Attribut>> Employee.id:Long =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.empno:long =>=>=> RelationalSchema.Column>> employee.empno;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Hoge3.aaa:Long =>=>=> RelationalSchema.Column>> hoge3.aaa PRIMARY KEY;
ClassDiagram.Attribut>> Hoge3.bbb:Integer =>=>=> RelationalSchema.Column>> hoge3.bbb;
ClassDiagram.Attribut>> Hoge3.ccc:java.util.Date =>=>=> RelationalSchema.Column>> hoge3.ccc;
ClassDiagram.Attribut>> FTEmployee.salary:Integer =>=>=> RelationalSchema.Column>> ftemployee.salary;
ClassDiagram.Attribut>> PartTimeEmployee2.hourlywage:Float =>=>=> RelationalSchema.Column>> parttimeemployee2.hourlywage;
ClassDiagram.Attribut>> Hoge.aaa:Long =>=>=> RelationalSchema.Column>> hoge.aaa PRIMARY KEY;
ClassDiagram.Attribut>> Hoge.bbb:Integer =>=>=> RelationalSchema.Column>> hoge.bbb;
ClassDiagram.Attribut>> Hoge.ccc:java.util.Date =>=>=> RelationalSchema.Column>> hoge.ccc;
ClassDiagram.Attribut>> ValuedCustomer.rank:Integer =>=>=> RelationalSchema.Column>> valuedcustomer.rank;
ClassDiagram.Attribut>> FullTimeEmployee.salary:Integer =>=>=> RelationalSchema.Column>> fulltimeemployee.salary;
ClassDiagram.Attribut>> Customer.id:Long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Employee5.id:Long =>=>=> RelationalSchema.Column>> employee5.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee5.empno:long =>=>=> RelationalSchema.Column>> employee5.empno;
ClassDiagram.Attribut>> Employee5.version:Integer =>=>=> RelationalSchema.Column>> employee5.version;
ClassDiagram.Attribut>> ValuedCustomer3.rank:Integer =>=>=> RelationalSchema.Column>> valuedcustomer3.rank;
ClassDiagram.Attribut>> Hoge2.aaa:Long =>=>=> RelationalSchema.Column>> hoge2.aaa PRIMARY KEY;
ClassDiagram.Attribut>> Hoge2.bbb:Integer =>=>=> RelationalSchema.Column>> hoge2.bbb;
ClassDiagram.Attribut>> Hoge2.ccc:java.util.Date =>=>=> RelationalSchema.Column>> hoge2.ccc;
ClassDiagram.Attribut>> Customer.id:Long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Employee5.id:Long =>=>=> RelationalSchema.Column>> employee5.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee5.empno:long =>=>=> RelationalSchema.Column>> employee5.empno;
ClassDiagram.Attribut>> Employee5.name:String =>=>=> RelationalSchema.Column>> employee5.name;
ClassDiagram.Attribut>> Department2.id:Long =>=>=> RelationalSchema.Column>> department2.id PRIMARY KEY;
ClassDiagram.Attribut>> Department2.deptno:long =>=>=> RelationalSchema.Column>> department2.deptno;
ClassDiagram.Attribut>> Department2.name:String =>=>=> RelationalSchema.Column>> department2.name;
ClassDiagram.Attribut>> ValuedCustomer.rank:Integer =>=>=> RelationalSchema.Column>> valuedcustomer.rank;
ClassDiagram.Attribut>> Department3.id1:Long =>=>=> RelationalSchema.Column>> department3.id1 PRIMARY KEY;
ClassDiagram.Attribut>> Department3.id2:Long =>=>=> RelationalSchema.Column>> department3.id2 PRIMARY KEY;
ClassDiagram.Attribut>> Department3.deptno:long =>=>=> RelationalSchema.Column>> department3.deptno;
ClassDiagram.Attribut>> Department3.name:String =>=>=> RelationalSchema.Column>> department3.name;
ClassDiagram.Attribut>> Project.id:Long =>=>=> RelationalSchema.Column>> project.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee4.id:Long =>=>=> RelationalSchema.Column>> employee4.id PRIMARY KEY;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Collection<Employee>;
Many-To-One relationship from ClassDiagram.Class>>Employee6  to ClassDiagram.Class>>Department represented by ClassDiagram.Atrribute>>dept_id;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Department represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee3  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>boss;
Many-To-One relationship from ClassDiagram.Class>>Employee7  to ClassDiagram.Class>>Department represented by ClassDiagram.Atrribute>>id1;
Many-To-One relationship from ClassDiagram.Class>>Employee3  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>boss;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Collection<Employee>;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Department represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee5  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee5  to ClassDiagram.Class>>Department represented by ClassDiagram.Atrribute>>dept_id;
One-To-Many relationship from ClassDiagram.Class>>Department2  to ClassDiagram.Class>>Collection<Employee>;
One-To-Many relationship from ClassDiagram.Class>>Department3  to ClassDiagram.Class>>Collection<Employee>;
Employee: project_Employee(projectID:project [PK] #FK to project,EmployeeID:Employee [PK] #FK to Employee);
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Customer2  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Customer3  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Customer   Descriminator>>DISC: String ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Employee5  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Customer  ;
