ClassDiagram.Class>> Usuario =>=>=> RelationalSchema.Table>> usuario;
ClassDiagram.Class>> PrestadorConta =>=>=> RelationalSchema.Table>> prestadorconta;
ClassDiagram.Attribut>> Usuario.id:Integer =>=>=> RelationalSchema.Column>> usuario.id PRIMARY KEY;
ClassDiagram.Attribut>> Usuario.username:String =>=>=> RelationalSchema.Column>> usuario.username;
ClassDiagram.Attribut>> Usuario.email:String =>=>=> RelationalSchema.Column>> usuario.email;
ClassDiagram.Attribut>> Usuario.password:String =>=>=> RelationalSchema.Column>> usuario.password;
ClassDiagram.Attribut>> Usuario.ativo:boolean =>=>=> RelationalSchema.Column>> usuario.ativo;
ClassDiagram.Attribut>> Usuario.admin:boolean =>=>=> RelationalSchema.Column>> usuario.admin;
ClassDiagram.Attribut>> PrestadorConta.id_p:Integer =>=>=> RelationalSchema.Column>> prestadorconta.id_p;
ClassDiagram.Attribut>> PrestadorConta.tipe:String =>=>=> RelationalSchema.Column>> prestadorconta.tipe;
ClassDiagram.Attribut>> PrestadorConta.namecont:String =>=>=> RelationalSchema.Column>> prestadorconta.namecont;
ClassDiagram.Attribut>> PrestadorConta.agencia:Integer =>=>=> RelationalSchema.Column>> prestadorconta.agencia;
ClassDiagram.Attribut>> PrestadorConta.conta:Integer =>=>=> RelationalSchema.Column>> prestadorconta.conta;
ClassDiagram.Attribut>> PrestadorConta.operacao:Integer =>=>=> RelationalSchema.Column>> prestadorconta.operacao;
ClassDiagram.Attribut>> PrestadorConta.codigobanco:Integer =>=>=> RelationalSchema.Column>> prestadorconta.codigobanco;
