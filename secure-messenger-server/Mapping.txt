ClassDiagram.Class>> Group =>=>=> RelationalSchema.Table>> group;
ClassDiagram.Class>> Message =>=>=> RelationalSchema.Table>> message;
ClassDiagram.Class>> UserGroup =>=>=> RelationalSchema.Table>> usergroup;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> BinaryContent =>=>=> RelationalSchema.Table>> binarycontent;
ClassDiagram.Attribut>> Group.id:int =>=>=> RelationalSchema.Column>> group.id PRIMARY KEY;
ClassDiagram.Attribut>> Group.name:String =>=>=> RelationalSchema.Column>> group.name;
ClassDiagram.Attribut>> Message.id:int =>=>=> RelationalSchema.Column>> message.id PRIMARY KEY;
ClassDiagram.Attribut>> Message.whensent:Timestamp =>=>=> RelationalSchema.Column>> message.whensent;
ClassDiagram.Attribut>> Message.text:String =>=>=> RelationalSchema.Column>> message.text;
ClassDiagram.Attribut>> UserGroup.GeneratedName:Group =>=>=> RelationalSchema.Column>> usergroup.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> UserGroup.GeneratedName:User =>=>=> RelationalSchema.Column>> usergroup.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> UserGroup.roleid:int =>=>=> RelationalSchema.Column>> usergroup.roleid;
ClassDiagram.Attribut>> User.id:int =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.pseudo:String =>=>=> RelationalSchema.Column>> user.pseudo;
ClassDiagram.Attribut>> User.lasttimeonline:Timestamp =>=>=> RelationalSchema.Column>> user.lasttimeonline;
ClassDiagram.Attribut>> BinaryContent.id:int =>=>=> RelationalSchema.Column>> binarycontent.id PRIMARY KEY;
ClassDiagram.Attribut>> BinaryContent.type:String =>=>=> RelationalSchema.Column>> binarycontent.type;
ClassDiagram.Attribut>> BinaryContent.content:byte =>=>=> RelationalSchema.Column>> binarycontent.content;
One-To-Many relationship from ClassDiagram.Class>>Group  to ClassDiagram.Class>>List<Message>;
One-To-Many relationship from ClassDiagram.Class>>Group  to ClassDiagram.Class>>List<UserGroup>;
Many-To-One relationship from ClassDiagram.Class>>Message  to ClassDiagram.Class>>group represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Message  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>sender;
One-To-One relationship between ClassDiagram.Class>>Message  to ClassDiagram.Class>>binarycontent represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>UserGroup  to ClassDiagram.Class>>group represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>UserGroup  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>UserGroup  to ClassDiagram.Class>>message represented by ClassDiagram.Atrribute>>lastreceived;
One-To-One relationship between ClassDiagram.Class>>UserGroup  to ClassDiagram.Class>>message represented by ClassDiagram.Atrribute>>lastread;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>list<user>: friends(user1_id:User [PK] #FK to User,user2_id:list<user> [PK] #FK to list<user>);
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>list<user>: friends(user1_id:User [PK] #FK to User,user2_id:list<user> [PK] #FK to list<user>);friends(user2_id:User [PK] #FK to User,user1_id:list<user> [PK] #FK to list<user>);
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<UserGroup>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Message>;
One-To-One relationship between ClassDiagram.Class>>BinaryContent  to ClassDiagram.Class>>message represented by ClassDiagram.Atrribute>>GeneratedName;
