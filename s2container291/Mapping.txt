ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Attribut>> Employee.id:Integer =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.salary:Integer =>=>=> RelationalSchema.Column>> employee.salary;
ClassDiagram.Attribut>> Employee.departmentid:Integer =>=>=> RelationalSchema.Column>> employee.departmentid;
ClassDiagram.Attribut>> Employee.addressid:Integer =>=>=> RelationalSchema.Column>> employee.addressid;
ClassDiagram.Attribut>> Employee.version:Integer =>=>=> RelationalSchema.Column>> employee.version;
ClassDiagram.Attribut>> Department.id:Integer =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> Department.version:Integer =>=>=> RelationalSchema.Column>> department.version;
ClassDiagram.Attribut>> Address.id:Integer =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.name:String =>=>=> RelationalSchema.Column>> address.name;
ClassDiagram.Attribut>> Address.version:Integer =>=>=> RelationalSchema.Column>> address.version;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>department represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>List<Employee>;
One-To-One relationship between ClassDiagram.Class>>Address  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>GeneratedName;
