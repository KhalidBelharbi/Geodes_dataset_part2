ClassDiagram.Class>> LineItem =>=>=> RelationalSchema.Table>> lineitem;
ClassDiagram.Class>> Inventory =>=>=> RelationalSchema.Table>> inventory;
ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> PurchaseOrder =>=>=> RelationalSchema.Table>> purchaseorder;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Attribut>> LineItem.serialversionuid:long =>=>=> RelationalSchema.Column>> lineitem.serialversionuid;
ClassDiagram.Attribut>> LineItem./***<aname:PurchaseOrder =>=>=> RelationalSchema.Column>> lineitem./***<aname PRIMARY KEY;
ClassDiagram.Attribut>> LineItem.index:int =>=>=> RelationalSchema.Column>> lineitem.index PRIMARY KEY;
ClassDiagram.Attribut>> LineItem.quantity:int =>=>=> RelationalSchema.Column>> lineitem.quantity;
ClassDiagram.Attribut>> Inventory.serialversionuid:long =>=>=> RelationalSchema.Column>> inventory.serialversionuid;
ClassDiagram.Attribut>> Inventory.GeneratedName:Book =>=>=> RelationalSchema.Column>> inventory.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Inventory.supplied:int =>=>=> RelationalSchema.Column>> inventory.supplied;
ClassDiagram.Attribut>> Inventory.sold:int =>=>=> RelationalSchema.Column>> inventory.sold;
ClassDiagram.Attribut>> Inventory.version:int =>=>=> RelationalSchema.Column>> inventory.version;
ClassDiagram.Attribut>> Author.id:long =>=>=> RelationalSchema.Column>> author.id PRIMARY KEY;
ClassDiagram.Attribut>> Author.name:String =>=>=> RelationalSchema.Column>> author.name;
ClassDiagram.Attribut>> Author.version:int =>=>=> RelationalSchema.Column>> author.version;
ClassDiagram.Attribut>> PurchaseOrder.serialversionuid:long =>=>=> RelationalSchema.Column>> purchaseorder.serialversionuid;
ClassDiagram.Attribut>> PurchaseOrder./***<aname:long =>=>=> RelationalSchema.Column>> purchaseorder./***<aname PRIMARY KEY;
ClassDiagram.Attribut>> PurchaseOrder.GeneratedName:Status =>=>=> RelationalSchema.Column>> purchaseorder.GeneratedName;
ClassDiagram.Attribut>> PurchaseOrder.total:int =>=>=> RelationalSchema.Column>> purchaseorder.total;
ClassDiagram.Attribut>> PurchaseOrder.placedon:Timestamp =>=>=> RelationalSchema.Column>> purchaseorder.placedon;
ClassDiagram.Attribut>> PurchaseOrder.deliveredon:Timestamp =>=>=> RelationalSchema.Column>> purchaseorder.deliveredon;
ClassDiagram.Attribut>> Customer.serialversionuid:long =>=>=> RelationalSchema.Column>> customer.serialversionuid;
ClassDiagram.Attribut>> Customer.id:long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.email:String =>=>=> RelationalSchema.Column>> customer.email;
ClassDiagram.Attribut>> Customer.version:int =>=>=> RelationalSchema.Column>> customer.version;
ClassDiagram.Attribut>> Book.serialversionuid:long =>=>=> RelationalSchema.Column>> book.serialversionuid;
ClassDiagram.Attribut>> Book.isbn:String =>=>=> RelationalSchema.Column>> book.isbn PRIMARY KEY;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> Book.price:double =>=>=> RelationalSchema.Column>> book.price;
ClassDiagram.Attribut>> Book.version:int =>=>=> RelationalSchema.Column>> book.version;
One-To-One relationship between ClassDiagram.Class>>LineItem  to ClassDiagram.Class>>purchaseorder represented by ClassDiagram.Atrribute>>/***<aname;
Many-To-One relationship from ClassDiagram.Class>>LineItem  to ClassDiagram.Class>>book represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Inventory  to ClassDiagram.Class>>book represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>PurchaseOrder  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>PurchaseOrder  to ClassDiagram.Class>>List<LineItem>;
One-To-One relationship between ClassDiagram.Class>>Book  to ClassDiagram.Class>>inventory represented by ClassDiagram.Atrribute>>GeneratedName;
list<author>: book_list<author>(bookID:book [PK] #FK to book,list<author>ID:list<author> [PK] #FK to list<author>);
