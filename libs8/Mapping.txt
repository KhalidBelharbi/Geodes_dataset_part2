ClassDiagram.Class>> Age =>=>=> RelationalSchema.Table>> age;
ClassDiagram.Class>> State =>=>=> RelationalSchema.Table>> state;
ClassDiagram.Class>> WithSimpleId =>=>=> RelationalSchema.Table>> withsimpleid;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> NaturalIdOnManyToOne =>=>=> RelationalSchema.Table>> naturalidonmanytoone;
ClassDiagram.Class>> WithEmbeddedId =>=>=> RelationalSchema.Table>> withembeddedid;
ClassDiagram.Class>> Citizen =>=>=> RelationalSchema.Table>> citizen;
ClassDiagram.Class>> EntitiesAndCollectionsInSameRegionTest =>=>=> RelationalSchema.Table>> entitiesandcollectionsinsameregiontest;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Family =>=>=> RelationalSchema.Table>> family;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Attribut>> Age.query:String =>=>=> RelationalSchema.Column>> age.query;
ClassDiagram.Attribut>> Age.id:Integer =>=>=> RelationalSchema.Column>> age.id PRIMARY KEY;
ClassDiagram.Attribut>> Age.age:Integer =>=>=> RelationalSchema.Column>> age.age;
ClassDiagram.Attribut>> State.id:Integer =>=>=> RelationalSchema.Column>> state.id PRIMARY KEY;
ClassDiagram.Attribut>> State.version:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> State.name:String =>=>=> RelationalSchema.Column>> state.name;
ClassDiagram.Attribut>> WithSimpleId.id:Long =>=>=> RelationalSchema.Column>> withsimpleid.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.GeneratedName:Name =>=>=> RelationalSchema.Column>> person.GeneratedName;
ClassDiagram.Attribut>> Person.age:int =>=>=> RelationalSchema.Column>> person.age;
ClassDiagram.Attribut>> Person.version:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> NaturalIdOnManyToOne.id:int =>=>=> RelationalSchema.Column>> naturalidonmanytoone.id PRIMARY KEY;
ClassDiagram.Attribut>> NaturalIdOnManyToOne.version:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> WithEmbeddedId.embeddedid:PK =>=>=> RelationalSchema.Column>> withembeddedid.embeddedid;
ClassDiagram.Attribut>> Citizen.id:Integer =>=>=> RelationalSchema.Column>> citizen.id PRIMARY KEY;
ClassDiagram.Attribut>> Citizen.version:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Citizen.firstname:String =>=>=> RelationalSchema.Column>> citizen.firstname;
ClassDiagram.Attribut>> Citizen.lastname:String =>=>=> RelationalSchema.Column>> citizen.lastname;
ClassDiagram.Attribut>> Citizen.ssn:String =>=>=> RelationalSchema.Column>> citizen.ssn;
ClassDiagram.Attribut>> EntitiesAndCollectionsInSameRegionTest.region_name:String =>=>=> RelationalSchema.Column>> entitiesandcollectionsinsameregiontest.region_name;
ClassDiagram.Attribut>> EntitiesAndCollectionsInSameRegionTest.GeneratedName:AnEntity =>=>=> RelationalSchema.Column>> entitiesandcollectionsinsameregiontest.GeneratedName;
ClassDiagram.Attribut>> EntitiesAndCollectionsInSameRegionTest.GeneratedName:AnotherEntity =>=>=> RelationalSchema.Column>> entitiesandcollectionsinsameregiontest.GeneratedName;
ClassDiagram.Attribut>> Address.id:int =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.streetnumber:int =>=>=> RelationalSchema.Column>> address.streetnumber;
ClassDiagram.Attribut>> Address.streetname:String =>=>=> RelationalSchema.Column>> address.streetname;
ClassDiagram.Attribut>> Address.cityname:String =>=>=> RelationalSchema.Column>> address.cityname;
ClassDiagram.Attribut>> Address.countryname:String =>=>=> RelationalSchema.Column>> address.countryname;
ClassDiagram.Attribut>> Address.zipcode:String =>=>=> RelationalSchema.Column>> address.zipcode;
ClassDiagram.Attribut>> Address.version:int =>=>=> RelationalSchema.Column>> address.version;
ClassDiagram.Attribut>> Family.id:int =>=>=> RelationalSchema.Column>> family.id PRIMARY KEY;
ClassDiagram.Attribut>> Family.name:String =>=>=> RelationalSchema.Column>> family.name;
ClassDiagram.Attribut>> Family.secondname:String =>=>=> RelationalSchema.Column>> family.secondname;
ClassDiagram.Attribut>> Family.version:int =>=>=> RelationalSchema.Column>> family.version;
ClassDiagram.Attribut>> Person.id:int =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.birth:Date =>=>=> RelationalSchema.Column>> person.birth;
ClassDiagram.Attribut>> Person.checked:boolean =>=>=> RelationalSchema.Column>> person.checked;
ClassDiagram.Attribut>> Person.version:int =>=>=> RelationalSchema.Column>> person.version;
Many-To-One relationship from ClassDiagram.Class>>NaturalIdOnManyToOne  to ClassDiagram.Class>>citizen represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Citizen  to ClassDiagram.Class>>state represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>Set<Person>;
One-To-Many relationship from ClassDiagram.Class>>Family  to ClassDiagram.Class>>Set<Person>;
Many-To-One relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>family represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>GeneratedName;
