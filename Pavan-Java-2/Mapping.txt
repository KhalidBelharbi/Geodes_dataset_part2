ClassDiagram.Class>> InstructorEntity =>=>=> RelationalSchema.Table>> instructorentity;
ClassDiagram.Class>> StudentEntity =>=>=> RelationalSchema.Table>> studententity;
ClassDiagram.Class>> InstructorDetailEntity =>=>=> RelationalSchema.Table>> instructordetailentity;
ClassDiagram.Class>> CourseEntity =>=>=> RelationalSchema.Table>> courseentity;
ClassDiagram.Class>> ReviewEntity =>=>=> RelationalSchema.Table>> reviewentity;
ClassDiagram.Attribut>> InstructorEntity.id:Integer =>=>=> RelationalSchema.Column>> instructorentity.id PRIMARY KEY;
ClassDiagram.Attribut>> InstructorEntity.firstname:String =>=>=> RelationalSchema.Column>> instructorentity.firstname;
ClassDiagram.Attribut>> InstructorEntity.lastname:String =>=>=> RelationalSchema.Column>> instructorentity.lastname;
ClassDiagram.Attribut>> InstructorEntity.email:String =>=>=> RelationalSchema.Column>> instructorentity.email;
ClassDiagram.Attribut>> StudentEntity.id:Integer =>=>=> RelationalSchema.Column>> studententity.id PRIMARY KEY;
ClassDiagram.Attribut>> StudentEntity.firstname:String =>=>=> RelationalSchema.Column>> studententity.firstname;
ClassDiagram.Attribut>> StudentEntity.lastname:String =>=>=> RelationalSchema.Column>> studententity.lastname;
ClassDiagram.Attribut>> StudentEntity.email:String =>=>=> RelationalSchema.Column>> studententity.email;
ClassDiagram.Attribut>> InstructorDetailEntity.id:Integer =>=>=> RelationalSchema.Column>> instructordetailentity.id PRIMARY KEY;
ClassDiagram.Attribut>> InstructorDetailEntity.youtubechannel:String =>=>=> RelationalSchema.Column>> instructordetailentity.youtubechannel;
ClassDiagram.Attribut>> InstructorDetailEntity.hobby:String =>=>=> RelationalSchema.Column>> instructordetailentity.hobby;
ClassDiagram.Attribut>> CourseEntity.id:Integer =>=>=> RelationalSchema.Column>> courseentity.id PRIMARY KEY;
ClassDiagram.Attribut>> CourseEntity.title:String =>=>=> RelationalSchema.Column>> courseentity.title;
ClassDiagram.Attribut>> ReviewEntity.id:Integer =>=>=> RelationalSchema.Column>> reviewentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ReviewEntity.comment:String =>=>=> RelationalSchema.Column>> reviewentity.comment;
ClassDiagram.Attribut>> ReviewEntity.courseid:Integer =>=>=> RelationalSchema.Column>> reviewentity.courseid;
One-To-One relationship between ClassDiagram.Class>>InstructorEntity  to ClassDiagram.Class>>Instructor represented by ClassDiagram.Atrribute>>@column(name;
One-To-Many relationship from ClassDiagram.Class>>InstructorEntity  to ClassDiagram.Class>>List<CourseEntity>;
Many-To-Many relationship between ClassDiagram.Class>>StudentEntity  and ClassDiagram.Class>>course: course_student(student_id:StudentEntity [PK] #FK to StudentEntity,course_id:course [PK] #FK to course);
One-To-One relationship between ClassDiagram.Class>>InstructorDetailEntity  to ClassDiagram.Class>>Instructor represented by ClassDiagram.Atrribute>>//exceptdeleteremaining./*	*@onetoone(mappedby;
Many-To-One relationship from ClassDiagram.Class>>CourseEntity  to ClassDiagram.Class>>Instructor represented by ClassDiagram.Atrribute>>instrentity;
One-To-Many relationship from ClassDiagram.Class>>CourseEntity  to ClassDiagram.Class>>List<ReviewEntity>;
Many-To-Many relationship between ClassDiagram.Class>>CourseEntity  and ClassDiagram.Class>>list<studententity>: course_student(course_id:CourseEntity [PK] #FK to CourseEntity,student_id:list<studententity> [PK] #FK to list<studententity>);
