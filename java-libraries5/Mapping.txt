ClassDiagram.Class>> Event =>=>=> RelationalSchema.Table>> event;
ClassDiagram.Class>> DataPoint =>=>=> RelationalSchema.Table>> datapoint;
ClassDiagram.Class>> DataPoint =>=>=> RelationalSchema.Table>> datapoint;
ClassDiagram.Class>> DataPoint =>=>=> RelationalSchema.Table>> datapoint;
ClassDiagram.Class>> Event =>=>=> RelationalSchema.Table>> event;
ClassDiagram.Class>> Event =>=>=> RelationalSchema.Table>> event;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> Call =>=>=> RelationalSchema.Table>> call;
ClassDiagram.Class>> Image =>=>=> RelationalSchema.Table>> image;
ClassDiagram.Class>> Partner =>=>=> RelationalSchema.Table>> partner;
ClassDiagram.Class>> CreditCardPayment =>=>=> RelationalSchema.Table>> creditcardpayment;
ClassDiagram.Class>> WireTransferPayment =>=>=> RelationalSchema.Table>> wiretransferpayment;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Payment =>=>=> RelationalSchema.Table>> payment;
ClassDiagram.Class>> CollectionLoaderTest =>=>=> RelationalSchema.Table>> collectionloadertest;
ClassDiagram.Class>> CustomSQLSecondaryTableTest =>=>=> RelationalSchema.Table>> customsqlsecondarytabletest;
ClassDiagram.Class>> Captain =>=>=> RelationalSchema.Table>> captain;
ClassDiagram.Class>> CustomSQLTest =>=>=> RelationalSchema.Table>> customsqltest;
ClassDiagram.Class>> SpaceShip =>=>=> RelationalSchema.Table>> spaceship;
ClassDiagram.Class>> OracleCustomSQLWithStoredProcedureTest =>=>=> RelationalSchema.Table>> oraclecustomsqlwithstoredproceduretest;
ClassDiagram.Class>> CriteriaTest =>=>=> RelationalSchema.Table>> criteriatest;
ClassDiagram.Class>> ProxyInterfaceTest =>=>=> RelationalSchema.Table>> proxyinterfacetest;
ClassDiagram.Class>> Cuisine =>=>=> RelationalSchema.Table>> cuisine;
ClassDiagram.Class>> EntityTypeChangeAuditTrackingRevisionListenerTest =>=>=> RelationalSchema.Table>> entitytypechangeaudittrackingrevisionlistenertest;
ClassDiagram.Class>> CustomRevisionEntityTest =>=>=> RelationalSchema.Table>> customrevisionentitytest;
ClassDiagram.Class>> QueryAuditAdressCountryTest =>=>=> RelationalSchema.Table>> queryauditadresscountrytest;
ClassDiagram.Class>> ValidityStrategyAuditTest =>=>=> RelationalSchema.Table>> validitystrategyaudittest;
ClassDiagram.Class>> EntityTypeChangeAuditTest =>=>=> RelationalSchema.Table>> entitytypechangeaudittest;
ClassDiagram.Class>> QueryAuditTest =>=>=> RelationalSchema.Table>> queryaudittest;
ClassDiagram.Class>> QueryAuditWithModifiedFlagTest =>=>=> RelationalSchema.Table>> queryauditwithmodifiedflagtest;
ClassDiagram.Class>> ModifiedFlagsAuditTest =>=>=> RelationalSchema.Table>> modifiedflagsaudittest;
ClassDiagram.Class>> EntityTypeChangeAuditDefaultTrackingTest =>=>=> RelationalSchema.Table>> entitytypechangeauditdefaulttrackingtest;
ClassDiagram.Class>> DefaultAuditTest =>=>=> RelationalSchema.Table>> defaultaudittest;
ClassDiagram.Class>> IndexTest =>=>=> RelationalSchema.Table>> indextest;
ClassDiagram.Class>> UniqueConstraintTest =>=>=> RelationalSchema.Table>> uniqueconstrainttest;
ClassDiagram.Class>> CheckTest =>=>=> RelationalSchema.Table>> checktest;
ClassDiagram.Class>> SchemaGenerationTest =>=>=> RelationalSchema.Table>> schemagenerationtest;
ClassDiagram.Class>> ColumnDefaultTest =>=>=> RelationalSchema.Table>> columndefaulttest;
ClassDiagram.Class>> DiscriminatorNotNullSingleTableTest =>=>=> RelationalSchema.Table>> discriminatornotnullsingletabletest;
ClassDiagram.Class>> TablePerClassTest =>=>=> RelationalSchema.Table>> tableperclasstest;
ClassDiagram.Class>> JoinTablePrimaryKeyJoinColumnTest =>=>=> RelationalSchema.Table>> jointableprimarykeyjoincolumntest;
ClassDiagram.Class>> SingleTableDiscriminatorFormulaTest =>=>=> RelationalSchema.Table>> singletablediscriminatorformulatest;
ClassDiagram.Class>> ExplicitPolymorphismTest =>=>=> RelationalSchema.Table>> explicitpolymorphismtest;
ClassDiagram.Class>> JoinTableTest =>=>=> RelationalSchema.Table>> jointabletest;
ClassDiagram.Class>> MappedSuperclassTest =>=>=> RelationalSchema.Table>> mappedsuperclasstest;
ClassDiagram.Class>> SingleTableTest =>=>=> RelationalSchema.Table>> singletabletest;
ClassDiagram.Class>> DiscriminatorOptionsNotNullSingleTableTest =>=>=> RelationalSchema.Table>> discriminatoroptionsnotnullsingletabletest;
ClassDiagram.Class>> OptimisticLockTypeDirtyTest =>=>=> RelationalSchema.Table>> optimisticlocktypedirtytest;
ClassDiagram.Class>> OptimisticLockingTimestampTest =>=>=> RelationalSchema.Table>> optimisticlockingtimestamptest;
ClassDiagram.Class>> VersionSourceTest =>=>=> RelationalSchema.Table>> versionsourcetest;
ClassDiagram.Class>> ExplicitLockingTest =>=>=> RelationalSchema.Table>> explicitlockingtest;
ClassDiagram.Class>> OptimisticLockingInstantTest =>=>=> RelationalSchema.Table>> optimisticlockinginstanttest;
ClassDiagram.Class>> OptimisticLockingTest =>=>=> RelationalSchema.Table>> optimisticlockingtest;
ClassDiagram.Class>> OptimisticLockTypeAllTest =>=>=> RelationalSchema.Table>> optimisticlocktypealltest;
ClassDiagram.Class>> OptimisticLockTest =>=>=> RelationalSchema.Table>> optimisticlocktest;
ClassDiagram.Class>> UnidirectionalBagTest =>=>=> RelationalSchema.Table>> unidirectionalbagtest;
ClassDiagram.Class>> OrderColumnListIndexBaseTest =>=>=> RelationalSchema.Table>> ordercolumnlistindexbasetest;
ClassDiagram.Class>> ArrayTest =>=>=> RelationalSchema.Table>> arraytest;
ClassDiagram.Class>> MapKeyClassTest =>=>=> RelationalSchema.Table>> mapkeyclasstest;
ClassDiagram.Class>> BidirectionalBagOrphanRemovalTest =>=>=> RelationalSchema.Table>> bidirectionalbagorphanremovaltest;
ClassDiagram.Class>> BidirectionalBagTest =>=>=> RelationalSchema.Table>> bidirectionalbagtest;
ClassDiagram.Class>> BasicTypeOrderColumnElementCollectionTest =>=>=> RelationalSchema.Table>> basictypeordercolumnelementcollectiontest;
ClassDiagram.Class>> UnidirectionalComparatorSortedSetTest =>=>=> RelationalSchema.Table>> unidirectionalcomparatorsortedsettest;
ClassDiagram.Class>> ElementCollectionMapTest =>=>=> RelationalSchema.Table>> elementcollectionmaptest;
ClassDiagram.Class>> BasicTypeCollectionTest =>=>=> RelationalSchema.Table>> basictypecollectiontest;
ClassDiagram.Class>> UnidirectionalOrderedByListTest =>=>=> RelationalSchema.Table>> unidirectionalorderedbylisttest;
ClassDiagram.Class>> UnidirectionalSetTest =>=>=> RelationalSchema.Table>> unidirectionalsettest;
ClassDiagram.Class>> EmbeddableTypeElementCollectionTest =>=>=> RelationalSchema.Table>> embeddabletypeelementcollectiontest;
ClassDiagram.Class>> OrderedBySQLTest =>=>=> RelationalSchema.Table>> orderedbysqltest;
ClassDiagram.Class>> BidirectionalOrderByListTest =>=>=> RelationalSchema.Table>> bidirectionalorderbylisttest;
ClassDiagram.Class>> BidirectionalOrderColumnListTest =>=>=> RelationalSchema.Table>> bidirectionalordercolumnlisttest;
ClassDiagram.Class>> QueueTest =>=>=> RelationalSchema.Table>> queuetest;
ClassDiagram.Class>> BidirectionalMapTest =>=>=> RelationalSchema.Table>> bidirectionalmaptest;
ClassDiagram.Class>> BasicTypeElementCollectionTest =>=>=> RelationalSchema.Table>> basictypeelementcollectiontest;
ClassDiagram.Class>> BidirectionalComparatorSortedSetTest =>=>=> RelationalSchema.Table>> bidirectionalcomparatorsortedsettest;
ClassDiagram.Class>> MapKeyTypeTest =>=>=> RelationalSchema.Table>> mapkeytypetest;
ClassDiagram.Class>> UnidirectionalSortedSetTest =>=>=> RelationalSchema.Table>> unidirectionalsortedsettest;
ClassDiagram.Class>> BidirectionalSetTest =>=>=> RelationalSchema.Table>> bidirectionalsettest;
ClassDiagram.Class>> BidirectionalSortedSetTest =>=>=> RelationalSchema.Table>> bidirectionalsortedsettest;
ClassDiagram.Class>> UnidirectionalOrderColumnListTest =>=>=> RelationalSchema.Table>> unidirectionalordercolumnlisttest;
ClassDiagram.Class>> UnidirectionalMapTest =>=>=> RelationalSchema.Table>> unidirectionalmaptest;
ClassDiagram.Class>> NoDynamicUpdateTest =>=>=> RelationalSchema.Table>> nodynamicupdatetest;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> PersistenceContextTest =>=>=> RelationalSchema.Table>> persistencecontexttest;
ClassDiagram.Class>> FilterJoinTableTest =>=>=> RelationalSchema.Table>> filterjointabletest;
ClassDiagram.Class>> CascadeOnDeleteTest =>=>=> RelationalSchema.Table>> cascadeondeletetest;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> WhereTest =>=>=> RelationalSchema.Table>> wheretest;
ClassDiagram.Class>> FilterTest =>=>=> RelationalSchema.Table>> filtertest;
ClassDiagram.Class>> MultiLoadIdTest =>=>=> RelationalSchema.Table>> multiloadidtest;
ClassDiagram.Class>> FilterSqlFragementAliasTest =>=>=> RelationalSchema.Table>> filtersqlfragementaliastest;
ClassDiagram.Class>> WhereJoinTableTest =>=>=> RelationalSchema.Table>> wherejointabletest;
ClassDiagram.Class>> CascadeOnDeleteCollectionTest =>=>=> RelationalSchema.Table>> cascadeondeletecollectiontest;
ClassDiagram.Class>> BytecodeEnhancementTest =>=>=> RelationalSchema.Table>> bytecodeenhancementtest;
ClassDiagram.Class>> DynamicUpdateTest =>=>=> RelationalSchema.Table>> dynamicupdatetest;
ClassDiagram.Class>> TypeCategoryTest =>=>=> RelationalSchema.Table>> typecategorytest;
ClassDiagram.Class>> ClobStringTest =>=>=> RelationalSchema.Table>> clobstringtest;
ClassDiagram.Class>> ExplicitColumnNamingTest =>=>=> RelationalSchema.Table>> explicitcolumnnamingtest;
ClassDiagram.Class>> SubselectTest =>=>=> RelationalSchema.Table>> subselecttest;
ClassDiagram.Class>> TargetTest =>=>=> RelationalSchema.Table>> targettest;
ClassDiagram.Class>> ExplicitBasicTypeTest =>=>=> RelationalSchema.Table>> explicitbasictypetest;
ClassDiagram.Class>> DateWithTemporalTimeTest =>=>=> RelationalSchema.Table>> datewithtemporaltimetest;
ClassDiagram.Class>> NClobCharArrayTest =>=>=> RelationalSchema.Table>> nclobchararraytest;
ClassDiagram.Class>> CalendarWithTemporalTimestampTest =>=>=> RelationalSchema.Table>> calendarwithtemporaltimestamptest;
ClassDiagram.Class>> InstantLiteralTest =>=>=> RelationalSchema.Table>> instantliteraltest;
ClassDiagram.Class>> BitSetTypeTest =>=>=> RelationalSchema.Table>> bitsettypetest;
ClassDiagram.Class>> AutoQuotingTest =>=>=> RelationalSchema.Table>> autoquotingtest;
ClassDiagram.Class>> FormulaTest =>=>=> RelationalSchema.Table>> formulatest;
ClassDiagram.Class>> BitSetTypeDefTest =>=>=> RelationalSchema.Table>> bitsettypedeftest;
ClassDiagram.Class>> ClobCharArrayTest =>=>=> RelationalSchema.Table>> clobchararraytest;
ClassDiagram.Class>> BitSetUserTypeTest =>=>=> RelationalSchema.Table>> bitsetusertypetest;
ClassDiagram.Class>> NationalizedTest =>=>=> RelationalSchema.Table>> nationalizedtest;
ClassDiagram.Class>> ClobTest =>=>=> RelationalSchema.Table>> clobtest;
ClassDiagram.Class>> QuotingTest =>=>=> RelationalSchema.Table>> quotingtest;
ClassDiagram.Class>> PhoneTypeEnumeratedOrdinalTest =>=>=> RelationalSchema.Table>> phonetypeenumeratedordinaltest;
ClassDiagram.Class>> ColumnTransformerTest =>=>=> RelationalSchema.Table>> columntransformertest;
ClassDiagram.Class>> NClobStringTest =>=>=> RelationalSchema.Table>> nclobstringtest;
ClassDiagram.Class>> BlobTest =>=>=> RelationalSchema.Table>> blobtest;
ClassDiagram.Class>> ImplicitBasicTypeTest =>=>=> RelationalSchema.Table>> implicitbasictypetest;
ClassDiagram.Class>> LocalDateTimeWithTemporalTimeTest =>=>=> RelationalSchema.Table>> localdatetimewithtemporaltimetest;
ClassDiagram.Class>> ExplicitTypeTest =>=>=> RelationalSchema.Table>> explicittypetest;
ClassDiagram.Class>> PhoneTypeEnumeratedStringTest =>=>=> RelationalSchema.Table>> phonetypeenumeratedstringtest;
ClassDiagram.Class>> ParentTest =>=>=> RelationalSchema.Table>> parenttest;
ClassDiagram.Class>> BlobByteArrayTest =>=>=> RelationalSchema.Table>> blobbytearraytest;
ClassDiagram.Class>> JpaQuotingTest =>=>=> RelationalSchema.Table>> jpaquotingtest;
ClassDiagram.Class>> NClobTest =>=>=> RelationalSchema.Table>> nclobtest;
ClassDiagram.Class>> EnumerationConverterTest =>=>=> RelationalSchema.Table>> enumerationconvertertest;
ClassDiagram.Class>> DateWithTemporalDateTest =>=>=> RelationalSchema.Table>> datewithtemporaldatetest;
ClassDiagram.Class>> DateWithTemporalTimestampTest =>=>=> RelationalSchema.Table>> datewithtemporaltimestamptest;
ClassDiagram.Class>> EnumerationCustomTypeTest =>=>=> RelationalSchema.Table>> enumerationcustomtypetest;
ClassDiagram.Class>> PeriodStringTest =>=>=> RelationalSchema.Table>> periodstringtest;
ClassDiagram.Class>> MoneyConverterTest =>=>=> RelationalSchema.Table>> moneyconvertertest;
ClassDiagram.Class>> GeneratorTypeTest =>=>=> RelationalSchema.Table>> generatortypetest;
ClassDiagram.Class>> InMemoryValueGenerationTest =>=>=> RelationalSchema.Table>> inmemoryvaluegenerationtest;
ClassDiagram.Class>> GeneratedTest =>=>=> RelationalSchema.Table>> generatedtest;
ClassDiagram.Class>> UpdateTimestampTest =>=>=> RelationalSchema.Table>> updatetimestamptest;
ClassDiagram.Class>> DatabaseValueGenerationTest =>=>=> RelationalSchema.Table>> databasevaluegenerationtest;
ClassDiagram.Class>> CreationTimestampTest =>=>=> RelationalSchema.Table>> creationtimestamptest;
ClassDiagram.Class>> EmbeddableAccessTest =>=>=> RelationalSchema.Table>> embeddableaccesstest;
ClassDiagram.Class>> ElementCollectionAccessTest =>=>=> RelationalSchema.Table>> elementcollectionaccesstest;
ClassDiagram.Class>> PropertyAccessTest =>=>=> RelationalSchema.Table>> propertyaccesstest;
ClassDiagram.Class>> FieldAccessTest =>=>=> RelationalSchema.Table>> fieldaccesstest;
ClassDiagram.Class>> PropertyAccessOverrideTest =>=>=> RelationalSchema.Table>> propertyaccessoverridetest;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> SimpleEmbeddableTest =>=>=> RelationalSchema.Table>> simpleembeddabletest;
ClassDiagram.Class>> NestedEmbeddableTest =>=>=> RelationalSchema.Table>> nestedembeddabletest;
ClassDiagram.Class>> ParentTest =>=>=> RelationalSchema.Table>> parenttest;
ClassDiagram.Class>> SimpleEmbeddableEquivalentTest =>=>=> RelationalSchema.Table>> simpleembeddableequivalenttest;
ClassDiagram.Class>> EmbeddableImplicitOverrideTest =>=>=> RelationalSchema.Table>> embeddableimplicitoverridetest;
ClassDiagram.Class>> EmbeddableOverrideTest =>=>=> RelationalSchema.Table>> embeddableoverridetest;
ClassDiagram.Class>> TargetTest =>=>=> RelationalSchema.Table>> targettest;
ClassDiagram.Class>> RowIdTest =>=>=> RelationalSchema.Table>> rowidtest;
ClassDiagram.Class>> EntityTableCatalogTest =>=>=> RelationalSchema.Table>> entitytablecatalogtest;
ClassDiagram.Class>> EntityTableSchemaTest =>=>=> RelationalSchema.Table>> entitytableschematest;
ClassDiagram.Class>> IdClassManyToOneTest =>=>=> RelationalSchema.Table>> idclassmanytoonetest;
ClassDiagram.Class>> AssignedIdentifierTest =>=>=> RelationalSchema.Table>> assignedidentifiertest;
ClassDiagram.Class>> UuidGeneratedValueTest =>=>=> RelationalSchema.Table>> uuidgeneratedvaluetest;
ClassDiagram.Class>> EmbeddedIdManyToOneTest =>=>=> RelationalSchema.Table>> embeddedidmanytoonetest;
ClassDiagram.Class>> MutableNaturalIdTest =>=>=> RelationalSchema.Table>> mutablenaturalidtest;
ClassDiagram.Class>> NaiveEqualsHashCodeEntityTest =>=>=> RelationalSchema.Table>> naiveequalshashcodeentitytest;
ClassDiagram.Class>> IdManyToOneTest =>=>=> RelationalSchema.Table>> idmanytoonetest;
ClassDiagram.Class>> SimpleEntityTest =>=>=> RelationalSchema.Table>> simpleentitytest;
ClassDiagram.Class>> UuidCustomGeneratedValueTest =>=>=> RelationalSchema.Table>> uuidcustomgeneratedvaluetest;
ClassDiagram.Class>> SimpleEntityTableTest =>=>=> RelationalSchema.Table>> simpleentitytabletest;
ClassDiagram.Class>> IdClassTest =>=>=> RelationalSchema.Table>> idclasstest;
ClassDiagram.Class>> Event =>=>=> RelationalSchema.Table>> event;
ClassDiagram.Class>> SequenceGeneratorNamedTest =>=>=> RelationalSchema.Table>> sequencegeneratornamedtest;
ClassDiagram.Class>> EmbeddedIdTest =>=>=> RelationalSchema.Table>> embeddedidtest;
ClassDiagram.Class>> CompositeNaturalIdTest =>=>=> RelationalSchema.Table>> compositenaturalidtest;
ClassDiagram.Class>> CacheableNaturalIdTest =>=>=> RelationalSchema.Table>> cacheablenaturalidtest;
ClassDiagram.Class>> SequenceGeneratorUnnamedTest =>=>=> RelationalSchema.Table>> sequencegeneratorunnamedtest;
ClassDiagram.Class>> GeneratedIdentifierTest =>=>=> RelationalSchema.Table>> generatedidentifiertest;
ClassDiagram.Class>> TableGeneratorUnnamedTest =>=>=> RelationalSchema.Table>> tablegeneratorunnamedtest;
ClassDiagram.Class>> SequenceGeneratorConfiguredTest =>=>=> RelationalSchema.Table>> sequencegeneratorconfiguredtest;
ClassDiagram.Class>> PooledOptimizerTest =>=>=> RelationalSchema.Table>> pooledoptimizertest;
ClassDiagram.Class>> TableGeneratorConfiguredTest =>=>=> RelationalSchema.Table>> tablegeneratorconfiguredtest;
ClassDiagram.Class>> SimpleNaturalIdTest =>=>=> RelationalSchema.Table>> simplenaturalidtest;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> NaturalIdEqualsHashCodeEntityTest =>=>=> RelationalSchema.Table>> naturalidequalshashcodeentitytest;
ClassDiagram.Class>> MultipleNaturalIdTest =>=>=> RelationalSchema.Table>> multiplenaturalidtest;
ClassDiagram.Class>> IdClassGeneratedValueTest =>=>=> RelationalSchema.Table>> idclassgeneratedvaluetest;
ClassDiagram.Class>> BootstrapTest =>=>=> RelationalSchema.Table>> bootstraptest;
ClassDiagram.Class>> JmxTest =>=>=> RelationalSchema.Table>> jmxtest;
ClassDiagram.Class>> DerivedIdentifierPrimaryKeyJoinColumnTest =>=>=> RelationalSchema.Table>> derivedidentifierprimarykeyjoincolumntest;
ClassDiagram.Class>> ManyToManyBidirectionalWithLinkEntityTest =>=>=> RelationalSchema.Table>> manytomanybidirectionalwithlinkentitytest;
ClassDiagram.Class>> ManyToManyUnidirectionalTest =>=>=> RelationalSchema.Table>> manytomanyunidirectionaltest;
ClassDiagram.Class>> OneToManyUnidirectionalTest =>=>=> RelationalSchema.Table>> onetomanyunidirectionaltest;
ClassDiagram.Class>> OneToOneUnidirectionalTest =>=>=> RelationalSchema.Table>> onetooneunidirectionaltest;
ClassDiagram.Class>> JoinFormulaTest =>=>=> RelationalSchema.Table>> joinformulatest;
ClassDiagram.Class>> CompositeIdAssociationTest =>=>=> RelationalSchema.Table>> compositeidassociationtest;
ClassDiagram.Class>> BidirectionalTwoOneToManyMapsIdTest =>=>=> RelationalSchema.Table>> bidirectionaltwoonetomanymapsidtest;
ClassDiagram.Class>> OneToOneBidirectionalTest =>=>=> RelationalSchema.Table>> onetoonebidirectionaltest;
ClassDiagram.Class>> DerivedIdentifierTest =>=>=> RelationalSchema.Table>> derivedidentifiertest;
ClassDiagram.Class>> UnidirectionalManyToManyRemoveTest =>=>=> RelationalSchema.Table>> unidirectionalmanytomanyremovetest;
ClassDiagram.Class>> OneToOnePrimaryKeyJoinColumnTest =>=>=> RelationalSchema.Table>> onetooneprimarykeyjoincolumntest;
ClassDiagram.Class>> OneToOneBidirectionalLazyTest =>=>=> RelationalSchema.Table>> onetoonebidirectionallazytest;
ClassDiagram.Class>> OneToManyBidirectionalTest =>=>=> RelationalSchema.Table>> onetomanybidirectionaltest;
ClassDiagram.Class>> ManyToOneTest =>=>=> RelationalSchema.Table>> manytoonetest;
ClassDiagram.Class>> PropertyHolder =>=>=> RelationalSchema.Table>> propertyholder;
ClassDiagram.Class>> PropertyRepository =>=>=> RelationalSchema.Table>> propertyrepository;
ClassDiagram.Class>> IntegerProperty =>=>=> RelationalSchema.Table>> integerproperty;
ClassDiagram.Class>> StringProperty =>=>=> RelationalSchema.Table>> stringproperty;
ClassDiagram.Class>> ManyToManyBidirectionalTest =>=>=> RelationalSchema.Table>> manytomanybidirectionaltest;
ClassDiagram.Class>> JoinColumnOrFormulaTest =>=>=> RelationalSchema.Table>> joincolumnorformulatest;
ClassDiagram.Class>> OneToOneMapsIdTest =>=>=> RelationalSchema.Table>> onetoonemapsidtest;
ClassDiagram.Class>> NotFoundTest =>=>=> RelationalSchema.Table>> notfoundtest;
ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> TransactionsTest =>=>=> RelationalSchema.Table>> transactionstest;
ClassDiagram.Class>> DatabaseTimeZoneMultiTenancyTest =>=>=> RelationalSchema.Table>> databasetimezonemultitenancytest;
ClassDiagram.Class>> AbstractMultiTenancyTest =>=>=> RelationalSchema.Table>> abstractmultitenancytest;
ClassDiagram.Class>> SpatialTest =>=>=> RelationalSchema.Table>> spatialtest;
ClassDiagram.Class>> FetchModeSubselectTest =>=>=> RelationalSchema.Table>> fetchmodesubselecttest;
ClassDiagram.Class>> FetchingTest =>=>=> RelationalSchema.Table>> fetchingtest;
ClassDiagram.Class>> BatchFetchingTest =>=>=> RelationalSchema.Table>> batchfetchingtest;
ClassDiagram.Class>> FetchModeSelectTest =>=>=> RelationalSchema.Table>> fetchmodeselecttest;
ClassDiagram.Class>> GraphFetchingTest =>=>=> RelationalSchema.Table>> graphfetchingtest;
ClassDiagram.Class>> GraphParsingTest =>=>=> RelationalSchema.Table>> graphparsingtest;
ClassDiagram.Class>> DirectVsQueryFetchingTest =>=>=> RelationalSchema.Table>> directvsqueryfetchingtest;
ClassDiagram.Class>> ProfileFetchingTest =>=>=> RelationalSchema.Table>> profilefetchingtest;
ClassDiagram.Class>> FetchModeJoinTest =>=>=> RelationalSchema.Table>> fetchmodejointest;
ClassDiagram.Class>> LazyCollectionTest =>=>=> RelationalSchema.Table>> lazycollectiontest;
ClassDiagram.Class>> CommitFlushTest =>=>=> RelationalSchema.Table>> commitflushtest;
ClassDiagram.Class>> ManualFlushTest =>=>=> RelationalSchema.Table>> manualflushtest;
ClassDiagram.Class>> AlwaysFlushTest =>=>=> RelationalSchema.Table>> alwaysflushtest;
ClassDiagram.Class>> FlushOrderTest =>=>=> RelationalSchema.Table>> flushordertest;
ClassDiagram.Class>> HibernateAutoFlushTest =>=>=> RelationalSchema.Table>> hibernateautoflushtest;
ClassDiagram.Class>> AutoFlushTest =>=>=> RelationalSchema.Table>> autoflushtest;
ClassDiagram.Class>> DefaultEntityListenerTest =>=>=> RelationalSchema.Table>> defaultentitylistenertest;
ClassDiagram.Class>> InterceptorTest =>=>=> RelationalSchema.Table>> interceptortest;
ClassDiagram.Class>> ListenerTest =>=>=> RelationalSchema.Table>> listenertest;
ClassDiagram.Class>> PostgreSQLFunctionWhereClauseTest =>=>=> RelationalSchema.Table>> postgresqlfunctionwhereclausetest;
ClassDiagram.Class>> SelectDistinctTest =>=>=> RelationalSchema.Table>> selectdistincttest;
ClassDiagram.Class>> PostgreSQLFunctionSelectClauseTest =>=>=> RelationalSchema.Table>> postgresqlfunctionselectclausetest;
ClassDiagram.Class>> EntityImmutabilityTest =>=>=> RelationalSchema.Table>> entityimmutabilitytest;
ClassDiagram.Class>> CollectionImmutabilityTest =>=>=> RelationalSchema.Table>> collectionimmutabilitytest;
ClassDiagram.Class>> SecondLevelCacheTest =>=>=> RelationalSchema.Table>> secondlevelcachetest;
ClassDiagram.Class>> NonStrictReadWriteCacheTest =>=>=> RelationalSchema.Table>> nonstrictreadwritecachetest;
ClassDiagram.Class>> FirstLevelCacheTest =>=>=> RelationalSchema.Table>> firstlevelcachetest;
ClassDiagram.Attribut>> Event.id:Long =>=>=> RelationalSchema.Column>> event.id PRIMARY KEY;
ClassDiagram.Attribut>> Event.title:String =>=>=> RelationalSchema.Column>> event.title;
ClassDiagram.Attribut>> Event.GeneratedName:Date =>=>=> RelationalSchema.Column>> event.GeneratedName;
ClassDiagram.Attribut>> DataPoint.id:long =>=>=> RelationalSchema.Column>> datapoint.id PRIMARY KEY;
ClassDiagram.Attribut>> DataPoint.name:String =>=>=> RelationalSchema.Column>> datapoint.name;
ClassDiagram.Attribut>> DataPoint.id:long =>=>=> RelationalSchema.Column>> datapoint.id PRIMARY KEY;
ClassDiagram.Attribut>> DataPoint.name:String =>=>=> RelationalSchema.Column>> datapoint.name;
ClassDiagram.Attribut>> DataPoint.id:long =>=>=> RelationalSchema.Column>> datapoint.id PRIMARY KEY;
ClassDiagram.Attribut>> DataPoint.name:String =>=>=> RelationalSchema.Column>> datapoint.name;
ClassDiagram.Attribut>> Event.id:Long =>=>=> RelationalSchema.Column>> event.id PRIMARY KEY;
ClassDiagram.Attribut>> Event.title:String =>=>=> RelationalSchema.Column>> event.title;
ClassDiagram.Attribut>> Event.GeneratedName:Date =>=>=> RelationalSchema.Column>> event.GeneratedName;
ClassDiagram.Attribut>> Event.id:Long =>=>=> RelationalSchema.Column>> event.id PRIMARY KEY;
ClassDiagram.Attribut>> Event.title:String =>=>=> RelationalSchema.Column>> event.title;
ClassDiagram.Attribut>> Event.GeneratedName:Date =>=>=> RelationalSchema.Column>> event.GeneratedName;
ClassDiagram.Attribut>> Phone.id:Long =>=>=> RelationalSchema.Column>> phone.id PRIMARY KEY;
ClassDiagram.Attribut>> Phone.number:String =>=>=> RelationalSchema.Column>> phone.number;
ClassDiagram.Attribut>> Phone.type:PhoneType =>=>=> RelationalSchema.Column>> phone.type;
ClassDiagram.Attribut>> Phone.repairtimestamps:List<Date> =>=>=> RelationalSchema.Column>> phone.repairtimestamps;
ClassDiagram.Attribut>> Call.id:Long =>=>=> RelationalSchema.Column>> call.id PRIMARY KEY;
ClassDiagram.Attribut>> Call.timestamp:Date =>=>=> RelationalSchema.Column>> call.timestamp;
ClassDiagram.Attribut>> Call.duration:int =>=>=> RelationalSchema.Column>> call.duration;
ClassDiagram.Attribut>> Image.id:Long =>=>=> RelationalSchema.Column>> image.id PRIMARY KEY;
ClassDiagram.Attribut>> Image.content:byte =>=>=> RelationalSchema.Column>> image.content;
ClassDiagram.Attribut>> Partner.id:Long =>=>=> RelationalSchema.Column>> partner.id PRIMARY KEY;
ClassDiagram.Attribut>> Partner.name:String =>=>=> RelationalSchema.Column>> partner.name;
ClassDiagram.Attribut>> Partner.version:int =>=>=> RelationalSchema.Column>> partner.version;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.nickname:String =>=>=> RelationalSchema.Column>> person.nickname;
ClassDiagram.Attribut>> Person.address:String =>=>=> RelationalSchema.Column>> person.address;
ClassDiagram.Attribut>> Person.createdon:Date =>=>=> RelationalSchema.Column>> person.createdon;
ClassDiagram.Attribut>> Person.addresses:Map<AddressType,String> =>=>=> RelationalSchema.Column>> person.addresses;
ClassDiagram.Attribut>> Person.version:int =>=>=> RelationalSchema.Column>> person.version;
ClassDiagram.Attribut>> Payment.id:Long =>=>=> RelationalSchema.Column>> payment.id PRIMARY KEY;
ClassDiagram.Attribut>> Payment.amount:BigDecimal =>=>=> RelationalSchema.Column>> payment.amount;
ClassDiagram.Attribut>> Payment.completed:boolean =>=>=> RelationalSchema.Column>> payment.completed;
ClassDiagram.Attribut>> Captain.id:Identity =>=>=> RelationalSchema.Column>> captain.id;
ClassDiagram.Attribut>> SpaceShip.name:String =>=>=> RelationalSchema.Column>> spaceship.name PRIMARY KEY;
ClassDiagram.Attribut>> SpaceShip.model:String =>=>=> RelationalSchema.Column>> spaceship.model;
ClassDiagram.Attribut>> SpaceShip.speed:double =>=>=> RelationalSchema.Column>> spaceship.speed;
ClassDiagram.Attribut>> SpaceShip.GeneratedName:Dimensions =>=>=> RelationalSchema.Column>> spaceship.GeneratedName;
ClassDiagram.Attribut>> Phone.id:Long =>=>=> RelationalSchema.Column>> phone.id PRIMARY KEY;
ClassDiagram.Attribut>> Phone.number:String =>=>=> RelationalSchema.Column>> phone.number;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> MultiLoadIdTest.GeneratedName:SQLStatementInterceptor =>=>=> RelationalSchema.Column>> multiloadidtest.GeneratedName;
ClassDiagram.Attribut>> PeriodStringTest.GeneratedName:Period =>=>=> RelationalSchema.Column>> periodstringtest.GeneratedName;
ClassDiagram.Attribut>> Book.id:Long =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> Book.author:String =>=>=> RelationalSchema.Column>> book.author;
ClassDiagram.Attribut>> Event.id:EventId =>=>=> RelationalSchema.Column>> event.id PRIMARY KEY;
ClassDiagram.Attribut>> Event.key:String =>=>=> RelationalSchema.Column>> event.key;
ClassDiagram.Attribut>> Event.value:String =>=>=> RelationalSchema.Column>> event.value;
ClassDiagram.Attribut>> Book.id:Long =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> Book.author:String =>=>=> RelationalSchema.Column>> book.author;
ClassDiagram.Attribut>> BootstrapTest.emf:EntityManagerFactory =>=>=> RelationalSchema.Column>> bootstraptest.emf;
ClassDiagram.Attribut>> BootstrapTest.//tag::bootstrap-jpa-compliant-persistenceunit-configurable-example:EntityManagerFactory =>=>=> RelationalSchema.Column>> bootstraptest.//tag::bootstrap-jpa-compliant-persistenceunit-configurable-example;
ClassDiagram.Attribut>> BootstrapTest.//tag::bootstrap-jpa-compliant-persistencecontext-exampleem:EntityManager =>=>=> RelationalSchema.Column>> bootstraptest.//tag::bootstrap-jpa-compliant-persistencecontext-exampleem;
ClassDiagram.Attribut>> BootstrapTest.//tag::bootstrap-jpa-compliant-persistencecontext-configurable-example:EntityManager =>=>=> RelationalSchema.Column>> bootstraptest.//tag::bootstrap-jpa-compliant-persistencecontext-configurable-example;
ClassDiagram.Attribut>> PropertyHolder.id:Long =>=>=> RelationalSchema.Column>> propertyholder.id PRIMARY KEY;
ClassDiagram.Attribut>> PropertyHolder.GeneratedName:Property =>=>=> RelationalSchema.Column>> propertyholder.GeneratedName;
ClassDiagram.Attribut>> PropertyRepository.id:Long =>=>=> RelationalSchema.Column>> propertyrepository.id PRIMARY KEY;
ClassDiagram.Attribut>> PropertyRepository.properties:List<Property<?>> =>=>=> RelationalSchema.Column>> propertyrepository.properties;
ClassDiagram.Attribut>> IntegerProperty.id:Long =>=>=> RelationalSchema.Column>> integerproperty.id PRIMARY KEY;
ClassDiagram.Attribut>> IntegerProperty.name:String =>=>=> RelationalSchema.Column>> integerproperty.name;
ClassDiagram.Attribut>> IntegerProperty.value:Integer =>=>=> RelationalSchema.Column>> integerproperty.value;
ClassDiagram.Attribut>> StringProperty.id:Long =>=>=> RelationalSchema.Column>> stringproperty.id PRIMARY KEY;
ClassDiagram.Attribut>> StringProperty.name:String =>=>=> RelationalSchema.Column>> stringproperty.name;
ClassDiagram.Attribut>> StringProperty.value:String =>=>=> RelationalSchema.Column>> stringproperty.value;
ClassDiagram.Attribut>> Author.id:Integer =>=>=> RelationalSchema.Column>> author.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.id:Integer =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> DatabaseTimeZoneMultiTenancyTest.front_end_tenant:String =>=>=> RelationalSchema.Column>> databasetimezonemultitenancytest.front_end_tenant;
ClassDiagram.Attribut>> DatabaseTimeZoneMultiTenancyTest.back_end_tenant:String =>=>=> RelationalSchema.Column>> databasetimezonemultitenancytest.back_end_tenant;
ClassDiagram.Attribut>> DatabaseTimeZoneMultiTenancyTest.connectionprovidermap:Map<String,ConnectionProvider> =>=>=> RelationalSchema.Column>> databasetimezonemultitenancytest.connectionprovidermap;
ClassDiagram.Attribut>> DatabaseTimeZoneMultiTenancyTest.timezonetenantmap:Map<String,TimeZone> =>=>=> RelationalSchema.Column>> databasetimezonemultitenancytest.timezonetenantmap;
ClassDiagram.Attribut>> DatabaseTimeZoneMultiTenancyTest.GeneratedName:SessionFactory =>=>=> RelationalSchema.Column>> databasetimezonemultitenancytest.GeneratedName;
ClassDiagram.Attribut>> AbstractMultiTenancyTest.front_end_tenant:String =>=>=> RelationalSchema.Column>> abstractmultitenancytest.front_end_tenant;
ClassDiagram.Attribut>> AbstractMultiTenancyTest.back_end_tenant:String =>=>=> RelationalSchema.Column>> abstractmultitenancytest.back_end_tenant;
ClassDiagram.Attribut>> AbstractMultiTenancyTest.connectionprovidermap:Map<String,ConnectionProvider> =>=>=> RelationalSchema.Column>> abstractmultitenancytest.connectionprovidermap;
ClassDiagram.Attribut>> AbstractMultiTenancyTest.GeneratedName:SessionFactory =>=>=> RelationalSchema.Column>> abstractmultitenancytest.GeneratedName;
ClassDiagram.Attribut>> SpatialTest.GeneratedName:GeometryFactory =>=>=> RelationalSchema.Column>> spatialtest.GeneratedName;
ClassDiagram.Attribut>> InterceptorTest.GeneratedName:Logger =>=>=> RelationalSchema.Column>> interceptortest.GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Phone  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Phone  to ClassDiagram.Class>>List<Call>;
One-To-Many relationship from ClassDiagram.Class>>Phone  to ClassDiagram.Class>>Map<Date,Call>;
Many-To-One relationship from ClassDiagram.Class>>Call  to ClassDiagram.Class>>phone represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>List<Phone>;
Many-To-One relationship from ClassDiagram.Class>>Payment  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>SpaceShip  to ClassDiagram.Class>>captain represented by ClassDiagram.Atrribute>>firstname;
Many-To-One relationship from ClassDiagram.Class>>Phone  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>owner;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>List<Phone>;
One-To-Many relationship from ClassDiagram.Class>>Author  to ClassDiagram.Class>>Set<Book>;
Many-To-One relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>author represented by ClassDiagram.Atrribute>>GeneratedName;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Payment  ;
