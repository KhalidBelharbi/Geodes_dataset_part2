<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="overview" >
      <xs:complexContent>
       <xs:extension base="jpa">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="index" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enversillustrationtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blueprint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapointserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="hibernateutil" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testintegrator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtypecontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teststrategyregistrationprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapointservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateutil" >
      <xs:sequence>
        <xs:element name="emf" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getallcommand" >
      <xs:sequence>
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatecommand" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteallcommand" >
      <xs:sequence>
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addcommand" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="features" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasource-h2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtypecontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatecommand" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getallcommand" >
      <xs:sequence>
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadcommand" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getrevisionscommand" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteallcommand" >
      <xs:sequence>
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getcommand" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addcommand" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateutil" >
      <xs:sequence>
        <xs:element name="sf" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testintegrator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapointservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teststrategyregistrationprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapointserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="hibernateutil" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blueprint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapointserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapointservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getallcommand" >
      <xs:sequence>
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addcommand" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteallcommand" >
      <xs:sequence>
        <xs:element name="dpservice" type="datapointservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blueprint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="event.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativeapiillustrationtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerillustrationtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationsillustrationtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bibliography" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity-immutability-update-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity-inheritance-single-table-discriminator-formula-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity-inheritance-mapped-superclass-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity-inheritance-single-table-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity-inheritance-table-per-class-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity-inheritance-single-table-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity-inheritance-table-per-class-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity-inheritance-joined-table-primary-key-join-column-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity-inheritance-joined-table-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity-inheritance-joined-table-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-generated-updatetimestamp-update-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basic-nationalized-sql-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-generated-generated-update-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-where-entity-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-generated-generatortype-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basic-nclob-sql-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basic-blob-sql-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-database-generated-value-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-no-filter-entity-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-filter-collection-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-where-join-table-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-filter-entity-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-filter-join-table-collection-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-generated-generated-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-filter-sql-fragment-alias-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basic-custom-type-bitsetusertype-persistence-sql-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-generated-updatetimestamp-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-generated-creationtimestamp-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-column-formula-persistence-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basic-clob-sql-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-filter-entity-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-no-filter-collection-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-generated-generatortype-update-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basic-custom-type-bitsettype-persistence-sql-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-no-filter-join-table-collection-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-map-unidirectional-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-unidirectional-ordered-list-order-by-select-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-bidirectional-bag-orphan-removal-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-map-key-class-fetch-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-map-key-class-mapping-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-map-key-class-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-map-bidirectional-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-bidirectional-ordered-list-order-column-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-unidirectional-bag-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-bidirectional-bag-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-map-custom-key-type-sql-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-map-value-type-entity-key-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-unidirectional-ordered-list-order-column-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-customizing-ordered-by-sql-clause-fetching-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-unidirectional-ordered-list-order-column-select-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections-array-binary-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-model-dynamic-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-one-to-many-bidirectional-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-one-to-many-unidirectional-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-many-to-many-unidirectional-remove-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-joincolumnorformula-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-one-to-one-unidirectional-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-many-to-one-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-joinformula-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-many-to-many-unidirectional-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-many-to-many-bidirectional-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-any-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-joincolumnorformula-fetching-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-one-to-one-bidirectional-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-many-to-any-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-any-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-many-to-any-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associations-many-to-many-bidirectional-with-link-entity-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddable-target-fetching-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddable-type-association-mapping-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddable-multiple-namingstrategy-entity-mapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple-embeddable-type-mapping-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddable-type-override-mapping-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-post-table-catalog-mysql-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-post-table-schema-postgresql-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity-proxy-persist-mapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiers-generators-pooled-lo-optimizer-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiers-generators-table-unnamed-mapping-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiers-generators-table-configured-mapping-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiers-generators-table-configured-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiers-rowid-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping-types-basic-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multitenacy-hibernate-not-applying-timezone-configuration-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetching-batch-fetching-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetching-direct-vs-query-entity-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetching-direct-vs-query-direct-fetching-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetching-strategies-fetch-mode-select-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetching-lazycollection-select-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetching-strategies-fetch-mode-join-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batch-bulk-hql-ctevalueslistbulkidstrategy-delete-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batch-bulk-hql-temp-table-delete-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="events-default-listener-update-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="events-exclude-default-listener-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="events-default-listener-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sql-hibernate-entity-associations-query-many-to-one-join-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sql-jpa-entity-associations-query-one-to-many-join-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sql-hibernate-entity-associations-query-one-to-many-join-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hql-distinct-entity-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hql-distinct-projection-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple_case_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statement_select_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statement_update_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statement_delete_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="substring_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="predicate_in_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hql-distinct-entity-query-hint-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="root_entity_ref_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searched_case_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statement_insert_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="predicate_like_bnf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locking-optimistic-lock-type-all-update-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locking-jpa-query-hints-scope-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locking-follow-on-explicit-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locking-follow-on-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locking-optimistic-lock-type-dirty-update-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locking-optimistic-version-timestamp-source-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locking-buildlockrequest-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locking-jpa-query-hints-timeout-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locking-follow-on-secondary-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flushing-manual-flush-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blueprint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasource-h2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extension_point_blueprint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-where-join-table-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-where-entity-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-cascade-merge-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-filter-entity-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-by-multiple-ids-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-cascade-on-delete-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maven-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-cascade-on-delete-mapping-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-filter-join-table-collection-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-filter-entity-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-managed-state-dynamic-update-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-filter-collection-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-managed-state-update-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-filter-sql-fragment-alias-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-no-filter-collection-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-cascade-remove-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-cascade-refresh-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-no-filter-join-table-collection-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pc-no-filter-entity-query-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sql-schema-generation-domain-model-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schema-generation-columns-unique-constraint-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schema-generation-columns-unique-constraint-mapping-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schema-generation-column-default-value-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schema-generation-columns-index-mapping-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-querying-entity-relation-join-restriction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-audited-delete-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-tracking-properties-changes-queries-haschanged-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-audited-update-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-audited-validity-mapping-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-audited-rev1-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-tracking-properties-changes-queries-haschanged-and-hasnotchanged-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entities-filtering-by-entity-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-tracking-modified-entities-revchanges-after-rename-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-querying-entity-relation-nested-join-multiple-restrictions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-querying-entity-relation-join-multiple-restrictions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-revisionlog-revisionentity-persist-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-audited-validity-rev1-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-tracking-properties-changes-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-querying-entity-relation-nested-join-restriction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entities-in-clause-filtering-by-entity-identifier-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-audited-insert-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-querying-entity-relation-nested-join-multiple-restrictions-combined" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-revisionlog-custom-revision-entity-table-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entities-filtering-and-pagination" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-generateschema-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-tracking-properties-changes-queries-at-revision-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-audited-mapping-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-audited-revisions-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envers-tracking-properties-changes-mapping-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate_user_guide" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version_property" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestamp_version" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="data_access_layers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate_user_guide-docinfo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate_integration_guide" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="disabledeventpublishingserviceimpl" >
      <xs:sequence>
        <xs:element name="instance" type="disabledeventpublishingserviceimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eventpublishingservicecontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eventpublishingservice" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventpublishingserviceinitiator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eventpublishingserviceimpl" >
      <xs:sequence>
        <xs:element name="serviceregistry" type="xs:anyType" />
        <xs:element name="jmsconnectionfactoryname" type="xs:string" />
        <xs:element name="destinationname" type="xs:string" />
        <xs:element name="jms" type="xs:anyType" />
        <xs:element name="jms" type="xs:anyType" />
        <xs:element name="publisher" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="register-event-listeners-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ex3-app" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ex3-meta-inf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ex2-contributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ex3-contributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ex2-meta-inf" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="latestandgreatestconnectionproviderimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ex1-direct" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstrapserviceregistrybuilder-example" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jstree-toc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="11" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="type" type="phonetype" nillable="true" minOccurs="0" />
        <xs:element name="calls" type="call" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="callhistory" type="xs:anyType" />
        <xs:element name="repairtimestamps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="call" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="phone" nillable="true" minOccurs="0" />
        <xs:element name="timestamp" type="xs:dateTime" />
        <xs:element name="duration" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="image" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="content" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personnames" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="nickname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creditcardpayment" >
      <xs:complexContent>
       <xs:extension base="payment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addresstype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personphonecount" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="phonecount" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wiretransferpayment" >
      <xs:complexContent>
       <xs:extension base="payment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nickname" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="phones" type="phone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="addresses" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="payment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="completed" type="xs:anyType" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="acmecorpphysicalnamingstrategy" >
      <xs:sequence>
        <xs:element name="abbreviations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="acmecorpphysicalnamingstrategytest" >
      <xs:sequence>
        <xs:element name="strategy" type="acmecorpphysicalnamingstrategy" nillable="true" minOccurs="0" />
        <xs:element name="serviceregistry" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateutil" >
      <xs:sequence>
        <xs:element name="sf" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateutil" >
      <xs:sequence>
        <xs:element name="emf" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionloadertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclestoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customsqlsecondarytabletest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dimensions" >
      <xs:sequence>
        <xs:element name="length" type="xs:long" />
        <xs:element name="width" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personsummarydto" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="captain" >
      <xs:sequence>
        <xs:element name="id" type="identity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customsqltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlstoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="spaceship" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="speed" type="xs:double" />
        <xs:element name="GeneratedName" type="captain" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dimensions" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identity" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oraclecustomsqlwithstoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriatest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personwrapper" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="nickname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyinterfacetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitynameinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicembeddabletuplizer" >
      <xs:complexContent>
       <xs:extension base="pojocomponenttuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cuisine" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicinstantiator" >
      <xs:sequence>
        <xs:element name="target" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dataproxyhandler" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="data" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="pojoentitytuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tuplizertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxyhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitytypechangeaudittrackingrevisionlistenertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customrevisionentitytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryauditadresscountrytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validitystrategyaudittest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitytypechangeaudittest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryaudittest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryauditwithmodifiedflagtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="modifiedflagsaudittest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitytypechangeauditdefaulttrackingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultaudittest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indextest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uniqueconstrainttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="checktest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemagenerationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemagenerationtest.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columndefaulttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discriminatornotnullsingletabletest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tableperclasstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jointableprimarykeyjoincolumntest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singletablediscriminatorformulatest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitpolymorphismtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="domainmodelentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jointabletest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singletabletest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discriminatoroptionsnotnullsingletabletest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlocktypedirtytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlockingtimestamptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionsourcetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitlockingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlockinginstanttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlockingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlocktypealltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlocktest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalbagtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ordercolumnlistindexbasetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeyclasstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalbagorphanremovaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalbagtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestampepochtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<date>">
         <xs:sequence>
          <xs:element name="instance" type="timestampepochtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentqueue" >
      <xs:complexContent>
       <xs:extension base="persistentbag">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queuetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commadelimitedstringsjavatypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<list>">
         <xs:sequence>
          <xs:element name="delimiter" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commadelimitedstringstype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<list>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basictypeordercolumnelementcollectiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalcomparatorsortedsettest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elementcollectionmaptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basictypecollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalorderedbylisttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalsettest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddabletypeelementcollectiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderedbysqltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalorderbylisttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalordercolumnlisttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queuetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmaptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basictypeelementcollectiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalcomparatorsortedsettest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeytypetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalsortedsettest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalsettest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalsortedsettest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalordercolumnlisttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalmaptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nodynamicupdatetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadereplicatetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadelocktest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="owner" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistencecontexttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filterjointabletest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadedetachtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadeondeletetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadepersisttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="phones" type="phone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wheretest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filtertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiloadidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filtersqlfragementaliastest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wherejointabletest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadeondeletecollectiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytecodeenhancementtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascaderefreshtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascaderemovetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicupdatetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascademergetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typecategorytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bitsettype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<bitset>">
         <xs:sequence>
          <xs:element name="instance" type="bitsettype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clobstringtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitcolumnnamingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subselecttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targettest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitbasictypetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datewithtemporaltimetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nclobchararraytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="calendarwithtemporaltimestamptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instantliteraltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bitsettypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoquotingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="formulatest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bitsettypedeftest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clobchararraytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bitsetusertypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genderjavatypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<gender>">
         <xs:sequence>
          <xs:element name="instance" type="genderjavatypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nationalizedtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clobtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="quotingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bitsettypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<bitset>">
         <xs:sequence>
          <xs:element name="delimiter" type="xs:string" />
          <xs:element name="instance" type="bitsettypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bitsetusertype" >
      <xs:sequence>
        <xs:element name="instance" type="bitsetusertype" nillable="true" minOccurs="0" />
        <xs:element name="log" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetaryamountusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetaryamount" >
      <xs:sequence>
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonetypeenumeratedordinaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columntransformertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nclobstringtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitbasictypetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localdatetimewithtemporaltimetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicittypetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phonetypeenumeratedstringtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gender" >
      <xs:sequence>
        <xs:element name="code" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parenttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobbytearraytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpaquotingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nclobtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gendertype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<gender>">
         <xs:sequence>
          <xs:element name="instance" type="gendertype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumerationconvertertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datewithtemporaldatetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datewithtemporaltimestamptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumerationcustomtypetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="periodstringtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="periodstringconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="moneyconvertertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="xs:string" />
        <xs:element name="balance" type="money" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="moneyconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="moneyconverterhbmtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="money" >
      <xs:sequence>
        <xs:element name="cents" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generatortypetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inmemoryvaluegenerationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generatedtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatetimestamptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="databasevaluegenerationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creationtimestamptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddableaccesstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elementcollectionaccesstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyaccesstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldaccesstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyaccessoverridetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="author" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicentitytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleembeddabletest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nestedembeddabletest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parenttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleembeddableequivalenttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddableimplicitoverridetest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddableoverridetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targettest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rowidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitytablecatalogtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitytableschematest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idclassmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignedidentifiertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidgeneratedvaluetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedidmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutablenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naiveequalshashcodeentitytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleentitytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidcustomgeneratedvaluetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleentitytabletest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idclasstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventid" >
      <xs:sequence>
        <xs:element name="category" type="xs:anyType" />
        <xs:element name="createdon" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="eventid" nillable="true" minOccurs="0" />
        <xs:element name="key" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddediddatabasegeneratedvaluetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedidinmemorygeneratedvaluetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencegeneratornamedtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheablenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencegeneratorunnamedtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generatedidentifiertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablegeneratorunnamedtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencegeneratorconfiguredtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pooledoptimizertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablegeneratorconfiguredtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="author" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidequalshashcodeentitytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idclassgeneratedvaluetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bootstraptest" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
          <xs:element name="emf" type="xs:anyType" />
          <xs:element name="//tag::bootstrap-jpa-compliant-persistenceunit-configurable-example" type="xs:anyType" />
          <xs:element name="//tag::bootstrap-jpa-compliant-persistencecontext-exampleem" type="xs:anyType" />
          <xs:element name="//tag::bootstrap-jpa-compliant-persistencecontext-configurable-example" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jmxtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derivedidentifierprimarykeyjoincolumntest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanybidirectionalwithlinkentitytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanyunidirectionaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyunidirectionaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetooneunidirectionaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinformulatest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeidassociationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionaltwoonetomanymapsidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonebidirectionaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derivedidentifiertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalmanytomanyremovetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetooneprimarykeyjoincolumntest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonebidirectionallazytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanybidirectionaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="anytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="property" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyrepository" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="properties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoanytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integerproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanybidirectionaltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnorformulatest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonemapsidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notfoundtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionpersister" >
      <xs:complexContent>
       <xs:extension base="onetomanypersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="books" type="book" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitypersister" >
      <xs:complexContent>
       <xs:extension base="singletableentitypersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="GeneratedName" type="author" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemamultitenancytest" >
      <xs:complexContent>
       <xs:extension base="abstractmultitenancytest">
         <xs:sequence>
          <xs:element name="schema_token" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurablemultitenantconnectionprovider" >
      <xs:complexContent>
       <xs:extension base="abstractmultitenantconnectionprovider">
         <xs:sequence>
          <xs:element name="connectionprovidermap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="databasetimezonemultitenancytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="front_end_tenant" type="xs:string" />
          <xs:element name="back_end_tenant" type="xs:string" />
          <xs:element name="connectionprovidermap" type="xs:anyType" />
          <xs:element name="timezonetenantmap" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractmultitenancytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="front_end_tenant" type="xs:string" />
          <xs:element name="back_end_tenant" type="xs:string" />
          <xs:element name="connectionprovidermap" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="databasemultitenancytest" >
      <xs:complexContent>
       <xs:extension base="abstractmultitenancytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="spatialtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchmodesubselecttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchfetchingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchmodeselecttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="graphfetchingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="graphparsingtest" >
      <xs:complexContent>
       <xs:extension base="abstractentitygraphtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="directvsqueryfetchingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="profilefetchingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchmodejointest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazycollectiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commitflushtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manualflushtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alwaysflushtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushordertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateautoflushtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoflushtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultentitylistenertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interceptortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultentitylistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseentity" >
      <xs:sequence>
        <xs:element name="createdon" type="xs:anyType" />
        <xs:element name="updatedon" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listenertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlfunctionwhereclausetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="callstatistics" >
      <xs:sequence>
        <xs:element name="count" type="xs:long" />
        <xs:element name="total" type="xs:long" />
        <xs:element name="min" type="xs:long" />
        <xs:element name="max" type="xs:long" />
        <xs:element name="avg" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectdistincttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlfunctionselectclausetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityimmutabilitytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionimmutabilitytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondlevelcachetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonstrictreadwritecachetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="firstlevelcachetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schema-generation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="moneyconverterhbmtest.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 