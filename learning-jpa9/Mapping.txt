ClassDiagram.Class>> Album03 =>=>=> RelationalSchema.Table>> album03;
ClassDiagram.Class>> Movie03 =>=>=> RelationalSchema.Table>> movie03;
ClassDiagram.Class>> Book03 =>=>=> RelationalSchema.Table>> book03;
ClassDiagram.Class>> Item03 =>=>=> RelationalSchema.Table>> item03;
ClassDiagram.Class>> Book01 =>=>=> RelationalSchema.Table>> book01;
ClassDiagram.Class>> Item01 =>=>=> RelationalSchema.Table>> item01;
ClassDiagram.Class>> Album01 =>=>=> RelationalSchema.Table>> album01;
ClassDiagram.Class>> Movie01 =>=>=> RelationalSchema.Table>> movie01;
ClassDiagram.Class>> Item02 =>=>=> RelationalSchema.Table>> item02;
ClassDiagram.Class>> Movie02 =>=>=> RelationalSchema.Table>> movie02;
ClassDiagram.Class>> Album02 =>=>=> RelationalSchema.Table>> album02;
ClassDiagram.Class>> Book02 =>=>=> RelationalSchema.Table>> book02;
ClassDiagram.Class>> Seller04 =>=>=> RelationalSchema.Table>> seller04;
ClassDiagram.Class>> Member04 =>=>=> RelationalSchema.Table>> member04;
ClassDiagram.Class>> Child11 =>=>=> RelationalSchema.Table>> child11;
ClassDiagram.Class>> Parent11 =>=>=> RelationalSchema.Table>> parent11;
ClassDiagram.Class>> Parent13 =>=>=> RelationalSchema.Table>> parent13;
ClassDiagram.Class>> Child13 =>=>=> RelationalSchema.Table>> child13;
ClassDiagram.Class>> Parent10 =>=>=> RelationalSchema.Table>> parent10;
ClassDiagram.Class>> Child10 =>=>=> RelationalSchema.Table>> child10;
ClassDiagram.Class>> Parent12 =>=>=> RelationalSchema.Table>> parent12;
ClassDiagram.Class>> Child12 =>=>=> RelationalSchema.Table>> child12;
ClassDiagram.Class>> Child05 =>=>=> RelationalSchema.Table>> child05;
ClassDiagram.Class>> Parent05 =>=>=> RelationalSchema.Table>> parent05;
ClassDiagram.Class>> Child06 =>=>=> RelationalSchema.Table>> child06;
ClassDiagram.Class>> Parent06 =>=>=> RelationalSchema.Table>> parent06;
ClassDiagram.Class>> Parent07 =>=>=> RelationalSchema.Table>> parent07;
ClassDiagram.Class>> Child07 =>=>=> RelationalSchema.Table>> child07;
ClassDiagram.Class>> GrandChild07 =>=>=> RelationalSchema.Table>> grandchild07;
ClassDiagram.Class>> GrandChild08 =>=>=> RelationalSchema.Table>> grandchild08;
ClassDiagram.Class>> Parent08 =>=>=> RelationalSchema.Table>> parent08;
ClassDiagram.Class>> Child08 =>=>=> RelationalSchema.Table>> child08;
ClassDiagram.Class>> Board14 =>=>=> RelationalSchema.Table>> board14;
ClassDiagram.Class>> Board09 =>=>=> RelationalSchema.Table>> board09;
ClassDiagram.Class>> BoardDetail09 =>=>=> RelationalSchema.Table>> boarddetail09;
ClassDiagram.Attribut>> Album03.artist:String =>=>=> RelationalSchema.Column>> album03.artist;
ClassDiagram.Attribut>> Movie03.director:String =>=>=> RelationalSchema.Column>> movie03.director;
ClassDiagram.Attribut>> Movie03.actor:String =>=>=> RelationalSchema.Column>> movie03.actor;
ClassDiagram.Attribut>> Book03.author:String =>=>=> RelationalSchema.Column>> book03.author;
ClassDiagram.Attribut>> Book03.isbn:String =>=>=> RelationalSchema.Column>> book03.isbn;
ClassDiagram.Attribut>> Item03.id:Long =>=>=> RelationalSchema.Column>> item03.id PRIMARY KEY;
ClassDiagram.Attribut>> Item03.name:String =>=>=> RelationalSchema.Column>> item03.name;
ClassDiagram.Attribut>> Item03.price:int =>=>=> RelationalSchema.Column>> item03.price;
ClassDiagram.Attribut>> Book01.author:String =>=>=> RelationalSchema.Column>> book01.author;
ClassDiagram.Attribut>> Book01.isbn:String =>=>=> RelationalSchema.Column>> book01.isbn;
ClassDiagram.Attribut>> Item01.id:Long =>=>=> RelationalSchema.Column>> item01.id PRIMARY KEY;
ClassDiagram.Attribut>> Item01.name:String =>=>=> RelationalSchema.Column>> item01.name;
ClassDiagram.Attribut>> Item01.price:int =>=>=> RelationalSchema.Column>> item01.price;
ClassDiagram.Attribut>> Album01.artist:String =>=>=> RelationalSchema.Column>> album01.artist;
ClassDiagram.Attribut>> Movie01.director:String =>=>=> RelationalSchema.Column>> movie01.director;
ClassDiagram.Attribut>> Movie01.actor:String =>=>=> RelationalSchema.Column>> movie01.actor;
ClassDiagram.Attribut>> Item02.id:Long =>=>=> RelationalSchema.Column>> item02.id PRIMARY KEY;
ClassDiagram.Attribut>> Item02.//이름name:String =>=>=> RelationalSchema.Column>> item02.//이름name;
ClassDiagram.Attribut>> Item02.//가격price:int =>=>=> RelationalSchema.Column>> item02.//가격price;
ClassDiagram.Attribut>> Movie02.director:String =>=>=> RelationalSchema.Column>> movie02.director;
ClassDiagram.Attribut>> Movie02.actor:String =>=>=> RelationalSchema.Column>> movie02.actor;
ClassDiagram.Attribut>> Album02.artist:String =>=>=> RelationalSchema.Column>> album02.artist;
ClassDiagram.Attribut>> Book02.author:String =>=>=> RelationalSchema.Column>> book02.author;
ClassDiagram.Attribut>> Book02.isbn:String =>=>=> RelationalSchema.Column>> book02.isbn;
ClassDiagram.Attribut>> Seller04.//id상속//name상속shopname:String =>=>=> RelationalSchema.Column>> seller04.//id상속//name상속shopname;
ClassDiagram.Attribut>> Member04.//id오버라이딩//name상속email:String =>=>=> RelationalSchema.Column>> member04.//id오버라이딩//name상속email;
ClassDiagram.Attribut>> Child11.id:Long =>=>=> RelationalSchema.Column>> child11.id PRIMARY KEY;
ClassDiagram.Attribut>> Child11.name:String =>=>=> RelationalSchema.Column>> child11.name;
ClassDiagram.Attribut>> Parent11.id:Long =>=>=> RelationalSchema.Column>> parent11.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent11.name:String =>=>=> RelationalSchema.Column>> parent11.name;
ClassDiagram.Attribut>> Parent13.id:Long =>=>=> RelationalSchema.Column>> parent13.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent13.name:String =>=>=> RelationalSchema.Column>> parent13.name;
ClassDiagram.Attribut>> Child13.id:Long =>=>=> RelationalSchema.Column>> child13.id PRIMARY KEY;
ClassDiagram.Attribut>> Child13.name:String =>=>=> RelationalSchema.Column>> child13.name;
ClassDiagram.Attribut>> Parent10.id:Long =>=>=> RelationalSchema.Column>> parent10.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent10.name:String =>=>=> RelationalSchema.Column>> parent10.name;
ClassDiagram.Attribut>> Child10.id:Long =>=>=> RelationalSchema.Column>> child10.id PRIMARY KEY;
ClassDiagram.Attribut>> Child10.name:String =>=>=> RelationalSchema.Column>> child10.name;
ClassDiagram.Attribut>> Parent12.id:Long =>=>=> RelationalSchema.Column>> parent12.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent12.name:String =>=>=> RelationalSchema.Column>> parent12.name;
ClassDiagram.Attribut>> Child12.id:Long =>=>=> RelationalSchema.Column>> child12.id PRIMARY KEY;
ClassDiagram.Attribut>> Child12.name:String =>=>=> RelationalSchema.Column>> child12.name;
ClassDiagram.Attribut>> Child05.id:String =>=>=> RelationalSchema.Column>> child05.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent05.//parent05id.id1과연결id1:String =>=>=> RelationalSchema.Column>> parent05.//parent05id.id1과연결id1 PRIMARY KEY;
ClassDiagram.Attribut>> Parent05.id2:String =>=>=> RelationalSchema.Column>> parent05.id2 PRIMARY KEY;
ClassDiagram.Attribut>> Parent05.name:String =>=>=> RelationalSchema.Column>> parent05.name;
ClassDiagram.Attribut>> Child06.id:String =>=>=> RelationalSchema.Column>> child06.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent06.id:Parent06Id =>=>=> RelationalSchema.Column>> parent06.id;
ClassDiagram.Attribut>> Parent06.name:String =>=>=> RelationalSchema.Column>> parent06.name;
ClassDiagram.Attribut>> Parent07.id:String =>=>=> RelationalSchema.Column>> parent07.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent07.name:String =>=>=> RelationalSchema.Column>> parent07.name;
ClassDiagram.Attribut>> Child07.parent:Parent07 =>=>=> RelationalSchema.Column>> child07.parent PRIMARY KEY;
ClassDiagram.Attribut>> Child07.childid:String =>=>=> RelationalSchema.Column>> child07.childid PRIMARY KEY;
ClassDiagram.Attribut>> Child07.name:String =>=>=> RelationalSchema.Column>> child07.name;
ClassDiagram.Attribut>> GrandChild07.child:Child07 =>=>=> RelationalSchema.Column>> grandchild07.child PRIMARY KEY;
ClassDiagram.Attribut>> GrandChild07.id:String =>=>=> RelationalSchema.Column>> grandchild07.id PRIMARY KEY;
ClassDiagram.Attribut>> GrandChild07.name:String =>=>=> RelationalSchema.Column>> grandchild07.name;
ClassDiagram.Attribut>> GrandChild08.id:GrandChild08Id =>=>=> RelationalSchema.Column>> grandchild08.id;
ClassDiagram.Attribut>> GrandChild08.name:String =>=>=> RelationalSchema.Column>> grandchild08.name;
ClassDiagram.Attribut>> Parent08.id:String =>=>=> RelationalSchema.Column>> parent08.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent08.name:String =>=>=> RelationalSchema.Column>> parent08.name;
ClassDiagram.Attribut>> Child08.id:Child08Id =>=>=> RelationalSchema.Column>> child08.id;
ClassDiagram.Attribut>> Child08.name:String =>=>=> RelationalSchema.Column>> child08.name;
ClassDiagram.Attribut>> Board14.id:Long =>=>=> RelationalSchema.Column>> board14.id PRIMARY KEY;
ClassDiagram.Attribut>> Board14.title:String =>=>=> RelationalSchema.Column>> board14.title;
ClassDiagram.Attribut>> Board14.content:String =>=>=> RelationalSchema.Column>> board14.content;
ClassDiagram.Attribut>> Board09.id:Long =>=>=> RelationalSchema.Column>> board09.id PRIMARY KEY;
ClassDiagram.Attribut>> Board09.title:String =>=>=> RelationalSchema.Column>> board09.title;
ClassDiagram.Attribut>> BoardDetail09.boardid:Long =>=>=> RelationalSchema.Column>> boarddetail09.boardid PRIMARY KEY;
ClassDiagram.Attribut>> BoardDetail09.board:Board09 =>=>=> RelationalSchema.Column>> boarddetail09.board PRIMARY KEY;
ClassDiagram.Attribut>> BoardDetail09.content:String =>=>=> RelationalSchema.Column>> boarddetail09.content;
One-To-Many relationship from ClassDiagram.Class>>Parent11  to ClassDiagram.Class>>List<Child11>;
Many-To-Many relationship between ClassDiagram.Class>>Parent13  and ClassDiagram.Class>>Child13: parent13_child13(parent13_id:Parent13 [PK] #FK to Parent13,child13_id:Child13 [PK] #FK to Child13);
One-To-One relationship between ClassDiagram.Class>>Parent10  to ClassDiagram.Class>>Child10 represented by ClassDiagram.Atrribute>>child;
One-To-Many relationship from ClassDiagram.Class>>Parent12  to ClassDiagram.Class>>List<Child12>;
Many-To-One relationship from ClassDiagram.Class>>Child12  to ClassDiagram.Class>>Parent12 represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>Child05  to ClassDiagram.Class>>parent05 represented by ClassDiagram.Atrribute>>parent05_id1;
Many-To-One relationship from ClassDiagram.Class>>Child06  to ClassDiagram.Class>>parent06 represented by ClassDiagram.Atrribute>>parent06_id1;
Many-To-One relationship from ClassDiagram.Class>>Child07  to ClassDiagram.Class>>parent07 represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>GrandChild07  to ClassDiagram.Class>>child07 represented by ClassDiagram.Atrribute>>child;
Many-To-One relationship from ClassDiagram.Class>>GrandChild08  to ClassDiagram.Class>>child08 represented by ClassDiagram.Atrribute>>child;
Many-To-One relationship from ClassDiagram.Class>>Child08  to ClassDiagram.Class>>parent08 represented by ClassDiagram.Atrribute>>//@mapsid외래키와매핑한연관관계를기본키에도매핑parent;
One-To-One relationship between ClassDiagram.Class>>Board09  to ClassDiagram.Class>>boarddetail09 represented by ClassDiagram.Atrribute>>boarddetail;
One-To-One relationship between ClassDiagram.Class>>BoardDetail09  to ClassDiagram.Class>>board09 represented by ClassDiagram.Atrribute>>board;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Item03  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Item01  SubClass>>album03 SubClass>>movie03 SubClass>>book03 ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Item02   Descriminator>>DTYPE: String ;
