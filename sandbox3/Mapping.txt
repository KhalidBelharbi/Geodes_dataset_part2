ClassDiagram.Class>> Bug =>=>=> RelationalSchema.Table>> bug;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Attribut>> Bug.serialversionuid:long =>=>=> RelationalSchema.Column>> bug.serialversionuid;
ClassDiagram.Attribut>> Bug.bugid:int =>=>=> RelationalSchema.Column>> bug.bugid PRIMARY KEY;
ClassDiagram.Attribut>> Bug.description:String =>=>=> RelationalSchema.Column>> bug.description;
ClassDiagram.Attribut>> Bug.raised:Date =>=>=> RelationalSchema.Column>> bug.raised;
ClassDiagram.Attribut>> Bug.resolved:Date =>=>=> RelationalSchema.Column>> bug.resolved;
ClassDiagram.Attribut>> Employee./***/serialversionuid:long =>=>=> RelationalSchema.Column>> employee./***/serialversionuid;
ClassDiagram.Attribut>> Employee.id:int =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.email:String =>=>=> RelationalSchema.Column>> employee.email;
ClassDiagram.Attribut>> Project.serialversionuid:long =>=>=> RelationalSchema.Column>> project.serialversionuid;
ClassDiagram.Attribut>> Project.projectid:int =>=>=> RelationalSchema.Column>> project.projectid PRIMARY KEY;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name;
Many-To-One relationship from ClassDiagram.Class>>Bug  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>raisedby;
Many-To-One relationship from ClassDiagram.Class>>Bug  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>resolvedby;
Many-To-One relationship from ClassDiagram.Class>>Bug  to ClassDiagram.Class>>project represented by ClassDiagram.Atrribute>>GeneratedName;
