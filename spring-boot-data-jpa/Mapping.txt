ClassDiagram.Class>> ItemFactura =>=>=> RelationalSchema.Table>> itemfactura;
ClassDiagram.Class>> Producto =>=>=> RelationalSchema.Table>> producto;
ClassDiagram.Class>> Factura =>=>=> RelationalSchema.Table>> factura;
ClassDiagram.Class>> Cliente =>=>=> RelationalSchema.Table>> cliente;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Usuario =>=>=> RelationalSchema.Table>> usuario;
ClassDiagram.Attribut>> ItemFactura.id:Long =>=>=> RelationalSchema.Column>> itemfactura.id PRIMARY KEY;
ClassDiagram.Attribut>> ItemFactura.cantidad:Integer =>=>=> RelationalSchema.Column>> itemfactura.cantidad;
ClassDiagram.Attribut>> ItemFactura.serialversionuid:long =>=>=> RelationalSchema.Column>> itemfactura.serialversionuid;
ClassDiagram.Attribut>> Producto.id:Long =>=>=> RelationalSchema.Column>> producto.id PRIMARY KEY;
ClassDiagram.Attribut>> Producto.nombre:String =>=>=> RelationalSchema.Column>> producto.nombre;
ClassDiagram.Attribut>> Producto.precio:Double =>=>=> RelationalSchema.Column>> producto.precio;
ClassDiagram.Attribut>> Producto.createat:Date =>=>=> RelationalSchema.Column>> producto.createat;
ClassDiagram.Attribut>> Producto.serialversionuid:long =>=>=> RelationalSchema.Column>> producto.serialversionuid;
ClassDiagram.Attribut>> Factura.id:Long =>=>=> RelationalSchema.Column>> factura.id PRIMARY KEY;
ClassDiagram.Attribut>> Factura.descripcion:String =>=>=> RelationalSchema.Column>> factura.descripcion;
ClassDiagram.Attribut>> Factura.observacion:String =>=>=> RelationalSchema.Column>> factura.observacion;
ClassDiagram.Attribut>> Factura.createat:Date =>=>=> RelationalSchema.Column>> factura.createat;
ClassDiagram.Attribut>> Factura.serialversionuid:long =>=>=> RelationalSchema.Column>> factura.serialversionuid;
ClassDiagram.Attribut>> Cliente.id:Long =>=>=> RelationalSchema.Column>> cliente.id PRIMARY KEY;
ClassDiagram.Attribut>> Cliente.nombre:String =>=>=> RelationalSchema.Column>> cliente.nombre;
ClassDiagram.Attribut>> Cliente.apellido:String =>=>=> RelationalSchema.Column>> cliente.apellido;
ClassDiagram.Attribut>> Cliente.email:String =>=>=> RelationalSchema.Column>> cliente.email;
ClassDiagram.Attribut>> Cliente.createat:Date =>=>=> RelationalSchema.Column>> cliente.createat;
ClassDiagram.Attribut>> Cliente.foto:String =>=>=> RelationalSchema.Column>> cliente.foto;
ClassDiagram.Attribut>> Cliente.serialversionuid:long =>=>=> RelationalSchema.Column>> cliente.serialversionuid;
ClassDiagram.Attribut>> Role.id:Long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.authority:String =>=>=> RelationalSchema.Column>> role.authority;
ClassDiagram.Attribut>> Role./***/serialversionuid:long =>=>=> RelationalSchema.Column>> role./***/serialversionuid;
ClassDiagram.Attribut>> Usuario.id:Long =>=>=> RelationalSchema.Column>> usuario.id PRIMARY KEY;
ClassDiagram.Attribut>> Usuario.username:String =>=>=> RelationalSchema.Column>> usuario.username;
ClassDiagram.Attribut>> Usuario.password:String =>=>=> RelationalSchema.Column>> usuario.password;
ClassDiagram.Attribut>> Usuario.enabled:Boolean =>=>=> RelationalSchema.Column>> usuario.enabled;
ClassDiagram.Attribut>> Usuario./***/serialversionuid:long =>=>=> RelationalSchema.Column>> usuario./***/serialversionuid;
Many-To-One relationship from ClassDiagram.Class>>ItemFactura  to ClassDiagram.Class>>producto represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Factura  to ClassDiagram.Class>>cliente represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Factura  to ClassDiagram.Class>>List<ItemFactura>;
One-To-Many relationship from ClassDiagram.Class>>Cliente  to ClassDiagram.Class>>List<Factura>;
One-To-Many relationship from ClassDiagram.Class>>Usuario  to ClassDiagram.Class>>List<Role>;
