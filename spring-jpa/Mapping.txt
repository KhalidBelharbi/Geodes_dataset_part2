ClassDiagram.Class>> UserInfo =>=>=> RelationalSchema.Table>> userinfo;
ClassDiagram.Class>> BlueBook =>=>=> RelationalSchema.Table>> bluebook;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> RedBook =>=>=> RelationalSchema.Table>> redbook;
ClassDiagram.Class>> UserExtend =>=>=> RelationalSchema.Table>> userextend;
ClassDiagram.Class>> UserInfo2 =>=>=> RelationalSchema.Table>> userinfo2;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> UserAddress =>=>=> RelationalSchema.Table>> useraddress;
ClassDiagram.Class>> UserInfo =>=>=> RelationalSchema.Table>> userinfo;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Attribut>> UserInfo.age:Integer =>=>=> RelationalSchema.Column>> userinfo.age;
ClassDiagram.Attribut>> UserInfo.name:String =>=>=> RelationalSchema.Column>> userinfo.name PRIMARY KEY;
ClassDiagram.Attribut>> UserInfo.telephone:String =>=>=> RelationalSchema.Column>> userinfo.telephone PRIMARY KEY;
ClassDiagram.Attribut>> BlueBook.bluemark:String =>=>=> RelationalSchema.Column>> bluebook.bluemark;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> Book./***createtablebook(*colorvarchar(31)notnull,*idbigintgeneratedbydefaultasidentity,*titlevarchar(255),*blue_markvarchar(255),*red_markvarchar(255),*primarykey(id)*)*/id:Long =>=>=> RelationalSchema.Column>> book./***createtablebook(*colorvarchar(31)notnull,*idbigintgeneratedbydefaultasidentity,*titlevarchar(255),*blue_markvarchar(255),*red_markvarchar(255),*primarykey(id)*)*/id PRIMARY KEY;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> RedBook.redmark:String =>=>=> RelationalSchema.Column>> redbook.redmark;
ClassDiagram.Attribut>> UserExtend.id:Long =>=>=> RelationalSchema.Column>> userextend.id PRIMARY KEY;
ClassDiagram.Attribut>> UserExtend.userid:Long =>=>=> RelationalSchema.Column>> userextend.userid;
ClassDiagram.Attribut>> UserExtend.idcard:String =>=>=> RelationalSchema.Column>> userextend.idcard;
ClassDiagram.Attribut>> UserExtend.age:Integer =>=>=> RelationalSchema.Column>> userextend.age;
ClassDiagram.Attribut>> UserInfo2.age:Integer =>=>=> RelationalSchema.Column>> userinfo2.age;
ClassDiagram.Attribut>> UserInfo2.GeneratedName:UserInfoId2 =>=>=> RelationalSchema.Column>> userinfo2.GeneratedName;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.createdate:Instant =>=>=> RelationalSchema.Column>> user.createdate;
ClassDiagram.Attribut>> User.up:Date =>=>=> RelationalSchema.Column>> user.up;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.sex:String =>=>=> RelationalSchema.Column>> user.sex;
ClassDiagram.Attribut>> User.other:Map<String,Object> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.sex:String =>=>=> RelationalSchema.Column>> user.sex;
ClassDiagram.Attribut>> UserAddress.id:Long =>=>=> RelationalSchema.Column>> useraddress.id PRIMARY KEY;
ClassDiagram.Attribut>> UserAddress.address:String =>=>=> RelationalSchema.Column>> useraddress.address;
ClassDiagram.Attribut>> UserInfo.id:Long =>=>=> RelationalSchema.Column>> userinfo.id PRIMARY KEY;
ClassDiagram.Attribut>> UserInfo.address:String =>=>=> RelationalSchema.Column>> userinfo.address;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.sex:String =>=>=> RelationalSchema.Column>> user.sex;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<UserAddress>;
Many-To-One relationship from ClassDiagram.Class>>UserAddress  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>/***配置多对一关系*/;
One-To-One relationship between ClassDiagram.Class>>UserInfo  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>/***维护的外键关联关系，配置为一对一**altertable_info*addconstraintfkn8pl63y4abe7n0ls6topbqjh2*foreignkey(_id)*references*/;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>UserInfo represented by ClassDiagram.Atrribute>>/***配置双向关联关系，维护关联关系是拥有外键的一方（）,*只需在本实体类配置mappedby即可。*/;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Book   Descriminator>>color: String ;
