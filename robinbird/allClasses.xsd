<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="simpleclass" >
      <xs:sequence>
        <xs:element name="a" type="xs:long" />
        <xs:element name="b" type="xs:double" />
        <xs:element name="t" type="testclass" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interface3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="class2" >
      <xs:sequence>
        <xs:element name="abc" type="xs:anyType" />
        <xs:element name="d" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interface2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interface1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="class1" >
      <xs:sequence>
        <xs:element name="a,b" type="xs:long" />
        <xs:element name="c" type="xs:double" />
        <xs:element name="d" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="class1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="class1" >
      <xs:sequence>
        <xs:element name="a" type="interface1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interface1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testclass2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testclass" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="class1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="class2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="terminal" >
      <xs:sequence>
        <xs:element name="a" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testclass" >
      <xs:sequence>
        <xs:element name="abc" type="xs:anyType" />
        <xs:element name="aa" type="testclass2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtype" >
      <xs:sequence>
        <xs:element name="num" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="class1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="excludedinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="excluded" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="msgstest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="convertertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rbrepositorytest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="entitydao" nillable="true" minOccurs="0" />
        <xs:element name="repository" type="rbrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydaoimpltest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="entitydao" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonprocessingexceptionfortest" >
      <xs:complexContent>
       <xs:extension base="jsonprocessingexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="agglomerativeclusteringtest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="agglomerativeclustering" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="clusteringmethodfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="floydalgorithmtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="applicationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testutils" >
      <xs:sequence>
        <xs:element name="roottestpath" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plantumlpresentationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="java8analysertest" >
      <xs:complexContent>
       <xs:extension base="parent">
         <xs:sequence>
          <xs:element name="" type="analysiscontext" nillable="true" minOccurs="0" />
          <xs:element name="" type="java8analyser" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gmlpresentation" >
      <xs:sequence>
        <xs:element name="consideredcategories" type="relationcategory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plantumlpresentation" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="umlrelation" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="relationmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="presentation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="presentationtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="presentationfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cardinality" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="analysisjob" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="paths" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relation" >
      <xs:sequence>
        <xs:element name="collection_type_key" type="xs:string" />
        <xs:element name="owner" type="component" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="relationcategory" nillable="true" minOccurs="0" />
        <xs:element name="related" type="component" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cardinality" nillable="true" minOccurs="0" />
        <xs:element name="metadata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="analysiscontext" >
      <xs:sequence>
        <xs:element name="repository" type="rbrepository" nillable="true" minOccurs="0" />
        <xs:element name="currentcomponents" type="class" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="current" type="package" nillable="true" minOccurs="0" />
        <xs:element name="terminalclasspatterns" type="xs:anyType" />
        <xs:element name="excludedclasspatterns" type="xs:anyType" />
        <xs:element name="isparsingenum" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="componentcategory" nillable="true" minOccurs="0" />
        <xs:element name="relations" type="xs:anyType" />
        <xs:element name="metadata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primitivetype" >
      <xs:complexContent>
       <xs:extension base="component">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="analyser" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentcategory" >
      <xs:sequence>
        <xs:element name="classcategories" type="componentcategory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="container" >
      <xs:complexContent>
       <xs:extension base="component">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:complexContent>
       <xs:extension base="component">
         <xs:sequence>
          <xs:element name="delimiter" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="currentrbrepository" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="rbrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentcasts" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="function" >
      <xs:complexContent>
       <xs:extension base="component">
         <xs:sequence>
          <xs:element name="parameter_order" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accesslevel" >
      <xs:sequence>
        <xs:element name="accesslevelstrings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="varargs" >
      <xs:complexContent>
       <xs:extension base="component">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationcategory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="array" >
      <xs:complexContent>
       <xs:extension base="component">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="class" >
      <xs:complexContent>
       <xs:extension base="component">
         <xs:sequence>
          <xs:element name="template_variables_key" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="modelconstants" >
      <xs:sequence>
        <xs:element name="array_suffix" type="xs:string" />
        <xs:element name="varargs_suffix" type="xs:string" />
        <xs:element name="method_parameter_seperator" type="xs:string" />
        <xs:element name="void" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="application" >
      <xs:sequence>
        <xs:element name="shell_dir" type="xs:string" />
        <xs:element name="shelldir" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="msgs" >
      <xs:sequence>
        <xs:element name="msgmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringappender" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonobjectmapper" >
      <xs:sequence>
        <xs:element name="object_mapper" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="utils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="java8analyser" >
      <xs:complexContent>
       <xs:extension base="java8baselistener">
         <xs:sequence>
          <xs:element name="" type="analysiscontext" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nodedistance" >
      <xs:sequence>
        <xs:element name="infinite" type="nodedistance" nillable="true" minOccurs="0" />
        <xs:element name="zero" type="nodedistance" nillable="true" minOccurs="0" />
        <xs:element name="isinfinite" type="xs:anyType" />
        <xs:element name="distance" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clusteringmethod" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clusteringmethodtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clusteringnodefactory" >
      <xs:sequence>
        <xs:element name="clustering_node_type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="agglomerativeclusteringnode" >
      <xs:complexContent>
       <xs:extension base="clusteringnode">
         <xs:sequence>
          <xs:element name="score_key" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="edge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="floydalgorithm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationselectors" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationfilter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clusteringmethodfactory" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="clusteringnodefactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clusteringnode" >
      <xs:complexContent>
       <xs:extension base="component">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clusteringnodematcher" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="agglomerativeclustering" >
      <xs:sequence>
        <xs:element name="score_max" type="xs:double" />
        <xs:element name="GeneratedName" type="clusteringnodefactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidirectionaledge" >
      <xs:sequence>
        <xs:element name="1" type="component" nillable="true" minOccurs="0" />
        <xs:element name="2" type="component" nillable="true" minOccurs="0" />
        <xs:element name="weight" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="directionaledge" >
      <xs:sequence>
        <xs:element name="from" type="component" nillable="true" minOccurs="0" />
        <xs:element name="to" type="component" nillable="true" minOccurs="0" />
        <xs:element name="weight" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="robinbirdexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childentitykey" >
      <xs:sequence>
        <xs:element name="ownerid" type="xs:string" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="componentcategory" type="xs:string" />
        <xs:element name="ownerid" type="xs:string" />
        <xs:element name="metadata" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationentity" >
      <xs:sequence>
        <xs:element name="ownerid" type="xs:string" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="relationcategory" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="relatedcomponentid" type="xs:string" />
        <xs:element name="cardinality" type="xs:string" />
        <xs:element name="metadata" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rbrepository" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="entitydao" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="converter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydao" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydaoh2factory" >
      <xs:sequence>
        <xs:element name="persistent_unit" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydaoimpl" >
      <xs:sequence>
        <xs:element name="//later,ifwantstosupportmulti-threads,needtocreateemperthreadwiththis.emf" type="xs:anyType" />
        <xs:element name="//currentlyrunningwithembeddedmodeandopenthiswhenappstartsandclosewhenappends.em" type="xs:anyType" />
        <xs:element name="loadcomponententitywithid" type="xs:anyType" />
        <xs:element name="loadcomponententitywithnameandownerid" type="xs:anyType" />
        <xs:element name="loadcomponententitywithname" type="xs:anyType" />
        <xs:element name="loadcomponententitieswithcomponentcategory" type="xs:anyType" />
        <xs:element name="loadrelationentitywithparentidandid" type="xs:anyType" />
        <xs:element name="loadrelationentitieswithparentid" type="xs:anyType" />
        <xs:element name="updatecomponententity" type="xs:anyType" />
        <xs:element name="updaterelationentity" type="xs:anyType" />
        <xs:element name="deletecomponententity" type="xs:anyType" />
        <xs:element name="deleterelationentity" type="xs:anyType" />
        <xs:element name="countcomponententities" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="application" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 