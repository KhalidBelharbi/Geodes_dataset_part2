ClassDiagram.Class>> Team =>=>=> RelationalSchema.Table>> team;
ClassDiagram.Class>> MatchItem =>=>=> RelationalSchema.Table>> matchitem;
ClassDiagram.Class>> Tournament =>=>=> RelationalSchema.Table>> tournament;
ClassDiagram.Class>> PlayerAmplua =>=>=> RelationalSchema.Table>> playeramplua;
ClassDiagram.Class>> Player =>=>=> RelationalSchema.Table>> player;
ClassDiagram.Class>> Score =>=>=> RelationalSchema.Table>> score;
ClassDiagram.Class>> Stadium =>=>=> RelationalSchema.Table>> stadium;
ClassDiagram.Class>> TourmanentGroup =>=>=> RelationalSchema.Table>> tourmanentgroup;
ClassDiagram.Class>> FileStorage =>=>=> RelationalSchema.Table>> filestorage;
ClassDiagram.Class>> PlayerTeams =>=>=> RelationalSchema.Table>> playerteams;
ClassDiagram.Attribut>> Team.id:Long =>=>=> RelationalSchema.Column>> team.id PRIMARY KEY;
ClassDiagram.Attribut>> Team.name:String =>=>=> RelationalSchema.Column>> team.name;
ClassDiagram.Attribut>> Team.foundationyear:int =>=>=> RelationalSchema.Column>> team.foundationyear;
ClassDiagram.Attribut>> Team.nickname:String =>=>=> RelationalSchema.Column>> team.nickname;
ClassDiagram.Attribut>> Team.headcoach:String =>=>=> RelationalSchema.Column>> team.headcoach;
ClassDiagram.Attribut>> Team.fifarating:int =>=>=> RelationalSchema.Column>> team.fifarating;
ClassDiagram.Attribut>> Team.capitan:String =>=>=> RelationalSchema.Column>> team.capitan;
ClassDiagram.Attribut>> MatchItem.id:Long =>=>=> RelationalSchema.Column>> matchitem.id PRIMARY KEY;
ClassDiagram.Attribut>> MatchItem.match:Date =>=>=> RelationalSchema.Column>> matchitem.match;
ClassDiagram.Attribut>> MatchItem.country:String =>=>=> RelationalSchema.Column>> matchitem.country;
ClassDiagram.Attribut>> Tournament.id:Long =>=>=> RelationalSchema.Column>> tournament.id PRIMARY KEY;
ClassDiagram.Attribut>> Tournament.tournamentname:String =>=>=> RelationalSchema.Column>> tournament.tournamentname;
ClassDiagram.Attribut>> Tournament.start:Date =>=>=> RelationalSchema.Column>> tournament.start;
ClassDiagram.Attribut>> Tournament.end:Date =>=>=> RelationalSchema.Column>> tournament.end;
ClassDiagram.Attribut>> Tournament.GeneratedName:TournamentType =>=>=> RelationalSchema.Column>> tournament.GeneratedName;
ClassDiagram.Attribut>> PlayerAmplua.id:Long =>=>=> RelationalSchema.Column>> playeramplua.id PRIMARY KEY;
ClassDiagram.Attribut>> PlayerAmplua.//@column(unique:String =>=>=> RelationalSchema.Column>> playeramplua.//@column(unique;
ClassDiagram.Attribut>> Player.id:Long =>=>=> RelationalSchema.Column>> player.id PRIMARY KEY;
ClassDiagram.Attribut>> Player.fname:String =>=>=> RelationalSchema.Column>> player.fname;
ClassDiagram.Attribut>> Player.lname:String =>=>=> RelationalSchema.Column>> player.lname;
ClassDiagram.Attribut>> Player.mname:String =>=>=> RelationalSchema.Column>> player.mname;
ClassDiagram.Attribut>> Player.birth:Date =>=>=> RelationalSchema.Column>> player.birth;
ClassDiagram.Attribut>> Score.id:Long =>=>=> RelationalSchema.Column>> score.id PRIMARY KEY;
ClassDiagram.Attribut>> Score.gooaltime:Long =>=>=> RelationalSchema.Column>> score.gooaltime;
ClassDiagram.Attribut>> Score.GeneratedName:GoalType =>=>=> RelationalSchema.Column>> score.GeneratedName;
ClassDiagram.Attribut>> Stadium.id:Long =>=>=> RelationalSchema.Column>> stadium.id PRIMARY KEY;
ClassDiagram.Attribut>> Stadium.city:String =>=>=> RelationalSchema.Column>> stadium.city;
ClassDiagram.Attribut>> Stadium.name:String =>=>=> RelationalSchema.Column>> stadium.name;
ClassDiagram.Attribut>> TourmanentGroup.id:Long =>=>=> RelationalSchema.Column>> tourmanentgroup.id PRIMARY KEY;
ClassDiagram.Attribut>> TourmanentGroup.name:String =>=>=> RelationalSchema.Column>> tourmanentgroup.name;
ClassDiagram.Attribut>> FileStorage.id:String =>=>=> RelationalSchema.Column>> filestorage.id PRIMARY KEY;
ClassDiagram.Attribut>> FileStorage.filepath:String =>=>=> RelationalSchema.Column>> filestorage.filepath;
ClassDiagram.Attribut>> FileStorage.filename:String =>=>=> RelationalSchema.Column>> filestorage.filename;
ClassDiagram.Attribut>> PlayerTeams.id:Long =>=>=> RelationalSchema.Column>> playerteams.id PRIMARY KEY;
ClassDiagram.Attribut>> PlayerTeams.number:int =>=>=> RelationalSchema.Column>> playerteams.number;
ClassDiagram.Attribut>> PlayerTeams.startwork:LocalDateTime =>=>=> RelationalSchema.Column>> playerteams.startwork;
ClassDiagram.Attribut>> PlayerTeams.endwork:LocalDateTime =>=>=> RelationalSchema.Column>> playerteams.endwork;
Many-To-Many relationship between ClassDiagram.Class>>Team  and ClassDiagram.Class>>set<tourmanentgroup>: team_tourmanentgroup(team_id:Team [PK] #FK to Team,tourmanentgroup_id:set<tourmanentgroup> [PK] #FK to set<tourmanentgroup>);
Many-To-One relationship from ClassDiagram.Class>>Team  to ClassDiagram.Class>>filestorage represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>MatchItem  to ClassDiagram.Class>>team represented by ClassDiagram.Atrribute>>host;
Many-To-One relationship from ClassDiagram.Class>>MatchItem  to ClassDiagram.Class>>team represented by ClassDiagram.Atrribute>>guest;
Many-To-One relationship from ClassDiagram.Class>>MatchItem  to ClassDiagram.Class>>stadium represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Player  to ClassDiagram.Class>>playeramplua represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Player  to ClassDiagram.Class>>filestorage represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Score  to ClassDiagram.Class>>player represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Score  to ClassDiagram.Class>>matchitem represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Stadium  to ClassDiagram.Class>>filestorage represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>TourmanentGroup  to ClassDiagram.Class>>tournament represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>PlayerTeams  to ClassDiagram.Class>>player represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>PlayerTeams  to ClassDiagram.Class>>team represented by ClassDiagram.Atrribute>>GeneratedName;
