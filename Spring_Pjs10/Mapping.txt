ClassDiagram.Class>> Event =>=>=> RelationalSchema.Table>> event;
ClassDiagram.Class>> Enrollment =>=>=> RelationalSchema.Table>> enrollment;
ClassDiagram.Class>> PersistentLogins =>=>=> RelationalSchema.Table>> persistentlogins;
ClassDiagram.Class>> Zone =>=>=> RelationalSchema.Table>> zone;
ClassDiagram.Class>> Notification =>=>=> RelationalSchema.Table>> notification;
ClassDiagram.Class>> Study =>=>=> RelationalSchema.Table>> study;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> Tag =>=>=> RelationalSchema.Table>> tag;
ClassDiagram.Attribut>> Event.id:Long =>=>=> RelationalSchema.Column>> event.id PRIMARY KEY;
ClassDiagram.Attribut>> Event.title:String =>=>=> RelationalSchema.Column>> event.title;
ClassDiagram.Attribut>> Event.description:String =>=>=> RelationalSchema.Column>> event.description;
ClassDiagram.Attribut>> Event.createddatetime:LocalDateTime =>=>=> RelationalSchema.Column>> event.createddatetime;
ClassDiagram.Attribut>> Event.endenrolldatetime:LocalDateTime =>=>=> RelationalSchema.Column>> event.endenrolldatetime;
ClassDiagram.Attribut>> Event.startdatetime:LocalDateTime =>=>=> RelationalSchema.Column>> event.startdatetime;
ClassDiagram.Attribut>> Event.enddatetime:LocalDateTime =>=>=> RelationalSchema.Column>> event.enddatetime;
ClassDiagram.Attribut>> Event.limitofenrollments:Integer =>=>=> RelationalSchema.Column>> event.limitofenrollments;
ClassDiagram.Attribut>> Event.GeneratedName:EventType =>=>=> RelationalSchema.Column>> event.GeneratedName;
ClassDiagram.Attribut>> Enrollment.id:Long =>=>=> RelationalSchema.Column>> enrollment.id PRIMARY KEY;
ClassDiagram.Attribut>> Enrollment.enrolledat:LocalDateTime =>=>=> RelationalSchema.Column>> enrollment.enrolledat;
ClassDiagram.Attribut>> Enrollment.accepted:boolean =>=>=> RelationalSchema.Column>> enrollment.accepted;
ClassDiagram.Attribut>> Enrollment.attended:boolean =>=>=> RelationalSchema.Column>> enrollment.attended;
ClassDiagram.Attribut>> PersistentLogins.series:String =>=>=> RelationalSchema.Column>> persistentlogins.series PRIMARY KEY;
ClassDiagram.Attribut>> PersistentLogins.username:String =>=>=> RelationalSchema.Column>> persistentlogins.username;
ClassDiagram.Attribut>> PersistentLogins.token:String =>=>=> RelationalSchema.Column>> persistentlogins.token;
ClassDiagram.Attribut>> PersistentLogins.lastused:LocalDateTime =>=>=> RelationalSchema.Column>> persistentlogins.lastused;
ClassDiagram.Attribut>> Zone.id:Long =>=>=> RelationalSchema.Column>> zone.id PRIMARY KEY;
ClassDiagram.Attribut>> Zone.city:String =>=>=> RelationalSchema.Column>> zone.city;
ClassDiagram.Attribut>> Zone.localname:String =>=>=> RelationalSchema.Column>> zone.localname;
ClassDiagram.Attribut>> Zone.province:String =>=>=> RelationalSchema.Column>> zone.province;
ClassDiagram.Attribut>> Notification.id:Long =>=>=> RelationalSchema.Column>> notification.id PRIMARY KEY;
ClassDiagram.Attribut>> Notification.title:String =>=>=> RelationalSchema.Column>> notification.title;
ClassDiagram.Attribut>> Notification.link:String =>=>=> RelationalSchema.Column>> notification.link;
ClassDiagram.Attribut>> Notification.message:String =>=>=> RelationalSchema.Column>> notification.message;
ClassDiagram.Attribut>> Notification.checked:boolean =>=>=> RelationalSchema.Column>> notification.checked;
ClassDiagram.Attribut>> Notification.created:LocalDateTime =>=>=> RelationalSchema.Column>> notification.created;
ClassDiagram.Attribut>> Notification.GeneratedName:NotificationType =>=>=> RelationalSchema.Column>> notification.GeneratedName;
ClassDiagram.Attribut>> Study.id:Long =>=>=> RelationalSchema.Column>> study.id PRIMARY KEY;
ClassDiagram.Attribut>> Study.path:String =>=>=> RelationalSchema.Column>> study.path;
ClassDiagram.Attribut>> Study.title:String =>=>=> RelationalSchema.Column>> study.title;
ClassDiagram.Attribut>> Study.shortdescription:String =>=>=> RelationalSchema.Column>> study.shortdescription;
ClassDiagram.Attribut>> Study.fulldescription:String =>=>=> RelationalSchema.Column>> study.fulldescription;
ClassDiagram.Attribut>> Study.image:String =>=>=> RelationalSchema.Column>> study.image;
ClassDiagram.Attribut>> Study.publisheddatetime:LocalDateTime =>=>=> RelationalSchema.Column>> study.publisheddatetime;
ClassDiagram.Attribut>> Study.closeddatetime:LocalDateTime =>=>=> RelationalSchema.Column>> study.closeddatetime;
ClassDiagram.Attribut>> Study.recruitupdatedatetime:LocalDateTime =>=>=> RelationalSchema.Column>> study.recruitupdatedatetime;
ClassDiagram.Attribut>> Study.recruiting:boolean =>=>=> RelationalSchema.Column>> study.recruiting;
ClassDiagram.Attribut>> Study.published:boolean =>=>=> RelationalSchema.Column>> study.published;
ClassDiagram.Attribut>> Study.closed:boolean =>=>=> RelationalSchema.Column>> study.closed;
ClassDiagram.Attribut>> Study.usebanner:boolean =>=>=> RelationalSchema.Column>> study.usebanner;
ClassDiagram.Attribut>> Study.membercount:int =>=>=> RelationalSchema.Column>> study.membercount;
ClassDiagram.Attribut>> Account.id:Long =>=>=> RelationalSchema.Column>> account.id PRIMARY KEY;
ClassDiagram.Attribut>> Account.email:String =>=>=> RelationalSchema.Column>> account.email;
ClassDiagram.Attribut>> Account.nickname:String =>=>=> RelationalSchema.Column>> account.nickname;
ClassDiagram.Attribut>> Account.password:String =>=>=> RelationalSchema.Column>> account.password;
ClassDiagram.Attribut>> Account.emailverified:boolean =>=>=> RelationalSchema.Column>> account.emailverified;
ClassDiagram.Attribut>> Account.emailchecktoken:String =>=>=> RelationalSchema.Column>> account.emailchecktoken;
ClassDiagram.Attribut>> Account.joinedat:LocalDateTime =>=>=> RelationalSchema.Column>> account.joinedat;
ClassDiagram.Attribut>> Account.//인증메일재전송방지confirmemailat:LocalDateTime =>=>=> RelationalSchema.Column>> account.//인증메일재전송방지confirmemailat;
ClassDiagram.Attribut>> Account.bio:String =>=>=> RelationalSchema.Column>> account.bio;
ClassDiagram.Attribut>> Account.url:String =>=>=> RelationalSchema.Column>> account.url;
ClassDiagram.Attribut>> Account.occupation:String =>=>=> RelationalSchema.Column>> account.occupation;
ClassDiagram.Attribut>> Account.location:String =>=>=> RelationalSchema.Column>> account.location;
ClassDiagram.Attribut>> Account.profileimage:String =>=>=> RelationalSchema.Column>> account.profileimage;
ClassDiagram.Attribut>> Account./*알림*///스터디개설studycreatedbyemail:boolean =>=>=> RelationalSchema.Column>> account./*알림*///스터디개설studycreatedbyemail;
ClassDiagram.Attribut>> Account.studycreatedbyweb:boolean =>=>=> RelationalSchema.Column>> account.studycreatedbyweb;
ClassDiagram.Attribut>> Account.//스터디가입신청결과studyenrollmentresultbyemail:boolean =>=>=> RelationalSchema.Column>> account.//스터디가입신청결과studyenrollmentresultbyemail;
ClassDiagram.Attribut>> Account.studyenrollmentresultbyweb:boolean =>=>=> RelationalSchema.Column>> account.studyenrollmentresultbyweb;
ClassDiagram.Attribut>> Account.studyupdatedbyweb:boolean =>=>=> RelationalSchema.Column>> account.studyupdatedbyweb;
ClassDiagram.Attribut>> Account.studyupdatedbyemail:boolean =>=>=> RelationalSchema.Column>> account.studyupdatedbyemail;
ClassDiagram.Attribut>> Tag.id:Long =>=>=> RelationalSchema.Column>> tag.id PRIMARY KEY;
ClassDiagram.Attribut>> Tag.title:String =>=>=> RelationalSchema.Column>> tag.title;
Many-To-One relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>study represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>account represented by ClassDiagram.Atrribute>>createby;
One-To-Many relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>List<Enrollment>;
Many-To-One relationship from ClassDiagram.Class>>Enrollment  to ClassDiagram.Class>>event represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Enrollment  to ClassDiagram.Class>>account represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Notification  to ClassDiagram.Class>>account represented by ClassDiagram.Atrribute>>GeneratedName;
set<account>: study_set<account>(studyID:study [PK] #FK to study,set<account>ID:set<account> [PK] #FK to set<account>);
set<account>: study_set<account>(studyID:study [PK] #FK to study,set<account>ID:set<account> [PK] #FK to set<account>);study_set<account>(studyID:study [PK] #FK to study,set<account>ID:set<account> [PK] #FK to set<account>);
set<tag>: study_set<account>(studyID:study [PK] #FK to study,set<account>ID:set<account> [PK] #FK to set<account>);study_set<account>(studyID:study [PK] #FK to study,set<account>ID:set<account> [PK] #FK to set<account>);study_set<tag>(studyID:study [PK] #FK to study,set<tag>ID:set<tag> [PK] #FK to set<tag>);
set<zone>: study_set<account>(studyID:study [PK] #FK to study,set<account>ID:set<account> [PK] #FK to set<account>);study_set<account>(studyID:study [PK] #FK to study,set<account>ID:set<account> [PK] #FK to set<account>);study_set<tag>(studyID:study [PK] #FK to study,set<tag>ID:set<tag> [PK] #FK to set<tag>);study_set<zone>(studyID:study [PK] #FK to study,set<zone>ID:set<zone> [PK] #FK to set<zone>);
set<tag>: account_set<tag>(accountID:account [PK] #FK to account,set<tag>ID:set<tag> [PK] #FK to set<tag>);
set<zone>: account_set<tag>(accountID:account [PK] #FK to account,set<tag>ID:set<tag> [PK] #FK to set<tag>);account_set<zone>(accountID:account [PK] #FK to account,set<zone>ID:set<zone> [PK] #FK to set<zone>);
