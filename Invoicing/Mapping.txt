ClassDiagram.Class>> AccountingType =>=>=> RelationalSchema.Table>> accountingtype;
ClassDiagram.Class>> Region =>=>=> RelationalSchema.Table>> region;
ClassDiagram.Class>> Log =>=>=> RelationalSchema.Table>> log;
ClassDiagram.Class>> LogEvent =>=>=> RelationalSchema.Table>> logevent;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Authority =>=>=> RelationalSchema.Table>> authority;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> UserSession =>=>=> RelationalSchema.Table>> usersession;
ClassDiagram.Class>> Contract =>=>=> RelationalSchema.Table>> contract;
ClassDiagram.Class>> Accounting =>=>=> RelationalSchema.Table>> accounting;
ClassDiagram.Class>> DeliveryCompany =>=>=> RelationalSchema.Table>> deliverycompany;
ClassDiagram.Class>> GoodsType =>=>=> RelationalSchema.Table>> goodstype;
ClassDiagram.Class>> GoodsStorageTransfer =>=>=> RelationalSchema.Table>> goodsstoragetransfer;
ClassDiagram.Class>> GoodsPicture =>=>=> RelationalSchema.Table>> goodspicture;
ClassDiagram.Class>> GoodsSerialNumber =>=>=> RelationalSchema.Table>> goodsserialnumber;
ClassDiagram.Class>> GoodsUnit =>=>=> RelationalSchema.Table>> goodsunit;
ClassDiagram.Class>> GoodsStoragePriceRevise =>=>=> RelationalSchema.Table>> goodsstoragepricerevise;
ClassDiagram.Class>> GoodsStorageCheck =>=>=> RelationalSchema.Table>> goodsstoragecheck;
ClassDiagram.Class>> GoodsIssue =>=>=> RelationalSchema.Table>> goodsissue;
ClassDiagram.Class>> Goods =>=>=> RelationalSchema.Table>> goods;
ClassDiagram.Class>> GoodsStorage =>=>=> RelationalSchema.Table>> goodsstorage;
ClassDiagram.Class>> GoodsDepository =>=>=> RelationalSchema.Table>> goodsdepository;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> ProviderPaymentRecord =>=>=> RelationalSchema.Table>> providerpaymentrecord;
ClassDiagram.Class>> OrderIn =>=>=> RelationalSchema.Table>> orderin;
ClassDiagram.Class>> Provider =>=>=> RelationalSchema.Table>> provider;
ClassDiagram.Class>> ProviderType =>=>=> RelationalSchema.Table>> providertype;
ClassDiagram.Class>> ProviderContact =>=>=> RelationalSchema.Table>> providercontact;
ClassDiagram.Class>> OrderInItem =>=>=> RelationalSchema.Table>> orderinitem;
ClassDiagram.Class>> ProviderPayment =>=>=> RelationalSchema.Table>> providerpayment;
ClassDiagram.Class>> PaymentWay =>=>=> RelationalSchema.Table>> paymentway;
ClassDiagram.Class>> PaymentAccount =>=>=> RelationalSchema.Table>> paymentaccount;
ClassDiagram.Class>> CustomerType =>=>=> RelationalSchema.Table>> customertype;
ClassDiagram.Class>> OrderDelivery =>=>=> RelationalSchema.Table>> orderdelivery;
ClassDiagram.Class>> OrderOutItem =>=>=> RelationalSchema.Table>> orderoutitem;
ClassDiagram.Class>> CustomerPaymentRecord =>=>=> RelationalSchema.Table>> customerpaymentrecord;
ClassDiagram.Class>> OrderOut =>=>=> RelationalSchema.Table>> orderout;
ClassDiagram.Class>> OrderReceipt =>=>=> RelationalSchema.Table>> orderreceipt;
ClassDiagram.Class>> CustomerPayment =>=>=> RelationalSchema.Table>> customerpayment;
ClassDiagram.Class>> CustomerLevel =>=>=> RelationalSchema.Table>> customerlevel;
ClassDiagram.Class>> CustomerContact =>=>=> RelationalSchema.Table>> customercontact;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> PaymentTransfer =>=>=> RelationalSchema.Table>> paymenttransfer;
ClassDiagram.Attribut>> AccountingType.serialversionuid:long =>=>=> RelationalSchema.Column>> accountingtype.serialversionuid;
ClassDiagram.Attribut>> AccountingType.id:long =>=>=> RelationalSchema.Column>> accountingtype.id PRIMARY KEY;
ClassDiagram.Attribut>> AccountingType.name:String =>=>=> RelationalSchema.Column>> accountingtype.name;
ClassDiagram.Attribut>> AccountingType.accountingmode:AccountingModeCode =>=>=> RelationalSchema.Column>> accountingtype.accountingmode;
ClassDiagram.Attribut>> Region.serialversionuid:long =>=>=> RelationalSchema.Column>> region.serialversionuid;
ClassDiagram.Attribut>> Region.id:long =>=>=> RelationalSchema.Column>> region.id PRIMARY KEY;
ClassDiagram.Attribut>> Region.name:String =>=>=> RelationalSchema.Column>> region.name;
ClassDiagram.Attribut>> Log.serialversionuid:long =>=>=> RelationalSchema.Column>> log.serialversionuid;
ClassDiagram.Attribut>> Log.id:long =>=>=> RelationalSchema.Column>> log.id PRIMARY KEY;
ClassDiagram.Attribut>> Log.usercreate:long =>=>=> RelationalSchema.Column>> log.usercreate;
ClassDiagram.Attribut>> Log.datecreate:Timestamp =>=>=> RelationalSchema.Column>> log.datecreate;
ClassDiagram.Attribut>> Log.comment:String =>=>=> RelationalSchema.Column>> log.comment;
ClassDiagram.Attribut>> LogEvent.serialversionuid:long =>=>=> RelationalSchema.Column>> logevent.serialversionuid;
ClassDiagram.Attribut>> LogEvent.id:long =>=>=> RelationalSchema.Column>> logevent.id PRIMARY KEY;
ClassDiagram.Attribut>> LogEvent.name:String =>=>=> RelationalSchema.Column>> logevent.name;
ClassDiagram.Attribut>> LogEvent.enabled:boolean =>=>=> RelationalSchema.Column>> logevent.enabled;
ClassDiagram.Attribut>> Role.serialversionuid:long =>=>=> RelationalSchema.Column>> role.serialversionuid;
ClassDiagram.Attribut>> Role.id:long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> Role.enabled:boolean =>=>=> RelationalSchema.Column>> role.enabled;
ClassDiagram.Attribut>> Authority.serialversionuid:long =>=>=> RelationalSchema.Column>> authority.serialversionuid;
ClassDiagram.Attribut>> Authority.id:long =>=>=> RelationalSchema.Column>> authority.id PRIMARY KEY;
ClassDiagram.Attribut>> Authority.name:String =>=>=> RelationalSchema.Column>> authority.name;
ClassDiagram.Attribut>> Authority.url:String =>=>=> RelationalSchema.Column>> authority.url;
ClassDiagram.Attribut>> Authority.enabled:boolean =>=>=> RelationalSchema.Column>> authority.enabled;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.id:long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.userid:String =>=>=> RelationalSchema.Column>> user.userid;
ClassDiagram.Attribut>> User.pwd:String =>=>=> RelationalSchema.Column>> user.pwd;
ClassDiagram.Attribut>> User.passwordhint:String =>=>=> RelationalSchema.Column>> user.passwordhint;
ClassDiagram.Attribut>> User.admin:boolean =>=>=> RelationalSchema.Column>> user.admin;
ClassDiagram.Attribut>> User.enabled:boolean =>=>=> RelationalSchema.Column>> user.enabled;
ClassDiagram.Attribut>> User.accountlocked:boolean =>=>=> RelationalSchema.Column>> user.accountlocked;
ClassDiagram.Attribut>> User.credentialsexpired:boolean =>=>=> RelationalSchema.Column>> user.credentialsexpired;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.mobilephone:String =>=>=> RelationalSchema.Column>> user.mobilephone;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.netcommunityid:String =>=>=> RelationalSchema.Column>> user.netcommunityid;
ClassDiagram.Attribut>> User.birthday:Date =>=>=> RelationalSchema.Column>> user.birthday;
ClassDiagram.Attribut>> User.birthaddress:String =>=>=> RelationalSchema.Column>> user.birthaddress;
ClassDiagram.Attribut>> User.comments:String =>=>=> RelationalSchema.Column>> user.comments;
ClassDiagram.Attribut>> UserSession.serialversionuid:long =>=>=> RelationalSchema.Column>> usersession.serialversionuid;
ClassDiagram.Attribut>> UserSession.sessionid:long =>=>=> RelationalSchema.Column>> usersession.sessionid PRIMARY KEY;
ClassDiagram.Attribut>> UserSession.sessionkey:String =>=>=> RelationalSchema.Column>> usersession.sessionkey;
ClassDiagram.Attribut>> UserSession.GeneratedName:User =>=>=> RelationalSchema.Column>> usersession.GeneratedName;
ClassDiagram.Attribut>> UserSession.created:Date =>=>=> RelationalSchema.Column>> usersession.created;
ClassDiagram.Attribut>> Contract.serialversionuid:long =>=>=> RelationalSchema.Column>> contract.serialversionuid;
ClassDiagram.Attribut>> Contract.id:long =>=>=> RelationalSchema.Column>> contract.id PRIMARY KEY;
ClassDiagram.Attribut>> Contract.name:String =>=>=> RelationalSchema.Column>> contract.name;
ClassDiagram.Attribut>> Contract.dealmoney:float =>=>=> RelationalSchema.Column>> contract.dealmoney;
ClassDiagram.Attribut>> Contract.typecode:ContractTypeCode =>=>=> RelationalSchema.Column>> contract.typecode;
ClassDiagram.Attribut>> Contract.source:String =>=>=> RelationalSchema.Column>> contract.source;
ClassDiagram.Attribut>> Contract.created:Date =>=>=> RelationalSchema.Column>> contract.created;
ClassDiagram.Attribut>> Contract.usercreatedby:long =>=>=> RelationalSchema.Column>> contract.usercreatedby;
ClassDiagram.Attribut>> Contract.comment:String =>=>=> RelationalSchema.Column>> contract.comment;
ClassDiagram.Attribut>> Contract.filepath:String =>=>=> RelationalSchema.Column>> contract.filepath;
ClassDiagram.Attribut>> Accounting.serialversionuid:long =>=>=> RelationalSchema.Column>> accounting.serialversionuid;
ClassDiagram.Attribut>> Accounting.id:long =>=>=> RelationalSchema.Column>> accounting.id PRIMARY KEY;
ClassDiagram.Attribut>> Accounting.money:float =>=>=> RelationalSchema.Column>> accounting.money;
ClassDiagram.Attribut>> Accounting.GeneratedName:PaymentAccount =>=>=> RelationalSchema.Column>> accounting.GeneratedName;
ClassDiagram.Attribut>> Accounting./***对象，如供应商或客户*/customerid:String =>=>=> RelationalSchema.Column>> accounting./***对象，如供应商或客户*/customerid;
ClassDiagram.Attribut>> Accounting./***来源，如入库单或出库单*/orderid:String =>=>=> RelationalSchema.Column>> accounting./***来源，如入库单或出库单*/orderid;
ClassDiagram.Attribut>> Accounting.comment:String =>=>=> RelationalSchema.Column>> accounting.comment;
ClassDiagram.Attribut>> Accounting.created:Timestamp =>=>=> RelationalSchema.Column>> accounting.created;
ClassDiagram.Attribut>> Accounting.updated:Timestamp =>=>=> RelationalSchema.Column>> accounting.updated;
ClassDiagram.Attribut>> Accounting.usercreatedby:long =>=>=> RelationalSchema.Column>> accounting.usercreatedby;
ClassDiagram.Attribut>> Accounting.userupdatedby:long =>=>=> RelationalSchema.Column>> accounting.userupdatedby;
ClassDiagram.Attribut>> DeliveryCompany.serialversionuid:long =>=>=> RelationalSchema.Column>> deliverycompany.serialversionuid;
ClassDiagram.Attribut>> DeliveryCompany.id:long =>=>=> RelationalSchema.Column>> deliverycompany.id PRIMARY KEY;
ClassDiagram.Attribut>> DeliveryCompany.name:String =>=>=> RelationalSchema.Column>> deliverycompany.name;
ClassDiagram.Attribut>> GoodsType.serialversionuid:long =>=>=> RelationalSchema.Column>> goodstype.serialversionuid;
ClassDiagram.Attribut>> GoodsType.id:long =>=>=> RelationalSchema.Column>> goodstype.id PRIMARY KEY;
ClassDiagram.Attribut>> GoodsType.name:String =>=>=> RelationalSchema.Column>> goodstype.name;
ClassDiagram.Attribut>> GoodsType./***parenttype*/parent:GoodsType =>=>=> RelationalSchema.Column>> goodstype./***parenttype*/parent;
ClassDiagram.Attribut>> GoodsStorageTransfer.serialversionuid:long =>=>=> RelationalSchema.Column>> goodsstoragetransfer.serialversionuid;
ClassDiagram.Attribut>> GoodsStorageTransfer.id:long =>=>=> RelationalSchema.Column>> goodsstoragetransfer.id PRIMARY KEY;
ClassDiagram.Attribut>> GoodsStorageTransfer.bid:String =>=>=> RelationalSchema.Column>> goodsstoragetransfer.bid;
ClassDiagram.Attribut>> GoodsStorageTransfer.GeneratedName:Goods =>=>=> RelationalSchema.Column>> goodsstoragetransfer.GeneratedName;
ClassDiagram.Attribut>> GoodsStorageTransfer.amountbeforetransfer:long =>=>=> RelationalSchema.Column>> goodsstoragetransfer.amountbeforetransfer;
ClassDiagram.Attribut>> GoodsStorageTransfer.amountaftertransfer:long =>=>=> RelationalSchema.Column>> goodsstoragetransfer.amountaftertransfer;
ClassDiagram.Attribut>> GoodsStorageTransfer.created:Date =>=>=> RelationalSchema.Column>> goodsstoragetransfer.created;
ClassDiagram.Attribut>> GoodsStorageTransfer.usercreatedby:long =>=>=> RelationalSchema.Column>> goodsstoragetransfer.usercreatedby;
ClassDiagram.Attribut>> GoodsStorageTransfer.comment:String =>=>=> RelationalSchema.Column>> goodsstoragetransfer.comment;
ClassDiagram.Attribut>> GoodsPicture.serialversionuid:long =>=>=> RelationalSchema.Column>> goodspicture.serialversionuid;
ClassDiagram.Attribut>> GoodsPicture.id:long =>=>=> RelationalSchema.Column>> goodspicture.id PRIMARY KEY;
ClassDiagram.Attribut>> GoodsPicture.filename:String =>=>=> RelationalSchema.Column>> goodspicture.filename;
ClassDiagram.Attribut>> GoodsPicture.contenttype:String =>=>=> RelationalSchema.Column>> goodspicture.contenttype;
ClassDiagram.Attribut>> GoodsPicture.GeneratedName:Goods =>=>=> RelationalSchema.Column>> goodspicture.GeneratedName;
ClassDiagram.Attribut>> GoodsSerialNumber.serialversionuid:long =>=>=> RelationalSchema.Column>> goodsserialnumber.serialversionuid;
ClassDiagram.Attribut>> GoodsSerialNumber.id:long =>=>=> RelationalSchema.Column>> goodsserialnumber.id PRIMARY KEY;
ClassDiagram.Attribut>> GoodsSerialNumber.serialnumber:String =>=>=> RelationalSchema.Column>> goodsserialnumber.serialnumber;
ClassDiagram.Attribut>> GoodsSerialNumber.GeneratedName:Goods =>=>=> RelationalSchema.Column>> goodsserialnumber.GeneratedName;
ClassDiagram.Attribut>> GoodsSerialNumber.GeneratedName:OrderInItem =>=>=> RelationalSchema.Column>> goodsserialnumber.GeneratedName;
ClassDiagram.Attribut>> GoodsSerialNumber.GeneratedName:OrderOutItem =>=>=> RelationalSchema.Column>> goodsserialnumber.GeneratedName;
ClassDiagram.Attribut>> GoodsUnit.serialversionuid:long =>=>=> RelationalSchema.Column>> goodsunit.serialversionuid;
ClassDiagram.Attribut>> GoodsUnit.id:long =>=>=> RelationalSchema.Column>> goodsunit.id PRIMARY KEY;
ClassDiagram.Attribut>> GoodsUnit.name:String =>=>=> RelationalSchema.Column>> goodsunit.name;
ClassDiagram.Attribut>> GoodsStoragePriceRevise.serialversionuid:long =>=>=> RelationalSchema.Column>> goodsstoragepricerevise.serialversionuid;
ClassDiagram.Attribut>> GoodsStoragePriceRevise.id:long =>=>=> RelationalSchema.Column>> goodsstoragepricerevise.id PRIMARY KEY;
ClassDiagram.Attribut>> GoodsStoragePriceRevise.bid:String =>=>=> RelationalSchema.Column>> goodsstoragepricerevise.bid;
ClassDiagram.Attribut>> GoodsStoragePriceRevise.GeneratedName:Goods =>=>=> RelationalSchema.Column>> goodsstoragepricerevise.GeneratedName;
ClassDiagram.Attribut>> GoodsStoragePriceRevise.pricebeforerevise:float =>=>=> RelationalSchema.Column>> goodsstoragepricerevise.pricebeforerevise;
ClassDiagram.Attribut>> GoodsStoragePriceRevise.priceafterrevise:float =>=>=> RelationalSchema.Column>> goodsstoragepricerevise.priceafterrevise;
ClassDiagram.Attribut>> GoodsStoragePriceRevise.created:Date =>=>=> RelationalSchema.Column>> goodsstoragepricerevise.created;
ClassDiagram.Attribut>> GoodsStoragePriceRevise.usercreatedby:long =>=>=> RelationalSchema.Column>> goodsstoragepricerevise.usercreatedby;
ClassDiagram.Attribut>> GoodsStorageCheck.serialversionuid:long =>=>=> RelationalSchema.Column>> goodsstoragecheck.serialversionuid;
ClassDiagram.Attribut>> GoodsStorageCheck.id:long =>=>=> RelationalSchema.Column>> goodsstoragecheck.id PRIMARY KEY;
ClassDiagram.Attribut>> GoodsStorageCheck.bid:String =>=>=> RelationalSchema.Column>> goodsstoragecheck.bid;
ClassDiagram.Attribut>> GoodsStorageCheck.GeneratedName:Goods =>=>=> RelationalSchema.Column>> goodsstoragecheck.GeneratedName;
ClassDiagram.Attribut>> GoodsStorageCheck.amountbeforecheck:long =>=>=> RelationalSchema.Column>> goodsstoragecheck.amountbeforecheck;
ClassDiagram.Attribut>> GoodsStorageCheck.amountaftercheck:long =>=>=> RelationalSchema.Column>> goodsstoragecheck.amountaftercheck;
ClassDiagram.Attribut>> GoodsStorageCheck.created:Date =>=>=> RelationalSchema.Column>> goodsstoragecheck.created;
ClassDiagram.Attribut>> GoodsStorageCheck.usercreatedby:long =>=>=> RelationalSchema.Column>> goodsstoragecheck.usercreatedby;
ClassDiagram.Attribut>> GoodsIssue.serialversionuid:long =>=>=> RelationalSchema.Column>> goodsissue.serialversionuid;
ClassDiagram.Attribut>> GoodsIssue.id:long =>=>=> RelationalSchema.Column>> goodsissue.id PRIMARY KEY;
ClassDiagram.Attribut>> GoodsIssue.description:String =>=>=> RelationalSchema.Column>> goodsissue.description;
ClassDiagram.Attribut>> GoodsIssue.comment:String =>=>=> RelationalSchema.Column>> goodsissue.comment;
ClassDiagram.Attribut>> GoodsIssue.statuscode:GoodsIssueStatusCode =>=>=> RelationalSchema.Column>> goodsissue.statuscode;
ClassDiagram.Attribut>> GoodsIssue./***谁负责处理*/signuser:long =>=>=> RelationalSchema.Column>> goodsissue./***谁负责处理*/signuser;
ClassDiagram.Attribut>> GoodsIssue.userupdatedby:long =>=>=> RelationalSchema.Column>> goodsissue.userupdatedby;
ClassDiagram.Attribut>> GoodsIssue.created:Date =>=>=> RelationalSchema.Column>> goodsissue.created;
ClassDiagram.Attribut>> GoodsIssue./***最后一次更新的时间*/lastupd:Date =>=>=> RelationalSchema.Column>> goodsissue./***最后一次更新的时间*/lastupd;
ClassDiagram.Attribut>> GoodsIssue.GeneratedName:Goods =>=>=> RelationalSchema.Column>> goodsissue.GeneratedName;
ClassDiagram.Attribut>> GoodsIssue.goodsserial:String =>=>=> RelationalSchema.Column>> goodsissue.goodsserial;
ClassDiagram.Attribut>> GoodsIssue.GeneratedName:Customer =>=>=> RelationalSchema.Column>> goodsissue.GeneratedName;
ClassDiagram.Attribut>> GoodsIssue.GeneratedName:Provider =>=>=> RelationalSchema.Column>> goodsissue.GeneratedName;
ClassDiagram.Attribut>> Goods.serialversionuid:long =>=>=> RelationalSchema.Column>> goods.serialversionuid;
ClassDiagram.Attribut>> Goods.id:long =>=>=> RelationalSchema.Column>> goods.id PRIMARY KEY;
ClassDiagram.Attribut>> Goods.name:String =>=>=> RelationalSchema.Column>> goods.name;
ClassDiagram.Attribut>> Goods.shortcode:String =>=>=> RelationalSchema.Column>> goods.shortcode;
ClassDiagram.Attribut>> Goods.specificationmodel:String =>=>=> RelationalSchema.Column>> goods.specificationmodel;
ClassDiagram.Attribut>> Goods.barcode:String =>=>=> RelationalSchema.Column>> goods.barcode;
ClassDiagram.Attribut>> Goods.comment:String =>=>=> RelationalSchema.Column>> goods.comment;
ClassDiagram.Attribut>> Goods./***成本价*/averageprice:float =>=>=> RelationalSchema.Column>> goods./***成本价*/averageprice;
ClassDiagram.Attribut>> Goods./***预计进货价*/importprice:float =>=>=> RelationalSchema.Column>> goods./***预计进货价*/importprice;
ClassDiagram.Attribut>> Goods./***零售参考价*/retailprice:float =>=>=> RelationalSchema.Column>> goods./***零售参考价*/retailprice;
ClassDiagram.Attribut>> Goods./***批发参考价*/tradeprice:float =>=>=> RelationalSchema.Column>> goods./***批发参考价*/tradeprice;
ClassDiagram.Attribut>> Goods./***最低库存*/minstock:long =>=>=> RelationalSchema.Column>> goods./***最低库存*/minstock;
ClassDiagram.Attribut>> Goods./***最高库存*/maxstock:long =>=>=> RelationalSchema.Column>> goods./***最高库存*/maxstock;
ClassDiagram.Attribut>> Goods.userupdatedby:long =>=>=> RelationalSchema.Column>> goods.userupdatedby;
ClassDiagram.Attribut>> Goods.lastupd:Date =>=>=> RelationalSchema.Column>> goods.lastupd;
ClassDiagram.Attribut>> Goods./***库存*/storages:List<GoodsStorage> =>=>=> RelationalSchema.Column>> goods./***库存*/storages;
ClassDiagram.Attribut>> GoodsStorage.serialversionuid:long =>=>=> RelationalSchema.Column>> goodsstorage.serialversionuid;
ClassDiagram.Attribut>> GoodsStorage.id:long =>=>=> RelationalSchema.Column>> goodsstorage.id PRIMARY KEY;
ClassDiagram.Attribut>> GoodsStorage.amount:long =>=>=> RelationalSchema.Column>> goodsstorage.amount;
ClassDiagram.Attribut>> GoodsStorage.price:float =>=>=> RelationalSchema.Column>> goodsstorage.price;
ClassDiagram.Attribut>> GoodsStorage.worth:float =>=>=> RelationalSchema.Column>> goodsstorage.worth;
ClassDiagram.Attribut>> GoodsStorage.GeneratedName:Goods =>=>=> RelationalSchema.Column>> goodsstorage.GeneratedName;
ClassDiagram.Attribut>> GoodsDepository.serialversionuid:long =>=>=> RelationalSchema.Column>> goodsdepository.serialversionuid;
ClassDiagram.Attribut>> GoodsDepository.id:long =>=>=> RelationalSchema.Column>> goodsdepository.id PRIMARY KEY;
ClassDiagram.Attribut>> GoodsDepository.name:String =>=>=> RelationalSchema.Column>> goodsdepository.name;
ClassDiagram.Attribut>> GoodsDepository.enabled:boolean =>=>=> RelationalSchema.Column>> goodsdepository.enabled;
ClassDiagram.Attribut>> Project.serialversionuid:long =>=>=> RelationalSchema.Column>> project.serialversionuid;
ClassDiagram.Attribut>> Project.id:long =>=>=> RelationalSchema.Column>> project.id PRIMARY KEY;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name;
ClassDiagram.Attribut>> Project.GeneratedName:Customer =>=>=> RelationalSchema.Column>> project.GeneratedName;
ClassDiagram.Attribut>> Project.start:Date =>=>=> RelationalSchema.Column>> project.start;
ClassDiagram.Attribut>> Project.end:Date =>=>=> RelationalSchema.Column>> project.end;
ClassDiagram.Attribut>> Project.comment:String =>=>=> RelationalSchema.Column>> project.comment;
ClassDiagram.Attribut>> Project.statuscode:ProjectStatusCode =>=>=> RelationalSchema.Column>> project.statuscode;
ClassDiagram.Attribut>> Project./***施工费*/constructionfee:float =>=>=> RelationalSchema.Column>> project./***施工费*/constructionfee;
ClassDiagram.Attribut>> Project./***辅材及其他费*/otherfee:float =>=>=> RelationalSchema.Column>> project./***辅材及其他费*/otherfee;
ClassDiagram.Attribut>> Project.usercreatedby:long =>=>=> RelationalSchema.Column>> project.usercreatedby;
ClassDiagram.Attribut>> Project.userupdatedby:long =>=>=> RelationalSchema.Column>> project.userupdatedby;
ClassDiagram.Attribut>> Project./***设备费*/orders:List<OrderOut> =>=>=> RelationalSchema.Column>> project./***设备费*/orders;
ClassDiagram.Attribut>> ProviderPaymentRecord.serialversionuid:long =>=>=> RelationalSchema.Column>> providerpaymentrecord.serialversionuid;
ClassDiagram.Attribut>> ProviderPaymentRecord.id:long =>=>=> RelationalSchema.Column>> providerpaymentrecord.id PRIMARY KEY;
ClassDiagram.Attribut>> ProviderPaymentRecord.paid:float =>=>=> RelationalSchema.Column>> providerpaymentrecord.paid;
ClassDiagram.Attribut>> ProviderPaymentRecord.comment:String =>=>=> RelationalSchema.Column>> providerpaymentrecord.comment;
ClassDiagram.Attribut>> ProviderPaymentRecord.GeneratedName:PaymentAccount =>=>=> RelationalSchema.Column>> providerpaymentrecord.GeneratedName;
ClassDiagram.Attribut>> ProviderPaymentRecord.GeneratedName:PaymentWay =>=>=> RelationalSchema.Column>> providerpaymentrecord.GeneratedName;
ClassDiagram.Attribut>> ProviderPaymentRecord.GeneratedName:OrderIn =>=>=> RelationalSchema.Column>> providerpaymentrecord.GeneratedName;
ClassDiagram.Attribut>> OrderIn.serialversionuid:long =>=>=> RelationalSchema.Column>> orderin.serialversionuid;
ClassDiagram.Attribut>> OrderIn.id:long =>=>=> RelationalSchema.Column>> orderin.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderIn.bid:String =>=>=> RelationalSchema.Column>> orderin.bid;
ClassDiagram.Attribut>> OrderIn./***交易额*/dealmoney:float =>=>=> RelationalSchema.Column>> orderin./***交易额*/dealmoney;
ClassDiagram.Attribut>> OrderIn./***折扣率*/discount:float =>=>=> RelationalSchema.Column>> orderin./***折扣率*/discount;
ClassDiagram.Attribut>> OrderIn./***应收款*/receivable:float =>=>=> RelationalSchema.Column>> orderin./***应收款*/receivable;
ClassDiagram.Attribut>> OrderIn./***实收额*/paidmoney:float =>=>=> RelationalSchema.Column>> orderin./***实收额*/paidmoney;
ClassDiagram.Attribut>> OrderIn./***操作员*/usercreatedby:long =>=>=> RelationalSchema.Column>> orderin./***操作员*/usercreatedby;
ClassDiagram.Attribut>> OrderIn.userupdatedby:long =>=>=> RelationalSchema.Column>> orderin.userupdatedby;
ClassDiagram.Attribut>> OrderIn.datecreated:Timestamp =>=>=> RelationalSchema.Column>> orderin.datecreated;
ClassDiagram.Attribut>> OrderIn.lastupdated:Timestamp =>=>=> RelationalSchema.Column>> orderin.lastupdated;
ClassDiagram.Attribut>> OrderIn.comment:String =>=>=> RelationalSchema.Column>> orderin.comment;
ClassDiagram.Attribut>> OrderIn.statuscode:OrderStatusCode =>=>=> RelationalSchema.Column>> orderin.statuscode;
ClassDiagram.Attribut>> OrderIn.typecode:OrderTypeCode =>=>=> RelationalSchema.Column>> orderin.typecode;
ClassDiagram.Attribut>> OrderIn.GeneratedName:Provider =>=>=> RelationalSchema.Column>> orderin.GeneratedName;
ClassDiagram.Attribut>> Provider.serialversionuid:long =>=>=> RelationalSchema.Column>> provider.serialversionuid;
ClassDiagram.Attribut>> Provider.id:long =>=>=> RelationalSchema.Column>> provider.id PRIMARY KEY;
ClassDiagram.Attribut>> Provider.shortname:String =>=>=> RelationalSchema.Column>> provider.shortname;
ClassDiagram.Attribut>> Provider.shortcode:String =>=>=> RelationalSchema.Column>> provider.shortcode;
ClassDiagram.Attribut>> Provider.unpaymoney:float =>=>=> RelationalSchema.Column>> provider.unpaymoney;
ClassDiagram.Attribut>> Provider.sharable:boolean =>=>=> RelationalSchema.Column>> provider.sharable;
ClassDiagram.Attribut>> Provider.deleted:boolean =>=>=> RelationalSchema.Column>> provider.deleted;
ClassDiagram.Attribut>> Provider.comment:String =>=>=> RelationalSchema.Column>> provider.comment;
ClassDiagram.Attribut>> Provider.usersigned:long =>=>=> RelationalSchema.Column>> provider.usersigned;
ClassDiagram.Attribut>> Provider.GeneratedName:ProviderType =>=>=> RelationalSchema.Column>> provider.GeneratedName;
ClassDiagram.Attribut>> ProviderType.serialversionuid:long =>=>=> RelationalSchema.Column>> providertype.serialversionuid;
ClassDiagram.Attribut>> ProviderType.id:long =>=>=> RelationalSchema.Column>> providertype.id PRIMARY KEY;
ClassDiagram.Attribut>> ProviderType.name:String =>=>=> RelationalSchema.Column>> providertype.name;
ClassDiagram.Attribut>> ProviderContact.serialversionuid:long =>=>=> RelationalSchema.Column>> providercontact.serialversionuid;
ClassDiagram.Attribut>> ProviderContact.id:long =>=>=> RelationalSchema.Column>> providercontact.id PRIMARY KEY;
ClassDiagram.Attribut>> ProviderContact.name:String =>=>=> RelationalSchema.Column>> providercontact.name;
ClassDiagram.Attribut>> ProviderContact.mobilephone:String =>=>=> RelationalSchema.Column>> providercontact.mobilephone;
ClassDiagram.Attribut>> ProviderContact.fixedphone:String =>=>=> RelationalSchema.Column>> providercontact.fixedphone;
ClassDiagram.Attribut>> ProviderContact.netcommunityid:String =>=>=> RelationalSchema.Column>> providercontact.netcommunityid;
ClassDiagram.Attribut>> ProviderContact.email:String =>=>=> RelationalSchema.Column>> providercontact.email;
ClassDiagram.Attribut>> ProviderContact.address:String =>=>=> RelationalSchema.Column>> providercontact.address;
ClassDiagram.Attribut>> ProviderContact.isprefered:boolean =>=>=> RelationalSchema.Column>> providercontact.isprefered;
ClassDiagram.Attribut>> ProviderContact.GeneratedName:Provider =>=>=> RelationalSchema.Column>> providercontact.GeneratedName;
ClassDiagram.Attribut>> OrderInItem.serialversionuid:long =>=>=> RelationalSchema.Column>> orderinitem.serialversionuid;
ClassDiagram.Attribut>> OrderInItem.id:long =>=>=> RelationalSchema.Column>> orderinitem.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderInItem.unitprice:float =>=>=> RelationalSchema.Column>> orderinitem.unitprice;
ClassDiagram.Attribut>> OrderInItem.amount:long =>=>=> RelationalSchema.Column>> orderinitem.amount;
ClassDiagram.Attribut>> OrderInItem.sum:float =>=>=> RelationalSchema.Column>> orderinitem.sum;
ClassDiagram.Attribut>> OrderInItem.comment:String =>=>=> RelationalSchema.Column>> orderinitem.comment;
ClassDiagram.Attribut>> OrderInItem.GeneratedName:Goods =>=>=> RelationalSchema.Column>> orderinitem.GeneratedName;
ClassDiagram.Attribut>> OrderInItem.GeneratedName:OrderIn =>=>=> RelationalSchema.Column>> orderinitem.GeneratedName;
ClassDiagram.Attribut>> ProviderPayment.serialversionuid:long =>=>=> RelationalSchema.Column>> providerpayment.serialversionuid;
ClassDiagram.Attribut>> ProviderPayment.id:long =>=>=> RelationalSchema.Column>> providerpayment.id PRIMARY KEY;
ClassDiagram.Attribut>> ProviderPayment.bid:String =>=>=> RelationalSchema.Column>> providerpayment.bid;
ClassDiagram.Attribut>> ProviderPayment.typecode:PaymentTypeCode =>=>=> RelationalSchema.Column>> providerpayment.typecode;
ClassDiagram.Attribut>> ProviderPayment.receiptid:String =>=>=> RelationalSchema.Column>> providerpayment.receiptid;
ClassDiagram.Attribut>> ProviderPayment.paiddate:Timestamp =>=>=> RelationalSchema.Column>> providerpayment.paiddate;
ClassDiagram.Attribut>> ProviderPayment.addunpaid:float =>=>=> RelationalSchema.Column>> providerpayment.addunpaid;
ClassDiagram.Attribut>> ProviderPayment.remainunpaid:float =>=>=> RelationalSchema.Column>> providerpayment.remainunpaid;
ClassDiagram.Attribut>> ProviderPayment.usercreatedby:long =>=>=> RelationalSchema.Column>> providerpayment.usercreatedby;
ClassDiagram.Attribut>> ProviderPayment.comment:String =>=>=> RelationalSchema.Column>> providerpayment.comment;
ClassDiagram.Attribut>> ProviderPayment.GeneratedName:Provider =>=>=> RelationalSchema.Column>> providerpayment.GeneratedName;
ClassDiagram.Attribut>> PaymentWay.serialversionuid:long =>=>=> RelationalSchema.Column>> paymentway.serialversionuid;
ClassDiagram.Attribut>> PaymentWay.id:long =>=>=> RelationalSchema.Column>> paymentway.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentWay.name:String =>=>=> RelationalSchema.Column>> paymentway.name;
ClassDiagram.Attribut>> PaymentAccount.serialversionuid:long =>=>=> RelationalSchema.Column>> paymentaccount.serialversionuid;
ClassDiagram.Attribut>> PaymentAccount.id:long =>=>=> RelationalSchema.Column>> paymentaccount.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentAccount.name:String =>=>=> RelationalSchema.Column>> paymentaccount.name;
ClassDiagram.Attribut>> PaymentAccount.accountid:String =>=>=> RelationalSchema.Column>> paymentaccount.accountid;
ClassDiagram.Attribut>> PaymentAccount.remainmoney:float =>=>=> RelationalSchema.Column>> paymentaccount.remainmoney;
ClassDiagram.Attribut>> PaymentAccount.accountmode:PaymentAccountMode =>=>=> RelationalSchema.Column>> paymentaccount.accountmode;
ClassDiagram.Attribut>> CustomerType.serialversionuid:long =>=>=> RelationalSchema.Column>> customertype.serialversionuid;
ClassDiagram.Attribut>> CustomerType.id:long =>=>=> RelationalSchema.Column>> customertype.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerType.name:String =>=>=> RelationalSchema.Column>> customertype.name;
ClassDiagram.Attribut>> OrderDelivery.serialversionuid:long =>=>=> RelationalSchema.Column>> orderdelivery.serialversionuid;
ClassDiagram.Attribut>> OrderDelivery.id:long =>=>=> RelationalSchema.Column>> orderdelivery.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderDelivery.number:String =>=>=> RelationalSchema.Column>> orderdelivery.number;
ClassDiagram.Attribut>> OrderDelivery.amount:int =>=>=> RelationalSchema.Column>> orderdelivery.amount;
ClassDiagram.Attribut>> OrderDelivery.fee:float =>=>=> RelationalSchema.Column>> orderdelivery.fee;
ClassDiagram.Attribut>> OrderDelivery.paid:float =>=>=> RelationalSchema.Column>> orderdelivery.paid;
ClassDiagram.Attribut>> OrderDelivery.created:Date =>=>=> RelationalSchema.Column>> orderdelivery.created;
ClassDiagram.Attribut>> OrderDelivery.usercreatedby:long =>=>=> RelationalSchema.Column>> orderdelivery.usercreatedby;
ClassDiagram.Attribut>> OrderDelivery.GeneratedName:OrderOut =>=>=> RelationalSchema.Column>> orderdelivery.GeneratedName;
ClassDiagram.Attribut>> OrderOutItem.serialversionuid:long =>=>=> RelationalSchema.Column>> orderoutitem.serialversionuid;
ClassDiagram.Attribut>> OrderOutItem.id:long =>=>=> RelationalSchema.Column>> orderoutitem.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderOutItem.unitprice:float =>=>=> RelationalSchema.Column>> orderoutitem.unitprice;
ClassDiagram.Attribut>> OrderOutItem.amount:long =>=>=> RelationalSchema.Column>> orderoutitem.amount;
ClassDiagram.Attribut>> OrderOutItem.sum:float =>=>=> RelationalSchema.Column>> orderoutitem.sum;
ClassDiagram.Attribut>> OrderOutItem.comment:String =>=>=> RelationalSchema.Column>> orderoutitem.comment;
ClassDiagram.Attribut>> OrderOutItem.GeneratedName:Goods =>=>=> RelationalSchema.Column>> orderoutitem.GeneratedName;
ClassDiagram.Attribut>> OrderOutItem.GeneratedName:OrderOut =>=>=> RelationalSchema.Column>> orderoutitem.GeneratedName;
ClassDiagram.Attribut>> CustomerPaymentRecord.serialversionuid:long =>=>=> RelationalSchema.Column>> customerpaymentrecord.serialversionuid;
ClassDiagram.Attribut>> CustomerPaymentRecord.id:long =>=>=> RelationalSchema.Column>> customerpaymentrecord.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerPaymentRecord.paid:float =>=>=> RelationalSchema.Column>> customerpaymentrecord.paid;
ClassDiagram.Attribut>> CustomerPaymentRecord.comment:String =>=>=> RelationalSchema.Column>> customerpaymentrecord.comment;
ClassDiagram.Attribut>> CustomerPaymentRecord.GeneratedName:PaymentAccount =>=>=> RelationalSchema.Column>> customerpaymentrecord.GeneratedName;
ClassDiagram.Attribut>> CustomerPaymentRecord.GeneratedName:PaymentWay =>=>=> RelationalSchema.Column>> customerpaymentrecord.GeneratedName;
ClassDiagram.Attribut>> CustomerPaymentRecord.GeneratedName:OrderOut =>=>=> RelationalSchema.Column>> customerpaymentrecord.GeneratedName;
ClassDiagram.Attribut>> OrderOut.serialversionuid:long =>=>=> RelationalSchema.Column>> orderout.serialversionuid;
ClassDiagram.Attribut>> OrderOut.id:long =>=>=> RelationalSchema.Column>> orderout.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderOut.bid:String =>=>=> RelationalSchema.Column>> orderout.bid;
ClassDiagram.Attribut>> OrderOut./***交易额*/dealmoney:float =>=>=> RelationalSchema.Column>> orderout./***交易额*/dealmoney;
ClassDiagram.Attribut>> OrderOut./***折扣率*/discount:float =>=>=> RelationalSchema.Column>> orderout./***折扣率*/discount;
ClassDiagram.Attribut>> OrderOut./***应收款*/receivable:float =>=>=> RelationalSchema.Column>> orderout./***应收款*/receivable;
ClassDiagram.Attribut>> OrderOut./***实收额*/paidmoney:float =>=>=> RelationalSchema.Column>> orderout./***实收额*/paidmoney;
ClassDiagram.Attribut>> OrderOut./***利润*/profit:float =>=>=> RelationalSchema.Column>> orderout./***利润*/profit;
ClassDiagram.Attribut>> OrderOut./***操作员*/usercreatedby:long =>=>=> RelationalSchema.Column>> orderout./***操作员*/usercreatedby;
ClassDiagram.Attribut>> OrderOut.userupdatedby:long =>=>=> RelationalSchema.Column>> orderout.userupdatedby;
ClassDiagram.Attribut>> OrderOut.datecreated:Timestamp =>=>=> RelationalSchema.Column>> orderout.datecreated;
ClassDiagram.Attribut>> OrderOut.lastupdated:Timestamp =>=>=> RelationalSchema.Column>> orderout.lastupdated;
ClassDiagram.Attribut>> OrderOut.comment:String =>=>=> RelationalSchema.Column>> orderout.comment;
ClassDiagram.Attribut>> OrderOut.statuscode:OrderStatusCode =>=>=> RelationalSchema.Column>> orderout.statuscode;
ClassDiagram.Attribut>> OrderOut.typecode:OrderTypeCode =>=>=> RelationalSchema.Column>> orderout.typecode;
ClassDiagram.Attribut>> OrderOut.GeneratedName:Customer =>=>=> RelationalSchema.Column>> orderout.GeneratedName;
ClassDiagram.Attribut>> OrderOut.GeneratedName:OrderDelivery =>=>=> RelationalSchema.Column>> orderout.GeneratedName;
ClassDiagram.Attribut>> OrderOut.GeneratedName:OrderReceipt =>=>=> RelationalSchema.Column>> orderout.GeneratedName;
ClassDiagram.Attribut>> OrderOut.GeneratedName:Project =>=>=> RelationalSchema.Column>> orderout.GeneratedName;
ClassDiagram.Attribut>> OrderReceipt.serialversionuid:long =>=>=> RelationalSchema.Column>> orderreceipt.serialversionuid;
ClassDiagram.Attribut>> OrderReceipt.id:long =>=>=> RelationalSchema.Column>> orderreceipt.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderReceipt.title:String =>=>=> RelationalSchema.Column>> orderreceipt.title;
ClassDiagram.Attribut>> OrderReceipt.type:ReceiptTypeCode =>=>=> RelationalSchema.Column>> orderreceipt.type;
ClassDiagram.Attribut>> OrderReceipt.fee:float =>=>=> RelationalSchema.Column>> orderreceipt.fee;
ClassDiagram.Attribut>> OrderReceipt.paid:float =>=>=> RelationalSchema.Column>> orderreceipt.paid;
ClassDiagram.Attribut>> OrderReceipt.created:Date =>=>=> RelationalSchema.Column>> orderreceipt.created;
ClassDiagram.Attribut>> OrderReceipt.usercreatedby:long =>=>=> RelationalSchema.Column>> orderreceipt.usercreatedby;
ClassDiagram.Attribut>> OrderReceipt.GeneratedName:OrderOut =>=>=> RelationalSchema.Column>> orderreceipt.GeneratedName;
ClassDiagram.Attribut>> CustomerPayment.serialversionuid:long =>=>=> RelationalSchema.Column>> customerpayment.serialversionuid;
ClassDiagram.Attribut>> CustomerPayment.id:long =>=>=> RelationalSchema.Column>> customerpayment.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerPayment.bid:String =>=>=> RelationalSchema.Column>> customerpayment.bid;
ClassDiagram.Attribut>> CustomerPayment.typecode:PaymentTypeCode =>=>=> RelationalSchema.Column>> customerpayment.typecode;
ClassDiagram.Attribut>> CustomerPayment.receiptid:String =>=>=> RelationalSchema.Column>> customerpayment.receiptid;
ClassDiagram.Attribut>> CustomerPayment.paiddate:Timestamp =>=>=> RelationalSchema.Column>> customerpayment.paiddate;
ClassDiagram.Attribut>> CustomerPayment.addunpaid:float =>=>=> RelationalSchema.Column>> customerpayment.addunpaid;
ClassDiagram.Attribut>> CustomerPayment.remainunpaid:float =>=>=> RelationalSchema.Column>> customerpayment.remainunpaid;
ClassDiagram.Attribut>> CustomerPayment.usercreatedby:long =>=>=> RelationalSchema.Column>> customerpayment.usercreatedby;
ClassDiagram.Attribut>> CustomerPayment.comment:String =>=>=> RelationalSchema.Column>> customerpayment.comment;
ClassDiagram.Attribut>> CustomerPayment.GeneratedName:Customer =>=>=> RelationalSchema.Column>> customerpayment.GeneratedName;
ClassDiagram.Attribut>> CustomerLevel.serialversionuid:long =>=>=> RelationalSchema.Column>> customerlevel.serialversionuid;
ClassDiagram.Attribut>> CustomerLevel.id:long =>=>=> RelationalSchema.Column>> customerlevel.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerLevel.name:String =>=>=> RelationalSchema.Column>> customerlevel.name;
ClassDiagram.Attribut>> CustomerLevel.enabled:boolean =>=>=> RelationalSchema.Column>> customerlevel.enabled;
ClassDiagram.Attribut>> CustomerLevel.order:int =>=>=> RelationalSchema.Column>> customerlevel.order;
ClassDiagram.Attribut>> CustomerLevel./***等级条件一：销售额*/salemoney:float =>=>=> RelationalSchema.Column>> customerlevel./***等级条件一：销售额*/salemoney;
ClassDiagram.Attribut>> CustomerLevel./***等级条件二：利润额*/profitmoney:float =>=>=> RelationalSchema.Column>> customerlevel./***等级条件二：利润额*/profitmoney;
ClassDiagram.Attribut>> CustomerLevel./***优惠一：账期天数*/paymentdays:int =>=>=> RelationalSchema.Column>> customerlevel./***优惠一：账期天数*/paymentdays;
ClassDiagram.Attribut>> CustomerLevel./***优惠二：最多允许欠账*/maxdebt:float =>=>=> RelationalSchema.Column>> customerlevel./***优惠二：最多允许欠账*/maxdebt;
ClassDiagram.Attribut>> CustomerLevel./***优惠三：价格折扣率*/pricerate:float =>=>=> RelationalSchema.Column>> customerlevel./***优惠三：价格折扣率*/pricerate;
ClassDiagram.Attribut>> CustomerContact.serialversionuid:long =>=>=> RelationalSchema.Column>> customercontact.serialversionuid;
ClassDiagram.Attribut>> CustomerContact.id:long =>=>=> RelationalSchema.Column>> customercontact.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerContact.name:String =>=>=> RelationalSchema.Column>> customercontact.name;
ClassDiagram.Attribut>> CustomerContact.mobilephone:String =>=>=> RelationalSchema.Column>> customercontact.mobilephone;
ClassDiagram.Attribut>> CustomerContact.fixedphone:String =>=>=> RelationalSchema.Column>> customercontact.fixedphone;
ClassDiagram.Attribut>> CustomerContact.netcommunityid:String =>=>=> RelationalSchema.Column>> customercontact.netcommunityid;
ClassDiagram.Attribut>> CustomerContact.email:String =>=>=> RelationalSchema.Column>> customercontact.email;
ClassDiagram.Attribut>> CustomerContact.address:String =>=>=> RelationalSchema.Column>> customercontact.address;
ClassDiagram.Attribut>> CustomerContact.isprefered:boolean =>=>=> RelationalSchema.Column>> customercontact.isprefered;
ClassDiagram.Attribut>> CustomerContact.GeneratedName:Customer =>=>=> RelationalSchema.Column>> customercontact.GeneratedName;
ClassDiagram.Attribut>> Customer.serialversionuid:long =>=>=> RelationalSchema.Column>> customer.serialversionuid;
ClassDiagram.Attribut>> Customer.id:long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.shortname:String =>=>=> RelationalSchema.Column>> customer.shortname;
ClassDiagram.Attribut>> Customer.shortcode:String =>=>=> RelationalSchema.Column>> customer.shortcode;
ClassDiagram.Attribut>> Customer.unpaymoney:float =>=>=> RelationalSchema.Column>> customer.unpaymoney;
ClassDiagram.Attribut>> Customer.sharable:boolean =>=>=> RelationalSchema.Column>> customer.sharable;
ClassDiagram.Attribut>> Customer.deleted:boolean =>=>=> RelationalSchema.Column>> customer.deleted;
ClassDiagram.Attribut>> Customer.usersigned:long =>=>=> RelationalSchema.Column>> customer.usersigned;
ClassDiagram.Attribut>> Customer.comment:String =>=>=> RelationalSchema.Column>> customer.comment;
ClassDiagram.Attribut>> Customer.GeneratedName:CustomerType =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> Customer.GeneratedName:CustomerLevel =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> PaymentTransfer.serialversionuid:long =>=>=> RelationalSchema.Column>> paymenttransfer.serialversionuid;
ClassDiagram.Attribut>> PaymentTransfer.id:long =>=>=> RelationalSchema.Column>> paymenttransfer.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentTransfer.transfertypecode:PaymentTransferTypeCode =>=>=> RelationalSchema.Column>> paymenttransfer.transfertypecode;
ClassDiagram.Attribut>> PaymentTransfer.source:String =>=>=> RelationalSchema.Column>> paymenttransfer.source;
ClassDiagram.Attribut>> PaymentTransfer.inmoney:float =>=>=> RelationalSchema.Column>> paymenttransfer.inmoney;
ClassDiagram.Attribut>> PaymentTransfer.outmoney:float =>=>=> RelationalSchema.Column>> paymenttransfer.outmoney;
ClassDiagram.Attribut>> PaymentTransfer.remainmoney:float =>=>=> RelationalSchema.Column>> paymenttransfer.remainmoney;
ClassDiagram.Attribut>> PaymentTransfer.datecreated:Timestamp =>=>=> RelationalSchema.Column>> paymenttransfer.datecreated;
ClassDiagram.Attribut>> PaymentTransfer.usercreatedby:long =>=>=> RelationalSchema.Column>> paymenttransfer.usercreatedby;
ClassDiagram.Attribut>> PaymentTransfer.comment:String =>=>=> RelationalSchema.Column>> paymenttransfer.comment;
One-To-Many relationship from ClassDiagram.Class>>AccountingType  to ClassDiagram.Class>>List<Accounting>;
Many-To-One relationship from ClassDiagram.Class>>Region  to ClassDiagram.Class>>region represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>Log  to ClassDiagram.Class>>logevent represented by ClassDiagram.Atrribute>>event;
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>list<authority>: pc_role_authority(role_id:Role [PK] #FK to Role,authority_id:list<authority> [PK] #FK to list<authority>);
Many-To-One relationship from ClassDiagram.Class>>Authority  to ClassDiagram.Class>>authority represented by ClassDiagram.Atrribute>>parent;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>list<role>: pc_user_role(user_id:User [PK] #FK to User,role_id:list<role> [PK] #FK to list<role>);
Many-To-One relationship from ClassDiagram.Class>>Accounting  to ClassDiagram.Class>>accountingtype represented by ClassDiagram.Atrribute>>type;
One-To-Many relationship from ClassDiagram.Class>>GoodsType  to ClassDiagram.Class>>List<Goods>;
Many-To-One relationship from ClassDiagram.Class>>GoodsStorageTransfer  to ClassDiagram.Class>>goodsdepository represented by ClassDiagram.Atrribute>>depository;
Many-To-One relationship from ClassDiagram.Class>>GoodsStoragePriceRevise  to ClassDiagram.Class>>goodsdepository represented by ClassDiagram.Atrribute>>depository;
Many-To-One relationship from ClassDiagram.Class>>GoodsStorageCheck  to ClassDiagram.Class>>goodsdepository represented by ClassDiagram.Atrribute>>depository;
Many-To-One relationship from ClassDiagram.Class>>Goods  to ClassDiagram.Class>>goodsunit represented by ClassDiagram.Atrribute>>unit;
Many-To-One relationship from ClassDiagram.Class>>Goods  to ClassDiagram.Class>>goodstype represented by ClassDiagram.Atrribute>>type;
Many-To-One relationship from ClassDiagram.Class>>Goods  to ClassDiagram.Class>>goodsdepository represented by ClassDiagram.Atrribute>>prefereddepository;
One-To-Many relationship from ClassDiagram.Class>>Goods  to ClassDiagram.Class>>List<GoodsPicture>;
Many-To-One relationship from ClassDiagram.Class>>GoodsStorage  to ClassDiagram.Class>>goodsdepository represented by ClassDiagram.Atrribute>>depository;
One-To-Many relationship from ClassDiagram.Class>>GoodsDepository  to ClassDiagram.Class>>List<Goods>;
Many-To-One relationship from ClassDiagram.Class>>ProviderPaymentRecord  to ClassDiagram.Class>>providerpayment represented by ClassDiagram.Atrribute>>payment;
One-To-Many relationship from ClassDiagram.Class>>OrderIn  to ClassDiagram.Class>>List<OrderInItem>;
One-To-Many relationship from ClassDiagram.Class>>Provider  to ClassDiagram.Class>>List<ProviderContact>;
One-To-Many relationship from ClassDiagram.Class>>Provider  to ClassDiagram.Class>>List<ProviderPayment>;
One-To-Many relationship from ClassDiagram.Class>>Provider  to ClassDiagram.Class>>List<OrderIn>;
One-To-Many relationship from ClassDiagram.Class>>ProviderType  to ClassDiagram.Class>>List<Provider>;
Many-To-One relationship from ClassDiagram.Class>>OrderInItem  to ClassDiagram.Class>>goodsdepository represented by ClassDiagram.Atrribute>>depository;
One-To-Many relationship from ClassDiagram.Class>>ProviderPayment  to ClassDiagram.Class>>List<ProviderPaymentRecord>;
One-To-Many relationship from ClassDiagram.Class>>PaymentAccount  to ClassDiagram.Class>>List<PaymentTransfer>;
One-To-Many relationship from ClassDiagram.Class>>CustomerType  to ClassDiagram.Class>>List<Customer>;
Many-To-One relationship from ClassDiagram.Class>>OrderDelivery  to ClassDiagram.Class>>deliverycompany represented by ClassDiagram.Atrribute>>company;
Many-To-One relationship from ClassDiagram.Class>>OrderOutItem  to ClassDiagram.Class>>goodsdepository represented by ClassDiagram.Atrribute>>depository;
Many-To-One relationship from ClassDiagram.Class>>CustomerPaymentRecord  to ClassDiagram.Class>>customerpayment represented by ClassDiagram.Atrribute>>payment;
One-To-Many relationship from ClassDiagram.Class>>OrderOut  to ClassDiagram.Class>>List<OrderOutItem>;
One-To-Many relationship from ClassDiagram.Class>>CustomerPayment  to ClassDiagram.Class>>List<CustomerPaymentRecord>;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>List<CustomerContact>;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>List<CustomerPayment>;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>List<OrderOut>;
Many-To-One relationship from ClassDiagram.Class>>PaymentTransfer  to ClassDiagram.Class>>paymentaccount represented by ClassDiagram.Atrribute>>targetaccount;
